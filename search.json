[
  {
    "objectID": "docs/tutorials/index.html",
    "href": "docs/tutorials/index.html",
    "title": "Martini force field tutorials",
    "section": "",
    "text": "The material offered here aims to help you familiarize yourself with some of the basic and more advanced aspects of performing Martini 3 coarse-grained simulations. The material follows a historical track, starting with the MARTINI model for lipids. It goes on to describe how to set up simulations with proteins (and peptides), and then continues with more advanced topics, like backmapping (i.e. fine graining from a coarse-grained structure), parameterization of new molecules, and more.\nLectures by several Martini developers describing some of the most important model features and tools are available, alongside a set of hands-on tutorials showing users how to set up a variety of Martini systems.\nFor the tutorials, familiarity with GROMACS is assumed; for an explanation of how to work with GROMACS and the specification of force field and run parameters we refer to the GROMACS user manual. There is also an excellent collection of GROMACS tutorials available here. The material can be covered in as much time as you like, and the speed at which you go through this material depends on the computational facilities available, your GROMACS skills, and the time you take to consider what you’re doing. The set-up is modular, however, and depending on you particular interest, you may change the order of the exercises. You could either leave long runs overnight to return to them the next day, or use ”pre-prepared” intermediate and result files that will be provided.\nFinally, a set of legacy tutorials pertaining to older iterations of Martini is also available.\nThis material was originally written for the 2008 MARTINI winterschool in Helsinki, and has since been updated for numerous other workshops by several Martini developers (in no particular order): Lars Schäfer, Andrzej Rzepiela, Martti Louhivuori, Clement Arnarez, Alex de Vries, Djurre de Jong, Helgi Ingólfsson, Manuel Nuno Melo and Jaakko Uusitalo, Pim Frederix, Ignacio Faustino Paulo C. T. Souza, Siewert-Jan Marrink, Tsjerk Wassenaar, Luca Monticelli, Riccardo Alessandri, Raul Mera A., Sebastian Thallmair, Fabian Grünewald, Weria Pezeshkian, Peter Tieleman, Besian I. Sejdiu, Luís Borges-Araújo, Melanie König, Selim Sami, Liu Y., Daniel P. Ramirez-Echemendia, Chris Brasnett, Martin Calvelo.\nLast updated: October 2024",
    "crumbs": [
      "Home",
      "<b>Summary</b><hr>"
    ]
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/parametrizing.html",
    "href": "docs/tutorials/Legacy/martini2/parametrizing.html",
    "title": "Parametrizing a new molecule",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nParametrizing a new molecule based on known fragments\n\nIn this part of the tutorial, we will discuss how to build a Martini topology for a molecule that consists of known fragments, but was not previously described. The model will then be used in a self-assembly simulation to assess its behavior. Refinement of the model is not attempted. If you feel the need for refinement, consult the second part of this tutorial (where the procedure is described for another molecule), or similar refinement procedures that are part of the lipid and polymer tutorials, respectively.\nSuppose you got all excited about a class of molecules that are asymmetric bola-amphiphiles, and more in particular the types of molecules shown in Figure 1 below, taken from Masuda and Shimizu, Langmuir 20, 5969 (2004). These molecules have hydrophilic groups at both ends of the chain, but they are distinctly different in size, one being a relatively large glucose ring, the other a relative small carboxylic acid. These molecules self-assemble in tubes whose diameter depends on the length of the linker, as described by Masuda and Shimizu. You recognize chemical groups that are not too far from standard lipid and/or protein components, and so it is quite likely that the building blocks themselves should be available in the Martini force field. Indeed, Martini does also treat proteins and sugars and glycolipid simulations and parameters have been published.\n\n\n\nFigure 1: asymmetric bola lipid family, a large, glucose-based hydrophilic group connected by a hydrocarbon chain to a small hydrophilic group.\n\n\nUnfortunately, it appears the molecule you are interested in, is not a glycolipid as published but has a different connectivity. You need to implement this molecule yourself! However, you may use existing building blocks as much as possible. Below, we explain how to go about this.\nThe first step is therefore to split the molecule in reasonable building blocks. This is sometimes referred to as a mapping (from atomistic to coarse-grained representations). If you consider the chemical nature of the molecular fragments and the existing Martini models for glycolipids and proteins, you may come up with an 8-bead model for the molecule with a linker of 12 C-atoms (n=12 in Figure 1). It may be useful to make a drawing showing which atoms you group into which bead, showing the bead type, as in e.g. the Martini glycolipid paper cited above. A reasonable mapping based on the glycolipid GCER is shown in Figure 2. GCER is representative of both glucosyl- and galactosylceramide; the structure of galactosylceramide can be found in more detail for example on Wikipedia. Although GCER has an amide group, it is connected via an ether linker in GCER, whereas it is directly attached to the sugar ring in our lipid, so we will need to come up with different bond and angle parameters, but the mapping scheme seems reasonable.\n\n\n\nFigure 2: Published glycolipid GCER and possible (partial) mapping of asymmetric bola lipid family.\n\n\nLet us call the new molecule GDAL (for glucose-dodecane-acid-lipid). You can probably think of a much better name, but this is the name that will be assumed in the following…\nYou will need to write a topology file for the molecule. You may start from scratch, or you may take an existing file and edit it. A good candidate may be the GCER lipid. GCER itself is just the name of the head group linked to a ceramide; if we look in the Martini lipidome, we find a ceramide lipid, DPGS, with two tails, that may well be useful as a template. Some part of the .itp file is shown here:\n[ moleculetype ]\nDPGS               1\n[ atoms ]\n 1          P4    1    DPGS     C1     1         0        72.0000\n 2          P1    1    DPGS     C2     2         0        72.0000\n 3          P1    1    DPGS     C3     3         0        72.0000\n 4          P1    1    DPGS    AM1     4         0        72.0000\n 5          P5    1    DPGS    AM2     5         0        72.0000\n 6          C3    1    DPGS    D1A     6         0        72.0000 ; corrected (C3 instead of C1), oct 2013\n 7          C1    1    DPGS    C2A     7         0        72.0000\n 8          C1    1    DPGS    C3A     8         0        72.0000\n 9          C1    1    DPGS    C4A     9         0        72.0000\n10          C1    1    DPGS    C1B    10         0        72.0000\n11          C1    1    DPGS    C2B    11         0        72.0000\n12          C1    1    DPGS    C3B    12         0        72.0000\n13          C1    1    DPGS    C4B    13         0        72.0000\nBased on other lipid mappings and the connectivity lower down in the file, and the drawing in Figure 2, beads 1-3 are the glucose ring particles, bead 4 is the connection to the glycerol parent of the lipid, bead 5 is the amide, and the other beads are the tails. We should connect bead 5 to bead 3 instead of bead 4 as is done in DPGS, then keep the tail connected to bead 5, which are beads 10-13. Based on 12 CH2-groups, the original bead 13 will be the carboxylic acid end bead. This means all assignments can stand, except that for bead 13, which instead of C1 should probably best be P3. This assignment is based on the Martini 2007 paper, where P3 is representative of acetic acid. So, the first step is to copy the DPGS file, rename DPGS to GDAL, remove beads 4-9, change the type of bead 13 from C1 to P3 and renumber the remaining beads. Before renumbering, perhaps it is best to remove all lines in the [ bonds ], [ angles ], and [ dihedrals ] sections that involve the original beads 4-9. Now the renumbering can be done by changing all entries 5 to 4, 10 to 5, etc. Automatically, the bonded parameters are preserved. There is one thing we need to fix, and that is the bonded parameters around the old bead 5, the new bead 4. The ring bead-amide distance, and ring bead-amide-hydrocarbon angle should be given reasonable values. What are these? The moiety itself is fairly rigid, so the angle around the amide is likely something like 180 degrees, with reasonably high force constant. The ring bead-amide distance may be close to the backbone-backbone distance in proteins. You can look these up in the Martini publications.\nNow you have a topology. You can download also the coordinates for DPGS, remove beads 4-9 and use those coordinates for a minimization in vacuum. This coordinate file can then be used to partly fill an empty simulation volume with randomly placed molecules. Water may be added, 10% of the water may be made into anti-freeze water, and a self-assembly simulation may be run as in the lipid tutorial.\nIf you’ve done all that, you may want to have a look at how one of us did it by downloading this archive. 200 molecules certainly like to form a bilayer, but it does not appear all that bent, maybe because the different head groups not separated on the different sides of the amphiphile layer as proposed by Masuda and Shimizu. This may again be due to the limited number of molecules, the periodic boundary conditions and/or some of the parameters, or much longer relaxation times being required to allow the lipids to flip-flop. This is where the fun starts! You are free to change interaction strengths one level up or down, which means you could test different bead assignments. It may be useful to check whether a single molecule in water has the correct flexibility by running an atomistic simulation and performing the mapping. A similar procedure is shown below for toluene and elsewhere in the lipid and polymer tutorials. Have fun!\n\n\nParametrizing a new molecule based on atomistic simulations\n\nIn this part of the tutorial, a how-to is shown to create a Martini topology for a molecule that has not been parametrized before. The procedure is highly dependent on the chemical structure of the molecule and what (experimental) data is available for your molecule. In this example we use a small molecule, toluene, for which an atomistic topology and water-octanol partitioning data (LogP) is available (2.73 from http://dx.doi.org/10.1021/ci050282s). The tutorial assumes you have general experience with the Martini force field (if not, try the other tutorials on this webpage), experience with Gromacs (if not, check the Gromacs-pages and thThe final step should say: “World Victory!”e tutorials mentioned there) and experience with a text editor. There is another tutorial for parameterizing a simple polymer, PEG, and another for refining lipid parameters based on atomistic simulations. Have a look at those for related approaches.\n1) Generate atomistic reference data. For most reliable parametrization, atomistically simulate the molecule in solution. Martini has mostly been based on Gromos, but you can use any force field you like. If no topology exists you could use the ATB or the GAFF force field to construct one (this might be quite some work as well). Alternatively, if other people have published results with atomistic resolution for the molecule in question, you may rely on this data as reference material. \n\nThe choice of solvent is of importance: The molecule might behave differently in aqueous or apolar solvents and the CG model might not be able capture both equally well. Choose a solvent comparable to the environment where the molecule will spend most of its time. If both environments are important, you may choose to compromise and get the best of two worlds.\nFor toluene you can run the simulations using (click on the files to download):\ngmx grompp -f gromos.mdp -c gromos.gro -p gromos.top -o gromos\ngmx mdrun -v -deffnm gromos\n\ngromos.mdp\ngromos.gro\ngromos.top\n\nThis lets you do a simulation of a single toluene molecule in decane as a solvent. Notice that the 1 ns simulation time used in the example is enough because toluene is such a simple molecule.\n2) Choose an atom-to-bead mapping. This is the heart of “Coarse Graining” and relies on experience, chemical knowledge and trial-and-error. My favorite method: Draw your molecule on paper, copy it 10 times and start drawing and trying: It’s just like primary school. There are no hard rules but here are some tips you could use:\n\nYou have to use the beads in Table 3 from the original Martini paper. Find chemical sub-structures in your molecule that match the example fragments in that table. Don’t worry about bonds/angles/dihedrals between the beads yet.\nSplit the molecule in blocks of aproximately 4 heavy atoms. For planar or ring structures or when 4 atoms simply don’t fit use S-beads. Remember that S-beads only have a small radius compared to other S-beads and will thus have the same partitioning free energy (between water and octanol) as normal beads. For example one SC3 bead in P4 solvent (water) will behave exactly as a C3 would.\nDon’t use partial charges. Except for fully charged molecules, Martini beads are neutral (exceptions could be made for strongly delocalized charges as found in metal ligands, for instance). For charges use the ‘Q’-type beads.\nCompare to existing Martini topologies. Your molecule might contain chemical structures that do not appear in Table 3. But maybe someone else already tackled that problem, for example in proteins, sugars, etc.\nRespect the symmetry of the molecule, and use the same beads for the same chemical groups within one molecule.\n\n3) Generate coarse-grain mapped trajectory from the atomistic simulation. Using your just created mapping, transform the simulation you did at 1) to CG resolution. There are many ways to do this: you can use the transformation tool backward.py; an alternative and in some cases simple method is to create a Gromacs index file where every index group stands for a bead and contains the mapped atom numbers. Before you do that, you should realize that the molecule you are interested may be split by the periodic boundary conditions in one or more frames in the trajectory file (here gromos.xtc). To remedy this, you should first convert your atomistic trajectory to make molecules whole and then do the mapping. In this case, we are interested only in toluene and can reduce disk usage by only writing out the toluene coordinates, selecting only toluene as output. Put the mapped trajectory in a separate directory, for example MAPPED. For toluene run:\nmkdir MAPPED\necho 2 | gmx trjconv -s gromos.tpr -f gromos.xtc -pbc whole -o whole.xtc \nseq 0 2 | gmx traj -f whole.xtc -s gromos.tpr -oxt MAPPED/mapped.xtc -n mapping.ndx -com -ng 3\nwhere 3 is the number of CG beads in your molecule and the 'seq 0 2' avoids having to type all index groups. Inspect the file mapping.ndx to see how the atoms of toluene are grouped into the CG beads.\n\nmapping.ndx\n\n4) Create the CG itp file for the molecule of interest. This has to be done by hand, although some copy-pasting from existing itp files might help to get the format right. The different directives you (probably) need are:\n\n[ moleculetype ]: One line containing the molecule name and a number of exclusions. For Martini the standard is 1.\n[ atoms ] One line per atom, containing atomnumber, beadtype, residuenumber, residuename, atomname, chargegroup, charge. Residue number and residue name will be all the same for small molecules. Atomname can be freely chosen. In Martini every bead has its own charge group. Charge can be 0,1 or -1. Mass is usually not specified and in that case is taken from the bead definition.\n[ bonds ] One line per bond, containing atom 1, atom 2, function, average length, force constant. The functional form for Martini is 1. Bond length can be set to the average length obtained in step 4. The force constant should be adjusted to the width of the obtained histograms: small width means high force constant and visa versa.\n[ constraints ], [ angles ], [ dihedrals ], see the gromacs manual for the right format.\n\n5) Create CG tpr file. Extract one frame from your trajectory (mapping it of course) and use it to create a tpr file for your molecule(s) of interest. We need this .tpr file to generate the distributions of the bonds, angles, and dihedrals from the mapped trajectory. Create a top file (include the general martini itp files and the newly created molecule itp and add the right number of molecules (just one toluene in this case)). Create or download a Martini mdp file (see examples on the website). Put the cg.top, minimization.mdp, and martini files in a separate directory (the MAPPED directory already created):\nseq 0 2 | gmx traj -f whole.xtc -s gromos.tpr -oxt MAPPED/toluene.gro -n mapping.ndx -com -ng 3 -e 0\n\ncd MAPPED\n# [define your own cg.top defining the toluene molecule or including it as an itp . \n# You also need an general martini force field file, e.g. martini_v2.0.itp (here version 2.0 is used), and an mdp file]\ngmx grompp -f minimization.mdp -c toluene.gro -p cg.top -o cg.tpr -maxwarn 1\n6) Generate target CG distributions from the CG mapped trajectory. Go back to the drawing table and identify between which beads there should be bonded interactions (bonds, constraints, angles, proper and improper dihedrals). Measure the length/angle of these interactions in you mapped-to-CG atomistic simulations from step 3 (mapped.xtc). To do this, create index files for bonds with a directive for “[bonds]” containing (multiple) pairs of CG beads; for angles, “[angles]” containing triples; and for dihedrals, “[dihedrals]” with quartets. Write scripts that generate distributions for all bonds, angles, and dihedrals you are interested in. For toluene, there are three bonds and three angles (around the triangle). The index files bonds.ndx and angles.ndx as well as a bash script DOBONDEDANALYSIS.sh to generate all distributions are available as an example of how to do this. You may of course use your favorite scripting tool (e.g. python) . Finally, you can also do it by hand, just one example:\necho 0 | gmx distance -s cg.tpr -f mapped.xtc -n bonds.ndx -oall bond_0.xvg\ngmx analyze -f bond_0.xvg -dist distr-bond_0.xvg -bw 0.001\ngmx angle -f mapped.xtc -n angles.ndx -ov angle_0.xvg -type angle\ngmx analyze -f angle_0.xvg -dist distr-angle_0.xvg -bw 1.0\nTo do all analysis by the script type:\n\n./DOBONDEDANALYSIS.sh In some cases it might be sufficient to calculate the average and standard deviation for all the distributions, however the distributions might be bimodal and it is always wise to inspect the distributions! If you used the script, you now have the target distributions in the directory BONDDISTRIBUTIONS and the angles in the directory ANGLEDISTRIBUTIONS. Using xmgrace for the angle distributions, type:\nxmgrace ANGLEDISTRIBUTIONS/dist*.xvg These are the distributions you want to reproduce as well as you can. If they are nicely unimodal, you can take the average value as the parameter for the bond distance and bond angle, respectively, in your first martini topology, with some reasonable guess for the force constants.\n\n7) Create CG simulation. Extract one frame from your mapped trajectory and solvate it in the same solvent as the atomistic simulation. Create a top file (include the general martini itp files and the newly created molecule itp and add the right number of molecules (solute and solvent)). Create a Martini mdp file (see examples on the website). Simulate the initial form of the CG molecule (you probably will have to energy minimize and maybe relax for a few thousand steps at a smaller timestep, e.g. 5fs). [You can prepare files yourself and gather them from the Martini site, or you can download the itp files martini_v2.0.itp, martini_v2.0_solvents.itp and martini_toluene.itp, and take it from there.] It may be wise to create a separate directory for the CG system, for example take1.\ncd ..\nmkdir take1\ncd take1\n[prepare/collect your files here]\ngmx grompp -f minimization.mdp -c martini.gro -p martini.top -o minimization\nmdrun -v -deffnm minimization\ngmx grompp -f relax.mdp -c minimization.gro -p martini.top -o relax\nmdrun -v -deffnm relax\ngmx grompp -f md.mdp -c relax.gro -p martini.top -o md\nmdrun -v -deffnm md\nIn this simulation measure the bonded interactions similar to what you did in step 6 for the mapped trajectory. You can use the same index file and script. As it stands, you also need to copy the bond and angle index files. You may be able to think of more economical ways to use the script.\ncp ../MAPPED/DOBONDEDANALYSIS.sh\ncp ../MAPPED/bonds.ndx .\ncp ../MAPPED/angles.ndx .\necho 2 | gmx trjconv -f md.xtc -s md.tpr -pbc whole -o mapped.xtc\n./DOBONDEDANALYSIS.sh\n8) Optimize CG bonded parameters. In step 7 two things might happen: The simulation finishes and you obtain distributions or the simulation crashes. In the first case, you can compare the distributions to the ones obtained in step 6 and repeat step 7 after adjusting the parameters in the itp to obtain better distributions. It may be wise to make a fresh directory for each attempt (e.g. take2, take3, etc.). Too wide distributions mean you’ll need higher force constants, averages being off means you need to shift, etc. If the simulation crashes you will also have to go back, now with the aim to make the molecule more stable. This often means lowering force constants, removing uncessesary dihedrals or changing constraints to bonds or vice versa. Some common source of instability are:\n\nIf a (proper) dihedral is defined over 4 atoms and the angle between 3 atoms is very wide (close to 180 degrees) this may lead to heavy fluctuations and crashes. You’ll might have to remove the dihedral or use special types of dihedrals.\nIn ring like structures beads might be connected in triangles. If constraints are used between those beads, LINCS might not be able to solve them.\nThree beads, a,b and c, are linearly connected with short, weak bonds, bead b will be excluded from a and c. If a and c strongly attrack each other, a or c might start overlapping with b.\n\nRepeat until you’re happy with the result, then move to the last step.\n9) Compare to experimental results. Partitioning free energies (we are currently working on a tutorial explaining how to efficiently calculate those for Martini molecules) are particularly good, but for pure liquids also densities can be used or any other experimental number you can lay your hands on."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/dna.html",
    "href": "docs/tutorials/Legacy/martini2/dna.html",
    "title": "DNA",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\nNOTE: You can download all the files required for this tutorial from here. Please note that you have to adjust some of the paths (mostly location of the force field files) below if you use this package.\n\nSetting up double-stranded DNA\n\nThis is a brief tutorial on how to set up and try out DNA Martini simulations. The tutorial package includes the itp files for DNA as well as a modified martinize script to coarse grain a DNA molecule.\nMartini DNA can be used to model both single-stranded as well as double-stranded DNA and provides two separate elastic networks. This tutorial will show only an example of creating a dsDNA topology using the stiff elastic network but a dsDNA topology with soft network or a ssDNA topology without elastic network can be created using the same procedure. For dsDNA structures the stiff elastic network is a good starting point for seeing how your system behaves in a CG simulation. There are also options for creating elastic networks for more complicated DNA structure, martinize-dna options all-stiff and all-soft are meant to be starting points for creating topologies for such structures but they are beyond the scope of this tutorial. The DNA release package includes a README file that should have sufficient instructions for creating the other types of DNA topologies after you have finished this tutorial.\n\nUnpack the tutorial files you downloaded (it expands to na-tutorials).\n\n$ tar -xvzf na-tutorials_20170815.tar\n\nGo to the folder na-tutorials/dna-tutorial/martini-dna and download the 1BNA PDB file. Martinize for DNA works best with cleaned up .gro files so you should first remove ions and water molecules from the .pdb file and convert it to a .gro file. NOTE, download from the PDB will give you 1bna.pdb, a copy named 1BNA.pdb is provided in the tutorial archive if you want to spare yourself the trouble to download it.\n\n$ grep -v HETATM 1bna.pdb &gt; 1BNA-cleaned.pdb\n$ gmx editconf -f 1BNA-cleaned.pdb -o 1BNA-cleaned.gro\n\nNext we can use martinize-dna.py (supplied for you in the current directory) to create a Martini DNA topology for 1BNA.\n\n$ python martinize-dna.py -dnatype ds-stiff -f 1BNA-cleaned.gro -o cg-dna.top -x cg-1bna.pdb\nNext, you need to change the .top file to include the correct .itp files. This can be done with your favourite text editor but scriptable options are given below. Note: there are two sets of commands here, the first for Mac OSX, the second for Linux. In both cases, the backslashes (\\) need to be typed as indicated.\nOSX\n$ sed -i .bak 's/#include \"martini.itp\"/#include \"martini_v2.1-dna.itp\"\\\n#include \"martini_v2.0_ions.itp\"/' cg-dna.top \nand Linux\n$ cp cg-dna.top cg-dna.top.bak \n$ sed -i 's/#include \"martini.itp\"/#include \"martini_v2.1-dna.itp\"\\n#include \"martini_v2.0_ions.itp\"/' cg-dna.top \n\nYou can visualize the mapping of Martini DNA by opening both the atomistic and coarse-grained structures in VMD. (The visualization is clearer if you show the CG structure as small VDW spheres.)\n\n$ vmd -m 1BNA-cleaned.pdb cg-1bna.pdb\n\nNext you need to create a simulation box for DNA and solvate it as well as add counterions. (You will find a pre-equilibrated box of water here.)\n\n$ gmx editconf -f cg-1bna.pdb -d 1.2 -bt dodecahedron -o box.gro\n$ gmx solvate -cp box.gro -cs water.gro -o bw.gro -radius 0.22 -maxsol 1250\nYou can replace water with ions in .top file without using genion at the same time as we add waters there. Note: the next line assumes that exactly 1250 water beads were added to the DNA by the genbox tool; the first 1100 added beads are designated as normal water beads, the next 128 beads are designated as anti-freeze water beads, and the final 22 beads are designated as sodium ions.\n$ printf \"\\nW         1100\\nWF         128\\nNA          22\\n\" &gt;&gt; cg-dna.top\n\nUse the em.mdp provided in the directory and run an energy minimization.\n\n$ gmx grompp -f em.mdp -c bw.gro -p cg-dna.top -o 01-em -maxwarn 1\n$ gmx mdrun -v -deffnm 01-em\n\nNext, you can run a short equilibration using the equil.mdp file. Note, a smaller time step might be needed for initial equilibration. Note that sometimes you might need to run a series of short equilibrations, increasing the time step up to the value in the equil.mdp file and starting each one from the final structure of the previous one.\n\n$ gmx grompp -f equil.mdp -c 01-em.gro -p cg-dna.top -o 02-eq\n$ gmx mdrun -v -deffnm 02-eq -rdd 2.0\n\nNow you are ready to start your first DNA simulation. Use the mdrun.mdp file to produce a longer simulation, do the preprocessing and start the simulation. Note that with the elastic network the domain cell size needs to be kept fairly large (option -rdd 2.0).\n\n$ gmx grompp -f mdrun.mdp -c 02-eq.gro -p cg-dna.top -o 03-run\n$ gmx mdrun -v -deffnm 03-run -rdd 2.0\n\nYou can visualize the movements of the DNA, ions and waters using VMD while your simulation is still running (you will need to open a new terminal). Note that bonds in Martini are longer than bonds normally shown in VMD. Please consult the VMD tutorial to get better visualization.\n\n$ vmd 02-eq.gro 03-run.xtc\n\n\nCommon problems\n\nBelow are some some of the most common pitfalls when starting a Martini DNA simulation. We go through them here so that you know to avoid them when starting your own DNA simulations.\n\nNot curating the input file for martinize-dna.py\n\nThere are several things that can go wrong before martinize-dna.py is even run. Best course of action is to manually curate the input file, remove all heteroatoms and convert the file to a gro file. martinize-dna.py requires the residuenames to be ‘DA’,‘DC’, etc. in order to detect them correctly.\nYou can try this yourself. Go to the folder common-problems/1 inside the package you downloaded. Try running martinize-dna.py with the given input file. Then try to fix the issue by modifying the residuenames using a text editor or a script (column editing in vi comes really handy here) and see that martinize-dna.py runs succesfully after this.\n\nPlacing the “#define RUBBER_BANDS” below the DNA itp file in the system topology file.\n\nThe topology file is read from top to bottom and if the RUBBER_BANDS are not defined before the DNA itp file no elastic network will be applied to the DNA. This is the first place to look if the DNA structure is deforming right in the beginning of your simulation.\nGo to the folder common-problems/2 and run a short simulation with the provided files. Then open the cg.top file and fix it and run the same simulation again and see the difference.\n\nGetting wrong number of chains from martinize-dna.py\n\nThis often goes unseen unless you check the output of martinize-dna.py on your screen. Especially the ‘Found X chains:…’ part of the output. If a chain is split in two you can try to fix that by adjusting the cut-off inside the martinize-dna.py. Open the script and search forCUT-OFF_CHANGEand adjust the value from 3.0 to a suitably large value.\nGo to the folder common-problems/3 and open the gro file using VMD to see that the structure consist of 2 DNA strands. Next, try running martinize-dna.py (provided here in the same folder so you won’t modify the version other parts of the tutorial use) on the given input file and verify from output that you get 3 chains instead of 2. Open martinize-dna.py with a text editor and search for CUT-OFF_CHANGE and adjust the cut-off value from 3.0 to 4.0. Run martinize-dna.py again and verify that it detects the DNA as 2 strands.\n\nInput from sequence\nIn case you want to create an all-atom DNA structure from canonical values, there are several softwares/webservers that can help with this. One of those is NAFlex which requires only the user to create an account to save his/her projects. NAFlex allows several ways to build your DNA structure.\n\nAfter giving a name for your project, we will select the option DNA/RNA Simulation from Sequence (although we will not run any simulation here). Click the “Next” button.\nAs an example you can build a relatively short oligonucleotide according to the right-handed B-DNA Arnott parameters with the following sequence (enter the string and click “Create Project”):\nACAGCTAGCATGCATGCA\n\n3.- Click on the “Next” buttons until you see a window with a pdb file (compare the picture below). Clicking on the link to the pdb file will reveal a set of buttons. Download the file. No it is time to check the output structure after you have downloaded and unzippid the output file.\n\nYou can now use the downloaded .pdb file and build a Martini model from it as shown for 1BNA in the previous section. You can copy the necessary files from that directory.\n\n\nNB1: You might need to make some changes in your pdb from NAFlex. For example, make sure the sugar atoms have a prime (’) and not as asterisk (*). Also, the names of ending residues must be changed to standard names (e.g. DA5 to DA).\nNB2: NAFlex has multiple applications but in this tutorial we will focus on building a structure from ab initio.\n\n\nDNA analysis: physical parameters\nAs for all-atomistic models, we can calculate the base pairs and base pair steps helical parameters for coarse-grained DNA models. cgHeliParm.py has been developed for the analysis of the DNA/RNA double stranded structures in molecular dynamics (MD) simulations. Here you can download the latest version of the cgHeliParm package. Like other atomistic softwares (e.g. 3DNA, Curves+), it defines a geometric reference frame for each base/base pair to calculate several structural descriptors of DNA/RNA from the GROMACS CG Martini MD trajectory. As output the helical descriptors as a function of time are saved in individual files.\nFor now, the current version of cgHeliParm.py allows to calculate the local structural parameters of double stranded DNA molecules (i.e. base pair and base pair step helical parameters). We are currently working on extending the calculation to other structural parameters (e.g. groove widths and depths). Please note that in this version only double-stranded, standard nucleic acids can be analysed. This excludes mispaired, modified, single-stranded DNA, triplexes and quadruplexes from its application.\nBefore using cgHeliParm.py you need first to install python in your computer. If you don’t have it, go to the Python wiki and follow the instructions to install it in your working computer.\nThe second thing you will have to do is to install the python package MDAnalysis and mdreader.\nOnce python and the MDAnalysis and mdreader packages are installed we can use cgHeliParm.py. First, we will have to create a ‘dry’ trajectory with only DNA. This can be done using the trjconv Gromacs tool and the corresponding NDX file. For this case, we will use the same trajectory from the previous DNA tutorial (1BNA). Go to the martini-dna tutorial and convert the trajectory twice (selecting the group for DNA when prompted, which should be number 1).\n$ gmx trjconv -s 03-run.tpr -f 03-run.xtc -o ../DNA_analysis/cgHeliParm/dna.xtc -pbc cluster\n$ gmx trjconv -s 03-run.tpr -f 03-run.xtc -o ../DNA_analysis/cgHeliParm/dna.gro -dump 0\nNow, change to the cgHeliParm directory:\n$ cd ../DNA_analysis/cgHeliParm\nin this directory, we can run the cgHeliParm.py script by running in the command line:\n$ python cgHeliParm.py -f dna.xtc -s dna.gro -o dna\nThis may take some time depending on the length of your trajectory and number of processors available. After the script has finished you will see that there are several files in your folder, corresponding to base pair and base pair steps helical parameters (file names are informative). Each file contains information for each bp or step along the simulation time. The first column refers to the first bp or step in the 5’3’ strand sense.\n\n\nPersistence length\nWe provide also a tool to calculate the persistence-length of a double-stranded DNA. This tool requires both a fairly long dsDNA strands as well as a long simulation so we provide an example trajectory to try this out. The tool uses two different ways of averaging the results but the numbers should be fairly close to each other.\nTo calculate the persistence length go to the folderpersistence-lengthand run the following command:\n$ python persistence-length-calculator.py -s run.gro -f run.xtc -n run.ndx -oplot test -b 100000\n\n\n\n\nAdvanced tutorial: protein-DNA complex\nDNA is recognized by proteins in many different ways. As a first approximation to protein-DNA complexes, we will use the SRY protein (1j46, which is provided in the directory, but can also be downloaded here), which is involved in sex determination, to generate our first protein-DNA complex simulation using the CG Martini model. Go to the directory dna-tutorial/protein_DNA.\nFirst things first. To create our CG model of a protein-DNA complex from a PDB file we will need to split both protein and DNA molecules to generate their CG models. This means that you will need to create as many PDB files as molecules your complex has. To put everything on the same page, we will call them protein_AA.pdb and dna_AA.pdb. (This has been done for you already, you may want to also try it yourself!) We will then proceed to create their CG models with the corresponding martinize script.\n\n\nWe will first build the CG DNA using the martinize-dna script but before that we will convert the .pdb file into a .gro file:\n\n$ gmx editconf -f dna_AA.pdb -o dna_aa.gro\n$ python martinize-dna.py -dnatype ds-stiff -f dna_aa.gro -o dna.top -x dna_CG.pdb \nAnd for the CG protein model we will use the original martinize script:\n$ gmx editconf -f protein_AA.pdb -o protein_aa.gro\n$ python martinize.py -f protein_aa.gro -o protein.top -x protein_CG.pdb -dssp your-path-to/dssp -p backbone -ff elnedyn22\n\nWe will now merge the PDB files corresponding to the CG models (protein_CG.pdb and dna_CG.pdb) using the cat command for example.\n\n$ cat dna_CG.pdb protein_CG.pdb &gt; complex_CG.pdb\n\nYou can visualize the mapping of Martini DNA by opening both the atomistic and coarse-grained structures in VMD. The CG beads are best visualized as VDW spheres. Note that by concatenating the protein and DNA files, the combined CG coordinate file is interpreted by VMD as two frames. By stepping through them in the VMD main window, you can see the protein and the DNA sites.\n\n$ vmd -m 1j46.pdb complex_CG.pdb\n\nAs in the double stranded DNA tutorial for 1BNA, we will create a .top file that includes the .itp files. We can copy the dna.top file and modify to include the correct .itp files. With the experience from previous tutorial, would you be able to write a .top file for the system yourself? Check by comparing your result to the provided file cg-complex.top.\nNext we will solvate the solute creating a box around it as well as adding counterions. We will use the same water.gro file that we used previously to create the 1BNA CG model. (Download water box from here.) Note that by concatenating the protein and DNA files, the combined coordinate file is seen as two separate frames by GROMACS tools. Therefore, we need a preprocessing step.\n\n$ grep ATOM complex_CG.pdb &gt; complex_CG-cleaned.pdb\n$ gmx editconf -f complex_CG-cleaned.pdb -d 1.2 -bt dodecahedron -o box.gro\n$ gmx solvate -cp box.gro -cs water.gro -o bw.gro -radius 0.22 -maxsol 1250\nYou can replace water with ions in .top file without using genion at the same time as we add waters there.\n$ printf \"\\nW     1100\\nWF     124\\nNA      26\\n\" &gt;&gt; cg-complex.top\n\nUse the same em.mdp file provided with in the directory dna-tutorial/martini-dna and run an energy minimization.\n\n$ gmx grompp -f em.mdp -c bw.gro -p cg-complex.top -o 01-em -maxwarn 1\n$ gmx mdrun -v -deffnm 01-em\n\nNext, you can run a short equilibration using the equil.mdp file. (Note, a smaller time step might be needed for initial equilibration).\n\n$ gmx grompp -f equil.mdp -c 01-em.gro -p cg-complex.top -o 02-eq\n$ gmx mdrun -v -deffnm 02-eq -rdd 2.0\n\nNow you are ready to start your first protein-DNA simulation. Use the mdrun.mdp file to produce a longer simulation and start.\n\n$ gmx grompp -f mdrun.mdp -c 02-eq.gro -p cg-complex.top -o 03-run\n$ gmx mdrun -v -deffnm 03-run -rdd 2.0\n\nYou can visualize the trajectory using VMD while your simulation is still running.\n\n$ vmd 02-eq.gro 03-run.xtc\n\nDNA and Backward\nDNA structures can be backmapped into atomistic resolution using Backward. Before starting this part of the tutorial you should first go and do the Backward tutorial. The DNA backmapping files are as of now not yet part of the downloadable backward package but files for CHARMM are in the tutorial package in the backmapping folder together with the backward scripts. Next, we will first coarse-grain a dsDNA structure and then backmap it back to atomistic resolution.\n\nGot to the na-tutorials/dna-tutorial/backmapping directory and cleanup and convert the given DNA structure 1BNA.pdb to a gro file in a reasonable simulation box.\n\n$ gmx editconf -f 1BNA.pdb -d 1.4 -o 1BNA.gro\n\nCreate a CG structure using martinize-dna.py.\n\n$ python ../martini-dna/martinize-dna.py -f 1BNA.gro -dnatype ds-stiff -p cg.top -x cg-1BNA.pdb\n\nSolvate the CG structure.\n\n$ gmx solvate -cp cg-1BNA.pdb -cs waterbox.gro -radius 0.22 -o cg-1bna-water.gro\n\nCreate an atomistic topology file for the system. Choose charmm27 and tip3p when prompted.\n\n$ gmx pdb2gmx -f 1BNA.pdb\n\nEdit the file topol.top to point explicitly to the tip3p.itp file provided for you (it will not recognize it in the standard path unfortunately). Thus, replace the line #include \"charmm27/tip3p.itp\" near the end of the file by #include \"./tip3p.itp\". Run the initram.sh script to perform the backmapping.\n\n$ ./initram.sh -f cg-1bna-water.gro -o aa-charmm.gro -to charmm36 -p topol.top\n\nCompare the initial structure to the backmapped structure.\n\n$ vmd -m 1BNA.gro aa-charmm.gro\n\n\nFor more information:\n\nUusitalo, Jaakko J., et al. Martini Coarse-Grained Force Field: Extension to DNA. J. Chem. Theory Comput. 2015. 11, 8, 3932-3945.\nUusitalo, Jaakko J., et al. Martini Coarse-Grained Force Field: Extension to RNA. Biophys. J. 2017. 113, 2, 246-256.\nFaustino, I., Marrink, S.J. cgHeliParm: analysis of dsDNA helical parameters for coarse-grained MARTINI molecular dynamics simulations. Bioinformatics 2017 btx444."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/others.html",
    "href": "docs/tutorials/Legacy/martini2/others.html",
    "title": "Other",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nBackward\n\nBackmapping or reverse coarse-graining or fine-graining a coarse-grained (CG) structure requires a correspondence between the two models; i.e., for atomistic and CG: which atoms make up which bead. Actually, an atom can in principle contribute to several beads. A backmapping protocol needs to know at least which atoms contribute to which bead. Existing schemes then use rigid building blocks anchored on the CG bead, or place the atoms randomly near the bead in an initial guess and the structure is relaxed based on the atomistic force field, usually by switching it on gradually. The method used in this tutorial is backward[1], developed by Tsjerk Wassenaar. Backward allows for an intelligent, yet flexible initial placement of the atoms based on the positions of several beads, thereby automatically generating a very reasonable orientation of the groups of atoms with respect to each other.\nFirst, we go over the scripts used in the backward[1] method. Second, we describe the structure and setup of the needed CG to fine-grained mapping files, taking the mapping file for valine as an example. Last, we demonstrate the method by backmapping a CG membrane embedded aquaporin 1, as described in[2].\nMore extensive discussion and examples, including tutorial material can be found in the paper by Wassenaar et al.[1], and Supporting Material to that paper.\n\n\nThe method\n\nThe backward program is available here (download the zip-file for the version of Mapping files you need and possibly download another version of the initram.sh script), and consists of three scripts and a number of CG to fine-grained mapping definition files. The scripts are backward.py, initram.sh and in the Mapping directory __init__.py and a number of .map files. The .map files describe the CG to fine-grained mapping and a file needs to be provided for each molecule (or its building blocks) in your system. The __init__.py script interprets the .map files. The backward.py script performs the actual backmapping and initram.sh is a bash wrapper that runs a series of minimizations and molecular dynamics steps, using the fine-grained force field to push the initial backmapped structure to one that satisfies the fine-grained force field.\n\n\nMapping\n\nA requirement for the procedure to work is that the subdirectory Mapping contains definitions for how the atomic positions are generated from the CG positions. The subdirectory Mapping contains a file for each residue and/or molecule that can be backmapped, named for the atomistic target force field, e.g. val.oplsaa.map for a valine residue targeted to OPLS-AA. Updates of the Martini and/or other force fields may results in changes in the mapping files, so beware you may need to make changes and/or find the appropriate mapping files. You can download mapping files for each of the lipids in the lipidome library, for example the mapping file for cholesterol. The structure of a .map file is explained below for the valine residue. The file val.oplsaa.map reads:\n[ molecule ]\nVAL\n[ martini ]\nBB SC1\n[ mapping ]\noplsaa\n[ atoms ]\n    1   N     BB\n    2   H     BB\n    3   CA    BB\n    4   HA    BB\n    5   CB    SC1 BB\n    6   HB    SC1 BB\n    8   CG1   SC1\n    9   HG11  SC1\n   10   HG12  SC1\n   11   HG13  SC1\n   12   CG2   SC1\n   13   HG21  SC1\n   14   HG22  SC1\n   15   HG23  SC1\n   16   C     BB\n   17   O     BB\n[ chiral ]\n  CB     CA    N    C\n  HB     CA    N    C\n[ chiral ]\n  HA   CA  N CB  C  ;L-Val\n ;HA   CA  N C  CB  ;D-Val\n[ out ]\n  CG2  CB CG1 CA\n  HG21 CB CG1 CA\n  HG22 CB CG1 CA\n  HG23 CB CG1 CA\nDirectives analogous to gromacs topologies contain specifications that build the atomistic structure from the CG positions. The [ molecule ] directive contains the name of the residue or molecule. The [ martini ] directive contains the names of the CG beads in the Martini model: valine has two beads called BB and SC1. The [ mapping ] directive contains the name of the object model. Note that this directive may contain multiple object models. If you do not care for the naming convention of different force fields, you can use the same mapping file for the CHARMM36 and OPLS-AA/L force fields, because these are both all-atom models which in the GROMACS implementation also use the same order of the atoms (if not the same names). Thus, the mapping files for the methylated terminal ends explicitly state that they can be used for mapping to both OPLS-AA and CHARMM36 force fields.\nThe [ atoms ] directive contains the index numbers and names of the atoms in the object model and their relation to the CG beads. Note that a single atom may be in a relation with more than one CG bead. The back-mapping procedure starts by putting each atom that is related to a single bead on the position of that bead. If an atom is related to more than one bead, it will be placed on the weighted average position of the beads listed. It is allowed to list the same bead multiple times; thus the line\n4  OE1  BB  BB  BB  SC1  SC1\nplaces the fourth atom (with name OE1) of the residue on the line connecting the BB and SC1 beads at 2/5 of the distance between the beads, starting at the BB bead. This mechanism is a simple aid to position atoms already at fairly reasonable starting positions. Using the -kick flag displaces all atoms randomly after their initial placement. Note that the script applies a random kick to atoms that are initially put at exactly the same place, e.g. because they are defined by the position of a single bead. Thus, no two atoms will be on top of each other. Switching on an atomistic force field usually results in an error if two interacting atoms are at exactly the same place.\nThe backward procedure implements a few other more sophisticated mechanisms to place atoms and some are used in the valine residue. Implementation can be found in the file Mapping/__init__.py. The [ chiral ] directive generates stereochemically specifically arranged groups of atoms. As is seen for valine, two types of input can be provided. In the first instance of the [ chiral ] directive, four atoms are listed on a line. The first atom is the atom to be placed (named A in Figure 1e, chiral*) on the basis of the positions of the other three. The Figure shows how vectors are defined from the positions of the other three particles to construct the position of the first atom. In the second instance of the [ chiral ] directive, five atoms are listed on a line. This corresponds to the construction shown in Figure 1d, chiral. The [ out ] directive may be used to spread out several equivalent atoms (as on a CH3-group) away from the center of the bead in a reasonable manner, as shown in Figure 1c, out. Again, be aware that atoms initially placed on the same spot, are randomly displaced; therefore, using the same reference atoms as in the example still leads to different positions for the generated atoms.\n\n\n\n\nFigure 1 | Figure from[1]. Prescriptions for placing atom A on the basis of the positions of other atoms (upper case letters B, C, D, E). The other atoms define vectors (lower case letters a, b, c, d, e, p, q) that are used to calculate the position of A. A bar is used over the vectors to denote their normalization. The x denotes taking the outer product of two vectors.\n\n\n\n\n\nBackmapping aquaporin 1\n\nHere we backmapp a CG membrane embedded aquaporin 1 into CHARMM36 atomistic coordinates, as described in[2]. The files for this part of the tutorial are available in aquaporin_backmap.tar.gz. Missing residues were added to aquaporin 1 and it was converted to Martini CG coordinates, solvated in a CG POPC bilayer with ions and polarizable water. Then simulated for 100 ns at the CG level with position restrains on the protein, see[2] for method details and CG_posre.gro for final coordinates. Note, without position restraints on the protein the CG protein might (depending on the protein in question and the CG force field used) evolve to far away from a possible fine-grained structure, rendering backmapping impossible.\nWe are going to use the initram-v5.sh script, which calls backward.py and then runs a series of minimization and equilibrium simulations to get the final backmapped structure. To run the script we need the following:\n\nThe CG structure to backmap, provided in CG_posre.gro.\nA complete fine-grained force field corresponding to all the CG molecules in CG_posre.gro. Here we use CHARMM36, see all .itp files provided and topol.top, which contains the molecules in the same order they are present in CG_posre.gro and with the same names. Note, water and ions can be skipped in the .top files as they are automatically detected by backward.py.\nA .map file in the Mapping directory for all residues and molecules to be backmapped (water and ions can also be skipped here as their definitions are included in backward.py). The .map files are collected in a directory called Mapping. NOTE that the coarse-grained structure used here uses an older Martini model for oleoyl chains, represented by 5 beads, rather than the current version of Martini that uses 4-bead representation of oleoyl chains. Therefore, you will need the ‘older’ backward.zip. file and the ‘newer’ script initram-v5.py.\n\nThe initram.sh script uses the gromacs package so a proper version needs to be sourced, i.e. a version of initram.sh that is compatible with the gromacs version you are using.\nRun the script using the following command:\n$ ./initram-v5.sh -f CG_posre.gro -o aa_charmm.gro -to charmm36 -p topol.top\nAfter successful backmapping the aa_charmm.gro file will contain POPC membrane embedded aquaporin 1 as well as the solvent at fully atomistic resolution according to the CHARMM36 force field. Figure 2 illustrates the backmapping of a few POPC molecules. When running the backmapping script please keep in mind that initram.sh generates a significant number of temporary files so backmapping in a separate directory can be a good idea and that backward.py used random kicks to initially displace the atoms so rerunning the same command can give different results (and even though some runs might results in an error others may not).\n\n\n\n\nFigure 2 | Backmapped all-atom representation of a Martini POPC membrane. Figure from[2].\n\n\n\n\n\nPolarizable water\n\nIn this part of the tutorial we will convert water in an existing Martini-system to polarizable water. In the polarizable Martini paper[3] the model is described as follows:\n“The polarizable CG water consists of three particles instead of one in the standard Martini force field. The central particle W is neutral and interacts with other particles in the system by means of the Lennard-Jones interactions, just like the standard water particle. The additional particles WP and WM are bound to the central particle and carry a positive and negative charge of +0.46 and -0.46, respectively. They interact with other particles via a Coulomb function only, and lack any LJ interactions. The bonds W-WP and W-WM are constrained to a distance of 0.14 nm. The interactions between WP and WM particles inside the same CG water bead are excluded, thus these particles are”transparent” toward each other. As a result the charged particles can rotate around the W particle. A harmonic angle potential with equilibrium angle phi = 0 rad and force constant \\(K_h = 4.2 kJ mol^{-1} rad^{-2}\\) is furthermore added to control the rotation of WP and WM particles and thus to adjust the distribution of the dipole momentum.”\nIf you want to solvate a new system with polarizable water, follow the steps in the lipid or protein Martini tutorials. Instead of a normal waterbox and .mdp/.itp files use the waterbox containing polarizable water and polarizable Martini .mdp and .itp files (available to download here). Note that minimizing a polarizable Martini system requires some tweaking, as described below. We encourage you to get all downloads yourself, but if you insist on taking a short-cut, you can download an archive with just the basic files here and with worked example output here.\nIf you have an existing system with normal Martini water and want to change to polarizable water you may use the python script [triple-w.py](https://cgmartini-library.s3.ca-central-1.amazonaws.com/0_Tutorials/legacy_material/martini2/triple-w.py). For this example we convert dppc_bilayer.gro/dppc_bilayer.top available here.\n\nCreate a new gro file:\n\n$ python triple-w.py dppc_bilayer.gro\nThe python-script triple-w.py adds positive and negative sites at a small distance to every central water bead in a .gro file.\n\nAdapt the .top file. Make sure the polarizable version of the particle definition file [martini_v2.2refP.itp](../../../downloads/force-field-parameters/martini2/particle-definitions.qmd) is included if you want to use the refined polarizable water model, otherwise include the older version. An example of an .mdp file can be downloaded here. Make sure your .mdp is compatible with the polarizable water version; this one use the reaction-field electrostatics, but the refined polarizable model is particularly suitable for long-range electrostatics (coulomb_type = PME). The .itp files for the lipids and possibly other molecules do not have to be changed.\nIf polarizable water is used in combination with proteins or peptides, all AC1 and AC2 beads have to be replaced by normal C1 and C2 beads. AC1 and AC2 are obsolete in polarizable Martini.\nMinimize the system. For polarizable water to minimize without problems, it is SOMETIMES necessarry to change the constraints to stiff bonds. Using the ifdef-statement in the .itp file, this can be set using a define value in the .mdp file (have a look at the bottom of martini_v2.P.itp to see how it works).\nGenerate the input files for the minimization run:\n\n$ gmx grompp -f martini_v2P.x_new-rf-em.mdp -c dppc_bilayer_PW.gro -p dppc_bilayer.top -o em -maxwarn 1\n\nProceed with equilibration (e.g. using martini_v2P.x_new-rf-eq.mdp) and production (e.g. using martini_v2P.x_new-rf-md.mdp) runs. Note, the mdp files linked to here have not been tested extensively (August 2017). They appear to give a stable simulation of the DPPC bilayer in polarizable water, but the scope of these parameters has not been validated systematically in the systems described in the original paper.\n\n\n\nCHARMM-GUI Martini Maker\n\nThe CHARMM-GUI input generator now supports the Martini force field[4]. The Martini Maker supports building solution, micelle, bilayer, and vesicle systems, and systems with randomly distributed lipids. The Martini Maker has all the common Martini lipids as well as supporting variations of the Martini model (polar and nonpolar Martini, Dry Martini, and ElNeDyn). The CHARMM-GUI has an easy to use step-by-step user interface, please explore the Martini Maker input generator at http://www.charmm-gui.org/.\nFollowing is a very short tutorial on how to make a Dry Martini vesicle using Martini Maker.\n\nGo to the CHARMM-GUI -&gt; Input Generator -&gt; Martini Maker -&gt; Vesicle Builder website.\nSelect the box for Vesicle Only System and in the drop-down menu, select the Dry Martini option, then press Next Step: Select Lipids.\nSet the vesicle radius to 120 Å and generate a single-lipid system containing only DPPC lipids by setting the ratio of DPPC to 1 for both outer and inner leaflet, leaving the value for all other lipids to 0. Press to (re)calculate the number of lipids. Then press Next Step: Determine the System Size. The webserver will set to work and show you what it is doing. Wait for the process to finish (this may take a while; the pop-up information box will disappear when the server is done).\nIn the Step 1 menu, you will be given some information about the system. Add 150 mM NaCl ions (this is the default set for you). Then press Next Step: Build Components. Again, the server is working for you. Wait for the process to finish; this may take some time. The pop-up information box will disappear when the server is done.\nIn the Step 2 menu, just press Next Step: Assemble Components. The server is working for you. Wait for the process to finish. Note that references are made to ions and solvent. Since you have selected Dry Martini, not solvent will be added, but the server may still issue solvent-related comments.\nYou are still in the Step 2 menu. Press Next Step: Assemble Components. More work is done by the server. Wait for the process to finish.\nIn the Step 3 menu, information regarding the system size and contents is shown. Set the temperature to 323 K. Press Next Step: Generate Equilibration and Dynamics Inputs. The server works to provide you with gromacs files. You will arrive in the Step 4 menu. The files generated by the Gui are packed into an archive (charmm-gui.tgz). A download button for this archive is shown in red in the top right-hand side corner.\nDownload the final files (just click on the read “download .tgz” button) and unpack them on your computer (tar -zxvf charmm-gui.tgz). The archive expands to a directory called charmm-gui. You will find the gromacs input files in the folder charmm-gui/gromacs/. Enter this folder.\nThe README file is helpful by showing you the commands for running the energy minimization and equilibrium steps using the provided .mdp files. Note that in 5 and above gromacs commands are not called directly but through gmx e.g. not grompp but gmx grompp (or gmx_d grompp). You may need to change that in the README file if you want to use it as a shell command that automatically executes the entire protocol.\nNote, the vesicle equilibrium runs require gromacs version 5.1 or greater. In the equilibrium runs pores through the vesicle bilayer are held open to allow lipids to flop-flop and equilibrate between the inside/outside leaflets. The potentials used to keep those pores open are only supported in gromacs version 5.1 or greater. Pores are kept open using so-called flat-bottomed position restraints. These are described in the Version 5 manual in section 4.3.2. The pores are activated/controlled by setting the define = -DVESICLE_LIPIDTAIL_R=1 in the .mdp file. This flag activates position restraints set in the .itp of all the lipids and the provided restraint coordinates file lipidtail_posres.pdb.\nNote, the initial energy minimization normally requires a double precision installation of gromacs. The reason is that some beads may be very close to each other in the initial structure, leading to very high forces; in the single-precision installation, these forces may be interpreted as infinite and therefore cause the minimization to fail. There is a workaround that problem, however. By using soft-core potentials in the first minization steps, forces will not be infinite and the double precision version is not required. The script equivalent to the README file containing the protocol and the setting .itp files for the dry DPPC vesicle of this tutorial are available here. Note that for other systems, you may need edits. After download, place the soft-core-minimization.tgz file in the folder charmm-gui/gromacs/. Unpack and run the protocol.\n\n$ tar -xzvf soft-core-minimization.tgz\n\n$ ./minimization-equilibration.sh\n\nA word of WARNING! Proper equilibration of lipids between the leaflets, even with the open pores can take quite long, and will vary depending on vesicle size and lipids composition. The default time for the equilibrium runs is set to 500 ns which will take very long (days) if run on your desktop machine. Also, the time-step may be too large in some cases, so keep an eye on the simulations.\n\nThe structure (.gro) files after each equilibration step and after the \\(1 \\mu s\\) simulation can be downloaded here.\n\n\n\n\nFigure 3 | DPPC Dry Martini vesicle with 5171 lipids. Part of the vesicle is cutoff to show inside. A) After energy minimization – showing x2 of the pores to equilibrate the leaflets. B) After \\(1 \\mu s\\) production simulation.\n\n\n\n\n\nReferences\n\n[1] Wassenaar, T. A., Pluhackova, K., Böckmann, R. A., Marrink, S. J., and Tieleman, D. P. (2014) Going Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models. J. Chem. Theory Comput. 10, 676–690.\n[2] Pluhackova, K., Wassenaar, T. A., and Böckmann, R. A. (2013) Molecular Dynamics Simulations of Membrane Proteins, in Methods in Molecular Biology (Rapaport, D., and Herrmann, J. M., Eds.), pp 85–101. Humana Press.\n[3] Yesylevskyy, S. O., Schäfer, L. V., Sengupta, D., and Marrink, S. J. (2010) Polarizable Water Model for the Coarse-Grained MARTINI Force Field. PLoS Comput Biol 6, e1000810\n[4] Qi, Y., Ingólfsson, H.I., Cheng, X., Lee, J., Marrink, S.J., and Im, W. (2015) CHARMM-GUI Martini Maker for coarse-grained simulations with the Martini force field. JCTC, doi:10.1021/acs.jctc.5b00513."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/proteins.html",
    "href": "docs/tutorials/Legacy/martini2/proteins.html",
    "title": "Proteins",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nSoluble protein\n\nKeeping in line with the overall Martini philosophy, the coarse-grained protein model groups 4 heavy atoms together in one coarse-grain bead. Each residue has one backbone bead and zero to four side-chain beads depending on the residue type. The secondary structure of the protein influences both the selected bead types and bond/angle/dihedral parameters of each residue[1]. It is noteworthy that, even though the protein is free to change its tertiary arrangement, local secondary structure is predefined and thus imposed throughout a simulation. Conformational changes that involve changes in the secondary structure are therefore beyond the scope of Martini coarse-grained proteins.\nSetting up a coarse-grained protein simulation consists basically of three steps:\n\nconverting an atomistic protein structure into a coarse-grained model;\ngenerating a suitable Martini topology;\nsolvate the protein in the wanted environment.\n\nTwo first steps are done using the publicly available martinize.py script, of which the latest version can be downloaded from Github. However, if you want to be sure you use the same version as the files provided as an example, download this version of martinize.py. The last step can be done with the tools available in the gromacs package and/or with ad hoc scripts. In this part of the tutorial, some basic knowledge of gromacs commands is assumed and not all commands will be given explicitly. Please refer to the previous tutorials (basic tutorial on Martini lipids available here) and/or the gromacs manual.\nThe aim of the first module of this tutorial is to define the regular work flow and protocols to set up a coarse-grained simulation of ubiquitin in a water box using a standard Martini description. The second module is presenting the variation of the secondary structure which can occur for certain proteins, in our case the HIV-1 protease, and a slightly different approach (ElNeDyn) to avoid this issue. The last module is to set up a coarse-grained simulation of a KALP peptide in its membrane environment.\n\nSoluble protein: the Martini description\nDownload an example of all the worked files of this module\nThe downloaded file is called ubiquitin.tgz and contains a worked version (using gromacs 2016.3) of this module. You do not need this file to get going on this tutorial; you can use this worked version to check your own work. The file expands to the directory ubiquitin/martini. Create your own directory to work the tutorial yourself. Instructions are given for files you need to download, etc. You do not need any files to start with. Now go to your own directory.\nAfter getting the atomistic structure of ubiquitin (1UBQ), you’ll need to convert it into a coarse-grained structure and to prepare a Martini topology for it. Once this is done the coarse-grained structure can be minimized, solvated and simulated. The steps you need to take are roughly the following:\n\nDownload 1UBQ.pdb from the Protein Data Bank.\n\nwget http://www.rcsb.org/pdb/files/1UBQ.pdb.gz\ngunzip 1UBQ.pdb.gz\n\nThe pdb-structure can be used directly as input for the martinize.py script (download available here), to generate both a structure and a topology file. Have a look at the help function (i.e. run python martinize.py -h) for the available options. Hint, valid for any system simulated with Martini: during equilibration it might be useful to have (backbone) position restraints to relax the side chains and their interaction with the solvent; we are anticipating doing this by asking martinize.py to generate the list of atoms involved. The final command might look a bit like this:\n\n`` bash python martinize.py -f 1UBQ.pdb -o single-ubq.top -x 1UBQ-CG.pdb -dssp /path/to/dssp -p backbone -ff martini22\n\nWe are asking for version 2.2 of the force field. When using the `-dssp` option you'll need the dssp binary, which determines the secondary structure classification of the protein backbone from the structure. It can be downloaded from the [CMBI website](http://swift.cmbi.ru.nl/gv/dssp). If installed centrally, the path is usually `/usr/bin/dssp`. As an alternative, you may prepare a file (an example is [1UBQ.ssd](https://cgmartini-library.s3.ca-central-1.amazonaws.com/0_Tutorials/legacy_material/martini2/1UBQ.ssd)) with the required secondary structure yourself and feed it to the script:\n\n``` bash\npython martinize.py -f 1UBQ.pdb -o single-ubq.top -x 1UBQ-CG.pdb -ss &lt;YOUR FILE&gt; -p backbone -ff martini22\nNote that the martinize.py script might not work with older versions of python! Also python 3.x might not work. We know it does work with versions: 2.6.x, 2.7.x and does not work with 2.4.x. If you have tested it with any version in between, we would like to hear from you.\n\nIf everything went well, the script generated three files: a coarse-grained structure (.pdb; cf. Fig. 1), a master topology file (.top), and a protein topology file (.itp). In order to run a simulation you need two more: the Martini topology file (martini_v2.x.itp, if you specified version 2.2, you’ll want the corresponding file) and a run parameter file (.mdp). You can get examples from the Martini website or from the protein tutorial package. Don’t forget to adapt the settings where needed!\n\n\n\n\n\n\nFigure 1 | Different representations of ubiquitin. A) cartoon representation of the atomistic structure. B) Coarse-grained beads forming the backbone and C) licorice representation of the backbone of the martinized protein.\n\n\n\n\n\nDo a short (ca. 10-100 steps is enough!) minimization in vacuum. Before you can generate the input files with grompp, you will need to check that the topology file (.top) includes the correct martini parameter file (.itp). If this is not the case, change the include statement. Also, you may have to generate a box, specifing the dimensions of the system, for example using gmx editconf. You want to make sure, the box dimensions are large enough to avoid close contacts between periodic images of the protein, but also to be considerably larger than twice the cut-off distance used in simulations. Try allowing for a minimum distance of 1 nm from the protein to any box edge. Then, copy the example parameter file, and change the relevant settings to do a minimization run. Now you are ready to do the preprocessing and minimization run:\n\ngmx editconf -f 1UBQ-CG.pdb -d 1.0 -bt dodecahedron -o 1UBQ-CG.gro\n\ngmx grompp -p single-ubq.top -f minimization.mdp -c 1UBQ-CG.gro -o minimization-vac.tpr\ngmx mdrun -deffnm minimization-vac -v\n\nSolvate the system with gmx solvate (an equilibrated water box can be downloaded here; it is called water.gro). Make sure the box size is large enough (i.e. there is enough water around the molecule to avoid periodic boundaries artifacts) and remember to use a larger van der Waals distance when solvating to avoid clashes, e.g.:\n\ngmx solvate -cp minimization-vac.gro -cs water.gro -radius 0.21 -o solvated.gro\n\nYou need to update the topology to reflect the water added. Here, this is done by copying the topology for the single ubiquitin to system.top and editing that to add a line with the number of water beads. You will then do a short energy minimization and position-restrained (NPT) equilibration of the solvated system. Since the martinize.py script already generated position restraints (thanks to the -p flag), all you have to do is specify define = -DPOSRES in your parameter file (.mdp). At this point you must also add the appropriate number of water beads to your system topology (.top); the total number added by gmx solvate can be seen in the output of the command; alternatively try grep -c W system-solvated.gro (where W is the name of a water bead).\n\ngmx grompp -p system.top -c solvated.gro -f minimization.mdp -o minimization.tpr\ngmx mdrun -deffnm minimization -v\ngmx grompp -p system.top -c minimization.gro -f equilibration.mdp -o equilibration.tpr\ngmx mdrun -deffnm equilibration -v\n\nStart production run (without position restraints!); if your simulation crashes, some more equilibration steps might be needed. NOTE that you will get a warning about simultaneous use of Parrinello-Rahman barostat and newly generated velocties. This can be ignored by the -maxwarn 1 option. A sample trajectory is shown in Figure 2.\n\ngmx grompp -p system.top -c equilibration.gro -f dynamic.mdp -o dynamic.tpr -maxwarn 1\ngmx mdrun -deffnm dynamic -v\n\n\n\n\n\nFigure 2 | 20 ns simulation of coarse-grained ubiquitin (green beads) and solvent (coarse-grained water; blue beads).\n\n\n\n\n\nPROFIT! What sort of analysis can be done on this molecule? Start by having a look at the protein with vmd. (see tutorial, use the script cg_bonds-v5.tcl to show the ubiquitin with the bonds as defined in the topology) or pymol. It is often convenient to convert the trajectory so that translation and rotation of ubiquitin is removed. (NOTE, however, that the water is also rotated and this may create some unwanted effects when viewing. It is up to you, really. One thing that does make sense is to make sure beads that belong to the protein are not split across periodic boundary conditions, see the section on elastic network below for explicit instructions how to do this with gromacs tools.) Be aware that the .gro file given to VMD must contain the same (number of) atoms as the .xtc file. Therefore, if you choose to write only the protein to the .xtc file, also prepare a .gro file with only the protein (minimization-vac.gro will do).\n\ngmx trjconv -f dynamic.xtc -s dynamic.tpr -fit rot+trans -o viz.xtc\nvmd equilibration.gro viz.xtc\nTo view with pymol, the trajectory must also be converted to .pdb format. This gives the opportunity to add bond information, which helps in viewing the molecule. Be aware that this file may be very large: you may want to reduce the number of frames. You can also reduce the size by only writing out the protein coordinates (but you may want to visualize the solvent as well, so it is up to you).\ngmx trjconv -f dynamic.xtc -s dynamic.tpr -fit rot+trans -o viz.pdb -conect\npymol viz.pdb\nStandard analysis for proteins includes RMSD, RMSF, radius of gyration. Refer to tutorials for atomistic models, for example by Tsjerk Wassenaar or Justin Lemkul. For the impatient, o if you just need a quick reminder: RMSD and RMSF can be calculated using gromacs tools gmx rms and gmx rmsf, respectively.\n\n\nSoluble protein: the elastic network approach\nDownload an example of all the worked files of this module, with gromacs version 5.0.7\nDownload an example of all the worked files of this module with gromacs 2016.3\nThe aim of this second module is to see how application of elastic networks can be combined with the Martini model to conserve secondary, tertiary and quartenary structures more faithfully without sacrificing realistic dynamics of a protein. We offer two alternative routes. Please be advised that this is an active field of research and that there is as of yet no “gold standard”. In fact, recently, Martini was combined with the Go model[3]. Earlier, the tool domElNeDin was made available to remove elastic bonds between selected domains after the elastic network was built.\nThe first option offered here is to generate a simple elastic network on the basis of a standard Martini topology. The second options is to use an ElNeDyn network. This second option constitutes quite some change to the Martini force field and thus is a different force field in itself. The advantage is that the behavior of the method has been well described[2]. Both approaches can be set up using the martinize.py script and will be shortly described below.\nWe recommend to simulate a pure Martini coarse-grained protein (without elastic network) in a first step, and then see what changes are observed when using an elastic network on the same protein. Note that you’ll need to simulate the protein for tens to hundreds of nanoseconds to see major changes in the structure; sample simulations are provided in the archive.\nYou should be aware of the following aspects:\n\nthe structure deposited in the Protein Data Bank (1A8G) includes a ligand. This ligand is not known as a building block to martinize, and is totally ignored, i.e. it is NOT included in the topology, nor in the coarse-grained structure. If you want to study this or other ligand binding, you will need to build a Martini topology for the ligand yourself and map the atomistic coordinates to CG coordinates.\nthe protein is charged (each monomer has charge +2). It is recommended to add at least neutralizing counter ions; on top of that, you can add ions to reflect some ionic strength of the solution. NOTE that you’ll need to get hold of a Martini topology file that specifies the ion topologies.\nthe protein is a dimer. By default, you will get a topology file with the two subunits being treated as individual molecules. This usually leads to some extra work in visualization and analysis when the subunits end up at different ends of the periodic cell. You can fix this afterwards by treating the trajectory so as to make sure the subunits are always near to each other. There are two ways to do this. The first one is to cluster the protein of the trajectory, using the gromacs tool gmx trjconv with the -cluster flag. The disadvantage is that the protein complex may show jumps over the periodic boundaries. The second way takes more step, but the jumping can be avoided. To do this, make a separate topology which merges the subunits into a single .itp file, which leads the dimer to be seen as a single molecule (add the flag -merge A,B to the martinize command). Prepare a .tpr file with that topology and use that for analysis, and for rewriting the trajectory with for example removing rotation and translation of the protein. NOTE that adding the flag -merge A,B to the martinize command with elastic network options introduces elastic bonds between subunits! This is something you probably do not want. Standard elastic network with Martini and standard ElNeDyn do not add elastic bonds between subunits!\n\n\n\nMartini\n\nRepeat steps 1 to 7 from the previous exercise with the HIV-1 protease (1A8G.pdb).\nVisualize the simulation, look especially at the binding pocket of the protein: does it stay closed, open up? What happens to the overall protein structure?\n\n\n\nMartini + elastic network\nThe first option to help preserve higher-order structure of proteins is to add to the standard Martini topology extra harmonic bonds between non-bonded beads based on a distance cut-off. Note that in standard Martini, long harmonic bonds are already used to impose the secondary structure of extended elements (sheets) of the protein. The martinize.py script will generate harmonic bonds between backbone beads if the options -elastic is set. It is possible to tune the elastic bonds (e.g.: make the force constant distance dependent, change upper and lower distance cut-off, etc.) in order to make the protein behave properly. The only way to find the proper parameters is to try different options and compare the behavior of your protein to an atomistic simulation or experimental data (NMR, etc.). Here we will use basic parameters in order to show the principle.\n\nUse the martinize.py script to generate the coarse-grained structure and topology as above. For the elastic network, use the extra following flags:\n\npython martinize.py [...] -elastic -ef 500 -el 0.5 -eu 0.9 -ea 0 -ep 0\nThis turns on the elastic network (-elastic), sets the elastic bond force constant to \\(500 kJ mol^{-1} nm^{-2}\\) (-ef 500), the lower and upper elastic bond cut-off to 0.5 and 0.9 nm, respectively (-el 0.5 and -eu 0.9), and makes the bond strengths independent of the bond length (elastic bond decay factor and decay power, -ea 0 and -ep 0, respectively; these are default). The elastic network is defined in the .itp file by an #ifdef statement, and is switched on by default (#define NO_RUBBER_BANDS in the .top or .itp file switches it off). Note that martinize.py does not generate elastic bonds between i → i+1 and i → i+2 backbone bonds, as those are already connected by bonds and angles (cf. Fig. 3). Also, elastic bonds are only added between beads that belong to the same subunit.\n\n\n\n\n\nFigure 3 | Elastic network (gray) applied on both monomers of the HIV-1 protease (yellow and orange, respectively)\n\n\n\n\n\nProceed as before (steps 4 to 7) and start a production run. Keep in mind we are adding a supplementary level of constraints on the protein; some supplementary relaxation step might be required (equilibration with position restraints and smaller time step for instance). If you have a set-up for the protein without elastic bonds (including solvent and possibly ions), you may use a snapshot from that simulation as the starting point here.\n\n\n\nElNeDyn\nThe second option to use elastic networks in combination with Martini puts more emphasis on remaining close to the overall structure as deposited in the PDB than standard Martini does. The main difference from the standard way (used in the previous exercise) is the use of a global elastic network between the backbone beads to conserve the conformation instead of relying on the angle/dihedral potentials and/or local elastic bonds to do the job. The position of the backbone beads is also slightly different: in standard Martini the center of mass of the peptide plane is used as the location of the backbone bead; but in the ElNeDyn implementation the positions of the Cα-atoms are used instead. The martinize.py script automatically sets these options and sets the correct parameters for the elastic network. As the elastic bond strength and the upper cut-off have to be tuned in an ElNeDyn network, these options can be set manually (-ef and -eu flags); note however these parameters have been extensively studied and were optimized to \\(500 kJ mol^{-1} nm^{-2}\\) and \\(0.9 nm\\),[2].\n\nUse the martinize.py script to generate the coarse-grained structure and topology as above. The following flag will switch martinize.py to the ElNeDyn default representation:\n\npython martinize.py [...] -ff elnedyn22\n\nProceed as before and start a production run.\n\nNow you’ve got three simulations of the same protein with different type of elastic networks. If you do not want to wait, some pre-run trajectories can be found in the archive. One of them might fit your needs in terms of structural and dynamic behavior. If not, there are an almost infinite number of ways to further tweak the elastic network!\n\n\n\n\n\nFigure 4 | RMSD of HIV-1 protease backbone with the three different approaches described previously (RMSD is usually considered “reasonable” if below 0.3 nm).\n\n\n\n\nAn easy way to compare the slightly different behaviors of the proteins in the previous three cases is to follow deviation/fluctuation of the backbone during simulation (and compare it to an all-atom simulation if possible). RMSD (Fig. 4) and RMSF can be calculated using gromacs tools (gmx rms and gmx rmsf). vmd provides also a set of friendly tools to compute these quantities, but needs some tricks to be adapted to coarse-grained systems (standard keywords are not understood by vmd on coarse-grained structures).\n\n\n\nTo go further: membrane protein\n\nDownload an example of all the worked files of this module\nDownload an example of all the worked files of this module using GROMACS version 2016.3\nIn the last module of this protein tutorial, we will increase the complexity of our system by embedding the protein in a lipid bilayer (the tutorial on the lipidome, lipid self-assembly and bilayer analysis can be followed here). We propose here to have a look at the tilt and the dimerization of KALP peptides embedded in DPPC membrane. The coarse-grained structure (kalp.gro) and topology (kalp.itp) of KALP can just be downloaded by clicking on the links; no need to repeat the steps to martinize the peptide. We start by solvating the protein directly with the membrane environment so that it ends up inserted. Different ways to perform this step possible; a non-exhaustive list, ordered by decreasing complexity, is presented below (note that this tutorial will focus only on the third case):\n\nA bilayer self-assembly dynamics, as presented in the first module of the lipid tutorial, will result in the self-insertion of the KALP inside the bilayer (Fig. 5). This method is not followed in this tutorial but you will also find the respective files in the downloaded bundle.\n\n\n\n\n\n\nFigure 5 | A) Self-assembly (4 ns) of a DPPC (green) bilayer embedding a KALP peptide. B) Initial “soup” of lipid and solvent (water; blue) in which the KALP (red) is mixed. C) Final conformation of the simulation.\n\n\n\n\n\nIf a stable DPPC membrane with the wanted box dimensions is already available, gmx solvate will be able to insert the peptides in the bilayer (the peptides have to be pre-centered and positioned to ensure their presence inside the membrane).\nThe use of the script insane.py, downloadable here, allows the setting up of bilayers of arbitrary composition around our protein.\n\nThe latter method, being the easiest and the most straightforward, is recommended and is the method we present here.\n\nThe syntax of the insane.py scripts is very similar to what was used so far; it can be invoked by running insane.py -h. (As with other scripts, updates appear regularly. If you want to be sure you use the same version as used in the example files provided, download the file linked to in the command line below. Otherwise, get the latest from Github via the Tools pages on Downloads.) Let’s see a practical example:\n\npython insane.py -f kalp.gro -o system.gro -p system.top -pbc square -box 7,7,9 -l DPPC -u DPPC -center -sol W\nThe previous command line will set up a complete system, containing a squared DPPC bilayer of 7 nm, insert the KALP peptide centered in this bilayer and solvate the whole thing in standard coarse-grained water. More on the insane.py tool can be found in separate tutorials, notably setting up a complex bilayer.\n\nProceed as before and start a production run. To remind you, this involves (1) editing the system.top file to reflect the version of Martini you want to use (the KALP topology provided is version 2.1) and providing include statements for the topology files; (2) downloading or copying definitions of Martini version you want and the DPPC lipid topology file from the lipidome; (3) using the correct names of the molecules involved; (4) downloading or copying set-up .mdp files for minimization, equilibration, and production runs and if necessary, editing them (bilayer simulations are best done using semi-isotropic pressure coupling and you may want to separately couple different groups to the thermostat(s)); (5) running the minimization and equilibration runs.\nGenerate a new system in which membrane thickness is reduced (different the lipid type, DLPC for instance). Observe how the thickness is affecting the tilt of the transmembrane helix; compare it to the previous simulation.\nDouble these previous boxes in one dimension (gmx genconf) and rerun the simulations. Observe the different dimerization conformations (parallel or anti-parallel tilts). Note that more than one simulation might be required to observe both cases! It may be worth your while to study this paper by Sengupta and Marrink[4] pointing out sampling issues in the study of helix association.\nChoose your favorite orientation and reverse-map the final conformation (tutorial on reverse-mapping available here). Simulate this system atomistically to refine and have a closer and detailed look at the interactions between KALPs.\n\n\n\nTools and scripts used in this tutorial\n\n\ngromacs http://www.gromacs.org/\nmartinize.py (downloadable here)\ninsane.py (downloadable here)\n\n\n\nReferences\n\n[1] L. Monticelli, S.K. Kandasamy, X. Periole, R.G. Larson, D.P. Tieleman, S.J. Marrink. The MARTINI coarse grained forcefield: extension to proteins. J. Chem. Theory Comput., 4:819-834, 2008.\n[2] X. Periole, M. Cavalli, S.J. Marrink, M.A. Ceruso. Combining an elastic network with a coarse-grained molecular force field: structure, dynamics, and intermolecular recognition. J. Chem. Theory Comput., 5:2531-2543, 2009.\n[3] A.B. Poma, M. Cieplak, P.E. Theodorakis Combining the Martini and structure-based coarse-grained approaches for the molecular dynamics of conformational transitions in proteins. J. Chem. Theory Comput., 13:1366-1374, 2017.\n[4] D. Sengupta and S.J. Marrink. Lipid mediated Interactions tune the association of Glycophorin A helix and its disruptive mutants in membranes. Phys. Chem. Chem. Phys., 12:12987-12996, 2010."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/metadynamics.html",
    "href": "docs/tutorials/Legacy/martini2/metadynamics.html",
    "title": "Metadynamics",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nIntroduction\n\nIn this tutorial, we will measure the dimerization free energy between two naphthalene molecules, Figure 1, in water. The calculations will be performed with MARTINI 3.0.3 force field and the method for obtaining the free energy landscape will be Metadynamics with PLUMED 2.4.1 package. The basic idea is to provide a simple setup for any dimerization study. For more details on the theory and analysis, references and links will be provided.\n\n\n\nFigure 1: All-atom (AA) representation of naphthalene. The coarse-grained (CG) model is represented with blue beads superimposed on the AA structure.\n\n\nIn general, our goal is to describe a chemical reaction such as dimerization in a simple way and obtain results that are easily interpreted and evaluated. For this reason, we want to use one or more collective variables (CV) that effectively represent this reaction. The simplest and most useful CV is the distance between the monomers. More CVs can be used at the same time, but this will slow down the whole procedure. If there is no special need to add extra CVs, the distance should be enough. In any case, after obtaining the real free energy landscape of the reaction, we can always project the energy profile in more than one variables (e.g distance+angle, distance+dihedral, etc), as long as we have enough sampling.\n\n\nSystem and file preparation\n\nFirst things first, we need to build a system with the molecules we are interested in. You can download all the files you need to create a cubic box with water and two naphthalene molecules here (you will also find all scripts needed for the analysis). To run a simulation with Gromacs, you also need topology files and MD parameters (top, itp and mdp) that you can found in the same directory. The following commands will do the trick.\n# download and extract all files to your working directory\n\n&gt; tar -zxvf files.tar.gz\n\n# load a Gromacs executable, where plumed-2.4.1 has been patched, depending on the location of installation this command might be different\n\n&gt; source ~/usr/local/gromacs_plumed-2.4.1/bin/GMXRC\n\n# insert two naphthalene molecules (naph.gro) in a cubic box, box is an empty box with size 5x5x5nm\n\n&gt; gmx_mpi insert-molecules -f box.gro -ci naph.gro -nmol 2 -o naph_2.gro\n\n# add water inside the empty box\n\n&gt; gmx_mpi solvate -cp naph_2.gro -cs wat.gro -o system.gro\nNow, we have the initial coordinates of our system and all the files we need to start a simulation. Almost all. In order to run any simulation/analysis with plumed, we need a plumed.dat file (of course you can use different names), where all variables/arguments have to be defined. A plumed.dat file for Metadynamics should look more or less like this:\n# treat each molecule as whole\n\nWHOLEMOLECULES ENTITY0=1-5, ENTITY1=6-10 # rebuild molecules that are split by the periodic boundary conditions, avoid discontinuities changes in the CV value and artifacts in the calculations\n\n# define atoms for distance\n\ndist: DISTANCE ATOMS=5,10 # calculate the distance between the central atom of each molecule\n\n# metadynamics argument\n\nmetad: METAD ARG=dist PACE=500 HEIGHT=0.2 SIGMA=0.05 FILE=HILLS BIASFACTOR=10 GRID_MIN=0.1 GRID_MAX=5.0 GRID_BIN=500 TEMP=300 # in HILLS the following variables will be written: time, dist, sigma, height, biasfactor\n\n# monitor distance\n\nPRINT STRIDE=500 ARG=dist,metad.bias FILE=COLVAR # print the calculated distance and bias in COLVAR every 500 steps, COLVAR will contain three columns time, dist and bias\nA standard metadynamics simulation requires several arguments to be set:\nmetad: ARG=__FILL__ PACE=__FILL__ HEIGHT=__FILL__ BIASFACTOR=__FILL__ SIGMA=__FILL__ FILE=__FILL__ GRID_MIN=__FILL__ GRID_MAX=__FILL__ GRID_BIN=__FILL__ TEMP=__FILL__\n\nARG: the CV we want to bias by depositing Gaussians (e.g. distance, angle, dihedral, etc)\n\nPACE: the step to deposit Gaussians, the step should be large enough for the unbiased CVs to relax (100-500 steps are common choices)\n\nHEIGHT: height of the Gaussian (rule of the thump: ~0.1-1.0*kBT KJ/mol, too low-&gt;stay trapped for long/too high-&gt;lose local minima, 0.02-1.20 for distance and 1.0-2.0 for angles are commonly used values)\n\nBIASFACTOR: how fast the Gaussian height is decreasing (set close to the barriers you want to cross, barriers 20-30 KJ/mol need a bias factor of ~10-15, 10 is reasonable choice for biological systems)\n\nSIGMA: width of the Gaussian (0.5*unbiased range of variable, nm for distance & rad for angle)\n\nFILE: the output file where the Gaussians are deposited along the trajectory\n\nTEMP: the temperature of the system (needed for well-tempered MD to calculate kB)\nThe performance of Metadynamics falls dramatically in long simulations due to the increasing number of Gaussians that need to be stored and processed during a simulation. This problem can be easily solved if the bias is stored in a grid. The following arguments determine the boundaries and bin size of the grid:\nGRID_MIN: the minimum value your CV can adopt\n\nGRID_MAX: the maximum value your CV can adopt\n\nGRID_BIN: the bin size\nThese arguments should be enough to run a fast and efficient Metadynamics simulation.\nThe basic theory about metadynamics and all the arguments can be found here.\nThe tutorial of alanine dipeptide on which this tutorial can be found here.\nThe tutorial on block analysis and error estimates can be found here.\n\n\nRunning the simulation\n\nBefore starting a Metadynamics simulation, it is always a good idea to run an unbiased simulation. In this way, you will have an idea of the fluctuations of the CV of interest. You might need to try different values of bias width to avoid losing any information or running extremely long trajectories. In this tutorial, we will run one simulation, evaluate the free energy landscape in terms of convergence and reweight the energy profile in more than one CVs. Then, we will compare the performance of this set of parameters with different parameter values and methods.\nYou can start the simulation with the following command:\n# run a minimization step\n\n&gt; gmx_mpi grompp -p system.top -f min.mdp -c system.gro\n\n&gt; gmx_mpi mdrun -v -c confout-md-em.gro\n\n# run a short equilibration step\n\n&gt; gmx_mpi grompp -p system.top -f short.mdp -c confout-md-em.gro\n\n&gt; gmx_mpi mdrun -v -c confout-md-short.gro\n\n# start the production phase\n\n&gt; gmx_mpi grompp -p system.top -f run.mdp -c confout-md-short.gro\n\n&gt; gmx_mpi mdrun -v -c confout-md-prod.gro -plumed plumed.dat\nSeveral files will be generated. We are mainly interested in COLVAR (the file where time, distance and bias are deposited) and HILLS (the file where the free energy surface as a function of the CV is deposited)\n\n\nConvergence\n\nThere are two requirements that need to be met in order to claim that our simulation has converged.\n\nThe system should diffuse in the collective variable space. Initially the CV will be trapped in specific values, but as soon as the free energy landscape is filled with the bias potential the CV should diffuse (check COLVAR).\nThe free energy should not change significantly along the trajectory. Initially the free energy profile will deviate from the free energy landscape, but progressively the deviations should vanish (check HILLS).\n\nUse your favorite plotting tool to open the COLVAR and HILLS files.\n# use xmgrace to plot the distance vs time\n\nxmgrace COLVAR\n\n\n\nFigure 2. Distance vs Time.\n\n\n# calculate the free energy per 10000 steps (--stride) and save it fes.*.dat\n\n&gt;plumed sum_hills --hills HILLS --stride 10000 --mintozero\n\n# you can have a look at the help menu for more options\n\n&gt;plumed –help\n\n# use xmgrace to plot the free energy for each step\n\n&gt;xmgrace fes*\n\n\n\nFigure 3. Free energy vs distance every 10000 steps/100 ns (10000 steps * 20 fs int. step * 500 bias step = 100 ns).\n\n\nIn this case, we have obviously simulated more than enough, since the CV has diffused and the free energy landscape hardly changes after the first hundreds of nanoseconds. Even if these two requirements are met, they are just a qualitative control. What we actually need is a quantitative control to prove that our simulation has converged and we have sampled enough. For this reason, we will use block analysis and calculate the associated errors.\n\n\nBlock analysis\n\nCreate a subdirectory named analysis and copy the HILLS file to that directory. (It is better to analyze the results and calculate the errors on a different directory to avoid overwriting files). Block analysis will be performed in the same way as in the alanine dipeptide tutorial.\nOur main goal is to calculate a free energy landscape for the dimerization reaction, show that the errors of the free energy calculations are independent of the block size and get a reasonable error estimate for the CV we are measuring.\nIn order to obtain the unbiased free-energy landscape, we are going to weight the sampled conformations by using a reweighting factor. The basic idea is that since we know the bias potential that has been deposited in the system, we can use the biased sampled distribution to obtain the unbiased distribution that we really need.\nWe need to tell plumed to read the trajectory and the file where the bias potential is stored and produce a file with the values of interest.\n# read the trajectory (traj_comp.xtc) and the biased that has been imposed on each frame (HILLS)\n\n&gt;plumed driver --plumed plumed.dat --mf_xtc ../traj_comp.xtc\nIn this case, the input for plumed will be slightly different.\n# read the Gaussians deposited on HILLS file\n\nRESTART\n\nWHOLEMOLECULES ENTITY0=1-5, ENTITY1=6-10\n\ndist: DISTANCE ATOMS=5,10\n\nmetad: METAD ARG=dist PACE=100000000 HEIGHT=0.2 SIGMA=0.05 FILE=HILLS BIASFACTOR=5 TEMP=300 GRID_MIN=0.0 GRID_MAX=5.0 GRID_BIN=500 # set the PACE to a large value\n\nPRINT STRIDE=1 ARG=dist,metad.bias FILE=COLVAR # change stride to 1\nThe final step is to calculate unbiased free-energy landscape and perform our error analysis. script.py will find the maximum bias for weighting, produce a file with the weights as a function of distance (dist.weight). It will then call do_block_fes.py which will calculate the free-energy landscapes while performing block-analysis (fes.*.dat) and calculate the average errors associated with each block (errors.block).\n# run script.py (found in files directory)\n\n&gt; ./script.py\nCheck the errors for each block. If everything went well, the errors should initially increase and then be constant regardless of the block size.\n# use xmgrace to plot the free energy landscape when the errors have converged (e.g. block size:901) after accounting for the entropic corrections. (nc-1)*kB*T*log(x), where nc the number of degrees of freedom\n\n&gt; awk '{print $1\"\\t\"$2+2*2.49*log($1)\"\\t\"$3}' fes.901.dat &gt; fes_final.dat\n\n&gt; xmgrace fes_final.dat\n\n# use xmgrace to plot the distance vs time\n\n&gt; xmgrace errors.block\n\n\n\n\n\nFigure 4. Free-energy landscape (first) and associated errors for each block size (second).\n\n\n\nIt is clear that the profile was correctly calculated even in the first 250 ns of simulation and the simulation was converged. However, with a longer trajectory we obtained a smoother profile and more confidence on the error estimation.\nWe tried different methods and parameter values to calculate the free energy for the dimerization of naphthalene with Martini-3.0.3. The results are presented below.\n\n\n\n\nFigure 5. Free-energy landscape with different methods and Gaussian height and width.\n\n\n\nNotice two things:\n\nwith Metadynamics, we obtained almost the same profile as Umbrella Sampling but ~6 times faster. The performance could be further improved with a smarter input, e.g. putting a restraint on the accessible distance.\nthe choice of Gaussian width can affect the detail of the profile. In this case, the minimum around 0.4nm is slightly underestimated when the Gaussian width was increased and the profile starts to deviate for even large width values.\n\n\n\nReweighting on more CVs\n\nSince we have obtained the unbiased free energy landscape, we can know project the results on different CVs. Make a new directory to avoid overwriting files. We will call it analysis_2. We need to tell plumed to read the trajectory and the file where the bias energy is stored and produce a file with the CV that we biased plus one more CV that we are interested in. We can start with the torsional angle defined by the central bead and one of the outer naphthalene beads.\n# read the trajectory (traj_comp.xtc) and the biased that has been imposed on each frame (HILLS)\n\n&gt; plumed driver --plumed plumed.dat --mf_xtc ../traj_comp.xtc\n\n# run script.py\n\n&gt; ./script_2.py\nPlumed.dat and script_2.py will be slightly modified to take into account the second CV.\n#### plumed.dat\n\nRESTART\n\nWHOLEMOLECULES ENTITY0=1-5, ENTITY1=6-10\n\ndist: DISTANCE ATOMS=5,10 # calculate the distance between the central atom of each molecule\n\ndih: TORSION ATOMS=1,5,6,10 # calculate the torsional angle\n\nmetad: METAD ARG=dist PACE=100000000 HEIGHT=0.05 SIGMA=0.05 FILE=HILLS BIASFACTOR=10 TEMP=300 GRID_MIN=0.0 GRID_MAX=5.0 GRID_BIN=500\n\nPRINT STRIDE=1 ARG=dist,dih,metad.bias FILE=COLVAR\nWe will get rid of variables or empty lines that may be present in our free energy landscape and may crush our script, translate the profile so that the plateau is around zero and then plot the results.\n&gt; grep -v \"Infinity\" fes.1.dat &gt; fes.1_2.dat\n\n&gt; max=$(awk 'BEGIN{a= 0}{if ($3&gt;a) a=$3} END{print a}' fes.1_2.dat)\n\n&gt; maxe=$(awk 'BEGIN{a= 0}{if ($4&gt;a) a=$4} END{print a}' fes.1_2.dat)\n\n&gt; sed \"s/Infinity/$max\\t$maxe/\" fes.1.dat &gt; fes.1_2.dat\n\n&gt; sed -i \"/^$/d\" fes.1_2.dat\n\n&gt; mean=$(awk '{ if ($1 &gt;= 1.0) {sum += $3; n++} } END { if (n &gt; 0); print sum / n }' fes.1_2.dat)\n\n&gt; awk '{ if ($1!=0) {print $1\"\\t\"$2\"\\t\"($3-mean)+2*2.49*log($1)\"\\t\"$4}}' mean=$mean fes.1_2.dat &gt; final_fes.dat\nWe will use a python script to create a 2d-heat map of the free energy landscape based on the distance torsion angle.\n# run plot_fes.py\n\n&gt; ./plot_fes.py\n\n\n\n\nFigure 6. Free energy landscape projected on the distance and the torsional angle defined by the central bead and one of the outer naphthalene beads.\n\n\n\nIt is clear that there is no preference in the way the naphthalenes are oriented."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/hybrid_models.html",
    "href": "docs/tutorials/Legacy/martini2/hybrid_models.html",
    "title": "Hybrid model using virtual sites",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nAim\n\nDemonstrate how to combine different Classical Mechanical level models within GROMACS and run a HYBRID simulation. In general, this will involve providing user-defined tabulated potentials to GROMACS. A second aim is to demonstrate a back-mapping procedure to build (partially) atomistic structures from (fully/partially) coarse-grained models.\n\n\nBackground\n\nMany properties of molecular systems are local, i.e. primarily determined by the molecule and its nearest neighbors. Simulations of small systems therefore often already provide a reasonable to good representation of macroscopic systems. Nevertheless, small system simulations may contain artifacts due to the boundary conditions placed on them. Also, the minimal size of the simulated systems may still prevent sufficient sampling of phase space. The idea of HYBRID models is that a detailed description of relatively distant molecules is not required and that enhanced sampling of a region of interest may be achieved by embedding it in a surroundings that represents the environmental influences properly but at a computationally less demanding level. This approach has long been applied to the combination of quantum chemistry and molecular mechanics models (QM/MM), but is much less well developed for combining molecular models at different levels of resolution. It should be kept in mind that developments in this area are still ongoing and that there is as of yet no standard or best practice for this type of simulations.\nIn this tutorial, we shall focus on the combination of an atomistic (AA, or fine-grained, FG) and a coarse-grained (CG) model. The coarse-grained model is one employing a particle — as opposed to a continuum — description of the surroundings. The standard machinery present in GROMACS allows a quite generic implementation of HYBRID particle-based models through using VIRTUAL sites for the particles at the coarser level in addition to the normal atoms at finer level, and possibly adding user-defined interactions between the particles in accordance with the appropriate expression for the total energy.\nThe correspondence between the atoms and the virtual sites is called the MAPPING of the atomistic to the CG model. A CG model by itself may use such mapping schemes to parameterize (parts of) the force field. In a purely hierarchical scheme, such as force matching, atomistic simulations are used to calculate the forces on the mapped centers, which are then averaged over many snapshots to define the interactions between the CG particles. In an empirical approach, such as the Martini model, the bonded interactions between CG particles are often refined based on atomistic simulations; the distributions of bond lengths, bond angles and torsional degrees of freedom at the CG level are compared to those from the mapped atomistic simulations and bonded parameters are adapted to get an overall reasonable agreement. Tutorials involving fine-tuning can be found here and in the lipid and polymer tutorials. The non-bonded interactions in the Martini model are nevertheless generic and based on parameterization to experimental data.\n\nHybrid OPLS-AA/L—Martini model\nThe material presented in this tutorial leans on the work originating in the Molecular Dynamics Group at the University of Groningen, in particular that by Tsjerk Wassenaar. The two main publications primarily concern the combination of GROMOS united atom and Martini force fields. Here, we show that one can combine OPLS-AA/L and Martini in the same fashion.\nGROMACS implements a considerable number of standard interaction potentials, both bonded and non-bonded. It also enables the users to define their own interaction potentials. In addition, the code implements the generation and use of interaction centers (called VIRTUAL sites) whose positions depend in some geometrically well-defined way on the positions of two or more other particles. A hybrid model combines molecular models at different levels of resolution. The different models may use different types of interaction potentials, and may therefore not be compatible with the same non-bonded (and bonded) functional forms, necessitating a more complex set-up of hybrid model simulations than simulations at a single level of resolution. Here, a set-up will be demonstrated for a combination of the OPLS-AA/L peptide model with the Martini coarse-grained model. The peptide will interact internally at the atomistic resolution, while it interacts with solvent at the coarse-grained (CG) level. The solvent interacts with itself only at CG level. Sections 1-3 take you through setting up and running such a hybrid system for a single AA peptide in Martini water.\nIn Section 4 a tool is introduced to generate fully atomistic solvent configurations from the hybrid simulation that can serve as starting points for production runs at all-atom (AA) level. Such procedures are known as back-mapping techniques.\nSection 5 uses the back-mapping tool to generate coordinates for a hybrid simulation from a fully coarse-grained snapshot. Here, a collection of peptides is back-mapped from the Martini model to the OPLS-AA/L model, while the water and coarse-grained ions are maintained at the Martini level.\nAll files are provided in the tar-ball hybrid-tutorial.tgz, which expands to the main directory hybrid-tutorial/OPLS-MARTINI. Paths will be given with respect to this directory. A directory with all the results is provided in the tar-ball hybrid-tutorial-worked.tgz, under hybrid-tutorial/WORKED.\n\n\n\n1. The Models\n\n\nA. Atomistic model: OPLS-AA/L\nAs atomistic model we will use the OPLS-AA/L force field.[1] Here, we will have a peptide interacting internally through this force field. The standard atomistic model can be built using the GROMACS tool pdb2gmx. Here, we will use a small tripeptide, TYR-VAL-TYR, with methylated terminal ends. A Protein Data Bank (PDB) file can be built very simply using e.g. the builder of pymol, or by finding an existing protein in the PDB with this sequence of residues and cutting those out. We wish to use neutral methylated end-groups, normally known in the PDB as ACE for the C-terminal end and NMA for the N-terminal end. To make this work with the standard library file for OPLS-AA/L in GROMACS, the residue name of the N-terminal end must be changed manually from NMA to NAC.\nHands-on\nGo to the directory OPLSAA. The file YVY.pdb (Tyr-Val-Tyr), built using pymol, is available for you, and it incorporates the naming of the N-terminal end (NAC instead of NME, done by manual editing) to comply with the GROMACS implementation of the OPLS-AA/L force field. Build the atomistic topology file:\n&gt; gmx pdb2gmx -f YVY.pdb -ter -ignh\nThis command generates an OPLS-AA peptide topology, topol.top, after ENTERING the correct numbers (which may depend on the exact GROMACS version) for the options OPLS-AA/L force field, TIP3P for the water model, and None for both terminal ends. Check that the file topol.top produced makes sense.\n\n\nB. Coarse-grained solvent model: Martini\nAs a solvent, the Martini model for water and hydrated ions will be used.[2] This model will also deal with the interactions between the peptide and the solvent and hydrated ions (see Section 2 for further details). Standard Martini files can be downloaded (but that is not necessary here because they are provided for you) from the Martini website. They cannot be used as such, however, in the hybrid set-up, and modifications will need to be made. The standard file for the Martini model which serves as the basis for the modifications can be found in the directory SOLVENT/martini_v2.2.itp.\n\n\n\n2. The Combination of the Models\n\nModels at different levels can be combined in a number of schemes. We describe the simplest approach, viz. we choose to administer all interactions as being at either AA or CG level. The particles making up the peptide will interact at both atomistic and coarse-grained levels. Within the peptide, the interactions should be treated according to the atomistic force field. The atoms of the peptide see the other atoms of the peptide as they would in a normal atomistic simulation. Interactions of the peptide with the solvent are to be CG interactions, i.e. treated entirely according to the Martini model. This clear-cut separation is possible for the system defined here because there are no Coulomb interactions between the AA and CG subsystems. Standard Martini water beads are single, neutral particles. (The proper treatment of electrostatic interactions across the two levels is by no means a finished area of research. Aspects are discussed in Section 5.)\nThe present set-up achieves the separation between AA and CG interactions by adding VIRTUAL sites to the atomistic topology, and making sure that these sites have no interaction with the atoms, nor with each other, but only with the solvent. The atomistic topology generated for the peptide must be extended with the virtual sites to build a hybrid topology for the peptide.\n\nA. HYBRID TOPOLOGY FOR THE PEPTIDE\nThe hybrid topology for the peptide makes use of VIRTUAL SITES. These are described in the GROMACS manual in Section 4.7. In the present implementation, the virtual sites are defined as the centers of mass of a number of atoms. The virtual sites themselves are also particles belonging to the molecule. Thus, two entries need to be ADDED to the atomistic topology. The first extension is either an extension of the [ atoms ] directive containing the atomistic particles or a second [ atoms ] directive placed somewhere below the first one. In both cases, the atom numbering must be consecutive to the atoms already defined. The second extension is a [ virtual_sitesn ] directive, which defines how the added virtual sites are related to the normal atoms of the molecule. The additional virtual sites and the mapping can be added by hand, but a script is also available to do this for you. The conf.gro file of the peptide generated by pdb2gmx can be used to generate a Martini topology using an adapted martinize.py script (available in HYBRIDTOPOLOGY — the original script is downloadable from the Martini web-site) after slight modification of the terminal methylated groups. The standard Martini model does not implement the neutral methylated terminal ends. To distinguish them properly in the martinize.py script, a name change of the methyl carbon is required.\nHands-on\nGo to the directory HYBRIDTOPOLOGY. Copy the standard pdb2gmx output file conf.gro produced in Section 1 to conf-martini.gro and edit the CH3 of the ACE residue to be named CTJ and the CH3 of the NAC residue to be named CTB. This change is for the benefit of making the adapted martinize-ter.py script recognize these neutral methylated termini.\n&gt; cp ../OPLSAA/conf.gro ./conf-martini.gro\n\n&gt; [vi/gedit] conf-martini.gro\nEdit the conf-martini.gro to look like this:\nGallium Rubidium Oxygen Manganese Argon Carbon Silicon\n   70\n    1ACE    CTJ    1  -1.244   0.089  -0.561\n    1ACE   HH31    2  -1.272   0.187  -0.524\n    1ACE   HH32    3  -1.199   0.101  -0.659\n    1ACE   HH33    4  -1.333   0.029  -0.571\n    1ACE     C     5  -1.146   0.024  -0.467\n    1ACE     O     6  -1.176   0.001  -0.349\n...\n    5NAC     N    55  -0.107  -0.003   0.013\n    5NAC     H    56  -0.153   0.028   0.100\n    5NAC   CTB    57   0.034   0.012  -0.021\n    5NAC   HH31   58   0.062  -0.063  -0.094\n    5NAC   HH32   59   0.052   0.110  -0.062\n    5NAC   HH33   60   0.094  -0.001   0.068\n   1.42700   0.79900   0.81020\nNow, execute the martinize-ter.py script (this is the adapted version):\n&gt; python martinize-ter.py -f conf-martini.gro -ff martini22 -multi all -nt -o martini.top -x hybrid.pdb\nThis generates an extension to the molecule definition of the tri-peptide, defining 12 new atom entries that are defined as virtual sites. The flag -ff selects the Martini force field version, the flag -multi all produces a topology extension for hybrid AA-CG simulations (omitting this flag, you get a topology for pure Martini CG simulations), the flag -nt ensures neutral termini, and the -x flag produces a starting structure including the virtual sites. The topology extension is written to the standard file Protein_A.itp, which should look like the text shown below:\n; MARTINI (martini22) Multiscale virtual sites topology section for \"Protein_A\"\n\n; Sequence:\n; JYVYB\n; Secondary Structure:\n; CCCCC\n[ atoms ]\n   71   vN0     1   ACE   vBB   71 0.0000 ; C\n   72   vP5     2   TYR   vBB   72 0.0000 ; C\n   73  vSC4     2   TYR  vSC1   73 0.0000 ; C\n   74  vSC4     2   TYR  vSC2   74 0.0000 ; C\n   75  vSP1     2   TYR  vSC3   75 0.0000 ; C\n   76   vP5     3   VAL   vBB   76 0.0000 ; C\n   77  vAC2     3   VAL  vSC1   77 0.0000 ; C\n   78   vP5     4   TYR   vBB   78 0.0000 ; C\n   79  vSC4     4   TYR  vSC1   79 0.0000 ; C\n   80  vSC4     4   TYR  vSC2   80 0.0000 ; C\n   81  vSP1     4   TYR  vSC3   81 0.0000 ; C\n   82   vN0     5   NAC   vBB   82 0.0000 ; C\n;\n; Coarse grained to atomistic mapping\n;\n#define mapping virtual_sitesn\n[ mapping ]\n   71     2    1    2    3    4    5    6\n   72     2    7    8    9   10   26   27\n   73     2   11   14   15   16\n   74     2   17   18   21   22\n   75     2   19   20   23   24   25\n   76     2   28   29   30   31   42   43\n   77     2   32   33   34   35   36   37   38   39   40   41\n   78     2   44   45   46   47   63   64\n   79     2   48   51   52   53\n   80     2   54   55   58   59\n   81     2   56   57   60   61   62\n   82     2   65   66   67   68   69   70\nEach virtual site is defined as the center of mass of a number of atoms of the tri-peptide. The virtual sites are given first, under the [ atoms ] directive, and are numbered starting from 71; the all-atom model tri-peptide has 70 atoms. The atom types given to the virtual sites are those of the Martini model for proteins and peptides, with a prefix v (e.g., the standard back-bone bead for a coil residue in Martini is P5; therefore the bead-type for the back-bone beads 72, 76, and 78 are vP5). The mapping is defined in the directive [ mapping ], which is made to be interpreted by grompp as a directive [ virtual_sitesn ]. The first number is the index number of the virtual site, the second number (2 for all sites) specifies the type of virtual site (center of mass), and the other numbers are the indices of the atoms that define the virtual site. You may cross-check the mapping with the atom definition given in the atomistic topology.\nTo weave the two models together, copy the topol.top obtained from the atomistic model to hybrid.top.\n&gt; cp ../OPLSAA/topol.top ./hybrid.top\n\n&gt; [vi/gedit] hybrid.top\nUse an editor to add the Martini addition in Protein_A.itp at the appropriate place, which is just after the definition of the peptide ends. Excerpts of the file hybrid.top are shown below:\n;     Command line:\n;     gmx pdb2gmx -f YVY.pdb -ter -ignh\n;     Force field was read from the standard GROMACS share directory.\n;\n; Include forcefield parameters\n#include \"oplsaa.ff/forcefield.itp\"\n[ moleculetype ]\n; Name           nrexcl\nProtein            3\n[ atoms ]\n;   nr       type resnr residue atom   cgnr     charge       mass typeB   chargeB     massB\n; residue 20 ACE rtp ACE q 0.0\n     1   opls_135   1   ACE    CH3    1      -0.18    12.011   ; qtot -0.18\n     2   opls_140   1   ACE   HH31    1       0.06     1.008   ; qtot -0.12\n...\n    69   opls_140   5   NAC   HH32   25       0.06     1.008   ; qtot -0.06\n    70   opls_140   5   NAC   HH33   25       0.06     1.008   ; qtot 0\n[ bonds ]\n...\n[ pairs ]\n...\n[ angles ]\n...\n   69   67   70     1\n[ dihedrals ]\n...\n...\n   63   67   65   66     1   improper_Z_N_X_Y\n; MARTINI (martini22) Multiscale virtual sites topology section for \"Protein_A\"\n; Sequence:\n; JVVVB\n; Secondary Structure:\n; CCCCC\n[ atoms ]\n   71   vN0     1   ACE   vBB   71 0.0000 ; C\n...\n   82   vN0     5   NAC   vBB   82 0.0000 ; C\n;\n; Coarse grained to atomistic mapping\n;\n#define mapping virtual_sitesn\n[ mapping ]\n   71     2     1   2    3    4    5    6\n...\n   82     2   65   66   67   68   69   70\n; Include Position restraint file\n...\n[ system ]\n; Name\nProtein\n[ molecules ]\n; Compound       #mols\nProtein             1\n\n\nB. HYBRID FORCE FIELD FILES\nWe now have a topology for the hybrid peptide model. In general, further modifications are required before we can run a simulation.\n\nFirst of all, the virtual sites are assigned atom-types that belong to the CG model that are not known in the atomistic force field. They must be added to the atom-type list. Of course, the atom-type definitions must not overlap between the two models. For the combination of OPLS-AA/L and Martini this is no problem, but in general, you may need to rename the atom-types of either force field, whichever is more convenient.\nAlso, interactions must be defined between the sets of the two different force fields: either they must be set to zero, or defined explicitly if required. In GROMACS, standard files for interactions are provided for a number of force fields in libraries, provided in directories, see the GROMACS manual, Section 5.8. The OPLS-AA/L force field definitions can be found in the directory YOUR-PATH-TO-GROMACS/share/gromacs/top/oplsaa.ff. We will need to adapt the file ffnonbonded.itp in this directory. Since we may not have administrative privileges, we will copy the entire directory to a place that is under our control, effect the required changes there and make sure those files are used in our simulations.\n\nHands-on Go to the directory FORCEFIELDS, and copy the standard library directory (or use the one already copied for you there):\n&gt; cp -R YOUR-PATH-TO-GROMACS/share/gromacs/top/oplsaa.ff .\n\n&gt; cd oplsaa.ff\nValid atom-types for any force field are defined in the file ffnonbonded.itp under the directive [ atomtypes ]. In the GROMACS implementation of the OPLS-AA/L force field there is a long list of atom types. For each atom type, the Lennard-Jones sigma and epsilon values are given in the 7th and 8th column of each entry. An excerpt of the file ffnonbonded.itp is given below to illustrate the point.\n[ atomtypes ]\n; full atom descriptions are available in ffoplsaa.atp\n; name bond_type   mass   charge   ptype     sigma     epsilon\nopls_001   C   6     12.01100     0.500   A   3.75000e-01 4.39320e-01 ; SIG\nopls_002   O   8     15.99940    -0.500   A   2.96000e-01 8.78640e-01 ; SIG\n...\nThe nonbonded interaction parameters can be calculated from the values entered using standard combination rules. GROMACS implements and geometric and arithmetic means, specified in GROMACS in the [ defaults ] directive, which can be found in the forcefield.itp file. In addition, the interaction parameters for pairs of types can be set explicitly, overriding the standard values. This is done in the [ nonbond_params ] directive in the file ffnonbonded.itp. Since OPLS-AA/L uses standard combination rules, the [ nonbond_params ] directive is missing from the file ffnonbonded.itp. You may skip the OPTIONAL part below if you like and continue at the end of the OPTIONAL part.\n\nOPTIONAL (intermediate step)\nJust adding the Martini types used for the virtual sites as valid OPLS-AA atom types (make sure you define them as type V, not A) with standard LJ parameters 0 and 0, allows you to do a simulation in vacuum with the virtual sites present, but not interacting with anything. You may attempt to add the virtual site types yourself by hand (you will need vN0, vP5, vSC4, vSP1, and vAC2), or copy the pre-prepared force field files in which this edit has been done for you.\nHands-on\nGo to the VACUUM directory and either copy the given files:\ncp -R ../FORCEFIELDS/hyb-vac.ff oplsaa.ff\nor copy the standard files and edit the file ffnonbonded.itp to include the atom types for the virtual sites as described in the text above:\ncp -R gromacs_path/share/gromacs/top/oplsaa.ff .\n[vi/gedit] oplsaa.ff/ffnonbonded.itp\nNext, copy your hybrid starting structure and edited topology there, and you should be able to run a vacuum simulation using the provided set-up file sd.mdp (using straight cut-off Coulomb interactions instead of PME and without pressure correction):\ncp ../HYBRIDTOPOLOGY/hybrid.pdb .\ncp ../HYBRIDTOPOLOGY/hybrid.top .\ngmx grompp -p hybrid.top -c hybrid.pdb -f sd.mdp -maxwarn 1\ngmx mdrun -v\nvmd -e viz-sdrun.vmd\nWhen visualizing with vmd, using the .vmd file, you will see the virtual sites, the positions of the Martini beads as green spheres. Due to the standard settings of vmd drawing bonds on the basis of distances, bonds will be drawn between the virtual sites and nearby atoms.\nEND OPTIONAL\n\nThe MARTINI force field has interaction levels that do not follow from a multiplication rule; it therefore defines a full matrix of interactions. The interaction matrix between Martini beads must be added to the nonbonded definition file in the [ nonbond_params ] directive of the file ffnonbonded.itp. Interactions must be defined between the sets of the two different force fields: either they must be set to zero, or defined explicitly if required. This can be done by hand by appropriately mixing the two files and extending the table with pairs of interactions. Finally, in general one may not want all molecules of a particular kind to interact at a particular level, but only a limited sub-set. For example, we may want to study the active site of a protein atomistically, but embedded in a CG protein and CG water. The virtual sites representing the CG active site must not interact with each other (the atomistic interactions take care of that), but should interact with all surrounding molecules in the appropriate CG manner. One could generate a list of exclusions for the virtual sites while using their normal CG atom types. A more general approach is to double the type of interactions, here CG, where a distinction is made between the types that do not interact with each other, here with prepended v, e.g. vP5 for a P5-type particle, and the normal CG types. Now v-particles can interact with all CG particles in the normal CG manner, whereas they do not interact at all amongst themselves if the LJ parameters between all v-particles are set to zero. This approach is followed here, and you may try to edit an appropriate file yourself, or use a minimal nonbonded file defined for you in FORCEFIELDS/hybrid.ff/ffnonbonded.itp.\nYou may skip the OPTIONAL part below if you like and use the pre-prepared force field files in which this edit has been done for you (FORCEFIELDS/hybrid.ff/ffnonbonded.itp) and continue at the end of the OPTIONAL part.\n\nOPTIONAL (defining the set of CG and virtual particle interactions)\nHands-on\nGo to the FORCEFIELDS directory and make a copy of the OPLS/AA force field files:\ncp -R oplsaa.ff myhybrid.ff\nOpen the file myhybrid.ff/ffnonbonded.itp and add the Martini types used for the coarse-grained system and for the virtual sites as valid OPLS-AA atom types (make sure you define the ones for the virtual sites as type V, not A) with standard LJ parameters 0 and 0 (you will need P4, BP4, vN0, vP5, vSC4, vSP1, and vAC2). If you have gone through the previous OPTIONAL HANDS-ON, you will already have defined the virtual site atom types and you can use that again.\n[gedit/vi] myhybrid.ff\nNext, while still in the editor, add a directive [ nonbond_params ] and specify explicitly the non-bonded interaction matrix for interactions that should be non-zero. If a pair is not specified in the [ nonbond_params ] directive, standard combination rules will be used; thus by defining a particle type with LJ parameters 0 and 0 this type will always have no LJ interaction with any other particle type if the pair interaction is not explicitly defined in the [ nonbond_params ] directive. An example of a [ nonbond_params ] directive entry is shown below.\n[ nonbond_params ]\n; type1 type2  flag  sigma     epsilon\nP4   P4   1        0.47e-00 0.50e+01 ; supra atrractive Martini interaction\nWhen you are done, you may compare your file myhybrid.ff/ffnonbonded.itp with the file hybrid.ff/ffnonbonded.itp.\nEND OPTIONAL\n\nNOTE that the standard Martini force field file available from the Martini website (and provided in the SOLVENT directory) uses C6 and C12 parameters instead of sigma and epsilon, as appropriate for the OPLS-AA/L force field. Thus, the Martini parameters must now also be specified in terms of sigma and epsilon (which is the way they are defined in Martini papers).\n\n\n\n3. Setting up and running the hybrid system\n\nWe will now work toward a hybrid simulation of a single atomistic tripeptide solvated in Martini water.\n\nA. Surrounding the solute with solvent\nFirst, a starting structure must be prepared in which the peptide is solvated. GROMACS has a standard tool to solvate systems, gmx solvate. One can either use an equilibrated solvent box to fill an existing system containing a solute, or insert individual molecules one by one. After one or more molecules are inserted, a check for close contacts is made and new molecules that are too close to existing molecules are removed.\nHands-on\nGo to the HYBRID directory. Take the hybrid solute co-ordinates, center them in the box and define a box-size of 3.5x3.5x3.5 nm, and fill this with Martini water beads. A co-ordinate file containing 400 equilibrated Martini waters (water.gro) is available from the Martini web-site, and is also provided for you in the SOLVENT directory.\n&gt; cp ../SOLVENT/water.gro .\n\n&gt; gmx editconf -f ../HYBRIDTOPOLOGY/hybrid.pdb -center 1 1 1 -box 3.5 3.5 3.5\n\n&gt; gmx solvate -cp out.gro -cs water.gro -o solvated.gro -radius 0.2\n\n&gt; cp ../HYBRIDTOPOLOGY/hybrid.top .\nEdit the topology file (hybrid.top) to include the definition of the Martini water bead (define a moleculetype or use a #include; the file SOLVENT/MartiniWater.itp contains it) and specify the number of water beads just added to your system (right at the bottom in the [ molecules ] directive; the Martini water bead is called W). The number of water beads added should be clear from the output of the gmx solvate command.\n&gt; [vi/gedit] hybrid.top\nNext, either copy the directory with pre-edited OPLS-AA/L force field files:\n&gt; cp -R ../FORCEFIELDS/hybrid.ff oplsaa.ff\nor copy the directory with the standard OPLS-AA/L force field files and edit them to include the Martini-bead definitions (see the OPTIONAL hands-on section just prior to this section):\n&gt; cp -R gromacs_path/share/gromacs/top/oplsaa.ff .\n\n&gt; [vi/gedit] oplsaa.ff/ffnonbonded.itp\n\nOPTIONAL (intermediate stage)\nThe system thus defined will run; you can test this (in an energy minimization run) by running:\n```bash gmx grompp -p hybrid.top -c solvated.gro -f em.mdp -o em -maxwarn 1\ngmx mdrun -v -deffnm em\nvmd -e viz-em.vmd\nEND OPTIONAL\n\n\n\nB. Generating proper tabulated potentials\nJust by making all CG atom types known to the OPLS-AA/L force field and adding the LJ-parameters, the simulation will run, but it is not a proper hybrid simulation because the two force fields do not use the same cut-offs for the nonbonded interactions, nor — in the case of OPLS-AA/L and Martini — the same functional form for the Coulomb and LJ interactions. If you would run an MD simulation with the present set-up, the density of the system is incorrect because with standard LJ potentials you would not get the proper density of Martini water.\nThe next ingredient is thus making sure that the interactions are treated properly according to the appropriate force fields. This may or may not be entirely possible within GROMACS. A powerful tool that enables multiscale simulations are the so-called “tables” that GROMACS implements. Internally, potentials and forces are tabulated within GROMACS and the forces are determined by an interpolation scheme between the tabulated values. This is hidden from the user, but users may define their own interaction tables, by which they can input any pairwise nonbonded interaction potential. The next section briefly takes you through the setting up of such tables. They are described in the GROMACS manual, Section 6.9 and a more extensive tutorial is available from the GROMACS website.\nNonbonded interaction tables can be defined for the interactions between any number of groups. Here, we need the following set, which are provided for you in the FORCEFIELDS directory:\n\ninteraction tables between the atomistic particles, which will be called AA:\n\n\nthe OPLS-AA/L force field with nonbonded cut-off of 1.0 nm, using a standard LJ potential contained in the file tables_AA_AA.xvg,\n\n\ninteraction tables between coarse-grained particles, which will be called CG:\n\n\nthe MARTINI force field with nonbonded cut-off of 1.2 nm, using a modified LJ potential, contained in the file tables_CG_CG.xvg, and\n\n\ninteraction tables between the two types (AA and CG) of particles:\n\n\nfor the example here, the potentials can be set to zero for all distances, but a file with these values must be present. We use the naming convention of GROMACS and let this interaction be the default, which means these interactions must be contained in the file table.xvg.\n\nEach tables file contains 7 columns, the first column contains the distances between the pair of particles (in nanometer), and the next six columns implement three generic functions in three pairs of potential and force. Within GROMACS, the magnitude of the interaction or force is determined by the interpolated value taken from the tables file, multiplied by the appropriate Coulomb or LJ prefactors for the pair at hand. The structure of the tables files is thus:\ndistance   f(r)       f’(r)     g(r)       g’(r)       h(r)         h’(r)\nand with heavily truncated numbers could start like this:\n0.0000E+00 0.0000E+00 0.0000E+00  0.0000E+00  0.0000E+00  0.0000E+00 0.0000E+00\n0.2000E-02 0.4999E+03 0.2499E+06 -0.1562E+17 -0.4687E+20 -0.2441E+33 0.1464E+37\n....\nFor the first interaction (modeled on the Coulomb interaction), the prefactor for the functions f(r) and f’(r) is calculated by multiplication of the two charges and dividing by the dielectric constant (epsilon_r in the mdp-file). For the second (g) and third (h) functions, (modeled on the LJ interaction), the prefactors are calculated from the standard combination rules for the C6 and C12 parameters, respectively (which may themselves be calculated from the input sigma and epsilon values), or taken directly from the [ nonbonded_params ] list in the ffnonbonded.itp file. The distance spacing of the table files can be chosen at will but needs to be uniform. The tables should extend to at least the longest cut-off used in the interactions between the different types of particles, here 1.2 nm, but it is useful to make them extend beyond this — by default, tables are extended 1 nm beyond the cut-off (mdp option table-extension).\nGROMACS provides a number of tables files for you, for example for the Lennard-Jones 6-9 potential, table6-9.xvg. They are provided in the YOUR-PATH-TO-GROMACS/share/gromacs/top directory, with an extension up to 3.0 nm. You will generally need to generate these files yourself, writing a script, a program, etc. Force-matching or related hierarchical coarse-grained force fields[3] generally use tabulated potentials derived from atomistic simulations. For the purpose of this tutorial, the tables files are provided for you in the FORCEFIELDS directory and you can simply copy them over. Technical information about the functional forms of the potentials used here is given in the appendix to a paper by Baron et al.[4]. NOTE that you also need a separate tablep.xvg file for 1-4 (pair) interactions.\n\nOPTIONAL Hands-on\nGo to the FORCEFIELDS directory. The tabulated potentials can be viewed using xmgrace, for example:\nxmgrace -nxy table_CG_CG.xvg -p xmgr.par\nReturn to the HYBRID directory.\nEND OPTIONAL\n\nA basic mdp-file for energy minimization in the hybrid scheme using user-defined potentials is shown below (and provided for you as min.mdp):\n; RUN CONTROL PARAMETERS\nintegrator               = steep\nnsteps                   = 100\n; OUTPUT CONTROL OPTIONS\n; Output frequency for coords (x), velocities (v) and forces (f)\nnstxout                 = 1\nnstvout                 = 1\nnstenergy               = 1\n; Selection of energy groups\nenergygrps              = AA CG\n; NEIGHBORSEARCHING PARAMETERS\n; Periodic boundary conditions: xyz, no, xy\npbc                     = xyz\n; nblist cut-off      \nrlist                   = 1.0\n; OPTIONS FOR ELECTROSTATICS AND VDW\n; Method for doing electrostatics\ncoulombtype             = user\nrcoulomb                = 1.2\n; Relative dielectric constant for the medium and the reaction field\nepsilon_r               = 1\n; Method for doing Van der Waals\nvdwtype                 = user\nrvdw                    = 1.2\n; Seperate tables between energy group pairs\nenergygrp_table         = AA AA CG CG\nCompared to standard settings, points to note in the hybrid set-up are:\n\ndefinition of the energy groups AA and CG; these are required because their interactions are treated differently, as specified in the energygroup table (see (iii) below):\n\nenergygrps = AA CG\ndefines two energy groups, which must be present in the index file (run.ndx) supplied by the user (see below);\n\nspecification of user-defined potentials for both coulomb and vanderwaals interactions:\n\ncoulombtype = user\n\nvdwtype = user\ntells grompp to look for table files;\n\ndesignation of which user-defined table is used to handle which interaction:\n\nenergygrp_table = AA AA CG CG\ntells grompp to look for table_AA_AA.xvg (first pair of arguments, AA AA) and table_CG_CG.xvg (second pair of arguments, CG CG) that define the interactions between the energy groups AA with AA and CG with CG, respectively. For all other interactions the data in the file table.xvg will be used.\nThe separate treatment of interactions is taken care of by defining energy groups as explained above. The energy groups must be known to the program and you must provide an index file to that end, because the energy groups needed are not standard groups known to GROMACS. You can use the conformation with added water beads to build the index file. The sequence shown below does that for you (lines preceded by &gt; are commands within make_ndx; the numbering used in this sequence presumes that the standard groups that are defined number up to 13, where 13 are the W beads, and the group Protein is group number 1):\nHands-on (make sure you are in the HYBRID directory)\n&gt; gmx make_ndx -f solvated.gro\n(the next series of commands is typed within make_ndx)\n&gt; a v*\n\n&gt; 13 | 14\n\n&gt; 1 &! 14\n\n&gt; name 15 CG\n\n&gt; name 16 AA\n\n&gt; q\n(quits make_ndx and puts you back on the Linux command line)\n&gt; mv index.ndx run.ndx\nThe next sequence copies the tables files, does a minimization and short MD run in the OPLS-AA/L-Martini hybrid set-up.\n&gt; cp ../FORCEFIELDS/table* .\n\n&gt; gmx grompp -p hybrid.top -c solvated.gro -f min.mdp -n run.ndx -maxwarn 3\n\n&gt; gmx mdrun -v\n\n&gt; vmd -e viz-min.vmd\nAt room temperature, Martini water may freeze, which may cause problems. Water may be prevented from freezing by treating around 10% of the water beads as so-called “anti-freeze water”. You may do this quite simply by editing the topology file, hybrid.top. Add a line after the water beads, specifying WF nnn, where nnn is about 10% of the number of W beads. Reduce the number of W beads accordingly. You do not need to change the coordinates file. You must make sure the particle type BP4 is specified in the force field file ffnonbonded.itp.\n&gt; [vi/gedit] hybrid.top\n\n&gt; [vi/gedit] oplsaa.ff/ffnonbonded.itp\n\n&gt; gmx grompp -p hybrid.top -c confout.gro -f md.mdp -n run.ndx -maxwarn 1\n\n&gt; gmx mdrun -v\n\n&gt; gmx trjconv -center -pbc mol -o viz.xtc &lt; convin\n\n&gt; vmd -e viz-run.vmd\nHopefully by now, the system is stable enough to run for a longer period of time and you can start production. OPLS-AA/L uses PME by default, and a possible set-up is given in pme.mdp. In my own experience, using constraints leads to problems, and the time-step is fairly limited. Still, there is a substantial reduction in the number of solvent particles, and the overall efficiency in sampling the peptide degrees of freedom is higher than with, say, the TIP3P model as solvent. As a reminder, these types of simulations are at an early stage of development and it is still very much open to debate what methodology is the best one to yield optimal reliability and efficiency. Feel free to try different integrators, settings for temperature and pressure coupling and changes to the topology. Treating the H-atoms as virtual sites and/or make them heavy may enhance the numerical stability of the system.\nTo my knowledge, the combination of OPLS-AA/L and Martini models has not been reported in the literature. Our group in Groningen has published on combining GROMOS united-atom models with Martini models.[5, 6] It is clear from that work, that the combination of different resolutions is not without artifacts, and especially the treatment of electrostatics needs careful attention. An attempt to incorporate this is discussed in Section 5.\n\n\n\n4. Fine-graining a hybrid snapshot\n\nHybrid models promise the best of two worlds: efficient sampling of complex systems and high-level detail in the region of interest. It is nevertheless likely that in practice, some trade-off between accuracy and computational speed will be made causing artifacts near the boundary(ies) of the two (or more) levels. The boundary artifacts may reflect on the region of interest and a method to put in more detail based on the less detailed model can help to study such artifacts. Alternatively, such a method should provide a good starting structure for a simulation at the more detailed level. Approaches that sample long-term processes at coarse-grained level and investigate the details of the interesting intermediate structures after fine-graining have been described already in the literature.\nHere, we will take a snapshot from the hybrid simulation of an OPLS-AA/L peptide in Martini water discussed in the previous section and put in TIP3P waters based on the positions of the CG water beads. The method also allows (partial) fine-graining purely CG snapshots, which we will do for a system of 100 tripeptides in Martini water. Several back-mapping schemes have been published. The present method, developed by Tsjerk Wassenaar, is in my view a flexible and user-friendly one.[7]\nBack-mapping or reverse coarse-graining or fine-graining a (partially) coarse-grained structure requires a correspondence between the two models; specifically for AA and CG: which atoms make up which bead. Actually, an atom can in principle contribute to several beads. The hybrid set-up described in this tutorial defines virtual sites (the positions of the CG beads) as the centers of mass of a number of atoms. In this mapping scheme, each atom appears only once, but there is no technical reason why it could not appear in the definition of several virtual sites. A back-mapping protocol needs to know at least which atoms contribute to which bead. Existing schemes then use rigid building blocks anchored on the CG bead, or place the atoms randomly near the bead in an initial guess and the structure is relaxed based on the atomistic force field, usually by switching it on gradually. The method presented here allows for an intelligent, yet flexible initial placement of the atoms based on the positions of several beads, thereby automatically generating a very reasonable orientation of the groups of atoms with respect to each other. When back-mapping the hybrid model used in this tutorial we do not need this, because only water beads are fine-grained. When partially back-mapping only the peptides in the CG model to generate a hybrid model, we do. The more general procedure is described in a separate tutorial on the Martini website.\n\nBack-mapping Martini water to TIP3P (or SPC) water\nA Martini water bead models four atomistic water molecules. The backward.py script used here to fine-grain the hybrid snapshot generates four water molecules around a water bead. By default, any particle named W in the structure file is interpreted as a water bead and the script itself generates four 3-atom water molecules (which may then be used as SPC or TIP3P waters). For this exercise, a fully fine-grained starting structure can be prepared with a little editing.\nHands-on Go to the directory BACKMAPPING.\n\nmake two copies of a hybrid snapshot\n\n&gt; cp ../HYBRID/confout.gro W.gro\n\n&gt; cp ../HYBRID/confout.gro peptide.gro\n\nremove all non-water (i.e. those that are not W or not WF) beads from the file W.gro, and edit the second line of the file to correctly state the number of atoms/beads in the file (number of waters added in section 3A minus 82). Make sure that if there is anti-freeze water, the bead is renamed from WF to W. You can do this within the editor, or after the edit as shown here. Alternatively, implement the backmapping of anti-freeze water in backward, where it is hard-coded.\n\n&gt; [vi/gedit] W.gro\n\n&gt; sed -i 's/WF/W /g' W.gro\n\napply the back-mapping script backward.py to the edited file\n\n&gt; python backward.py -f W.gro -sol -kick 0.2 -o fgW.gro\nThe flag -sol tells the script to convert W beads into (standard 3-particle water) solvent atoms (four molecules for one bead), and the flag -kick 0.2 applies random displacements to the initially placed atoms, reducing the strong orientational correlations of the initial placement.\n\nremove the header (first two lines) and all virtual sites and W and WF beads and the last line from the file peptide.gro; this file now only contains the real atoms of the peptide\n\n&gt; [vi/gedit] peptide.gro\n\ninsert the peptide atoms in the file containing the atomistic water, fgW.gro; you should add them near the top of the .gro file, just after the line stating the number of atoms in the file and before the solvent molecules. Also edit the number of atoms in the file (add 70, this is the number of atoms in the peptide).\n\n&gt; cp fgW.gro fg.gro\n\n&gt; [vi/gedit] fg.gro\n\ncopy the atomistic topology file and edit it to add a SOL entry in the [ molecules ] directive. The number of SOL molecules is 4 times the number of W beads you had in the hybrid set-up.\n\n&gt; cp ../OPLSAA/topol.top .\n\n&gt; [vi/gedit] topol.top\n\nminimize the back-mapped structure and run a short relaxation/equilibration\n\n&gt; gmx grompp -p topol.top -c fg.gro -f min.mdp -o min\n\n&gt; gmx mdrun -v -deffnm min\n\n&gt; gmx grompp -p topol.top -c min.gro -f md.mdp -o md -maxwarn 1\n\n&gt; gmx mdrun -v -deffnm md\n\n&gt; gmx trjconv -center -pbc mol -s md.tpr -f md.xtc -o viz.xtc &lt; convin\n\n&gt; vmd -e viz-run.vmd\nNow you are all set to run production at fully fine-grained level.\n\n\n\n5. An assembly of peptides including charged side chains and ions\n\nIn this part of the tutorial, we will address a more complex system in which electrostatic interaction between the FG and CG subsystems play a role. The aim of this part of the tutorial is to show how to set up hybrid systems. The best way of dealing with the interactions between CG and FG subsystems is by no means clear yet. In fact, the literature from our own group shows that proper treatment in the hybrid model is problematic. Therefore, this section should be regarded as an incentive for further research in this area.\nIn the context of high throughput screening simulations, all possible tripeptides were tested for their self assembly behavior using the Martini coarse-grained force field. Experimental testing subsequently confirmed that the type of self-assembly behavior of the peptides was predicted satisfactorily by the simulations. It may be interesting to have more detailed insight in the self assembly pricess and in the organization of the assemblies; this may be achieved by using one or more snapshots from the CG model as a basis for running either all-atom or hybrid simulations. Here, we will run a hybrid simulation of an assembly of 100 TYR-GLU-TYR (YEY) peptides in water that is the result of spontaneous aggregation with the Martini model. The spontaneous aggregation set-up is treated in the high throughput peptide screening tutorial.\nHands-on Go to the directory HYBRID-YEY-AGG. This will be the parent directory for hybrid simulations of 100 TYR-GLU-TYR (one-letter code abbreviation YEY) peptides in Martini water. The starting structure is taken from another Martini tutorial and is the result from a spontaneous self-assembly run of these peptides at the Martini level. The hybrid set-up aims at bringing in atomistic details and relaxation at the atomistic level of the aggregate formed thus far. A number of steps done for the TYR-VAL-TYR peptide need to be repeated and/or modified here. You may go through them all explicitly or use the results of some steps without doing them yourself.\n\nA. Preparing the hybrid topology\nYou may follow the same procedure here for the YEY-peptide as for the YVY peptide earlier in this tutorial, or just take the topology that is generated in that way for you.\n\nOPTIONAL Hands-on: preparing hybrid topology\nGo to the directory HYBRID-YEY-AGG/HYBRIDTOPOLOGY. Use a structure editor, e.g. pymol to generate a pdb structure of a protected Ace-YEY-NMA peptide. Save as a PDB-file under the name YEY.pdb, edit it to remove the line “TER TYR”, change the residue name NME to NAC (see Hands-on in Section 1A) and from it, generate an OPLS-AA/L model for the peptide:\npymol\n\n[vi/gedit] YEY.pdb\n\npdb2gmx -f YEY.pdb -ter -ignh\nEdit the conf.gro file to comply with the naming of terminal methyl groups in the adapted martinize-ter.py script (see Section 2A), and use the script to generate the definitions of the virtual sites:\n[vi/gedit] conf.gro\n\npython martinize-ter.py -f conf.gro -ff martini22 -multi all -nt -o martini.top -x hybrid.pdb\nCopy the AA topology and add the information for the virtual sites in Protein_A.itp to the AA topology.\ncp topol.top myhybrid.top\n\n[vi/gedit] myhybrid.top\nEND OPTIONAL\n\n\n\nB. Partial back-mapping of the fully CG snapshot\nWe need to generate atomistic coordinates from the CG coordinates for the peptides only. This may be done using the backward.py script. However, since we are using virtual sites, we need to also make sure there are virtual site coordinates present. This is achieved here by introducing special mapping files for the first and last residues. The procedure is described in more detail in an appendix, which you may want to refer to later on. Also, we will need to use the polarizable Martini water model. In the polarizable Martini model, water consists of three particles, two of which bear opposite charges which are free to move on a circle around the central uncharged bead.[8] The LJ interaction resides on the central bead and the charges within the water bead do not have an electrostatic interaction, but there is an angle potential between the fixed-length bonds from the central particle to each of the charges. The model mimics the orientational polarization of a cluster of four water molecules. Each water bead from the fully CG model (that used single-bead Martini water) needs to be converted to three beads making up the polarizable water model. The script triple_w.py does this for you (see also here).\nHands-on Go to the directory HYBRID-YEY-AGG/PARTIALBACKMAP.\n\nconvert the W beads in the fully CG snapshot provided to polarizable Martini water (each bead generates three particles). The result is written to the file TYR-GLU-TYR_eq_PW.gro:\n\n&gt; python triple_w.py TYR-GLU-TYR_eq.gro\n\nedit the CG snapshot with polarizable water beads to change residue names 1TYR to 1TYN and 3TYR to 3TYC. You can do this conveniently using two sed commands:\n\n&gt; cp TYR-GLU-TYR_eq_PW.gro tobackmap.gro\n\n&gt; sed -i 's/1TYR/1TYN/g' tobackmap.gro\n\n&gt; sed -i 's/3TYR/3TYC/g' tobackmap.gro\n\napply the back-mapping script backward.py to the edited file\n\n&gt; python backward.py -f tobackmap.gro -from martini -to oplsaa -nt -o YEY-backmapped.gro\nThe file YEY-backmapped.gro should now contain atomistic coordinates for the 100 YEY peptides and coordinates for the Na-ions. The polarizable water beads present have not been backmapped to atomistic water and also they have not been kept or copied into the backmapped result. We must add them to the backmapped file to arrive at a system containing both the atomistic peptides and the coarse-grained water and ions. To this end, extract the polarizable water beads from the file TYR-GLU-TYR_eq_PW.gro.\n&gt; awk '{if (substr($2,1,1) == \"W\") print $0 }' &lt; TYR-GLU-TYR_eq_PW.gro &gt; W.gro\n\nedit the file YEY-backmapped.gro. Add the polarizable water beads below the Na-ions, and make sure the number of particles in the file is correctly stated on the second line of the file.\n\n&gt; [vi/gedit] YEY-backmapped.gro\nFor comparison, the file PartialBackmap.gro is provided for you.\n\n\nC. Setting up the hybrid simulation\nThe treatment of the interactions is different from the example of the single peptide in water described in section 3B. In this case, electrostatic interactions between atomistic and coarse-grained system play a role. They are dealt with by using a different set of table-files. This is explained in more detail in an appendix, which you should consult once the simulation is up and running.\nHands-on Go to the directory HYBRID.\n\nget the partially back-mapped CG structure\n\n&gt; cp ../PARTIALBACKMAP/YEY-backmapped.gro system.gro\n\ncopy and edit the file hybrid.top (you can use your own if you prepared myhybrid.top in the OPTIONAL part earlier on) to reflect the number and order of molecules (100 Protein molecules, 100 NA+ beads and 2,936 polarizable water molecules (PW). Put in #include statements to the Martini polarizable water (../../SOLVENT/PolMartiniWater.itp) and ion topologies (../../SOLVENT/MartiniSodium.itp).\n\n&gt; cp ../HYBRIDTOPOLOGY/hybrid.top .\n\n&gt; [vi/gedit] hybrid.top\n\nmake sure that all the CG and virtual site types and their interactions are defined properly in the force field files and that the user-defined potentials (tables) are present\n\n&gt; cp -R ../../FORCEFIELDS/hybrid-charged.ff oplsaa.ff\n\n&gt; cp ../../FORCEFIELDS/table* .\n\n&gt; cp ../../FORCEFIELDS/gro-table_AA_AA.xvg table_AA_AA.xvg\n\n&gt; cp ../../FORCEFIELDS/gro-table_AA_CG.xvg table_AA_CG.xvg\n\n&gt; cp ../../FORCEFIELDS/mar-table_CG_CG.xvg table_CG_CG.xvg\n\n&gt; cp ../../FORCEFIELDS/mar-table_CG_VS.xvg table_CG_VS.xvg\n\nminimize the hybrid system using an improper hybrid forcefield (have a look at the settings for the coulomb and vdw interactions). This will hopefully easily heal the sometimes rather haphazardly placed atoms; you may try to improve on this by writing a better mapping file, see the backmapping tutorial. (Note that the virtual sites are put on the centers of mass before anything else is done by GROMACS itself, therefore their placement in the starting structure is not important as long as they are in the file!) Here, we use the soft-core potentials via the free-energy code to deal with atoms that are placed very close to each other and cause problems when all interactions are immediately switched on. Using the free-energy code slows down the calculations considerably, but we usually need only a few thousand steps to get a decent structure.\n\n&gt; gmx grompp -p hybrid.top -c system.gro -f em-sc.mdp -o em-sc.tpr -maxwarn 2\n\n&gt; gmx mdrun -deffnm em-sc -v\n\n&gt; gmx grompp -p hybrid.top -c em-sc.gro -f sd-sc.mdp -o sd-sc.tpr -maxwarn 2\n\n&gt; gmx mdrun -deffnm sd-sc -v\n\nmake the index file including the definitions of AA, CG, and virtual site (VS) subsystems for the chosen treatment of the interactions (see Appendix D). Here, we assume that the standard groups run up to and including number 14 (PW is the final group, and the ions are group 13)\n\n&gt; gmx make_ndx -f sd-sc.gro\n(the next series of commands is typed within make_ndx)\n&gt; a v*\n\n&gt; name 15 VS\n\n&gt; 1 & !15\n\n&gt; name 16 AA\n\n&gt; 0 & !15 & !16\n\n&gt; name 17 CG\n\n&gt; q\n(you have now quit the make_ndx tool and your index file is saved as index.ndx)\n&gt; mv index.ndx run.ndx\n\nminimize again, now using the proper hybrid force field (have a look at the settings for the coulomb and vdw interactions and what table files are expected). If you are lucky, the following sequence will work. If not, you need to look at the details and try to find out what may cause problems. This may require quite a bit of grit, patience, and determination…\n\n&gt; gmx grompp -p hybrid.top -n run.ndx -c sd-sc.gro -f min.mdp -maxwarn 1\n\n&gt; gmx mdrun -v -o min.gro\n\n&gt; gmx grompp -p hybrid.top -n run.ndx -c min.gro -f sd1.mdp -maxwarn 1\n\n&gt; gmx mdrun -v -o sd1.gro\n\n&gt; gmx grompp -p hybrid.top -n run.ndx -c sd1.gro -f sd2.mdp -maxwarn 1\n\n&gt; gmx mdrun -v -o sd2.gro\n\n&gt; gmx grompp -p hybrid.top -n run.ndx -c sd2.gro -f md1.mdp -maxwarn 1\n\n&gt; gmx mdrun -v -o md1.gro\nNote that it is inconvenient here to use the -deffnm option on mdrun because the table files should then have names corresponding to the name of the -deffnm option. If you want to keep the trajectories under specific names, move traj.xtc after each step to your name of choice.\n\n\n\nAppendix: Special mapping files\n\nIn sequential multiscaling, resolution transformations are made between different levels of description: an atomistic snapshot is coarse-grained to run a CG model for computational efficiency, and when an interesting event or structure occurs during the CG simulation, the atomstic details are put back in to set up a more expensive simulation studying the details. A powerful tool to toggle between resolutions is provided by the backward procedure, implemented in python script backward.py. The package provides a set of mapping files, defining the correspondence for amino acids and selected other molecules (lipids mostly) between the Martini model and common united atom (gromos) and all atom (charmm, amber) models.\nIn the hybrid models described in this tutorial, peptides are described as partially interacting through atomistic force field interactions and partly through Martini-type interactions. This is achieved by adding virtual sites to the topology of the peptide. The virtual sites interact only with the coarse-grained environment. If we have a fully CG snapshot, we need to put in the atomistic details of the peptide molecule(s), INCLUDING the virtual sites. The standard mapping files do not provide this information. Here, we describe how to add the virtual sites in a simple manner. A second aspect in this tutorial is the fact that we use neutral (methylated) terminal residues ACE and NAC. There are no mapping files for these residues either. Both aspects can be dealt with simultaneously.\nIn the chosen hybrid set-up, all virtual sites are added after all atoms of the peptide. If we make a mapping file for the terminal resdue (here a Tyrosine), we can simply define as many extra atoms as we need virtual sites, and add them at the end of the normal (standard) atoms. In the mapping assignment, we can assign them all to the back-bone bead. They will all be placed near this bead in the backmapped structure but this should be no problem at all. The virtual sites are put on the centers of mass by GROMACS itself before anything else is done, e.g. energy minimization or the first dynamics step. All that is required is then to copy the mapping file for an existing amino acid and give a unique residue name to the terminal residue. Here, we chose TYC (for Tyrosine, C-terminal). In this new mapping file, we can also easily add atoms to account for the neutral terminal we created, here the C=O(Me) group. In this case, the Martini model did not use an extra bead for the extra atoms, but assumes these part of the final backbone bead (BB). Thus, before the extra atoms for the virtual sites, modify and add atoms for the methylated terminus.\nHands-on\nGo to the directory HYBRID-YEY-AGG/PARTIALBACKMAP/Mapping. Copy the standard file for a tyrosine residue from martini to CHARMM to a new file that is to implement the special C-terminus. If you do not wish to override the file provided, choose a different name. Note that CHARMM and OPLS/AA use the same names but not the same numbering (sequence) of the atoms in amino acid residues.\n&gt; cp tyr.charmm36.map tyc.oplsaa.map\n\n&gt; [vi/gedit] tyc.oplsaa.map\nIn the editor, change the residue name from TYR to TYC. Change the entry in the [ mapping] directive to oplsaa. Change the order of the atoms according to the definition in the HYBRID-YEY-AGG/HYBRIDTOPOLOGY/hybrid.top file. At the end of the atom list, add extra atoms for the terminal methyl group (CH3, HH31, HH32, and HH33) first, then add atom definitions for all virtual sites of the entire peptide (think of suitable names yourself, or take them from the hybrid.top file). Assign all the new atoms and virtual sites to the BB bead in the mapping. You should have a total of 37 atoms for this residue.\nThe first residue, in our case also a tyrosine, is also extended with a methylated terminal end. This means, we now have to place atoms at the start of the amino acid. This then requires a renumbering of the other atoms. Copy the tyrosine residue mapping file once more, make edits to change the name of the residue to TYN, change the force field name, and change the order of the atoms in the aromatic ring and add the required atoms at the beginning of the [ atoms ] directive (CH3, HH31, HH32, HH33, and C1). The remaining (original) atoms must now be renumbered and you should end up with 27 atoms.\n&gt; cp tyr.charmm36.map tyn.oplsaa.map\n\n&gt; [vi/gedit] tyn.oplsaa.map\nFinally, you will need a copy of the glutamate residue mapping file. Copy the one from charmm and change the name of the force field. The charmm mapping file has the acid group protonated. Here we want a charged side group. Delete the H-atom on the acid group and renumber the remaining atoms.\n&gt; cp glu.charmm36.map glu.oplsaa.map\n\n&gt; [vi/gedit] glu.oplsaa.map\nIf you have downloaded the backward package, you will also need to adapt the backward.py script. The downloaded version does not accept mapping to OPLS/AA, and it does not recognize the methylated termini. Compare the two scripts to see how these changes were implemented.\n\n\nAppendix: Setting up hybrid electrostatics\n\nThe treatment of electrostatics in hybrid simulations is unlikely to be straightforward, especially if two force fields are combined that are not related to each other in a hierarchical scheme. The two types of force fields may not use the same functional form for the electrostatics. In atomistic models electrostatic potentials are usually based on unscreened Coulomb interactions, either cut off at some distance or treated by full Ewald-type electrostatics in which all charges interact with each other. The standard choice for OPLS-AA/L is Particle Mesh Ewald (PME), a numerical variant of Ewald electrostatics. Coarse-grained models may have no electrostatic term at all, but if they do, the electrostatic potential is usually of some screened form to account for the absence of orientational polarization by dipolar species. In the standard Martini model, the beads modeling water as a solvent do not bear any charge. Formal charges are given to the two beads making up the Zwitterionic lipid head groups, and to the bead(s) representing charged amino-acid side chains. In atomistic models the charge-charge interactions are screened by the explicit water reorientation which is absent in the CG model. Therefore, the Martini model uses a dielectric constant of 15 to reduce the interaction between the charged species. Also, the Martini model does not use Ewald-type electrostatics; instead the potential smoothly goes to zero at the cut-off distance. It should be noted that the standard Martini model for lipids does run stably under PME and that lipid bilayer properties are similar to those obtained with the standard screened and smoothed Coulomb potential. Thus, combining models may be possible if the electrostatics treatments of the two models can be brought to the same level in a practical sense, possibly with some adjustments of parameters. A published study of combining the GROMOS 53A6 force field with Martini[6] shows that it is not trivial to achieve a working model but at least a working starting model can be constructed.\nThis tutorial contains a possible way in which to combine the OPLS-AA/L force field with the polarizable water Martini model and Martini ions using a mixed model for electrostatics. This appendix explains in more detail how it is set up. In the polarizable Martini model, water consists of three particles, two of which bear opposite charges which are free to move on a circle around the central uncharged bead.[8] The LJ interaction resides on the central bead and the charges within the water bead do not have an electrostatic interaction, but there is an angle potential between the fixed-length bonds from the central particle to each of the charges. The model mimics the orientational polarization of a cluster of four water molecules. The model uses the same form of the Coulomb potential (shifted. i.e. with a smoothed cut-off at 1.2 nm, and no electrostatic interaction beyond that point), but with a relative dielectric constant of 2.5 instead of 15. In contrast, the interaction between partial charges of the atomistic OPLS-AA/L model use a relative dielectric constant of 1 because screening is explicit by TIP3P water molecules. In addition PME electrostatics is used in the atomistic model.\nIn the implementation used in this tutorial, PME electrostatics is not used (except in the model without charged peptides). Instead, the electrostatic interactions between the AA particles are treated with the Coulombic reaction field potential that is the standard in the GROMOS force fields. Here, we chose a cut-off of that potential of 1.2 nm (the same as for the Martini model; 1.4 nm is the standard cut-off for the GROMOS force fields), and a value of the dielectric constant of the surroundings, epsilon_rf in Gromacs settings files, of 78. There could be several possible other choices made for these settings. The point here is to show how you can set up these different choices. It is by no means claimed that the set-up given here is optimal! As far as I am aware, no satisfactory set-up has been published yet, so finding the proper way to treat this type of hybrid model is a nice challenge for everyone.\nAll interactions are implemented using tabulated user-specified potentials. You will need to do your book-keeping carefully. The system is divided into three groups:\n\nAA: atomistic particles, these are all atoms of the 100 peptide molecules that would also be there in a purely atomistic simulation\nVS: virtual sites, these are the virtual sites on the 100 peptide molecules that were added to take care of the interaction with the coarse-grained solvent and ions\nCG: the coarse-grained beads, the polarizable water beads and the ions\n\nYou first need to make sure all possible atom, CG bead and virtual site particle types are known. The file FORCEFIELDS/hybrid-charged.ff/ffnonbonded.itp has the minimum set implemented for YEY in polarizable water with Na-ions only (D, POL, Qd, vQa, vN0, vP5, vSC4, vSP1, and vAC2).\nCompared to the simpler implementation of Section 3, we now distinguish between virtual sites and coarse-grained beads; they were a single group in the simpler implementation. Due to having three interaction groups we have more table files. Here is an overview of which interactions potentials act between the groups:\n\nAA-AA: table_AA_AA.xvg when building and using the topol.tpr, gro-table_AA_AA.xvg in the FORCEFIELDS directory. The table contains the normal cut-off Lennard-Jones potentials that are used in the OPLS force field. The cut-off is 1.0 nm. The Coulomb potential is the GROMOS reaction field potential (due to Tironi et al), with epsilon_r=1 and epsilon_rf=78, and cut-off rc=1.2 nm. This potential smoothly goes to zero at 1.2 nm and approximately mimics electrostatic screening due to a homogenous surrounding dielectric medium. Note that this electrostatics treatment is different from standard OPLS, where lattice-sum electrostatics is used (usually PME).\nAA-CG: table_AA_CG.xvg when building and using the topol.tpr, gro-table_AA_CG.xvg in the FORCEFIELDS directory. The table contains the normal cut-off Lennard-Jones potentials that are used in the OPLS force field. The cut-off is 1.2 nm. It should be noted, however, that in practice, the vdw interaction between atoms and beads is repulsive only and very short-ranged. The purpose of the short-range repulsion is to prevent oppositely charged AA and CG particles attracting each other to infinitely short (zero) distance. This short-range repulsive potential is achieved by a special settings of the non-bonded interaction parameters epsilon and sigma in the ffnonbonded.itp file. It has negative sigma specified. In this manner, the C6 parameter is zero and there is a non-zero C12 parameter, see Gromacs manual section 5.3.2. An example of an entry in the [ nonbond_params ] directive is shown below.\n\n[ nonbond_params ]\n; type1 type2  flag  sigma     epsilon\nopls_135   Qd   1     -1.00e-01 0.25e+05 ; C6 = 0, C12 = 10E-07\nThe Coulombic part of the potential is the GROMOS reaction field potential (due to Tironi et al), i.e. the same functional form as used for the AA-AA interactions, with epsilon_rf=78, and cut-off rc=1.2 nm, but with er=1.45 instead of 1. Wassenaar et al.[6] showed that this was a reasonable choice for a Martini-GROMOS hybrid model in the sense that charged pairs of amino acids show a PMF as a function of their distance that is similar to the all-atom PMF. It is one of the areas, however, in which progress needs to be made to get to a better model.\n\nAA-VS: table.xvg when building and using the topol.tpr, table.xvg in the FORCEFIELDS directory. The standard because no this pair is not listed in the energygrp_table keyword in the settings (.mdp) file. All potentials here are zero everywhere. Computation efficiency is gained, however, if in the settings file the keyword energygrp-excl specifies this pair as excluded.\nCG-CG: table_CG_CG.xvg when building and using the topol.tpr, mar-table_CG_CG.xvg in the FORCEFIELDS directory. The table contains the shifted coulomb and shifted Lennard-Jones potentials of the Martini model with standard settings, i.e. cut-off 1.2 nm for both and a switching at 0.9 nm for the LJ potential, and epsilon_r=2.5 because we use the polarizable water model.\nCG-VS: table_CG-VS when building and using the topol.tpr, gro-table_CG_VS.xvg in the FORCEFIELDS directory. The table contains the shifted Lennard-Jones potentials of the Martini model with standard settings, i.e. cut-off 1.2 nm and a switching at 0.9 nm for the LJ potential. The Coulomb potential is everywhere zero because electrostatic interactions between AA and CG particles are calculated. Note that an alternative choice would be to treat the electrostatic interactions between peptides and surroundings at the CG level. In that case, the AA-CG electrostatic potential shoud be all zero (in other words, exclude all AA-CG interactions) and the CG-VS electrostatic potential should be the one for the Martini P version, as for CG-CG.\nVS-VS: table.xvg when building and using the topol.tpr, table.xvg in the FORCEFIELDS directory. The standard because no this pair is not listed in the energygrp_table keyword in the settings (.mdp) file. All potentials here are zero everywhere. Computation efficiency is gained, however, if in the settings file the keyword energygrp-excl specifies this pair as excluded.\n\nNOTE that the different dielectric constants (1 for AA-AA, 1.45 for AA-CG, 2.5 for CG-CG) are implemented in the tabulated potentials. Therefore, the value of the epsilon_r setting is 1. There is no other way to differentiate amongst the screening of the electrostatic interactions.\nThe tabulated potentials must be prepared by you. In the FORCEFIELDS directory, you can find the FORTRAN programs used to prepare the tables files of this tutorial. You can compile them if you need to (use gfortran, but the binaries might work anyway), or modify them to implement other potentials. The input to the programs are also given. I trust that in future, multi-purpose, well-documented python tools will become available.\nThe tabulated potentials can be viewed using xmgrace, for example, when you are in the FORCEFIELDS directory:\n&gt; xmgrace -nxy mar-table_CG_CG.xvg -p xmgr.par\n\n\nTools and scripts used in this tutorial\n\n\ngromacs http://www.gromacs.org/\n\n\n\nReferences\n\n[1] G.A. Kaminsky, R.A. Friesner, J. Tirado-Rives and W.L. Jorgensen, Evaluation and Reparametrization of the OPLS-AA Force Field for Proteins via Comparison with Accurate Quantum Chemical Calculations on Peptides, J. Phys. Chem. B 105, 6474-6487 (2001).\n[2] S.J. Marrink, H.J. Risselada, S. Yefimov, D.P. Tieleman and A.H. de Vries, The MARTINI force field: coarse grained model for biomolecular simulations, J. Phys. Chem. B 111, 7812-7824 (2007).\n[3] G.S. Ayton, W.G. Noid and G.A. Voth, Multiscale modeling of biomolecular systems: in serial and in parallel, Curr. Opin. Struct. Biol. 17, 192-198 (2007).\n[4] R. Baron, D. Trzesniak, A.H. de Vries, A. Elsener, S.J. Marrink and W.F. van Gunsteren, Comparison of thermodynamic properties of coarse-grained and atomic-level simulation models, ChemPhysChem 8, 452-461 (2007).\n[5] A.J. Rzepiela, M. Louhivuori, C. Peter and S.J. Marrink, Hybrid simulations: combining atomistic and coarse-grained force fields using virtual sites, Phys. Chem. Chem. Phys. 13, 10437-10448 (2011).\n[6] T.A. Wassenaar, H.I. Ingolfsson, M. Prieß, S.J. Marrink and L.V. Schafer, Mixing MARTINI: Electrostatic Coupling in Hybrid Atomistic−Coarse-Grained Biomolecular Simulations, J. Phys. Chem. B 117, 3516-3530 (2013).\n[7] T.A. Wassenaar, K. Pluhackova, R.A. Bockmann, S.J. Marrink and D.P. Tieleman, Going Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models, J. Chem. Theory Comput. 10, 676-690 (2014).\n[8] S.O. Yesylevskyy, L.V. Schafer, D. Sengupta and S.J. Marrink, Polarizable Water Model for the Coarse-Grained MARTINI Force Field, PLOS Comput. Biol. 6, e1000810 (2010)."
  },
  {
    "objectID": "docs/tutorials/Legacy/index.html",
    "href": "docs/tutorials/Legacy/index.html",
    "title": "Legacy Material",
    "section": "",
    "text": "Note: The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nMartini 3 Legacy Tutorials\n\nThese hands-on tutorials, are deprecated versions of the Martini 3 tutorials.\n\n\n1: Proteins - Part I\n\n\n\n\nMartini 3 Open Beta Legacy Tutorials\n\nThese hands-on tutorials, are based on the Martini 3 open-beta version (v.3.0.b.3.2).\n\n\n1: Small molecule binding\n2: Parameterizing a new small molecule\n\n\n\n\nMartini 2 Legacy Tutorials\n\nThese hands-on tutorials, are based on the Martini 2 family of force fields.\n\n\n1: Lipids with the lipidome\n2: Polymers\n3: Hybrid model using virtual sites\n4: Parameterizing a new small molecule\n5: High throughput peptide self assembly\n6: Proteins\n7: RNA\n8: DNA\n9: Visualizing Martini with VMD\n10: Others\n11: Free energy techniques\n12: Metadynamics\n13: Physiorption of alkenes on graphite\n\n\n\n\nMARTINI WORKSHOP 2017\n\nGroningen, The Netherlands\n\n\n\nMonday, August 21\n\nIntroduction to the Martini model, Siewert Jan Marrink slides\nLipid biophysics with the Martini model, Helgi Ingólfsson slides\n\n\n\nTuesday, August 22\n\nMartini model for proteins, Alex de Vries slides\nPeptide aggregation, Pim Frederix slides\nPhotosystem II, Floris van Eerden slides\n\n\n\nWednesday, August 23\n\nTOOLS: martinize, martinate, insane, backward, daft, Tsjerk Wassenaar slides\nAdvanced parameterization of Martini, Manuel Nuno Melo slides\nMultiscaling with Martini, Manuel Nuno Melo slides\n\n\n\nThursday, August 24\n\nThe Martini model for DNA and RNA, Ignacio Faustino Plo slides\nBlends for organic photovoltaics, Riccardo Alessandri slides\nThe future of Martini, Paulo Telles de Souza slides\n\n\n\n\n\nMARTINI WORKSHOP 2015\n\nGroningen, The Netherlands\n\n\n\nMonday, August 24\n\nIntroduction to coarse-graining, Alex de Vries slides\nIntroduction to the Martini model, Siewert Jan Marrink slides\n\n\n\nTuesday, August 25\n\nLipid biophysics with the Martini model, Helgi Ingólfsson slides\nMartini model for proteins, Alex de Vries slides\n\n\n\nWednesday, August 26\n\nTOOLS: martinize, martinate, insane, backward, daft, Tsjerk Wassenaar slides\nMartini model for saccharides (includes also other polymers and dna), Siewert Jan Marrink slides\n\n\n\nThursday, August 27\n\nAdvanced parameterization of Martini, Manuel Nuno Melo slides\nMultiscaling with Martini, Manuel Nuno Melo slides",
    "crumbs": [
      "Home",
      "🕸️ Legacy Material"
    ]
  },
  {
    "objectID": "docs/tutorials/Legacy/martini3/parameterizing_small_molecule.html",
    "href": "docs/tutorials/Legacy/martini3/parameterizing_small_molecule.html",
    "title": "Parametrizing a new small molecule",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\nIn case of issues, please contact alessandri@uchicago.edu This tutorial is available for download here. Required files and worked examples can be downloaded here, and files for Bartender can be obtained here.\n\n\nTable of contents\n\nIntroduction\n1) Generate atomistic reference data\n2) Atom-to-bead mapping\n3) Generate the CG mapped trajectory from the atomistic simulation\n4) Create the initial CG itp and tpr files\n5) Generate target CG distributions from the CG mapped trajectory\n6) Create the CG simulation\n7) Optimize CG bonded parameters\n8) Comparison to experimental results, further refinements, and final considerations\n9) Using Bartender to obtain bonded parameters for a small molecule\nReferences and notes\n\n\nIntroduction\n\nIn this tutorial, we will discuss how to build a Martini 3 topology for a new small molecule. The aim is to have a pragmatic description of the Martini 3 coarse-graining (CGing) principles described in Refs. [1] and [2], which follow the main ideas outlined in the seminal Martini 2 work [3]. Among other things, you may want to parametrize a small molecule with Martini 3 in order to perform protein-ligand binding simulations [4] or perhaps test the solubility of a molecular dopant in different environments [5].\nThis tutorial is based on the analogous Martini 2 tutorial but takes into account some important aspects which changed in Martini 3. We will use as an example the molecule 1-ethylnaphthalene, and make use of Gromacs versions 2019.x or later.\n\n\n\n\n\n1) Generate atomistic reference data\n\nWe will need atomistic reference data to extract bonded parameters for the CG model. Note that we will need all the hydrogen atoms to extract bond lengths further down this tutorial, so make sure that your atomistic structure contains all the hydrogens.\nHere, we will use the LigParGen server [6] as a way to obtain an atomistic (or all-atom, AA) structure and molecule topology based on the OPLS-AA force field, but of course feel free to use your favorite atomistic force field. Other web-based services such as the automated topology builder (ATB) or CHARMM-GUI can also be used to obtain reference topologies based on other AA force fields. Another important option is to look in the literature for atomistic studies of the molecule you want to parametrize: if you are lucky, somebody might have already published a validated atomistic force field for the molecule, which you can then use to create reference atomistic simulations.\nStart by feeding the SMILES string for 1-ethylnaphthalene (namely, CCc1cccc2ccccc21) to the LigParGen server, and pick the “1.14*CM1A-LBCC (Neutral molecules)” charge model (nothing special about this choice of charge model). After submitting the molecule, the server will generate input parameters for several molecular dynamics (MD) packages. Download the structure file (PDB) as well as the OPLS-AA topology in the GROMACS format (TOP) and rename them ENAP_LigParGen.pdb and ENAP_LigParGen.itp, respectively. You can now unzip the zip archive provided:\nunzip files-m3-newsm.zip\nwhich contains a folder called ENAP-in-water that contains some template folders and useful scripts. We will assume that you will be carrying out the tutorial using this folder structure and scripts. Note that the archive contains also a folder called ENAP-worked where you will find a worked version of the tutorial (trajectories not included). This might be useful to use as reference to compare your files (e.g., to compare the ENAP_LigParGen.itp you obtained with the one you find in ENAP-worked/1_AA-reference).\nWe can now move to the first subfolder, 1_AA-reference, and copy over the files you just obtained from the LigParGen server:\ncd     ENAP-in-water/1_AA-reference\n#[move here the obtained ENAP_LigParGen.pdb and ENAP_LigParGen.itp files]\nInput files obtained from LigParGen may come with unknown residue names. Before launching the AA MD simulation, we will substitute the UNK residue name by ENAP. To do so, open the ENAP_LigParGen.pdb with your text editor of choice and replace the UNK entries on the 4th column of the ATOM records section. This column defines the residue name on a PDB file. Now open the ENAP_LigParGen.itp file and replace the UNK entries under the [ moleculetype ] directive and on the 4th column of the [ atoms ] directive. These define the residue name in a GROMACS topology file. (A lengthier discussion on GROMACS topology files will be given in section 4)). Alternatively, the following command - that relies on the Unix utility sed - will replace any UNK occurrence with ENAP (note the extra space after UNK which is important to keep the formatting of the pdb file!):\nsed -i 's/UNK /ENAP/' ENAP_LigParGen.pdb\nsed -i 's/UNK /ENAP/' ENAP_LigParGen.itp\nNow launch the AA MD simulation:\nbash prepare_1mol_AA_system.sh  ENAP_LigParGen.pdb  spc216.gro  SOL  3\nThe last command will run an energy-minimization, followed by an NPT equilibration of 250 ps, and by an MD run of 10 ns (inspect the script and the various mdp files to know more). Note that 10 ns is a rather short simulation time, selected for speeding up the current tutorial. You should rather use at least 50 ns, or an even longer running time in case of more complex molecules (you can try to experiment with the simulation time yourself!). In this case, the solvent used is water; however, the script can be adapted to run with any other solvent, provided that you input also an equilibrated solvent box. You should choose a solvent that represents the environment where the molecule will spend most of its time.\n\n\n2) Atom-to-bead mapping\n\nMapping, i.e., splitting the molecule in building blocks to be described by CG beads, is the heart of coarse-graining and relies on experience, chemical knowledge, and trial-and-error. Here are some guidelines you should follow when mapping a molecule to a Martini 3 model:\n\nonly non-hydrogen atoms are considered to define the mapping;\navoid dividing specific chemical groups (e.g., amide or carboxylate) between two beads;\nrespect the symmetry of the molecule; it is moreover desirable to retain as much as possible the volume and shape of the underlying AA structure;\ndefault option for 4-to-1, 3-to-1 and 2-to-1 mappings are regular (R), small (S), and tiny (T) beads; they are the default option for linear fragments, e.g., the two 4-to-1 segments in octane;\nR-beads are the best option in terms of computational performance, with the bead size reasonably good to represent 4-to-1 linear molecules;\nT-beads are especially suited to represent the flatness of aromatic rings;\nS-beads usually better mimic the “bulkier” shape of aliphatic rings;\nthe number of beads should be optimized such that the maximum mismatch in mapping is ±1 non-hydrogen atom per 10 non-hydrogen atoms of the atomistic structure;\nfully branched fragments should usually use beads of smaller size (the rational being that the central atom of a branched group is buried, that is, it is not exposed to the environment, reducing its influence on the interactions); for example, a neopentane group contains 5 non-hydrogen atoms but, as it is fully branched, you can safely model it as a regular bead.\n\nIn this example, first of all it is important to realize that, within Martini 3, conjugated, atom-thick structures are best described by Tiny (T) beads. This ensures packing-related properties closely matching atomistic data [1]-[2]. In this case, the 10 carbon atoms of the naphthalene moiety are therefore mapped to 5 T-beads, as shown in the figure below:\n\n\n\nWhich leaves us with the ethyl group. A T-bead is again a good choice because the T-bead size is suited for describing 2 non-hydrogen atoms. Note that, the beads have also been numbered in the figure for further reference.\nA good idea to settle on a mapping is to draw your molecule a few times on a piece of paper, come up with several mappings, compare them, and choose the one that best fulfills the guidelines outlined above.\n\n\n3) Generate the CG mapped trajectory from the atomistic simulation\n\nUsing the mapping you just created, you will now transform the simulation you did at 1) to CG resolution. One way to do this is by creating a Gromacs (AA-to-CG) index file where every index group stands for a bead and contains the mapped atom numbers.\nInstead of creating an index file by hand from scratch, an initial AA-to-CG index file can be obtained with the CGbuilder tool [7]. The intuitive GUI allows to map a molecule on the virtual environment almost as one does on paper. Just load the atomistic pdb/gro file of the molecule, click on the atoms you want to be part of the first bead, click again to remove them if you change your mind, create the next bead by clicking on the “new bead” button, and so on; finally, download the files once done. In fact, the tool allows also to obtain an initial CG configuration (a .gro file) for the beads and a CG-to-AA mapping file (a .map file) based on the chosen mapping. Doesn’t this sound better than traditional paper?! Current caveats of CGbuilder include the fact that atoms cannot contribute with a weight different from 1 to a certain bead, something which is sometimes needed when mapping atomistic structures to Martini. In such cases, the index and/or mapping files should be subsequently refined by hand.\nBefore you get to it: an important change with respect to Martini 2.x is the fact that now hydrogen atoms are taken into account to determine the relative position of the beads when mapping an atomistic structure to CG resolution [[1]](https://doi.org/10.1038/s41592-021-01098-3-[2] - more on this later in this Section. This should be reflected in your AA-to-CG index file, that is, your index should also contain the hydrogens (in CGbuilder terms, click also on the hydrogens!). The general rule is to map a certain hydrogen atom to the bead which contains the non-hydrogen atom it is attached to.\nYou can now try to map the ENAP_LigParGen.pdb via CGbuilder. Once done, download the files that CGbuilder creates - ndx, map, and gro - to the 2_atom-to-bead-mapping folder:\ncd ../2_atom-to-bead-mapping/\n#[download cgbuilder.ndx, cgbuilder.map, and cgbuilder.gro and move them to the current folder, i.e., '2_atom-to-bead-mapping']\nand compare the files obtained to the ones provided in ENAP-worked/2_atom-to-bead-mapping where, besides the files we just explained, you can also find a screenshot (ENAP_cgbuilder.png) of the mapping as done with the CGbuilder tool. Note also that the files provided assume the beads to be ordered in the same way as shown in the Figure of Section 2); it is hence recommended to use the same order to greatly facilitate comparisons.\nAfter having populated your own ENAP-in-water/2_atom-to-bead-mapping subfolder with - at least - the ndx file (let’s call it ENAP_oplsaaTOcg_cgbuilder.ndx), move to the folder 3_mapped and copy over the index (we just rename it to mapping.ndx), that is:\ncd  ../3_mapped\ncp  ../2_atom-to-bead-mapping/ENAP_oplsaaTOcg_cgbuilder.ndx  mapping.ndx\nNow, we took into account the hydrogens because center of geometry (COG)-based mapping of AA structures, done taking into account the hydrogen atoms, constitutes the standard procedure for obtaining bonded parameters in Martini 3 [1]-[2]. Hence, we need to consider the hydrogens when mapping the AA structure to CG resolution. Because of a gmx traj unexpected behavior (a potential bug, see note [8]), if we want to stick to gmx traj (like in the good old days; alternatives include, e.g., using the MDAnalysis Python library), we need a little hack before being able to run gmx traj. Namely, we need to first create an AA tpr file with the atoms of the atomistic structure all having the same mass. To do this, still from the 3_mapped folder, create a new itp with the modified masses:\ncp  ../1_AA-reference/ENAP_LigParGen.itp  ENAP_LigParGen_COG.itp\nOpen ENAP_LigParGen_COG.itp with your text editor of choice and change the values on the 8th column under the [ atoms ] directive to an equal value (of, for example, 1.0). This column defines the atom mass in a GROMACS topology file. Now prepare a new top file which includes it:\ncp  ../1_AA-reference/system.top                      system_COG.top\nsed -i 's/ENAP_LigParGen.itp/ENAP_LigParGen_COG.itp/' system_COG.top\nYou can now run the script:\nbash 3_map_trajectory_COG.sh\nwhich will:\n\nfirst make sure that the AA trajectory is whole, i.e., your molecule of interest is not split by the periodic boundary conditions in one or more frames in the trajectory file (the gmx trjconv -pbc whole … command);\nsubsequently create a AA-COG.tpr, which will be used for the COG mapping in the following step (the gmx grompp -p … command);\nfinally, map the AA trajectory to CG resolution: the gmx traj -f… command contained in 3_map_trajectory_COG.sh will do COG-mapping because it uses the AA-COG.tpr.\n\n\n\n4) Create the initial CG itp and tpr files\n\nGROMACS itp files are used to define components of a topology as a separate file. In this case we will create one to define the topology for our molecule of interest, that is, define the atoms (that, when talking about CG molecules, are usually called beads), atom types, and properties that make up the molecule, as well as the bonded parameters that define how the molecule is held together.\nThe creation of the CG itp file has to be done by hand, although some copy-pasting from existing itp files might help in getting the format right. A thorough guide on the GROMACS specification for molecular topologies can be found in the GROMACS reference manual, however, this tutorial will guide you through the basics.\nThe first entry in the itp is the [ moleculetype ], one line containing the molecule name and the number of nonbonded interaction exclusions. For Martini topologies, the standard number of exclusions is 1, which means that nonbonded interactions between particles directly connected are excluded. For our example this would be:\n[ moleculetype ]\n; molname    nrexcl\n  ENAP         1\nThe second entry in the itp file is [ atoms ], where each of the particles that make up the molecule are defined. One line entry per particle is defined, containing the beadnumber, beadtype, residuenumber, residuename, beadname, chargegroup, charge, and mass. For each bead we can freely define a beadname. The residue number and residue name will be the same for all beads in small molecules, such as in this example.\nIn Martini, we must also assign a bead type for each of the beads. This assignment follows the “Martini 3 Bible” (from Refs. [1] and [2]), where initial bead types are assigned based on the underlying chemical building blocks. You can find the “Martini 3 Bible” in the form of a table at this link. In this example, bead number 1 represents the ethyl group substituent; according to the “Martini 3 Bible” ethyl groups are represented by TC3 beads. Check the table yourself to see which bead types to use to describe the remaining beads. For a lengthier discussion of bead choices, see the final section of this tutorial.\nEach bead will also have its own charge, which in this example will be 0 for all beads. Mass is usually not specified in Martini; in this way, default masses of 72, 54, and 36 a.m.u. are used for R-, S-, and T-beads, respectively. However, when defined the mass of the beads is typically the sum of the mass of the underlying atoms.\nFor our example, the atom entry for our first bead would be:\n[ atoms ]\n; nr type resnr residue atom cgnr charge mass\n   1  TC2   0    ENAP   C1    1    0     \n...\nThese first two entries in the itp file are mandatory and make up a basic itp. Finish building your initial CG itp entries and name the file ENAP_initial.itp. The [ moleculetype ] and [ atoms ] entries are typically followed by entries which define the bonded parameters: [ bonds ], [ constraints ], [ angles ], and [ dihedrals ]. For now, you do not need to care about the bonded entries, have a look at the next section (5) for considerations about which bonded terms you will need and how to define them.\nBefore going onto the next step, we need a CG tpr file to generate the distributions of the bonds, angles, and dihedrals from the mapped trajectory. To do this, move to the directory 4_initial-CG, where you should place the ENAP_initial.itp and that also contains a system_CG.top, the martini_v3.0.0.itp and a martini.mdp and run the script:\ncd   ../4_initial-CG\nbash 4_create_CG_tpr.sh\nThe script will:\n\nextract one frame from your trajectory (mapping it to CG resolution, of course);\nuse the frame, along with the top and mdp files to create a CG.tpr file for your molecule.\n\n\n\n5) Generate target CG distributions from the CG mapped trajectory\n\nWe need to obtain the parameters of the bonded interactions (bonds, constraints, angles, proper and improper dihedrals) which we want in our CG model from our mapped-to-CG atomistic simulations from step 3). However, which bonded terms do we need to have? Let’s go back to the drawing table and identify between which beads there should be bonded interactions.\n\n5.1) On the choice of bonded terms for the CG model\nThe bonds connecting the T-beads within the 1-ethyl-naphthalene moiety are most likely going to be very stiff, that is, their distributions are going to be very narrow. This calls for the use of constraints [1]-[3]. A “naive” way of putting the model together would be to constrain all the beads (see Figure A below):\n\n\n\nsuch a model, however, is prone to numerical instabilities, because it is increasingly complicated for the constraint algorithm to satisfy a growing number of connected constraints. Another option is to build a “hinge” model [2] (inspired by the work of Melo et al. [9]) where the 4 external beads (beads 2, 3, 5, and 6 of the Figure) are connected by 5 constraints to form a “hinge” construction, while the central bead (bead number 4) is described as a virtual site, that is, a particle whose position is completely defined by its constructing particles (Figure B above). The use of virtual particles not only improves the numerical stability of the model but also improves performance [2]. As virtual sites are mass-less, the mass of the virtual site should be shared among the four constructing beads, so that beads 2, 3, 5, and 6 should have each a mass of 45 (= 36 + 36/4, where 36 is the mass of a T-bead).\nBead 1 can then be connected by means of two bonds, namely 1-2 and 1-4. Two improper dihedrals (1-3-6-5 and 2-1-4-3) will be required in order to keep bead 1 on the right position onto the naphthalene ring. A final improper dihedral 2-3-6-5 will also be needed to keep the naphthalene ring flat. Exclusions between all beads should also be applied in this case, as the molecule is quite stiff and having intramolecular interactions in this case is not needed.\nHaving decided on the bonded terms to use, they must now be defined in the itp file under the [ bonds ], [ constraints ], [ angles ], [ dihedrals ], and [ virtual_sitesn ] entries. In general, each bonded potential is defined by stating the atom number of the particles involved, the type of potential involved, and then the parameters involved in the potential, such as reference bond lengths/angle values or force constants. This definition is highly dependent on the type of potentials employed and, as such, users should always reference the GROMACS manual for specific details. Here, we will use this example to cover the most common potentials used in defining Martini topologies.\nBonds are defined under [ bonds ] by stating the atom number of the particles involved, the type of bond potential (in this case, type 1, a regular harmonic bond) followed by the reference bond length and force constant. Constraints are defined similarly to bonds, under the [ constraints ] section, with the exception that no force constant is needed. If we use bond 1-2 and constraint 2-3 as examples, your itp should look something like this:\n[bonds]\n; i j funct length kb\n 1 2 1 0.260 20000 \n...\n\n[constraints]\n; i j funct length\n 2 3 1 0.260 \n...\nAngles and dihedrals follow the same strategy, stating the atom number of the particles involved, the type of potential, and, in this case, the reference angle and force constant. While there are no angles defined in this example, we have 3 improper dihedral potentials in place (regular and improper dihedral potentials correspond to dihedral function types 1 and 2, respectively):\n[ dihedrals ]\n; improper\n; i j k l funct ref.angle force_k\n 1 3 6 5 2 0 10 \n...\nVirtual sites are defined slightly differently. In this case, you define the atom number of the virtual site, followed by the type of virtual site, and the atom numbers of the constructing particles. In our case:\n[ virtual_sitesn ]\n; site funct constructing atom indices\n 4 1 2 3 5 6\nFinally, to apply exclusions, we state the atom number of the target particle followed by the numbers of the atoms from which the target particle is to be excluded:\n[ exclusions ]\n 1 2 3 4 5 6\nUsing initial guesses for the reference bond lengths/angles and force constants you can now create a complete topology for the target molecule. These initial guesses will be improved upon in a further section by comparing the AA and CG bonded distributions and adjusting these values.\n\n\n5.2) Index files and generation of target distributions\nOnce you have settled on the bonded terms, create index files for the bonds with a directive [bondX] for each bond, and which contains pairs of CG beads, for example:\n[bond1]\n  1  2\n[bond2]\n  1  4\n...\nand similarly for angles (with triples of CG beads) and dihedrals (with quartets). Write scripts that generate distributions for all bonds, angles, and dihedrals you are interested in. For 1-ethyl-naphthalene, there are seven bonds (5 constraints and 2 bonds) and three dihedrals, as discussed. A script is also provided, so that:\ncd  ENAP-in-water/5_target-distr\n# [create bonds.ndx and dihedrals.ndx]\nbash 5_generate_target_distr.sh\nwill create the distributions. Inspect the folders bonds_mapped, and dihedrals_mapped for the results. You will find each bond distributions as bonds_mapped/distr_bond_X.xvg and a summary of the mean and standard deviations of the mapped bonds as bonds_mapped/data_bonds.txt.\nFor each bond, the script uses the following command (in this example, the command is applied for the first bond, whose index is 0):\necho 0 | gmx distance -f ../3_mapped/mapped.xtc -n bonds.ndx -s ../4_initial-CG/CG.tpr -oall bonds_mapped/bond_0.xvg -xvg none\ngmx analyze -f bonds_mapped/bond_0.xvg -dist bonds_mapped/distr_bond_0.xvg -xvg none -bw 0.001\nand similarly for the first dihedral:\necho 0 | gmx angle -type dihedral -f ../3_mapped/mapped.xtc -n dihedrals.ndx -ov dihedrals_mapped/dih_0.xvg\ngmx analyze -f dihedrals_mapped/dih_0.xvg -dist dihedrals_mapped/distr_dih_0.xvg -xvg none -bw 1.0\n\n\n\n6) Create the CG simulation\n\nWe can now finalize the first take on the CG model, ENAP_take1.itp, where we can use the info contained in the data_bonds.txt and data_dihedrals.txt files to come up with better guesses for the bonded parameters:\ncd ENAP-in-water/6_CG-takeCURRENT\ncp ../4_initial-CG/molecule.gro      .\ncp ../4_initial-CG/ENAP_initial.itp  ENAP_take1.itp\n# [adjust ENAP_take1.itp with input from the previous step]\nbash prepare_CG_1mol_system.sh  molecule.gro  box_CG_W_eq.gro  W  1\nwhere the command will run an energy-minimization, followed by an NPT equilibration, and by an MD run of 50 ns (inspect the script and the various mdp files to know more) for the Martini system in water.\nOnce the MD is run, you can use the index files generated for the mapped trajectory to generate the distributions of the CG trajectory:\ncp ../5_target-distr/bonds.ndx .\ncp ../5_target-distr/dihedrals.ndx .\nbash 6_generate_CG_distr.sh\nwhich will produce files as done by the 5_generate_target_distr.sh in the previous step but now for the CG trajectory.\n\n\n7) Optimize CG bonded parameters\n\nYou can now plot the distributions against each other and compare. You can use the following scripts:\ncd ENAP-in-water\ngnuplot plot_bonds_tutorial_4x2.gnu \ngnuplot plot_dihedrals_tutorial_4x1.gnu \nThe plots produced should look like the following, for bonds:\n\n\n\nand dihedrals (AA is in blue, Martini is in red):\n\n\n\nThe agreement is very good. Note that the bimodality of the distributions of the first two dihedrals cannot be captured by the CG model. However, the size of the CG distribution will seemingly capture the two AA configurations into the single CG configuration. If the agreement is not satisfactory at the first iteration - which is likely to happen - you should play with the equilibrium value and force constants in the CG itp and iterate till satisfactory agreement is achieved.\n\n\n8) Comparison to experimental results, further refinements, and final considerations\n\n\n8.1) Partitioning free energies\nPartitioning free energies (see tutorial on how to compute them) constitute particularly good reference experimental data.\nIn the case of 1-ethyl-naphthalene, a model using 5 TC5 beads for the naphthalene ring, and a TC3 bead for the ethyl group, leads to the following (excellent!) agreement with available partitioning data (the experimental values are from Ref. [10]):\n\n\n\n\n\n\n\n\n\n\n\nlogHD (kJ/mol)\nlogP (kJ/mol)\n\n\n\n\n\n\n\n\nExp.\nCG\nErr.\nExp.\nCG\nErr.\n\n\n25.2\n25.8\n0.6\n25.2\n24.4\n-0.6\n\n\n\n\n\n8.2) Molecular volume and shape\nThe approach described so far is oriented to high-throughput applications where this procedure could be automated. However, COG-based mappings cannot necessarily always work perfectly. In case packing and/or densities seem off, it is advisable to look into how the molecular volume and shape of the CG model compare to the ones of the underlying AA structure.\nTo this end, we can use the Gromacs tool gmx sasa to compute the solvent accessible surface area (SASA) and the Connolly surface of the AA and CG models. While AA force fields can use the default vdwradii.dat provided by Gromacs, for CG molecules, such file needs to be modified. For this, copy the vdwradii.dat file from the default location to the folder where we will execute the analysis:\ncd ENAP-in-water/7_SASA\ncp /usr/local/gromacs-VERSION/share/gromacs/top/vdwradii.dat  vdwradii_CG.dat\nThe vdwradii_CG.dat file in the current folder should now be edited so as to contain the radius of the Martini 3 beads based on the atomnames (!) of your system. By the way, the radii for the Martini R-, S-, and T-beads are 0.264, 0.230, and 0.191 nm, respectively. Take a look at ENAP-worked/7_SASA/vdwradii_CG.dat in case of doubts.\nWe also recommend using an updated vdwradii.dat for the atomistic reference calculations, instead of the Gromacs default. The file - that you can find among the provided files with the name vdwradii_AA.dat - uses more recent vdW radii from [Rowland and Taylor, J. Phys. Chem. 1996, 100, 7384-7391].\nNow, run:\nbash 7_compute_SASAs.sh  ENAP\nthat will compute the SASA and Connolly surfaces for both the CG and AA models. The SASA will be compute along the trajectory, with a command that in the case of the AA model looks like this:\ngmx sasa -f ../../3_mapped/AA-traj.whole.xtc -s ../../3_mapped/AA-COG.tpr -ndots 4800 -probe 0.191  -o SASA-AA.xvg\nNote that the probe size is the size of a T-bead (the size of the probe does not matter but you must consistently use a certain size if you want to meaningfully compare the obtained SASA values), and the -ndots 4800 flag guarantees accurate SASA value. You will instead see that the command used to obtain the Connolly surface uses fewer points (-ndots 240) to ease the visualization with softwares such as VMD. Indeed, we can now overlap the Connolly surfaces (computed by the script on the energy-minimized AA structure and its mapped version) by using the following command:\nvmd -m  AA/ENAP-AA-min.gro  AA/surf-AA.pdb  CG/surf-CG.pdb\nThis should give you some of the views you find rendered below. Below you find also the plot of the distribution of the SASA along the trajectory - distr-SASA-AA.xvg and distr-SASA-CG.xvg (AA is in blue, Martini is in red):\n\n\n\nThe SASA distributions show a discrepancy of about 5% (the average CG SASA is about 5% smaller than the AA one - see data_sasa_AA.xvg and distr-SASA-CG.xvg), which is acceptable (NOTE: These figures were generated with the open-beta parameters, which tended to systematically underestimate the SASA; this is improved in the published Martini 3 version, so you should get better agreement!), but not ideal. Inspecting the Connolly surfaces (AA in gray, CG in blue) gives you a clearer picture: while the naphthalene moiety on average seems to be captured quite accurately by the CG model, the T-bead 1 does seem not to account for the whole molecular volume of the ethyl group. One way to improve this could be to lengthen bonds 1-2, and 1-4.\n\n\n8.3) Final considerations\n\nMapping of some chemical groups, especially when done at higher resolutions (e.g., in aromatic rings), can vary based on the proximity of functional groups. The rule of thumb is that such perturbations may require a shift of ±1 in the degree of polarity of the bead in question.\nTake inspiration from already-developed models when trying to build a Martini 3 molecule for a new small molecule. Several examples can be found on the Martini 3 small molecule GitHub repo.\nBesides hydrogen bonding labels (“d” donor, and “a” for acceptor), electron polarizability labels are also made available in Martini 3: these mimic electron-rich (label “e”) or electron-poor (label “v”, for “vacancy”) regions of aromatic rings. Such labels have been tested to a less extended degree than d/a labels, but have shown great potentials in applications involving aedamers [1]. In the case of 1-ethylnaphthalene, the “e” label may be used to describe bead number 4 (at the center of the naphthalene moiety) and bead number 1 (because connected to an electron-donating group such as -CH2CH3).\nDepending on your application, you may want to include other validation targets, besides free energies of transfer. These can allow you to fine-tune and optimize bead type choices and bonded parameters. Below a non-exhaustive list of potential target properties:\n\nif molecular stacking or packing are of importance, one can use use dimerization free energy landscapes as reference [2];\nmiscibility of binary mixtures has been successfully employed in the parameterization of martini CG solvent models [1] - either by qualitative assessing the mixing behavior or by computing the excess free energy of mixing [1]-[2];\nother experimental data such as the density of pure liquids or phase transition temperatures [11] can be also used;\nfinally, more specific references are also used, such as the hydrogen-bonding strengths and specificity of interactions for nucleobases [1], following the Martini 2 DNA work [12].\n\n\n\n\n\n9) Using Bartender to obtain bonded parameters for a small molecule\n\nBartender is a program aimed at obtaining bonded parameters for Martini models while bypassing the atomistic force field development and simulation step. It does so by relying on (semi-empirical) quantum chemical calculations. Specifically, Bartender makes extensive use of the GFN family of methods from the Grimme group, implemented in their xtb program. If you use Bartender in your research we ask you to cite the relevant GFN papers [13].\nHence, this step of the tutorial can replace steps 1), 3), and 5) above.\n\n9.1) Installing Bartender\nTo install Bartender, uncompress the provided tgz file into a directory and set the BTROOT environment variable to point to that directory. Optionally, you can add BTROOT to PATH.\nLet us go through this installation process. Say your home directory is /home/alfred, and you have the Bartender tgz file in that folder (you can find the tgz file among the downloaded files). Switch to that directory:\ncd\nCreate a bartender directory and move the Bartender tgz file there:\nmkdir bartender\nmv bartenderX.Y.Z.tgz bartender/\nWhere X.Y.Z is the version number for your binary. Now enter the bartender directory and uncompress the binary:\ncd bartender\ntar xvzf bartenderX.Y.Z.tgz\nGo back to the home directory and define the required environment variables. If you are using the Bash shell, that would be:\ncd\necho \"export BTROOT=/home/alfred/bartender\" &gt;&gt; .bashrc\necho \"source $BTROOT/bartender_config.sh\" &gt;&gt; .bashrc\nNow use:\nsource .bashrc\nand Bartender is ready to use!\n\n\n9.2) Preparing Bartender input files\nIn the following step you will need the bartender python script, and a few input fils. You can download the necessary input files here!\nBartender requires an input file and a geometry file.\nThe input file tells Bartender two things: - the atom-to-bead mapping; - the bonded terms you want to obtain.\nThe syntax of the Bartender input file is fairly simple, but we provide a script to automatically generate it from existing itp and ndx files. The itp needs to contain the bonded terms, although, of course, you can assign any nonsensical value you want to each of the required constants. The ndx file contains the atom-to-bead mapping. Issuing the command (note that script requires python3, of course!):\npython3 ./write_bartender_inp.py --ndx ENAP_oplsaaTOcg_cgbuilder.ndx --itp ENAP_blank.itp --out ENAP_bartender.inp\nwill produce the required ENAP_bartender.inp input file. Notice that gmx2bar also asks for the number of atoms in the geometry file (24, in this case).\nFor the geometry file, Bartender supports the pdb, gro, and xyz formats. Unfortunately, the LigParGen server generates non-standard pdb files which Bartender cannot read. The easiest way to proceed is to transform these non-standard pdb files into simpler xyz files. This conversion is easy to do with a text editor that supports column selection, but you can also issue the command:\nawk 'BEGIN{COORDS=\"\";NATOMS=0};NF==8{ COORDS=COORDS substr($3,1,1)\" \"$6\" \"$7\" \"$8\"\\n\";NATOMS++}END{print NATOMS\"\\n\\n\"COORDS }' ENAP_LigParGen.pdb &gt; ENAP.xyz\nwhich calls the Unix utility awk and casts the non-standard pdb file onto an xyx file. We now have everything Bartender needs!\n\n\n9.3) Running Bartender\nBartender has many optional flags, but it is designed so they are rarely needed. Here, we can just use the basic command: bartender geometry.pdb/.gro/.xyz bartender_input.inp, which, in our case, will be:\nbartender   ENAP.xyz ENAP_bartender.inp\n\n\n9.4) Analyzing the resulting files\nAfter a short wait (3-10 minutes depending on your CPU(s)), Bartender has produced several files, among which:\n\nA gmx_out.itp file: This is the topology file we were after, with the bonded parameters.\nA series of png files: These files contain plots of the actual distributions for each term and each fit (red triangles) and the corresponding fitted function (blue lines).\n\nIf we open the gmx_out.itp file, we will see that Bartender will have generated bonded parameters for all the bonds, constraints, and impropers terms we have in the topology. How do the parameters compare to the ones you obtained by optimizing them by hand while using the atomistic simulation as a reference?\n\n\n\nReferences and notes\n\n[1] P.C.T. Souza, et al., Nat. Methods 2021, DOI: 10.1038/s41592-021-01098-3.\n[2] R. Alessandri, et al., Chemrxiv 2021, DOI: 10.33774/chemrxiv-2021-1qmq9.\n[3] S.J. Marrink, et al., J. Phys. Chem. B. 2007, 111, 7812-7824.\n[4] P.C.T. Souza, S. Thallmair, et al., Nat. Commun. 2020, DOI: 10.1038/s41467-020-17437-5.\n[5] J. Liu, et al., Adv. Mater. 2018, DOI: 10.1002/adma.201704630.\n[6] W.L. Jorgensen and J. Tirado-Rives, PNAS 2005, 102, 6665; L.S. Dodda, et al., J. Phys. Chem. B, 2017, 121, 3864; L.S. Dodda, et al., Nucleic Acids Res. 2017, 45, W331.\n[7] J. Barnoud, https://github.com/jbarnoud/cgbuilder.\n[8] The Gromacs tool gmx traj won’t allow to choose more than one group unless one passes the flag -com. Neither -nocom or omitting the flag altogether (which should give -nocom) work.\n[9] M.N. Melo, H.I. Ingolfsson, S.J. Marrink, J. Chem. Phys. 2015, 143, 243152.\n[10] S. Natesan, et al., J. Chem. Inf. Model. 2013, 53, 6, 1424-1435.\n[11] L.I. Vazquez-Salazar, M. Selle, et al., Green Chem. 2020, DOI: 10.1039/D0GC01823F.\n[12] J.J. Uusitalo, et al., J. Chem. Theory Comput. 2015, 11, 8, 3932-3945.\n[13] [General reference] C. Bannwarth, et al., WIRES Comput. Mol. Sci. 2021, DOI: 10.1002/wcms.1493. [Solvation model] S. Ehlert, et al., Chemrxiv 2021, DOI: 10.26434/chemrxiv.14555355.v1. [GFN2-xTB] C. Bannwarth, et al., J. Chem. Theory. Comput. 2019, 15, 1652-1671. [GFNFF] S. Spicher and S. Grimme Ang. Chem. Int. Ed. 2020, 59, 15665-15673."
  },
  {
    "objectID": "docs/tutorials/Martini3/Polyply/index.html",
    "href": "docs/tutorials/Martini3/Polyply/index.html",
    "title": "Polyply: generating input parameters and coordinates",
    "section": "",
    "text": "In case of issues, please contact f.grunewald@rug.nl.\n\n\nSummary\n\nIntroduction\nPart 1: Melts and Blends\nPart 2: PEGylated lipid bilayers\nPart 3: Early life in a Vesicle\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nThis tutorial has three independent parts. It is recommended to start with part 1. However, people familiar with Martini can also go to part 2/3 independently. The tutorials cover applications and usage of Polyply, a python suite for facilitating simulations of (bio-)macromolecules and nanomaterials[1].\n\n\nPart 1: Melts and Blends\n\nIn this tutorial you will learn how to generate simple polymer melts and blends with polyply using Martini3. It takes about 10min to complete the Tutorial and covers the basic functionality of polyply .itp file generation and coordinate generation. No prior knowledge is required to start this tutorial, but it is useful as background for the other two tutorials. Follow the link to get to the tutorial:\n\nhttps://github.com/marrink-lab/polyply_1.0/wiki/Tutorial:-martini-polymer-melts:-martini-polymer-melts\n\n\n\n\nPart 2: PEGylated lipid bilayers\n\nIn this tutorial you will learn how to generate PEGylated lipid bilayers. It serves as an example tp explains how to connect a biomolecule to a polymer, build brushes, use pre-build coordinates from other programs. Follow the link to get to the tutorial:\n\nhttps://github.com/marrink-lab/polyply_1.0/wiki/Tutorial:-PEGylated-lipid-bilayers:-PEGylated-lipid-bilayers\n\n\n\n\nPart 3: Early life in a Vesicle\n\nIn this tutorial you will generate a model system for early life. In particular you will fill a vesicle with a phase separated mixture of PEO and Dextran (a carbohydrate polymer). This tutorial covers how to build phase separated systems, use pre-build coordinates from other programs, generate .itp files for branched molecules, generate statistical distributions of polymers. The Tutorial comes in the form of a jupyter notebook (https://jupyter.org/). Make sure to have polyply installed before opening it. If you work within a virtual environment you will need to add the jupyter kernel before running the notebook. Instructions can be found in the notebook here.\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nPolyply (https://github.com/marrink-lab/polyply_1.0)\n\n\n\nReferences\n\n[1] Grünewald, F., Alessandri, R., Kroon, P. C., Monticelli, L., Souza, P. C., & Marrink, S. J. (2021). Polyply: a python suite for facilitating simulations of (bio-) macromolecules and nanomaterials. arXiv preprint arXiv:2105.05890."
  },
  {
    "objectID": "docs/tutorials/Martini3/Dual_Resolution_Membrane/index.html",
    "href": "docs/tutorials/Martini3/Dual_Resolution_Membrane/index.html",
    "title": "Dual resolution membrane simulation",
    "section": "",
    "text": "In case of issues, please contact y.liu@rug.nl.\n\n\nSummary\n\nIntroduction\nVS hybrid alkane\n\nBuild the hybrid topology file\nDefining the interactions\nBuild coordinate file\nEquilibrate and run the system\n\nDual resolution membrane\n\nBuild dual resolution AA and CG membrane system\nBuild coordinate file\nBuilding the topology file\nEquilibrate the hybrid system\n\nConclusions\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nAll-atomistic (AA) and coarse-grain (CG) simulations have been successfully applied to investigate a broad range of biomolecular processes. However, the accessible time and length scales of AA simulation are limited and the specific molecular details of CG simulation are simplified. Here, we propose a VS-based hybrid scheme[1] that can concurrently couple AA and CG resolutions in a single membrane simulation, mitigating the shortcomings of either representation. We demonstrate this method by combining the Martini 2.x CG force field with the atomistic CHARMM36 force fields and apply the method to lipid membrane systems.\nIn this tutorial, we shall start with combining CHARMM/Martini force fields for a simple alkane system, so you can appreciate the VS method, before jumping to a more complicated application like membranes. Before starting the journey in this tutorial, we highly recommend you to read another beautifully written tutorial about VS hybrid model combining OPLS/Martini force field.\nThe aim for this tutorial is to demonstrate how to combine Martini and CHARMM force fields using the virtual site (VS) scheme to simulate dual resolution membranes using capabilities of the Gromacs code. Setups and files can be found by downloading and unpacking (unzipping) the .zip file here. References to folders are made with respect to the parent folder that results after unpacking the .zip file.\n\n\nVS hybrid alkane\n\nIn this section, you need to build a box of dodecane to familiarize yourself with the hybrid model. This approach requires a mapping of the particles in the AA model to the CG beads, defining VS located at the center of mass of the corresponding AA atoms.\n\n\n\nFigure 1 | Illustration of VS hybrid dodecane. The bond and ball structure represents the AA model and the green transparent balls represent the VS beads. In the VS hybrid model, extra interaction sites defined by the center of the groups of atoms are added. (In Figure 1, the locations of the sites are not shown, but they are at the center of the green transparent balls.) These interaction sites are defined as so-called VS within Gromacs and represent the CG model as a map of the AA model. By using this construction, the positions and dynamics of the AA and CG representations become closely linked.\n\n\nWe start the VS hybrid system from the AA CHARMM model. The CHARMM topology and input parameter files were produced by Ligand Reader & Modeler in Charmm-gui (https://www.charmm-gui.org/?doc=input/ligandrm). You can try this yourself (please refer to the Charmm-gui tutorials and examples; there is no description of the details in this tutorial), but if you want to focus on the VS hybrid building and simulation process, you can also find the files in the charmm_gui folder, which includes the CHARMM36 topology (LIG.itp and topol.top) and coordinate (ligandrm.pdb and cgbuilder.gro) files for a single dodecane molecule.\n\nBuild the hybrid topology file\n\nIt is recommended to collect all the (modified) files for a VS hybrid run in a separate directory. The folder dodecane_worked contains the fully worked simulation. In the description below, we will use the name VSHRun as the name for the folder that has the simulation. You can then compare your results to those in dodecane_worked.\nStarting from the CHARMM dodecane topology file (charmm_gui/LIG.itp), you just need to add the VS information to the topology file. Copy this file to VSHRun/LIG.itp and modify it as explained in this section.\nIn the Martini model, the dodecane is represented by three C1 beads shown in Fig. 1 as the green transparent balls. To add these sites as virtual sites, two changes must be made to the topology file. Virtual sites are particles that belong to the molecule. Thus, you only need to put the VS beads (vC1) definition in the [ atoms ] directive.\n[ atoms ]\n\n; nr type resnr residu atom cgnr charge mass\n\n1 CG331 1 LIG C1 1 -0.270 12.0110 ; qtot -0.270\n\n2 CG321 1 LIG C2 2 -0.177 12.0110 ; qtot -0.447\n\n3 CG321 1 LIG C3 3 -0.183 12.0110 ; qtot -0.630\n\n……\n\n36 HGA3 1 LIG H24 36 0.090 1.0080 ; qtot -0.180\n\n37 HGA3 1 LIG H25 37 0.090 1.0080 ; qtot -0.090\n\n38 HGA3 1 LIG H26 38 0.090 1.0080 ; qtot 0.000\n\n; the following defines the VS atoms\n\n39 vC1 1 VS VC1 38 0 0\n\n40 vC1 1 VS VC2 38 0 0\n\n41 vC1 1 VS VC3 38 0 0\nThe positions of virtual sites are generated from the positions of the atoms. This is what AA to CG mapping is all about. The correspondence of the VS sites to the AA atoms is specified in the [ virtual_sitesn ] directory. The following contents define the correspondence between the AA atoms and VS beads are therefore also added to the LIG.itp file:\n[ virtual_sitesn ]\n\n39 2 1 2 3 4\n\n40 2 5 6 7 8\n\n41 2 9 10 11 12\nYou can find the detailed information about the possible ways to define virtual sites in the Gromacs manual, but briefly, the first line in the [ virtual_sitesn ] directive shown above states that atom 39 is the center of mass (option 2 from virtual site options) of atoms 1, 2, 3, and 4 (which can be seen to be the first four C-atoms of the AA model). The mapping tells Gromacs how to calculate VS positions and forces on them from the atom positions and forces, and also how to calculate forces on the atoms from forces on the VS.\nThese are all the changes that need to be made to the LIG.itp to construct a VS hybrid topology. There are no CG bonded potentials (bonds, angles, dihedrals between VS or AA and VS particles) needed for our hybrid scheme.\n\n\nDefining the interactions\n\nWe already have the .itp file for single hybrid dodecane (LIG.itp), but the CHARMM36 force field files do not know the new atom types (vC1) for the virtual sites. These must be combined with the CHARMM36 atom definitions and interactions. Here, we have done this for you; a more extensive explanation of how to build these files yourself is included in the section on the VS hybrid bilayer simulation. The file itp_file/ffnonbondH.itp contains the definitions of the virtual atom types. This file must be included in the system topology file (topol.top, copy this one from the charmm_gui folder). If we know that the number of molecules in the simulation is going to be 128 dodecane, we can already define 128 dodecane for the whole system in the .top file. We have made a ffnonbondH.itp file for you, how to build it is introduced in the following sections. The two modifications of the file topol.top are shown below.\n#include \"../itp_file/ffnonbondH.itp\"\n\n[ molecules ]\n\nLIG 128\nNote that the include statement for the ffnonbondH.itp file must be added BEFORE the include statement of the charmm36.itp file. The number of molecules is specified at the bottom of the topol.top file.\nCopy the charmm36.itp file from the charmm_gui directory to the working directory. In the charmm36.itp file, delete or comment out the lines referring [ defaults ] directive, because this is already defined in the ffnonbondH.itp file and a repetition results in a Gromacs error (in the gmx grompp step).\n;[ defaults ]\n\n; nbfunc comb-rule gen-pairs fudgeLJ fudgeQQ\n\n;1 2 yes 1.0 1.0\n\n\nBuild coordinate file\n\nNow we are ready to build a coordinate file of a system of dodecane molecules, in our case, we will make a system of 128 dodecane molecules. You can transform the ligandrm.pdb file, created by Charmm-gui, to a CHARMM.gro file using the following file:\ngmx editconf -f ligandrm.pdb -o CHARMM.gro\nThe CHARMM .gro file of a single dodecane look like this:\nHeader\n\n38\n\n1LIG C1 1 0.618 -0.437 -0.000\n\n1LIG C2 2 0.565 -0.294 -0.000\n\n1LIG C3 3 0.412 -0.289 -0.000\n\n…...\n\n1LIG H24 36 -0.429 0.491 -0.090\n\n1LIG H25 37 -0.429 0.491 0.090\n\n1LIG H26 38 -0.576 0.438 -0.000\n\n0.00000 0.00000 0.00000\nCopy this file to the working directory and give it the name one_hybrid_lig.gro. The three VS beads must be added to the end of the .gro file. The coordinates of the VS beads are the center of mass of their corresponding CHARMM atoms. The number of VS beads should be added to the total atoms numbers list in the second line of the .gro file. The final .gro file is rendered in VMD and shown in Fig. 1:\nHeader\n\n41\n\n1LIG C1 1 0.618 -0.437 -0.000\n\n1LIG C2 2 0.565 -0.294 -0.000\n\n1LIG C3 3 0.412 -0.289 -0.000\n\n…...\n\n1LIG H24 36 -0.429 0.491 -0.090\n\n1LIG H25 37 -0.429 0.491 0.090\n\n1LIG H26 38 -0.576 0.438 -0.000\n\n1VS VC1 39 -0.335 0.292 -0.000\n\n1VS VC2 40 0.076 0.000 0.000\n\n1VS VC3 41 0.488 -0.292 -0.000\n\n0.00000 0.00000 0.00000\nMake sure that you adhere to the formatting of the .gro file (a simple copy-paste of the lines with VS will not lead to a valid .gro file). With the coordinate file of a single hybrid dodecane, we can create a box containing 128 dodecane molecule on the command line:\ngmx insert-molecules -ci one_hybrid_lig.gro -box 4 4 4 -nmol 128 -o dodecane_box.gro -try 1000\n\n\nEquilibrate and run the system\n\nWe have built the coordinate and topology files for 128 dodecane, thus we are ready for the simulation. The following command lines do a minimization of the initial system, an equilibration, and a (short) run. You can find .mdp files for this particular system in the directory dodecane_worked. Note that the runs may run into LINCS warnings/errors. You may then try to increase the number of minimization steps and/or insert short runs with a smaller time step and increase the time step bit by bit. Here is a series of commands:\ngmx grompp -f minimization.mdp -p topol.top -c dodecane_box.gro -o mini_run.tpr -maxwarn 4\ngmx mdrun -deffnm mini_run -v\ngmx grompp -f martini_eq_2.mdp -p topol.top -c mini_run.gro -o eq.tpr -maxwarn 4\ngmx mdrun -deffnm eq -v\ngmx grompp -f martini_md.mdp -p topol.top -c eq.gro -o run.tpr -maxwarn 4\ngmx mdrun -deffnm run -v\nIn fact, you are fooled by me. The VS in this model will not interact with each other and this simulation is equivalent to just simulating dodecane using the CHARMM force field, with three extra particles for each molecule that do nothing except show where the CG mapped particles are. The reason for not letting the VS interact with each other is that interactions between all dodecane molecules are already considered in AA resolution. To avoid double-counting the interactions in CG (VS) resolution, the interactions between VS in the ffnonbondH.itp file are defined with Lennard-Jones (LJ) interaction parameters that are zero. However, you have learned how to build a VS-based Martini model. We will combine the hybrid components with AA and CG molecules in the dual resolution membrane model. In this set-up, part of the system is fully coarse-grained and another part of the system is described by hybrid molecules. The hybrid molecules interact with the fully CG molecules by CG interactions.\n\n\n\nDual resolution membrane\n\n\n\n\nFigure 2. Virtual site hybrid membrane setups. Lipids in the AA region carry virtual sites. Lipids in the CG region are represented only by CG beads. Water in the AA region is atomistic (in this case TIP3P), water in the CG region is coarse-grain (in this case standard Martini water). Water particles are not shown; in both AA and CG regions, the water is shown as an enveloping surface. For both resolutions, lipid tail, linker, and head parts are represented by cyan, green, and orange color, respectively.\n\n\nAn intuitive way to build a dual resolution membrane system is a combination of AA membrane and CG water and put the resolution interface in the region around the lipid head of the membrane. However, it was shown that the VS hybrid AA/CG model fails to reproduce correct PMFs for the polar and charged AA solutes in CG solvent, yet properly reproduce the potentials of mean force (PMFs) between pairs of apolar amino acid side chain analogs. Although possible, the set-up with hybrid lipids and CG water results in severe artefacts (not published). Therefore, in this tutorial, the VS double-membrane systems are constructed as shown in Fig. 2, to keep the resolution interface at the apolar lipid tail region. More details can be found in . For the double membrane setup, any simulations requiring two membrane environments could benefit, e.g. to simulate the preliminary phase (stalk formation) of membrane fusion, or the effect of asymmetric ionic concentrations across the membrane, etc.\nThe full worked set-up for the dual resolution simulation is contained in the folder membrane_worked. It is advised that you create an empty folder yourself and work through the steps. You can compare your results to the one in the folder membrane_worked.\n\nBuild dual resolution AA and CG membrane system\n\nBuilding a dual resolution membrane system can be done conveniently by using a number of tools developed for different purposes. In short, the procedure consists of four steps: (1) generating a coarse-grain membrane bilayer and water layer; (2) converting the CG lipids and water to AA VS hybrid lipids and AA water by backmapping; and (3) splitting the bilayer into leaflets, and shifting these to (4) combine original CG and backmapped parts to achieve a double membrane system, as shown in Fig. 2. We use the insane code to build the CG membrane system (1), from which the AA membrane (converted to hybrid lipids by adding VS as shown in the section on dodecane) and water are backmapped (2) using the backward software [9]. The original backward software can only backmap the CG membrane to the AA membrane. We tweak the library of the backward software to include the CG beads as VS in addition to the AA atoms, thus we build a hybrid membrane. You can find the modified library file here: backward/Mapping/dppc.charmm36.map. Note that python 2 is needed for backward and splitleafs softwares. The script splitleafs.py is downloaded from https://github.com/jbarnoud/splitleafs. The script is used for generating an index file that identifies upper and lower leaflets of the bilayer, which can be used to subsequently split the bilayer into leaflets (3) and combine them after shifting to create the double membrane set-up (4).\nCreate a new directory and run following command to build AA and CG membranes:\nStep (1) is done by typing on the command line:\npython3 ../insane/insane.py -o membrane_raw.gro -p top.top -x 8 -y 8 -z 10 -sol W -l DPPC=100\nThis creates a CG bilayer of pure DPPC with 100 lipids per leaflet in an 8x8x10 nm box and adds water beads.\nStep (2) is done by typing on the command line:\npython2.7 ../backward/backward.py -f membrane_raw.gro -o hybrid.gro -from martini -to charmm36 -sol\nThis creates a backmapped AA hybrid version of the CG membrane and water. This means, you now have coordinates for the AA hybrid model that were created from the CG membrane. As it is, AA hybrid and CG molecules are on top of each other. To create the double membrane system with different resolutions in one simulation cell, we will have to take some of these coordinates and shift them in space. Before we do this, we will have a look at the topologies. If you are an experienced Martini user and know all about mapping schemes and bead types, you may want to take a DPPC lipid from CHARMM36 and convert it into a VS hybrid DPPC, in analogy to the dodecane example and then compare it to our solution.\nWe start by copying some useful files that we prepared for you already.\ncp -r ../needed_file_charmm/* .\nWe copied the .mdp, .itp and .top files to the current working directory. The .mdp files are used for equilibration and production of the systems. The .itp files define the topologies of the hybrid and CG DPPC lipids. The dppc_CG.itp file remains the same as standard .itp files downloaded from here. When building the hybrid DPPC.itp file, the philosophy is the same as when you built the dodecane .itp file, namely adding VS definitions and their mapping scheme to the AA DPPC.itp file. The hybrid lipid DPPC.itp file is built for you in the needed_file_charmm file directory.\nBelow, we show the lines for the added virtual sites and how they are defined as the centers of mass in the [ virtual_sitesn ] directive section. Compare the names of the atom types for the virtual sites to the names of the bead types in the CG Martini file dppc_CG.itp. You will notice the same names with a ‘v’ in front of them. Another important point to note is that all charges of the VS are zero, in contrast to charges of the CG model. The NC3 and PO4 beads do have charges of +1 and -1, respectively in the Martini model, but for the hybrid DPPC molecule, the atomistic charges take care of the Coulomb interaction. You would be double-counting Coulomb interactions if the VS is also charged.\n131 vQ0 2 VDPPC VNC3 131 0.000 0.000 ; qtot 1\n\n132 vQa 2 VDPPC VPO4 132 -0.000 0.000 ; qtot 0\n\n133 vNa 2 VDPPC VGL1 133 0.000 0.000 ; qtot 0\n\n134 vNa 2 VDPPC VGL2 134 0.000 0.000 ; qtot 0\n\n135 vC1 2 VDPPC VC1A 135 0.000 0.000 ; qtot 0\n\n136 vC1 2 VDPPC VC2A 136 0.000 0.000 ; qtot 0\n\n137 vC1 2 VDPPC VC3A 137 0.000 0.000 ; qtot 0\n\n138 vC1 2 VDPPC VC4A 138 0.000 0.000 ; qtot 0\n\n139 vC1 2 VDPPC VC1B 139 0.000 0.000 ; qtot 0\n\n140 vC1 2 VDPPC VC2B 140 0.000 0.000 ; qtot 0\n\n141 vC1 2 VDPPC VC3B 141 0.000 0.000 ; qtot 0\n\n142 vC1 2 VDPPC VC4B 142 0.000 0.000 ; qtot 0\n\n…...\n\n[ virtual_sitesn ]\n\n131 2 1 2 6 10 14\n\n132 2 17 20 25 28\n\n133 2 28 30 32\n\n134 2 36 39 40 41 42\n\n135 2 33 45 48\n\n136 2 51 54 57 60\n\n137 2 63 66 69 72\n\n138 2 75 78 81 84\n\n139 2 42 88 91\n\n140 2 94 97 100 103\n\n141 2 106 109 112 115\n\n142 2 118 121 124 127\n\n\nBuild coordinate file\n\nThe following commands are used to build the hybrid membrane setup as illustrated in Fig. 2. This setup is realized by shifting and combining the AA and CG membranes.\nStep (3): identify lipids in upper and lower leaflets and create an index file with the atom indices of the two leaflets for the CG model:\nThe following four lines split the CG membrane (and CG water) using the index file and shift the upper CG leaflet along the z-axis.\n\nthe input file is put after “–”, e.g. the position of the membrane_raw.gro\n\npython2.7 ../splitleaflet/splitleafs.py --atom DPPC:PO4 W:W -r -- membrane_raw.gro &gt; tail_leaflets.ndx\necho \"0\"|gmx editconf -f membrane_raw.gro -n tail_leaflets.ndx -o lower_cg.gro\necho \"1\"|gmx editconf -f membrane_raw.gro -n tail_leaflets.ndx -o upper_cg.gro\ngmx editconf -f upper_cg.gro -o upper_cg_moved.gro -translate 0 0 10\nThe following four lines split the hybrid membrane (and AA water) using the index file and shift the lower hybrid leaflet along the z-axis.\n\nthe input file is put after “–”, e.g. the position of the hybrid.gro\n\npython2.7 ../splitleaflet/splitleafs.py --atom DPPC:VPO4 SOL:OW -r -- hybrid.gro &gt; tail_leaflets.ndx\necho \"1\"|gmx editconf -f hybrid.gro -n tail_leaflets.ndx -o upper_hb.gro\necho \"0\"|gmx editconf -f hybrid.gro -n tail_leaflets.ndx -o lower_hb.gro\ngmx editconf -f lower_hb.gro -o lower_hb_moved.gro -translate 0 0 10\nThe following five lines combine all the leaflets and water coordinates into one file. Turning all the .gro files into .pdb files and concatenating them together in .pdb format.\ngmx editconf -f lower_hb_moved.gro -o lower_hb_moved.pdb\ngmx editconf -f upper_hb.gro -o upper_hb.pdb\ngmx editconf -f upper_cg_moved.gro -o upper_cg_moved.pdb\ngmx editconf -f lower_cg.gro -o lower_cg.pdb   \ncat upper_hb.pdb lower_hb_moved.pdb upper_cg_moved.pdb lower_cg.pdb | grep -e \"^ATOM\" &gt; whole.pdb\nAt this point it may be useful to visually inspect your coordinates to check that you did not make typo’s and that the double layer set-up appears credible. You can do this by loading the file whole.pdb into VMD or PYMOL, or some other viewer.\nFinally, convert the .pdb file to a .gro file.\ngmx editconf -f whole.pdb -resnr 1 -o whole.gro\nThe following three lines give the size of the box to the .gro file. The box size in the z-direction is doubled from the membrane_raw.gro file.\nsed '$d' whole.gro &gt; whole1.gro\ntail -n 1 membrane_raw.gro |awk '{print $1\" \"$2\" \"$3*2}' &gt;&gt;whole1.gro\ncp whole1.gro whole.gro\n\n\nBuilding the topology file\n\n\n\n\nFigure 3 | The multiscale system encompasses both AA/CG molecule representations. Each subsystem (AA and CG, respectively) interacts within itself according to its own resolution. Molecules in the AA region interact at the CG level with the molecules in the CG region through virtual sites that represent the AA region. When employing full electrostatics (PME), long-range electrostatic interactions between AA and CG charges are included (green dashed line). The AA region is shown as bonds, the virtual sites representing the AA system as well as the CG region are shown as spheres. Lipid tail, linker, and head are represented by cyan, green and orange color, respectively.\n\n\nThe interactions in the VS hybrid scheme used in this tutorial are schematically shown in Fig. 3 for lipid molecules. The main idea of this VS hybrid scheme is that, for LJ interactions, AA particles interact with AA particles according to the AA force field, and CG particles interact with CG particles according to the CG force field. AA particles do not interact directly with CG particles, but the interaction between molecules at AA resolution with molecules at CG resolution is achieved through VS. These VS carry interactions at CG level, i.e. the AA molecule ‘sees’ the embedding surroundings at the level of the CG model. Conversely, the CG molecules ‘see’ the AA molecules as CG molecules. To accomplish this interaction scheme, we have built a ffnonbondH.itp file for you in the itp_file folder, and which was already used in the dodecane set-up. The file ffnonbondH.itp contains the particle definitions for the AA, CG, and VS particles, and are constructed using the original AA force field (in this case CHARMM36), the original Martini force field (in this case Martini2), and selected interactions for the virtual particles (those starting with ‘v’), such that they interact only with the fully CG part of the system. The pair LJ interactions are defined in the[ nonbond_params ] directory, e.g.\n[ nonbond_params ]\n\nC1 vC1 1 0.4700 3.4999\nThe interactions between VS particles should not be included, thus the VS nonbonded parameters are simply omitted in [ nonbond_params ]. For Coulomb interactions, we use PME, thus all the AA/CG atoms carrying changes can interact with each other. Note again that VS beads do not carry charges.\nThe following lines look complicated, but just to automatically build the topology file. You can copy these lines to your terminal or build a topology file by hand on your own. You can do this by hand if you know from looking at the insane output how many water beads were generated. Backward should generate 4 SOL molecules for each W bead. The numbers need to end up at the bottom of the file top.top (see the end of this subsection).\nThe following 8 lines count the number of AA and CG water and write the numbers to shell variables. The splitleafs.py software can output the number of water in each region and we just need to extract the numbers. It is advisable to put the next sequence of commands into a bash script (some outputs depend on the nature of the shell). By next sequence, we mean all commands up to and including the EOF.\npython2.7 ../splitleaflet/splitleafs.py --atom SOL:OW -r -- hybrid.gro 2 &gt; sol_num_file.xvg\npython2.7 ../splitleaflet/splitleafs.py --atom W:W -r -- membrane_raw.gro 2 &gt; w_num_file.xvg\ncat sol_num_file.xvg|awk '{print $1 $2/3}'&gt;solvent_num_file.xvg\nrm sol_num_file.xvg\nupper_leaflet_w=$(cat w_num_file.xvg |grep \"upper_leaflet\" | awk -F ':' '{print $2}'| awk '{print $1}')\nlower_leaflet_w=$(cat w_num_file.xvg |grep \"lower_leaflet\" | awk -F ':' '{print $2}'| awk '{print $1}')\nupper_leaflet_sol=$(cat solvent_num_file.xvg |grep \"upper_leaflet\" | awk -F ':' '{print $2}')\nlower_leaflet_sol=$(cat solvent_num_file.xvg |grep \"lower_leaflet\" | awk -F ':' '{print $2}')\nThe following line writes the number of DPPC lipids to variables.\ndppc_num=$(cat top.top |grep -m 1 \"^DPPC \"| awk '{print $2}')\nThe following lines create the .top files using the molecule number variables defined above. They start by including the molecule definitions and following the numbers of molecules in the system.\ncat &lt;&lt; EOF &gt; top.top\n\n#include \"ffnonbondH.itp\"\n\n#include \"DPPC.itp\"\n\n#include \"TIP3.itp\"\n\n#include \"dppc_CG.itp\"\n\n[ system ]\n\n; name\n\nINSANE! Membrane UpperLeaflet&gt;POPC=3.0 LowerLeaflet&gt;POPC=3.0\n\n[ molecules ]\n\n; name number\n\nDPPC 100\n\nTIP3 $upper_leaflet_sol\n\nDPPC 100\n\nTIP3 $lower_leaflet_sol\n\nDPPCC 100\n\nW $upper_leaflet_w\n\nDPPCC 100\n\nW $lower_leaflet_w\n\nEOF\n\n\nEquilibrate the hybrid system\n\nThe following two lines are to build an index file for equilibration and production. These different subgroups are needed for the temperature coupling in different thermostat groups(AA DPPC, CG DPPC, VS DPPC, AA water, and CG water). Note that position restraints are applied. Depending on the gromacs version, the -r option need not be supplied, because by default it would use the starting coordinates.\ngmx grompp -f nothing.mdp -c whole.gro -o index.tpr -p top.top -maxwarn 10 -r whole.gro\necho -e \"del 1-15\\nr DPPC\\nname 1 bilayer_hybrid_AA\\nr VDPPC \\nname 2 VS\\nr DPPCC \\nname 3 bilayer_pure_CG\\nr W\\nname 4 W\\nr TIP3\\nname 5 SOL\\nr DPPCC W \\nname 6 CG\\nr DPPC TIP3\\nname 7 AA\\nq\\n\" | gmx make_ndx -f index.tpr -o index.ndx\nBefore proceeding, check that the index group [ VS ] starts with atom number 131. If it starts with 1, then you will get errors later on. The echo command above works properly in bash, but perhaps not in another shell. You can package it in a bash script to make it work properly.\nThe next series of lines are designed to equilibrate the system, through energy minimization, smaller time steps, and using the softcore potential. Note that a softcore potential is only used in the martini_eq_2.mdp file, thus, the simulation is expected to be slow. The softcore potential is triggered through these .mdp lines:\nfree-energy = yes\n\ninit-lambda = 1\n\nsc-alpha = 4\n\nsc-power = 2\n\nsc-coul = yes\n\nnstdhdl = 0\n\ncouple-moltype = system\n\ncouple-lambda0 = vdw-q\n\ncouple-lambda1 = none\n\ncouple-intramol = yes\nTo run the equilibration, use the following commands:\ngmx grompp -f minimization.mdp -c whole.gro -p top.top -o mini_run_1.tpr -maxwarn 1 -n index.ndx -r whole.gro\n\nThis energy minimization may crash, depending on your workstation and the way you compile the Gromacs. If so, please run the system with only one CPU. Namely adding -nt 1 to the command lines that are minimization runs below (i.e. use gmx mdrun -nt 1 etc…)\n\ngmx mdrun -deffnm mini_run_1 -v\nIn the next step, a softcore potential is used and this step takes some time!\ngmx grompp -f martini_eq_2.mdp -c mini_run_1.gro -p top.top -o mini_run_2.tpr -maxwarn 3 -n index.ndx -r mini_run_1.gro\ngmx mdrun -deffnm mini_run_2 -v\nNext, we continue with minimization and equilibration without the softcore, and this should run faster (more steps per unit wall-time).\ngmx grompp -f minimization.mdp -c mini_run_2 -p top.top -o mini_run_2_1.tpr -maxwarn 1 -n index.ndx\ngmx mdrun -deffnm mini_run_2_1 -v\ngmx grompp -f martini_eq_3.mdp -c mini_run_2_1.gro -p top.top -o mini_run_3.tpr -maxwarn 3 -n index.ndx -r mini_run_2.gro\ngmx mdrun -deffnm mini_run_3 -v\ngmx grompp -f martini_eq_4.mdp -c mini_run_3.gro -p top.top -o mini_run_4.tpr -maxwarn 3 -n index.ndx -r mini_run_3.gro\ngmx mdrun -deffnm mini_run_4 -v\n\n\nRun the hybrid system\n\n\n\n\nFigure 4 | Illustration of flat bottom potential. The flat bottom potential is applied only on AA water molecules. The distance between the resolution interface and the beginning of flat bottom potential is 0.5 nm. The color scheme is the same as that of Fig. 2.\n\n\nThe flat bottom potential is used to restrain the AA water and stop them from crossing the membrane, as shown in Fig. 4. To accomplish this, we write a python code to project the coordinates of AA water on a xy plane, located at the center of the bulk AA water in the z-axis, and build the restrain .gro file (test_FBP.gro) for you. Thus, if AA water molecules diffuse too far from the water plane in the z-axis will be pushed back.\n\nThe flat_bottom_potential.py file needs three variables: path to the directory, the input file and the output file:\n\npython3 ../build_restrain_gro_file/flat_bottom_potential.py ./ mini_run_4.gro test_FBP.gro\ngmx grompp -f martini_md.mdp -c mini_run_4.gro -p top.top -o run.tpr -maxwarn 3 -n index.ndx -r test_FBP.gro\ngmx mdrun -deffnm run -v\nYour system may still need some more equilibration - if the run crashes (for example after LINCS warnings start appearing), try a short run with smaller time step (e.g. 0.5 fs instead of 2) and slowly increase the time step. Another thing worth trying is to use the v-rescale thermostat and berendsen barostat first, before using the standard Nose-Hoover thermostat and Parrinello-Rahman barostat.\n\n\n\nConclusions\n\nCongratulations! You have grasped how to combine Martini and CHARMM force fields using the virtual site (VS) approach to simulate dual resolution membranes. For now, this hybrid scheme only supports DPPC membranes and you are welcome to extend it to other membranes. The rule of thumb is that you can adjust the interactions between two resolutions while keeping the AA and CG potential unchanged. The aim is to reproduce the correct conformational or even dynamical properties, e.g. area per lipid, partial density, order parameter, diffusion constant, etc. against the AA and CG references.\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nVMD (https://www.ks.uiuc.edu/Research/vmd/)\ninsane.py (downloadable here)\nbackward (downloadable here)\n\n\n\nReferences\n\n[1] Wassenaar, T. A., Ingólfsson, H. I., Prieß, M., Marrink, S. J., & Schäfer, L. V. (2013). Mixing MARTINI: Electrostatic Coupling in Hybrid Atomistic–Coarse-Grained Biomolecular Simulations. The Journal of Physical Chemistry B, 117(13), 3516–3530. https://doi.org/10.1021/jp311533p"
  },
  {
    "objectID": "docs/tutorials/Martini3/Protein_Ligand_Binding/index.html",
    "href": "docs/tutorials/Martini3/Protein_Ligand_Binding/index.html",
    "title": "Protein-small molecule binding",
    "section": "",
    "text": "In case of issues, please contact paulo.telles-de-souza@ibcp.fr.\n\n\nSummary\n\nIntroduction\nConverting an atomistic structure to CG resolution\nPlacing the protein in a simulation cell\nAnalyzing the trajectory\nGenerating mutants and repeating the procedure\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nIn this tutorial, we will set up a coarse-grained (CG) simulation for a protein–ligand system using the new Martini 3.0 force field. The ligand will be initially placed in the solvent phase of the system, and throughout the simulation find the protein binding pocket. As an example, we will simulate the binding of benzene to different mutants of T4 lysozyme[1-3]. You can find all necessary files to perform the simulations here. The same system was already simulated before[4,5] with Martini 2 and with the open-beta version of Martini 3.\n\n\n1. Converting an atomistic structure -protein and ligand- to CG resolution and generating a Martini topology\n\nIn case you already worked with the Martini 3 Proteins tutorial part I, please go to step 2 of this tutorial using the previous T4 lysozyme CG model you generated with the elastic network approach. If you just landed here, it might be a good idea to familiarize yourself with the different protein models in the Martini force field. But you can also continue the current tutorial, because in the following we briefly explain how to generate a Martini 3 Protein CG model with martinize2.\n1A. Download the crystal structure of the L99A T4 lysozyme from the Protein Data Bank (PDB code 181L):\nwget http://www.rcsb.org/pdb/files/181L.pdb\nAlternatively, you can visit the PDB website (https://www.rcsb.org/), search for the structure, and click on Download Files. Note that the downloaded PDB file contains not only protein residues but also three additional molecules: water (HOH), benzene (BNZ), and 2-hydroxyethyl disulfide (HED). You should delete them prior to generating the CG structure which can be done using the following command:\ngrep \"^ATOM\" 181L.pdb &gt; 181L_clean.pdb\n1B. Generate Martini topology and coordinates:\nThe clean atomistic structure of T4 lysozyme can be used now as input for martinize2 to produce both the coordinates (181L-CG.pdb) and topology (t4l_only.top) of the CG model.\nmartinize2 -f 181L_clean.pdb -o t4l_only.top -x t4l_cg.pdb -dssp /path/to/dssp -p backbone -ff martini3001 -elastic -ef 700.0 -el 0.5 -eu 0.9 -ea 0 -ep 0 -scfix -cys auto\nHere we are using the version 3001 of the protein model in Martini 3 force field (-ff). An easy way of determining the secondary structure of each residue in the protein is by using the DSSP program. Do not forget to add the path to dssp in case is not executable from everywhere in your terminal (-dssp /path/to/dssp). The folded structure of T4 lysozyme is stabilized with an elastic network[6]. The magnitude of the elastic force constant can be specified with –ef while lower and upper cutoffs can be defined by –el and –eu, respectively. A force constant of \\(700–900 kJ/(mol*nm^2)\\) is suitable in most of the cases. Generalized side chain corrections[7] (-scfix) and possible cysteine bridges (-cys auto) should also be part of your default options for an initial Martini 3 protein model. In case you do not have dssp installed in your machine, you can replace the /path/to/dssp by -ss. In this case, you need to provide the 1-letter code with the secondary structure (-ss  CCHHHHHHHHHCCEEEEEECTTSCEEEETTEEEESSSCHHHHHHHHHHHHTSCCTTBCCHHHHHHHHHHHHHHHHHHHHHCTTTHHHHHHSCHHHHHHHHHHHHHHHHHHHHTCHHHHHHHHTTCHHHHHHHHHSSHHHHHSHHHHHHHHHHHHHSSSGGGC).\n\n\n2. Placing the protein in a simulation cell, adding water, ions and ligand, and running the simulation\n\n2A. Solvate the protein:\nSince we now have both the coordinates and topology of the Martini 3 protein, we can put the protein in a simulation cell, and add water and ions. We will use for this task insane[8], which is usually used to build systems containing lipid bilayers, but it can also be used for proteins in water solution.\npython2 insane.py -f t4l_cg.pdb -o CG.gro -p CG.top -pbc cubic -box 10,10,10 -salt 0.15 -sol W -d 0\nYou can look for more details about the insane.py script here. The output file (CG.gro) contains NA+, CL-, and W residues while CG.top is a prototype of the master topology file. You can remove the charge signs of NA and CL in the CG.top file. You should also replace “Protein” by molecule_0. You may get a list of molecules which is similar to:\n[ molecules ]\n\n; name number\n\nmolecule_0 1\n\nW 8846\n\nNA 93\n\nCL 101\nDon’t forget to also include the Martini 3 force field files at the beginning of the CG.top.\n#include \"martini_v3.0.0.itp\"\n\n#include \"molecule_0.itp\"\n\n#include \"martini_v3.0.0_ions_v1.itp\"\n\n#include \"martini_v3.0.0_solvents_v1.itp\"\nThe first .itp file contains information about non-bonded interactions between all types of Martini 3 beads. The other files are more specific and define standard Martini 3 ions, protein (molecule_0.itp, generated in the martinize2 step) and solvents.\n2B. Add the ligand to the simulation box:\nThe crystal structure downloaded from the PDB website contains a benzene molecule crystalized in the binding site. We want to see if a CG model of benzene is capable of correctly finding the binding site of T4 lysozyme and bind to it in a pose that resembles the crystallographic binding mode. The Martini 3 topology of benzene is already provided in martini_v3.0.0_small_molecules_v1.itp. Martini 3 benzene consists of three equidistant beads of type TC5, bonded together by constraints of length 0.290 nm. Make a copy of CG.gro, rename it to CG_benzene.gro and open it in a text editor. At the end of the file (just before the cell length), add the coordinates of the ligand from the file benzene.gro. Don’t forget to update the total number of atoms in the second line of the CG_benzene.gro file. You should try to place the benzene molecule in the solvent part of the simulation box. Don’t worry too much about the exact ligand coordinates; they will be adjusted in the minimization phase. Just try to place the ligand in a reasonable spot. The final CG.top file should look like this:\n#include \"martini_v3.0.0.itp\"\n\n#include \"molecule_0.itp\"\n\n#include \"martini_v3.0.0_ions_v1.itp\"\n\n#include \"martini_v3.0.0_solvents_v1.itp\"\n\n#include \"martini_v3.0.0_small_molecules_v1.itp\"\n\n \n\n[ molecules ]\n\n; name number\n\nmolecule_0 1\n\nW 8846\n\nNA 93\n\nCL 101\n\nBENZ 1\nA representation of the simulation box is shown in Fig. 1.\n\n\n\nFigure 1 | Simulation box containing the L99A mutant of T4 lysozyme and one benzene molecule (red) solvated in water (transparent blue surface).\n\n\n2C. Now, start the minimization, equilibration and production! You can find examples of .mdp files here or in the folder you downloaded at the beginning of the tutorial. Do not forget to create the restraint.gro based on the starting configuration (as you are using position restraints for minimization and equilibration in the .mdp files).\ngmx grompp -p CG.top -f min.mdp -c CG_benzene.gro -maxwarn 1 -r CG_benzene.gro\ngmx mdrun -v -c CG-em.gro\ngmx grompp -p CG.top -f eq.mdp -c CG-em.gro -maxwarn 1 -r CG_benzene.gro\ngmx mdrun -v -c CG-eq.gro -x traj_comp-eq.xtc\ngmx grompp -p CG.top -f md.mdp -c CG-eq.gro -maxwarn 5\ngmx mdrun -v -c CG-md.gro -x traj_comp.xtc\nAs the system is not so big, you maybe have some domain decomposition issues (depending on the number of CPU/threads available on your computer). In these cases, you can reduce the used number of threads by specifying your desired number of threads using the flag -nt in the gmx mdrun. More information about Martini 3 simulations can be found in the lipid and protein tutorials.\n\n\n3. Analyzing the trajectory\n\nOnce the simulation has finished, a trajectory (traj_comp.xtc) should have been generated. An RMS alignment of the protein will take care of the rotational and translational motion.\ngmx trjconv -pbc mol -center -ur compact -s topol.tpr -f traj_comp.xtc -o temp.xtc \nTo do the alignment, an index file containing the list of backbone atoms (BB) must be provided. It can be generated with:\ngmx make_ndx -f CG-eq.gro &lt;&lt; EOF\na BB\nq\nEOF\nNow, you can use the new index.ndx file to perform the aligment with gmx trjconv:\ngmx trjconv -fit rot+trans -s topol.tpr -f temp.xtc -o trajfitted.xtc -n index.ndx\nYou can visualize the trajectory in VMD[9]. More information on visualizing CG Martini simulations is provided here or in the Martini 3 Protein Tutorial – part 1.\nvmd CG-eq.gro trajfitted.xtc\nDo you see any binding events taking place? If not, you may consider increasing the total simulation time or even using multiple simulation replicas. Take a look at the study already published using Martini 3 open beta for more details[5]. In some cases, not seeing binding events can indicate a problem in the ligand model. Some tests can be performed to check this possibility, in particular for systems for which you know the ligand binding site of your protein. For instance, you could perform a simulation with the ligand already docket in the expected pocket. As the crystal structure used in this tutorial (PDB code 181L) already had benzene docked in L99A T4 lysozyme, you could simply map the CG model of benzene using the atomistic structure of benzene from this structure (look the Parametrization of a new small molecule tutorial for more details). Then, you could simply use the coordinates of the mapped beads in the step 2D of this tutorial and repeat step 2C. If the ligand stays stable in the pocket for a reasonable time, it would be an indication that the ligand parameters are reasonable.\nFinally, after getting enough sampling of binding and unbinding events and performing the alignment steps described above, the occupancy of the benzene molecule across the trajectory can be calculated by issuing the following commands in VMD:\nset sel0 [atomselect 0 \"resname BENZ\"]\n$sel0 set radius 1.9\nvolmap occupancy atomselect0 -res 1.0 -allframes -combine avg -o volmap_out.dx\nIn the first line, the benzene molecule is selected from your system. In the second line, you redefine the VdW radius of the benzene CG model, as VMD has only reasonable radius values for atomistic systems. Finally, you use the volmap plugin to compute the occupancy. In very long trajectories/sampling, it maybe be useful to run this analysis without the VMD graphical interface (see VMD documentation for more information).\nAfter the analysis is done (it can take some time), load the generated file (volmap_out.dx) in VMD. This can be done follwing this procedure: click \"File\" → \"New Molecule\" → \"Browse\", select \"volmap_out.dx\" and click \"Load\"). After loading the volmap_out.dx, you can change its the representation to isosurface. To change representation: on VMD window, click \"Graphics → Representations\" →\"Drawing method\" → \"Isosurface\". In the \"Isosurface\", you can select in \"Show\" and \"Draw\" the style of this specific representation. The “isovalue” control allows you to adjust the displayed occupancy threshold. Which regions of the protein have the highest occupancy? Is the known binding site / binding tunnel among them?\nFor this particular system, we obtained around 2-9 binding events per 30 μs of simulation time[5]. If you run the simulation long enough so that several binding events are observed, the \\(k_{on}\\) of benzene – T4 lysozyme can be calculated as follows:\n\\[ k_{on} = \\frac{\\frac{number\\;of\\;binding\\;events}{simulation\\;time}}{[concentration]} \\]\n\n\n4. Generating mutants and repeating the procedure\n\nIn this final bonus step, we present a simple procedure on how to generate Martini 3 CG models of mutations using martinize2. For instance, the wild-type T4 lysozyme is known to not have a cavity where benzene could bind with high affinity. So, you could now reverse the mutation L99A of the crystal structure used in this tutorial. This can be done directly in martinize2, using the flag -mutate.\nmartinize2 -f 181L_clean.pdb -o single-t4l.top -x 181L-CG.pdb -dssp /path/to/dssp -p backbone -ff martini3001 -elastic -ef 700.0 -el 0.5 -eu 0.9 -ea 0 -ep 0 -scfix -cys auto -mutate A-ALA99:LEU\nAnother option that could be tested is the double mutation L99A/M102Q of T4 lysozyme3. This system is known to have reduced affinity to benzene as well. In the hypothetical situation where you started with the T4 lysozyme wild-type (PDB code 4S0W), you could generate this double mutant simply using:\nwget http://www.rcsb.org/pdb/files/4S0W.pdb\ngrep \"^ATOM\" 4S0W.pdb &gt; 4S0W_clean.pdb\nmartinize2 -f 4S0W_clean.pdb -o single-t4l.top -x 4S0W-CG.pdb -dssp /path/to/dssp -p backbone -ff martini3001 -elastic -ef 700.0 -el 0.5 -eu 0.9 -ea 0 -ep 0 -scfix -cys auto -mutate A-LEU99:ALA -mutate A-MET102:GLN\nBe aware that the 4S0W structure has two T4 lysozyme chains and also some residues have double conformation. In such situations, you must carefully consider which chain and residue conformation martinize will take into account. In addition, the structure deposited has hydrogen atoms and also some ions and small-molecules (typically used in the crystalization of the protein). You can consider clean your .pdb before martinizing the structure or used the -maxwarn flag. After generating the new CG models, repeat steps 2 and 3 of the tutorial. To illustrate the results that you could get with enough sampling, we present the occupancy maps of benzene observed for L99A and L99A/M102Q mutants of T4 lysozyme in Fig. 2. It is worth mentioning that this procedure is recommended only in situations for which you would not expect large conformational changes in the mutated structure in relation to the one given to martinize2 as reference. As Martini 3 protein models have bonded terms which depends of the reference structure, it usually is better to use experimental structures (as PDB codes 1LGU or 1LI3 for the double mutant L99A/M102Q or 4S0W for the wild-type). In case the mutants are not available, another option would be to generate the mutation using programs such as pymol, modeller, or VMD and/or relax a bit the structures with atomistic simulations.\n\n\n\nFigure 2 | Benzene density around mutants L99A (A) and L99A/M102Q (B) T4 lysozyme obtained from averaging 0.9 ms of CG simulations. The blue, cyan, red, and violet isosurfaces correspond to a 10, 100, 1,000, and 10,000 fold higher benzene density than in water. These densities translate to the free energy values shown at the color map. Results obtained with Martini 3 open-beta[5].\n\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nVMD (https://www.ks.uiuc.edu/Research/vmd/)\nmartinize2 (https://github.com/marrink-lab/vermouth-martinize)\ninsane (downloadable here)\n\n\n\nReferences\n\n[1] Eriksson, A. E.; Baase, W. A.; Wozniak, J. A.; Matthews, B. W. A Cavity-Containing Mutant of T4 Lysozyme Is Stabilized by Buried Benzene. Nature 1992, 355 (6358), 371–373. https://doi.org/10.1038/355371a0.\n[2] Morton, A.; Matthews, B. W. Specificity of Ligand Binding in a Buried Nonpolar Cavity of T4 Lysozyme: Linkage of Dynamics and Structural Plasticity. Biochemistry 1995, 34 (27), 8576–8588. https://doi.org/10.1021/bi00027a007.\n[3] Liu, L.; Baase, W. A.; Michael, M. M.; Matthews, B. W. Use of Stabilizing Mutations to Engineer a Charged Group within a Ligand-Binding Hydrophobic Cavity in T4 Lysozyme. Biochemistry 2009, 48 (37), 8842–8851. https://doi.org/10.1021/bi900685j.\n[4] Dandekar, B. R.; Mondal, J. Capturing Protein–Ligand Recognition Pathways in Coarse-Grained Simulation. J. Phys. Chem. Lett. 2020, 11 (13), 5302–5311. https://doi.org/10.1021/ACS.JPCLETT.0C01683.\n[5] Souza, P. C. T.; Thallmair, S.; Conflitti, P.; Ramírez-Palacios, C.; Alessandri, R.; Raniolo, S.; Limongelli, V.; Marrink, S. J. Protein–Ligand Binding with the Coarse-Grained Martini Model. Nat. Commun. 2020, 11, 3714. https://doi.org/10.1038/s41467-020-17437-5.\n[6] Periole, X.; Cavalli, M.; Marrink, S.-J.; Ceruso, M. A. Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition. J. Chem. Theory Comput. 2009, 5 (9), 2531–2543. https://doi.org/10.1021/ct9002114.\n[7] Herzog, F. A.; Braun, L.; Schoen, I.; Vogel, V. Improved Side Chain Dynamics in MARTINI Simulations of Protein–Lipid Interfaces. J. Chem. Theory Comput. 2016, 12 (5), 2446–2458. https://doi.org/10.1021/acs.jctc.6b00122.\n[8] Wassenaar, T. A.; Ingólfsson, H. I.; Böckmann, R. A.; Tieleman, D. P.; Marrink, S. J. Computational Lipidomics with Insane : A Versatile Tool for Generating Custom Membranes for Molecular Simulations. J. Chem. Theory Comput. 2015, 11 (5), 2144–2155. https://doi.org/10.1021/acs.jctc.5b00209.\n[9] Humphrey, W.; Dalke, A.; Schulten, K. VMD: Visual Molecular Dynamics. J. Mol. Graph. 1996, 14 (1), 33–38. https://doi.org/10.1016/0263-7855(96)00018-5."
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html",
    "title": "Martini Force Field Initiative",
    "section": "",
    "text": "Tutorials designed by Martin Calvelo (martin.calvelo@gmail.com) and Manuel N. Melo (m.n.melo@itqb.unl.pt). Check out their repository.\nThese tutorials were designed to run in Collab. Alternatively you can follow along in your own system."
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#ceramide-vdac1-binding-in-a-membrane",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#ceramide-vdac1-binding-in-a-membrane",
    "title": "Martini Force Field Initiative",
    "section": "Ceramide — VDAC1 binding in a membrane",
    "text": "Ceramide — VDAC1 binding in a membrane\n\n\nTutorial notes\n\nIn this tutorial you’ll find two directories. Directory worked has all the intermediate steps and results, whereas directory minimal has only the essential files to get you going, and you’ll have to do most of the work yourself. Feel free to follow the tutorial using either approach, or even a mix of the two.\nThis tutorial has been designed to be run in a T4 GPU Colab runtime (you can check and change this in the upper right ‘Connect’ menu). Click on “Change runtime type” and select Python 3 (default) and T4 GPU.\nAlternatively, you can download it and run it in your own system. You will need to have gromacs and dssp installed, as well as the Python libraries vermouth, mdanalysis, insane, and nglview.\nMuch of the tutorial involves running shell commands. In Colab, this is achieved by prepending an exclamation mark to the command (!some shell_command). You can see this exemplified below in the installation. Note that if you need to change directories, the exclamation mark method won’t work; you need to use a percent sign, and run the command in its own cell (%cd target_dir).\nTo run any of the following cells of code, you can type Shift + Enter to excute the code in a cell."
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-0---downloading-and-installing-of-the-tutorial-software-and-materials.",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-0---downloading-and-installing-of-the-tutorial-software-and-materials.",
    "title": "Martini Force Field Initiative",
    "section": "Step 0 - Downloading and installing of the tutorial software and materials.",
    "text": "Step 0 - Downloading and installing of the tutorial software and materials.\nThe text output of these steps was minimized so as not to overcrowd the notebook. Feel free to take out the -q flags or add the -v flag to tar if you want full output or for debugging purposes.\n\n\n# We install `gromacs` and `dssp` binaries, pre-built for the colab runtime. Moreover, we install some Python packages, and import the ones we'll need:\n# 1. The `vermouth` (provides the `martinize2` script) and `insane` packages from the Martini team\n# 2. The `MDAnalysis` package\n# 3. The `nglview` molecular viewer (requires enabling custom notebook widgets, which we also do below)\n\nimport os\nif os.getenv(\"COLAB_RELEASE_TAG\"):\n  !wget https://www.itqb.unl.pt/labs/multiscale-modeling/downloads/gromacs-2023.3-gcolab_build.tar.gz -q -O - | tar --absolute-names -xzf -\n  !wget https://www.itqb.unl.pt/labs/multiscale-modeling/downloads/dssp-3.1.4-gcolab_build.tar.gz -q -O - | tar --absolute-names -xzf -\n  !pip install -q vermouth mdanalysis insane\n  !pip install -q ipywidgets==7.7.2 nglview\n  # Needed for nglview to work in colab\n  from google.colab import output\n  output.enable_custom_widget_manager()\n\n\nimport nglview as nv\nimport MDAnalysis as mda\n\nWe download and unpack the tutorial’s material.\n\n!wget https://zenodo.org/records/13760505/files/1-Tutorial_CER-VDAC1.zip\n!unzip 1-Tutorial_CER-VDAC1.zip\n\nWe will start in subdirectory minimal, but feel free to change to worked.\n\n%cd minimal"
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-1---introduction",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-1---introduction",
    "title": "Martini Force Field Initiative",
    "section": "Step 1 - Introduction",
    "text": "Step 1 - Introduction\nThe role of mitochondria in apoptosis is well established, and a number of protein–protein interactions in its outer membrane has been linked to apoptotic pathways. The VDAC (voltage-dependent anionic channels) family of proteins is central to this binding, having been implicated in the retention of apoptotic proteins in the outer mitochondrial membrane\\(^{1}\\) and self-oligomerization\\(^{2}\\) — an event also linked to apoptosis.\nIn a recent study we have ascertained that ceramide binds VDAC proteins (via a binding site involving VDAC1’s Glu73) and that such binding somehow triggers apoptosis.\\(^{3}\\) An immediate hypothesis is that the presence of ceramide affects the binding profile of VDAC and promotes apoptosis-associated oligomerizations. Since that work was done using the (now outdated) Martini 2 model, we will recreate in this tutorial the same ceramide binding simulations, but using the state-of-the-art Martini 3 model.\\(^{4}\\)\n\nSci. Rep. 6, 32994; doi: 10.1038/srep32994 (2016)\nMol. Cell. Biol. 30, 5698; doi: 10.1128/MCB.00165-10 (2010)\nNat. Commun. 10, 1832; doi: 10.1038/s41467-019-09654-4 (2019)\nNat. Methods 18, 382; doi: 10.1038/s41592-021-01098-3 (2021)"
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-2---system-preparation",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-2---system-preparation",
    "title": "Martini Force Field Initiative",
    "section": "Step 2 - System preparation",
    "text": "Step 2 - System preparation\nIn your directories you’ll find the 4c69.pdb file, containing the X-ray structure of the murine VDAC1 protein. As it is a beta-barrel, it should be clear how it orients in a membrane.\nBefore coarse graining anything we visualize our starting protein structure using nglview. Other viewers, such as pymol or VMD are also great, if you run this workflow outside Colab.\n\nview = nv.NGLWidget()\nat = view.add_component(nv.FileStructure('4c69.pdb'))\nview\n\n\nCoarse-graining with martinize2\nFor CG MD simulation of a protein one needs the CG coordinates and the CG topology. Both can be obtained with the martinize2 tool (despite its name, it works with Martini 3).\n\nRun martinize2 with the -h flag for help deciding how to run it. You’ll need to: * specify 4c69.pdb as the input structure; * specify an output CG structure (let’s call it VDAC1_cg.pdb); * specify an output .top topology master file (let’s call it topol.top); * specify the target forcefield. Martini 3 has code martini3001; * ask for an elastic network to be set, restraining secondary/tertiary structure; * ask for any disulfide bridges to be automatically detected; * specify where martinize2 can find a DSSP executable, so that secondary structure per residue can be determined (in the current install it is in your path, under the name mkdssp); * ask for some non-protein residues that are present in the pdb structure to be ignored (since 4c69.pdb is being used without any prior cleaning, several extra molecules are present, namely HOH, ATP, MC3, and LDA).\nAdditionally, if needed, you can ask martinize2 to ignore some occurring warnings: you can expect several about multiple conformations in 4c69.pdb, and one about the version of DSSP being used.\n\n#Try yourself!\n#Uncomment to run\n\n#!martinize2 -f ...\n\n\n# @title Solution\n\n!martinize2 -f 4c69.pdb \\\n -x VDAC1_cg.pdb \\\n -o topol.top \\\n -ff martini3001 \\\n -elastic \\\n -scfix \\\n -cys auto \\\n -dssp mkdssp \\\n -ignore HOH ATP MC3 LDA \\\n -maxwarn 42\n\nHave a look at the produced files with and editor or a molecular structure visualizer. Observe the atomic structure and the CG beads overlaid (in white and yellow spheres).\n\nview.remove_component(at)\n\n\naa = nv.FileStructure('4c69.pdb')\ncg = nv.FileStructure('VDAC1_cg.pdb')\n\nview.add_component(aa, default=False)\nview.add_component(cg, default=False)\n\nview.clear_representations(component=0)\nview.clear_representations(component=1)\n\nview.add_licorice(selection='Protein', component=0)\nview.add_ball_and_stick(aspectRatio=7.5, opacity=0.45, component=1)\n\nview.center()\nview\n\n\n\nEmbedding a protein in a membrane using insane\nThe insane script creates CG membranes by placing lipids in a grid. It can also embed proteins as it constructs a membrane. Insane leverages the robustness of CG to start from artificial conditions and eventually equilibrate.\n\nRun insane with the -h flag for help deciding how to run it. You’ll need to: * specify VDAC1_cg.pdb as the input protein to embed; * specify an output .top topology master file (let’s call it membrane.top); * specify an output structure (let’s call it membrane_prot.gro); * specify lipid proportions (95:5 POPC:ceramide) with -l; * specify the dimensions of the simulation box (x=12, y=12 and z=10) with the -x, -y and -z flags; * ask for centering the protein in the vertical axis; * ask for orienting the protein tilt in the membrane; * add waters (-sol W) as solute.; * ask for an ionic strength of 0.15 M; * neturalize the system with additional counterions.\n\n#Try yourself!\n#Uncomment to run\n\n#!insane -f ...\n\n\n# @title Solution\n\n!insane -f VDAC1_cg.pdb \\\n-l POPC:95 -l DPCE:5 \\\n-x 12 -y 12 -z 10 \\\n-o membrane_prot.gro \\\n-p membrane.top \\\n-center \\\n-orient \\\n-sol W \\\n-salt 0.15 \\\n-charge auto\n\nYou should obtain a protein–membrane structure. Open it with a molecular visualizator. Here, you can see the protein in the membrane, with the POPC lipids in grey and the ceramide in green. Note that, for clarity, water and ions were not displayed.\n\nview_membrane_prot = nv.NGLWidget()\nview_membrane_prot.add_component(nv.FileStructure('membrane_prot.gro'))\nview_membrane_prot.add_representation('licorice', selection='protein')\nview_membrane_prot.add_representation('surface', selection='POPC', color='grey')\nview_membrane_prot.add_representation('surface', selection='DPCE', color='green')\nview_membrane_prot\n\nYou may notice that despite the use of the -orient flag, insane was not able to completely align VDAC’s axis with the membrane normal. This is ok, again because the robustness of CG will allow the system to quickly evolve into the correct orientation.\n\n\nCleaning up run-files\nAt this point you’ll have the structure needed to run simulations, but the topologies/topology headers need some cleaning:\n\nMartinize2 gives not very informative default names to files and molecules. Rename molecule_0.itp to VDAC1.itp. Inside it, also change the molecule name from molecule_0 to VDAC1:\n\n\n!cp molecule_0.itp VDAC1.itp\n\n\n!awk '{gsub(/molecule_0/, \"VDAC1\"); print}' VDAC1.itp &gt; temp && mv temp VDAC1.itp\n\n\nIn topol.top:\n\n\nSee how the file looks:\n\n\n!cat topol.top\n\n\nAdd the last 7 lines from membrane.top. These are the number of molecules of each type created by insane:\n\n\n!tail -n 7 membrane.top &gt;&gt; topol.top\n\n\nChange the molecule reference from molecule_0 to VDAC1 in the molecules section:\n\n\n!awk '{gsub(/molecule_0/, \"VDAC1\"); print}' topol.top &gt; temp && mv temp topol.top\n\n\nAt the top, change the #include statement so it points to martini_v3.0.0.itp (this .itp must always be the first one to include):\n\n\n!awk '{gsub(/include \"martini\\.itp\"/, \"include \\\"martini_v3.0.0.itp\\\"\"); print}' topol.top &gt; temp && mv temp topol.top\n\n\nAdd extra .itp files for the lipid, ceramide, water and ions:\n\n\n!awk 'NR==4 {print \"#include \\\"martini_v3.0.0_phospholipids_v1.itp\\\"\"; print \"#include \\\"DPCE.itp\\\"\"; print \"#include \\\"martini_v3.0.0_solvents_v1.itp\\\"\"; print \"#include \\\"martini_v3.0.0_ions_v1.itp\\\"\"} 1' topol.top &gt; temp && mv temp topol.top\n\n\nChange the ion names from NA+/CL- to Na and CL, respectively (insane uses older Martini 2 nomenclature):\n\n\n!awk '{gsub(/NA\\+/, \"Na \"); gsub(/CL-/, \"CL \"); print}' topol.top &gt; temp && mv temp topol.top\n\n\nSee how topol.top looks now and compare it with before:\n\n\n!cat topol.top"
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-3---simulation",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-3---simulation",
    "title": "Martini Force Field Initiative",
    "section": "Step 3 - Simulation",
    "text": "Step 3 - Simulation\nYou can now run the simulations. In CG it is enough to perform a short energy minimization and a single pressure/temperature equilibration step before production. In GROMACS, we need to use the command gmx grompp to create a processed binary file (with the extension .tpr) for running minimization/MD calculations. The instructions for the calculation are in .mdp files.\n\nEnergy minimization\nThe em.mdp file has the instructions for the energy minimization. Create a .tpr file (let’s call it em.tpr) for performing it. Use the flag -h if you need help. Use the flag maxwarn 1 to ignore a warning that crops up because of unimportant mismatches in the way insane names atoms and how they’re defined in topologies.\n\n#Try yourself!\n#Uncomment to run\n\n#!gmx grompp ...\n\n\n# @title Solution\n!gmx grompp -f em.mdp -p topol.top -c membrane_prot.gro -o em.tpr -maxwarn 1\n\nRun now the minimization with:\n\n!gmx mdrun -deffnm em\n\n\n\nEquilibration\nThe equilibration step makes use of the eq.mdp runfile. Prior to using it with grompp, you’ll have to create an index file defining the beads that are part of the protein/membrane and those that are part of the solvent. This is needed because the temperature of the two phases will be thermostatted independently and we need to tell grompp which atoms get temperature-coupled together. To make the index run:\n\n%%bash\ngmx make_ndx -f em.tpr &lt;&lt;EOF\n\"W\" | \"ION\"\nname 17 Solvent\n! 17\nname 18 Bilayer\na BB\nq\nEOF\n\nArmed with this index and the minimized structure, you can use grompp and the file eq.mdp for genereting the .tpr file to perform the equilibration. Use the flat -n to provide the index.ndx file.\n\n#Try yourself!\n#Uncomment to run\n\n#!gmx grompp ...\n\n\n# @title Solution\n!gmx grompp -f eq.mdp -p topol.top -c em.gro -n index.ndx -o eq.tpr -maxwarn 1\n\nRun now the equilibration:\n\n!gmx mdrun -v -deffnm eq\n\n\n\nProduction\nFinally, we can create the .tpr and run the production using the md.mdp file.\n\n#Try yourself!\n#Uncomment to run\n\n#!gmx grompp ...\n\n\n# @title Solution\n!gmx grompp -f md.mdp -p topol.top -c eq.gro -n index.ndx -o md.tpr\n\nSince this step is quite computationally expensive, we’ll take the trajectory file (md.xtc) from the worked directory (also, some additional files to avoid incompatibilities).\n\n!cp ../worked/md.xtc .\n!cp ../worked/index.ndx .\n!cp ../worked/eq.gro .\n!cp ../worked/md.tpr ."
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-4---analysis",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#step-4---analysis",
    "title": "Martini Force Field Initiative",
    "section": "Step 4 - Analysis",
    "text": "Step 4 - Analysis\n\nTrajectory fitting\nIt is useful — mostly for visualization — to have all the protein in all simulation frames centered and fit, so that all observed movement is relative to it, rather than to the box. At the same time, we will output only the lipids/protein to make the resulting trajectories lighter. This can be done with the following series of commands:\n\n%%bash\n\necho 'Protein' 'Bilayer' | gmx trjconv -f md.xtc -s md.tpr -center -pbc mol -o md_pbc.xtc -n index.ndx\n\nWith the previous command we are centering on the Protein and only inlcuding the group Bilayer (Lipids+Protein, without water and ions) in the output. The flag -pbc mol will make molecules whole.\nLet’s do the same as above but only on the starting structure of the production, producing one centered structure (useful later for use with VMD).\n\n%%bash\necho 'Protein' 'Bilayer' | gmx trjconv -f eq.gro -s md.tpr -center -pbc mol -o md_pbc.gro -n index.ndx\n\nLet’s convert the production tpr file into another with fewer atoms compatibl with our centered trajectory (since we now ignore the solvent).\n\n%%bash\necho 'Bilayer' | gmx convert-tpr -s md.tpr -n index.ndx -o fit.tpr\n\nNow, fits each frame’s protein to the conformation in fit.tpr, by aligning backbone beads.\n\n%%bash\necho 'BB' 'Bilayer' | gmx trjconv -f md_pbc.xtc -s fit.tpr -fit rotxy+transxy -o md_fit.xtc -n index.ndx\n\nDownload md_pbc.gro and md_fit.xtc and take a look at the resulting trajectory with VMD — possibly showing only VDAC1 and the ceramides — and see how trajectory fitting highlights protein–ceramide interactions (see section 4.3 for visualization tips and advanced analyses using VMD)\n\n\nCeramide contact counting\nTo count contacts we first get a list of closest distances between any ceramide and each residue of the protein, over time, using gmx mindist. Display first the help options with the -h flag.\n\n!gmx mindist -h\n\nTry now to calculate the contacts using gmx mindist. You will need to select the groups Protein and DPCE.\n\n#Try yourself!\n#Uncomment to run\n\n#%%bash\n#echo 'Protein' 'DPCE' | gmx mindist ...\n\n\n# @title Solution\n\n!echo 'Protein' 'DPCE' | gmx mindist -respertime -s fit.tpr -f md_fit.xtc -or res_dists.xvg\n\nThe included script contact_fraction.py converts these distances into contacts, and represents them as the fraction of the total trajectory time during which a given residue was in contact with a ceramide. It assumes a 6 Å cutoff for considering contacts. Run it like this:\n\n!python3 contact_fraction.py\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nmindists = np.loadtxt('res_dists.xvg', comments=('@', '#'))\ncontacts = mindists[:,1:] &lt;= 0.6\navg_contact_fraction = contacts.mean(axis=0)\nplt.plot(np.arange(1, len(avg_contact_fraction) + 1), avg_contact_fraction)\nplt.show()\n\nThe script’s output already shows some regions of preferred contact, but it is not so clear among all the contacts whether there is a binding site (ceramides do seem to also bind on the region around Glu73, which is encouraging). In the next section we perform a more visual contact analysis."
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#conclusion",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial1_Ceramide_VDAC1binding.html#conclusion",
    "title": "Martini Force Field Initiative",
    "section": "Conclusion",
    "text": "Conclusion\nCongratulations! You have completed this tutorial! If you want, you can continue by clicking here and performing some analyses with the VMD software that you will find in sections 4.3 and 4.4.\nIf not, you can take another one of our tutorials. What do you think about the topic of lipidomics and antimicrobial peptides?\nFor more information, visit the official Martini web https://cgmartini.nl/."
  },
  {
    "objectID": "docs/tutorials/Martini3/ProteinsI/index.html",
    "href": "docs/tutorials/Martini3/ProteinsI/index.html",
    "title": "Proteins - Part I: Basics and Martinize 2",
    "section": "",
    "text": "In case of issues, please contact thallmair@fias.uni-frankfurt.de or paulo.telles_de_souza@ens-lyon.fr.\nUpdated by c.s.brasnett@rug.nl, luis.borges@ens-lyon.fr (October 2024). Find the original version elsewhere.\n\n\nSummary\n\nIntroduction\nSoluble proteins\n\nMartini + elastic network\nMartini + Gō-like model\nMartini + OLIVES\nComparison between models\n\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nAccordingly with Martini 3 rules [1], the Martini Protein model groups 2-4 non-hydrogen atoms together in one coarse-grained bead. Each residue has one backbone bead and 0-5 side-chain beads depending on the side chain of the residue. In contrast to the previous version [2-4], the secondary structure of the protein influences only the bond/angle/dihedral parameters of each residue. The backbone bead size and type depends solely of the mapping and geometry (linear or branched) of the fragment, with P2 used as default bead chemical type. Residues such as glycine, alanine, valine and proline used different bead types (with only slight differences in polarity and size) given the differences in the mapping, which were chosen to avoid overmapping problems [5]. It is noteworthy that the local secondary structure is predefined by the bonded parameters and thus imposed throughout a simulation. While simple peptides can be easily modeled with this approach, proteins usually need an extra bias to keep a stable tertiary structure, which can be provided by elastic network [6] or Gō-like models [7]. Additional improvements of the protein stability and reliability are achieved by applying the side chain corrections option to add dihedral angles which improve the side chain orientation [8].\nSetting up a coarse-grained protein simulation consists basically of three steps:\n\nconverting an atomistic protein structure into a coarse-grained structure;\ngenerating a suitable Martini topology;\nsolvating the protein in the desired environment.\n\nThe first two steps are done using the publicly available program martinize2. The last step can be done with the tools available in the GROMACS package and/or with ad hoc scripts. In this part of the tutorial, basic knowledge of GROMACS commands is assumed and not all commands will be given explicitly. Please refer to the previous tutorials and/or the GROMACS manual.\nThe aim of the first module of this tutorial is to define the regular workflow and protocols to set up a coarse-grained simulation of the soluble globular protein T4-lysozyme. Three strategies are presented and compared: i- no bias; ii- elastic networks; and iii- GōMartini. In a second module of this Proteins tutorial we will cover how to insert a transmembrane peptide (KALP) in a lipid bilayer using a standard Martini 3 description.\nThe files required for this tutorial (including worked files) can be downloaded from here.\n\n\nSoluble proteins\n\nThe downloaded file is called M3_proteins_tutorial_part1.zip and contains a worked version (using GROMACS 2020) of this module. You do not need all folders of this file to get going on this tutorial. Only the folder template is important. In addition, you can use the worked versions to check your own work. For this part of the tutorial, the worked files are in the martini3_worked folder. Create your own directory to work the tutorial yourself. Instructions are given for files you need to download or get from the template folder, etc. You do not need any files to start with. Now go to your own directory.\nAfter getting the atomistic structure of L99A T4 lysozyme (pdb code 181L) [9], you’ll need to convert it into a coarse-grained structure and to prepare a Martini 3 topology for it. Once this is done the coarse-grained structure can be minimized, solvated and simulated. The steps you need to take are the following:\n\nDownload 181L.pdb from the Protein Data Bank. It is also available in the template folder:\n\nwget http://www.rcsb.org/pdb/files/181L.pdb\n\nThe first step before start working with martinize2 is to clean/fix your atomistic pdb file. You should remove water and other molecules usually used for crystallization. In case there are missing residues or loops you should complete the protein structure using your favorite modeling code (alphafold2, modeller, etc). Note that cofactors that can be present and might be important for the protein structure and function are not covered by this tutorial. In the case of T4 lysozyme, you only need to remove the waters and a ligand. This can simply be done using the command:\ngrep \"^ATOM\" 181L.pdb &gt; 181L_clean.pdb\nThe clean pdb structure can be used as input for martinize2 (installation instructions available here), to generate both a coarse-grained structure and a Martini 3 topology file. Note that martinize2 might not work with older versions of python! We know it does work with versions &gt;3.9. Have a look at the help function (i.e. run martinize2 -h) for the available options. Hint, valid for any system simulated with Martini: during equilibration it might be useful to have (backbone) position restraints to relax the side chains and their interaction with the solvent; we are anticipating doing this by asking martinize2 to generate the list of atoms involved. A simple input command to martinize2 might look a bit like this:\nmartinize2 -f 181L_clean.pdb -o t4l_only.top -x t4l_cg.pdb -p backbone -ff martini3001\nWe take the input file -f, and specify two output ones, a topology file -o, and a coordinate file of the input structure mapped to the martini resolution -x. The mapped structure will be to version 3 of the Martini force field via the flag -ff.\nTo introduce some more structure-based knowledge, we should also specify a secondary structure. Martinize2 has a couple of options for this:\n\n-dssp will try to use an installation of mdtraj in the python environment that martinize2 is installed in.\n-dssp /path/to/dssp will look for a dssp executable in the given path, and use the output from there if it finds it. When using the -dssp option you’ll need the dssp binary, which determines the secondary structure classification of the protein backbone from the structure. It can be downloaded from the https://github.com/cmbi/dssp/releases. Note that martinize2 only works with the dssp versions 3.1.4 or earlier, because the output changed in dssp version 4. If installed centrally, the path is usually /usr/bin/dssp.\n-ss etcetc will use the etcetc dssp formatted string (i.e. a string containing letters used by dssp to indicate different secondary structure elements) that the user provides to specify how the secondary structure is treated, which must contain the same number of characters as the residues you have in the protein. The meaning of the abbreviations is: H: α-helix, B: residue in isolated β-bridge, E: extended strand, participates in β ladder, G: 3-helix (3-10 helix), I: 5 helix (π-helix), T: hydrogen bonded turn, S: bend, C: loop or irregular. In the case of the T4 lysozyme, the string required for the -ss argument is the following:\nCCHHHHHHHHHCCEEEEEECTTSCEEEETTEEEESSSCHHHHHHHHHHHHTSCCTTBCCHHHHHHHHHHHHHHHHHHHHHCTTTHHHHHHSCHHHHHHHHHHHHHHHHHHHHTCHHHHHHHHTTCHHHHHHHHHSSHHHHHSHHHHHHHHHHHHHSSSGGGC\n\nIf everything went well, the script generated three files: a coarse-grained structure (.pdb; Fig. 1), a master topology file (.top), and a protein topology file (.itp). In order to run a simulation you need two more files: the Martini topology file (martini_v3.0.0.itp) and a run parameter file (.mdp). You can get examples from the Martini website or from the template folder. Don’t forget to adapt the settings where needed!\n\n\n\n\nFigure 1 | Different representations of T4 lysozyme. A) Licorice atomistic representation with residues (without hydrogen atoms) classified according to 4 chemical classes: yellow=hydrophobic, green=polar, blue=basic residues, red=acidic residues; B) Licorice coarse-grained representation with the same classes used in Fig. 1A.; C) Cartoon representation of the atomistic structure. D) Coarse-grained beads in VdW representation. E) Licorice representation of the backbone of the martinized protein.\n\n\n\nDo a short minimization in vacuum (ca. 10-100 steps is enough!). Before you can generate the input files with grompp, you will need to check that the topology file (.top) includes the correct Martini parameter file (.itp). If this is not the case, change the include statement. Also, you may have to generate a box, specifying the dimensions of the system, for example using gmx editconf. You want to make sure, the box dimensions are large enough to avoid close contacts between periodic images of the protein, but also to be considerably larger than twice the cut-off distance used in simulations. Try allowing for a minimum distance of 1 nm from the protein to any box edge. Then, copy the example parameter file, and change the relevant settings to do a minimization run. Now you are ready to do the preprocessing and minimization run:\ngmx editconf -f t4l_cg.pdb -d 1.0 -bt dodecahedron -o t4l_cg.gro\ngmx grompp -p t4l_only.top -f minimization.mdp -c t4l_cg.gro -o minimization-vac.tpr  -r t41_cg.gro\ngmx mdrun -deffnm minimization-vac -v\nSolvate the system with gmx solvate (an equilibrated water box can be downloaded here; it is called water.gro. You can also find the file in the template folder. Make sure the box size is large enough (i.e. there is enough water around the molecule to avoid periodic boundary artifacts) and remember to use a larger van der Waals distance when solvating to avoid clashes, e.g.:\ngmx solvate -cp minimization-vac.gro -cs water.gro -radius 0.21 -o solvated.gro\nAs the protein is charged +8, it is recommended to add at least neutralizing counter ions; on top of that, you can add ions to reflect some ionic strength of the solution. Using a concentration of 0.15 M of NaCl is a popular choice given that is a good representation of the physiologic conditions. NOTE that you’ll need to get hold of a Martini topology file that specifies the ion topologies. Be careful in case you use strategies based on gmx genion. As each Martini water bead represents 4 water molecules, the concentration specified needs to be adapted to properly represent the target salt concentration.\nYou need to update the topology to reflect the added water. Here, this is done by copying the topology for the single T4 lysozyme to system.top (cp t4l_only.top system.top) and editing that to add a line with the number of water beads. The total number of W beads added by gmx solvate can be seen in the terminal output of the command; alternatively try grep -c W system-solvated.gro (where W is the name of a water bead). You will then do a short energy minimization and position-restrained (NPT) equilibration of the solvated system. Since the martinize.py script already generated position restraints (thanks to the -p flag), all you have to do is specify “define = -DPOSRES” in your parameter file (.mdp).\ngmx grompp -p system.top -c solvated.gro -f minimization.mdp -o minimization.tpr -r solvated.gro\ngmx mdrun -deffnm minimization -v\ngmx grompp -p system.top -c minimization.gro -f equilibration.mdp -o equilibration.tpr -r solvated.gro\ngmx mdrun -deffnm equilibration -v\nStart production run (without position restraints!); if your simulation crashes, some more equilibration steps might be needed. NOTE that you will get a warning about simultaneous use of Parrinello-Rahman barostat and newly generated velocities. This can be ignored by setting the -maxwarn 1 option.\ngmx grompp -p system.top -c equilibration.gro -f dynamic.mdp -o dynamic.tpr -maxwarn 1\ngmx mdrun -deffnm dynamic -v\nPROFIT! What sort of analysis can be done on this molecule? Start by having a look at the protein with VMD (use the script cg_bonds-v5.tcl to show the bonds defined in the T4 lysozyme topology. More extensive instructions about viewing Martini simuations can be found in the package MartiniGlass) or pymol. It is often convenient to convert the trajectory so that translation and rotation of the protein is removed. (NOTE, however, that the water is also rotated and this may create some unwanted effects when viewing. It is up to you, really. One thing that does make sense is to make sure that beads that belong to the same molecule, e.g. the protein, are not split across periodic boundary conditions, see the section on elastic network below for explicit instructions how to do this with gromacs tools.) Be aware that the .gro file given to VMD must contain the same (number of) atoms as the .xtc file. Therefore, if you choose to write only the protein to the .xtc file, also prepare a .gro file with only the protein (minimization-vac.gro will do).\ngmx trjconv -f dynamic.xtc -s dynamic.tpr -fit rot+trans -o viz.xtc\nSelect Protein first and then System. Then, you can open the new viz.xtc with VMD.\nvmd equilibration.gro viz.xtc\nAn option to display the bonds without the script cg_bonds-v5.tcl is to transform a .gro file to a .pdb file, and removed the line where is written ENDMDL in this .pdb file. This option should allow you to visualize the bonds defined by your itps in the tpr file.\ngmx trjconv -f  equilibration.gro -s dynamic.tpr  -pbc whole -o equilibration.pdb -conect\nSelect System in this step. Then:\nsed \"/ENDMDL/d\" -i equilibration.pdb\nvmd equilibration.pdb viz.xtc\nTo take a look at your simulation with pymol, the trajectory must also be converted to the .pdb format. This gives the opportunity to add bond information, which helps in viewing the molecules. Be aware that this file may be very large: you may want to reduce the number of frames. You can also reduce the size by only writing the protein coordinates (but you may want to visualize the solvent or ions as well, so it is up to you).\ngmx trjconv -f dynamic.xtc -s dynamic.tpr -fit rot+trans -o viz.pdb -conect\npymol viz.pdb\nStandard analyses for proteins include RMSD, RMSF, and radius of gyration. Refer to tutorials for atomistic models, for example by Tsjerk Wassenaar or Justin Lemkul. For the impatient ones, or if you just need a quick reminder: RMSD and RMSF can be calculated using the gromacs tools gmx rms and gmx rmsf, respectively.\n\n\nMartini + elastic network\n\nThe aim of this second module is to see how the application of elastic networks can be combined with the Martini model to conserve the tertiary and quaternary structures more faithfully without sacrificing the structure of a protein. Please be advised that this is an active field of research and that there is as of yet no “gold standard”.\nThe idea is to generate a simple elastic network on the basis of a standard Martini 3 topology. The approach can be set up using martinize2 and will be shortly described below.\nWe recommend simulating a pure Martini coarse-grained protein (without elastic network) from the previous step, and then seeing which changes are observed when using an elastic network for the same protein. Note that you’ll need to simulate the protein for tens to hundreds of nanoseconds to see major changes in the structure; sample simulations are provided in the archive.\nThe first option to help preserving higher-order structure of proteins is to add to the standard Martini topology extra harmonic bonds between non-bonded beads based on a distance cut-off. Note that in standard Martini, long harmonic bonds can be already used to impose the secondary structure of extended elements (sheets) of the protein. Dihedrals could be used as well, but they tend to bring instabilities in this case – see the paper by Bulacu et al 2013 [10] for more information. Martinize2 will generate harmonic bonds between backbone beads if the option -elastic is set. It is possible to tune the elastic bonds (e.g.: make the force constant distance dependent, change upper and lower distance cut-off, etc.) in order to make the protein behave properly. The only way to find the proper parameters is to try different options and compare the behavior of your protein to an atomistic simulation or experimental data (NMR, etc.). Be aware that elastic networks are based on your reference atomistic structure.\nHere we will use basic parameters in order to show the principle.\n\nUse martinize2 to generate the coarse-grained structure and topology as above. For the elastic network, use the following extra flags:\nmartinize2 -f 181L_clean.pdb -o t4l_only.top -x t4l_cg.pdb -dssp /path/to/dssp -p backbone -ff martini3001 -elastic -ef 700.0 -el 0.5 -eu 0.9 -ea 0 -ep 0\nThis turns on the elastic network (-elastic), sets the elastic bond force constant to 700 \\(kJ*mol^{-1}*nm^{-2}\\) (-ef 700), the lower and upper elastic bond cut-off to 0.5 and 0.9 nm, respectively (-el 0.5 and -eu 0.9), and makes the bond strengths independent of the bond length (elastic bond decay factor and decay power, -ea 0 and -ep 0, respectively; these are default). Differently from the Martini 2 version, in Martini 3 the elastic network does not need to be defined as a #ifdef statement in the .top file. Note that martinize2 does not generate elastic bonds between \\(i \\rightarrow i+1\\) and \\(i \\rightarrow i+2\\) backbone beads, as those are already connected by bonds and angles (Fig. 2B). Also, elastic bonds are only added between beads that belong to the same chain.\nProceed as before (steps 4 to 7) and start a production run. Keep in mind, we are adding a supplementary level of constraints on the protein; a supplementary relaxation step might be required (equilibration with position restraints and smaller time step for instance). If you have a set-up for the protein without elastic bonds (including solvent and possibly ions), you may use a snapshot from that simulation as the starting point here.\n\n\n\nMartini + Gō-like model\n\nIn the third submodule of the protein tutorial, you will learn to apply Gō-like models in combination with the Martini model to conserve the tertiary and quaternary structures more faithfully. A combination of Gō-like models with Martini was presented by Poma et al. 2017 [7]. Backbone beads are connected based on a contact map and a Lennard-Jones potential describes the interaction between the connected backbone beads. Here, we give an introduction how to set up a protein with Martini 3 and a modified version of the Gō-like models. You can find more details about the new implementation in the preprint by Souza et al..\nIn brief, the modified version encompasses the following changes compared to the original GōMartini model: First, the Gō-like bonds are applied to virtual sites which are located at the same position as the backbone bead in the Martini protein model. They are implemented as regular non-bonded interactions which allows to treat them with the non-bonded cutoff scheme. Second, the regular non-bonded interaction between two backbone beads which are connected by a Gō-like bond is excluded. Third, a lower and upper limit for the distance between two backbone beads connected with a Gō-like bond is set.\nThe general work flow is the following: the Gō-like bonds are included as non-bonded interactions in special beads – called Gō beads from hereon – which will be defined in the martini_v3.0.0.itp. For this, the martini_v3.0.0.itp has to contain two #include statements which are only considered if you define the variable GO_VIRT in your topology file. This procedure is similar to the POSRES variable in a typical Martini protein .itp file. Two generic file names are used in the #include statements (go_atomtypes.itp and go_nbparams.itp) which themselves include the specific itps for the actual protein. The coarse-grained (CG) protein structure generated by martinize2 contains the additional Gō beads; the same holds for the t4l_only.itp (which will be the protein .itp file generated by martinize2 in this case). The t4l_only.itp contains also the virtual site definition of the Gō beads and an #include statement for the exclusions between the (real) backbone beads which are connected by Gō-like bonds.\nTo generate the GōMartini model of T4 lysozyme, you will have to first obtain a contact map and then generate a Martini 3 protein model using martinize2. The procedure is briefly described in the following:\n\nTo set up a GōMartini model, the contact map of the atomistic structure must first be obtained from the web server using the default settings. Alternatively, a locally executable version of the contact map generator can be found elsewhere. Please note that the requirements for the .pdb file uploaded to the web-server are quite strict. Thus please check carefully if your contact map is meaningful before using the contact map in the next step. In particular, the table listing the “Residue residue contacts” will be used.\nOnce the contact map has been obtained, the topology files can be generated using martinize2 using the -go flag for the contact map.\nmartinize2 -f 181L_clean.pdb -o t4l_only.top -x t4l_cg.pdb -dssp  /path/to/dssp -p backbone -ff martini3001 -go contact_map.out\nThe above command will generate the necessary topology files for performing GōMartini simulations with this protein. As described in the in the preprint by Souza et al., there are also additional options related to the Gō model for adapting non-bonded interactions dependent on secondary structure, which may be used to optimise the dynamics of your protein. These are described further both in the preprint and in the documentation for martinize2 itself.\nAs mentioned above, the topology for your protein, t4l_only.itp now includes extra virtual sites built directly on top of backbone beads, which are used in two further files. Firstly, go_atomtypes.itp contains an [ atomtypes ] directive defining the virtual sites. Secondly, go_nbparams.itp contains a [ nonbond_params ] directive defining the Gō bonds between the virtual sites. In order to perform a simulation making use of these extra non-bonded potentials, we have to add the #include statements to the martini_v3.0.0.itp file. NOTE that you should do this ONLY ONCE.\nsed -i \"s/\\[ nonbond_params \\]/\\#ifdef GO_VIRT\\n\\#include \\\"go_atomtypes.itp\\\"\\n\\#endif\\n\\n\\[ nonbond_params \\]/\" martini_v3.0.0.itp\necho -e \"\\n#ifdef GO_VIRT \\n#include \\\"go_nbparams.itp\\\"\\n#endif\" &gt;&gt; martini_v3.0.0.itp\nIf you want to use the Martini 3 force field without any GōMartini model in the future, you just do not define the variable GO_VIRT in your topology file and the #include statements will be skipped. But for this part of the tutorial it is important to have the line:\n#define GO_VIRT\nin the first line of your topology file (I.E. t4l_only.top)! Please check if martinize2 did take care of this in your master topology file (-top). Otherwise, the Gō beads and the Gō-like bonds will not be defined and you will receive an error message from gmx grompp.\nProceed as in the first part of the tutorial (steps 4 to 7) and start a production run. Keep in mind, we are adding a supplementary level of constraints on the protein; a supplementary relaxation step might be required (equilibration with position restraints and smaller time step for instance).\n\n\n\n\nFigure 2 | Licorice representation of T4 lysozyme backbone in 3 different Martini 3 models: (A) no bias; (B) elastic network (harmonic bonds in red); (C) GōMartini model (pair interactions represented in cyan). It is worth noticing that elastic network not only is different because of the potential function used, but also because the contact map is very different. Illustrations of secondary structure networks can be achieved using the MartiniGlass tool.\n\n\n\n\nMartini + OLIVES\n\nOne final model available for Martini proteins is OLIVES, which similar to the Gō model uses non-bonded potentials between beads to retain secondary structure. OLIVES uses a different contact map approach to the standard Gō model described above, based on hydrogen bonding native contacts. Due to a number of features of the OLIVES program (such as multistate functionality), it is not integrated into Martinize2, and must be called via a dedicated routine. Further instructions for OLIVES can be found in the paper by Pedersen et al. 2017 [11], and in the examples folder of the GitHub repository.\n\n\nComparison between models\n\nNow you’ve got three simulations of the same protein with different Martini protein models. If you do not want to wait, some pre-run trajectories can be found in the archive. One of them might fit your needs in terms of structural and dynamic behavior. If not, there are an almost infinite number of ways to further tweak the elastic network and Gō-like models.\nAn easy way to compare the slightly different behaviors of the proteins in the previous three cases is to follow deviation/fluctuation of the backbone during simulation (and compare it to an all-atom simulation if possible). RMSD (Fig. 3) and RMSF can be calculated using gromacs tools (gmx rms and gmx rmsf). VMD also provides a set of friendly tools to compute these quantities, but needs some tricks to be adapted to coarse-grained systems (standard keywords are not understood by VMD on coarse-grained structures).\n\n\n\nFigure 3 | RMSD of T4 lysozyme backbone with the three different approaches described previously: no bias, elastic network and GōMartini model (RMSD is usually considered “reasonable” if below 3 Å, but this depends of the system).\n\n\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nVMD (https://www.ks.uiuc.edu/Research/vmd/)\nmartinize2 (https://github.com/marrink-lab/vermouth-martinize)\nMartiniGlass (https://github.com/Martini-Force-Field-Initiative/MartiniGlass)\n\n\n\nOther resources\n\nFor more extensive background on the various options available in martinize2, see the documentation.\n\n\nReferences\n\n [1] P. C. T. Souza, et al., Martini 3: a general purpose force field for coarse-grained molecular dynamics. Nat. Methods 18, 382–388 (2021). \n [2] L. Monticelli, et al., The MARTINI Coarse-Grained Force Field: Extension to Proteins. J. Chem. Theory Comput. 4, 819–834 (2008). \n [3] D. H. de Jong, et al., Improved Parameters for the Martini Coarse-Grained Protein Force Field. J. Chem. Theory Comput. 9, 687–97 (2013). \n [4] S. J. Marrink, H. J. Risselada, S. Yefimov, D. P. Tieleman, A. H. de Vries, The MARTINI force field: coarse grained model for biomolecular simulations. J. Phys. Chem. B 111, 7812–7824 (2007). \n [5] R. Alessandri, et al., Pitfalls of the Martini Model. J. Chem. Theory Comput. 15, 5448–5460 (2019). \n [6] X. Periole, M. Cavalli, S.-J. Marrink, M. A. Ceruso, Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition. J. Chem. Theory Comput. 5, 2531–2543 (2009). \n [7] A. B. Poma, M. Cieplak, P. E. Theodorakis, Combining the MARTINI and Structure-Based Coarse-Grained Approaches for the Molecular Dynamics Studies of Conformational Transitions in Proteins. J. Chem. Theory Comput. 13, 1366–1374 (2017). \n [8] F. A. Herzog, L. Braun, I. Schoen, V. Vogel, Improved Side Chain Dynamics in MARTINI Simulations of Protein–Lipid Interfaces. J. Chem. Theory Comput. 12, 2446–2458 (2016). \n [9] A. Morton, B. W. Matthews, Specificity of ligand binding in a buried nonpolar cavity of T4 lysozyme: Linkage of dynamics and structural plasticity. Biochemistry 34, 8576–8588 (1995). \n [10] M. Bulacu, et al., Improved Angle Potentials for Coarse-Grained Molecular Dynamics Simulations. J. Chem. Theory Comput. 9, 3282–92 (2013). \n [11] S. J. Marrink, et al., Computational Modeling of Realistic Cell Membranes. Chem. Rev. 119, 6184–6226 (2019). \n [12] K. B. Pedersen, et al., OLIVES: A Go-like Model for Stabilizing Protein Structure via Hydrogen Bonding Native Contacts in the Martini 3 Coarse-Grained Force Field. J. Chem. Theory Comput. 20, 8049–8070 (2024)"
  },
  {
    "objectID": "docs/tutorials/Martini3/TS2CG/index.html",
    "href": "docs/tutorials/Martini3/TS2CG/index.html",
    "title": "TS2CG: membranes with user-defined shapes and compositions",
    "section": "",
    "text": "In case of issues, please contact w.pezeshkian@rug.nl or m.konig@rug.nl.\n\n\nSummary\n\nIntroduction\n\nDownload and install TS2CG\n\nTutorials\n\n1: Creating a simple vesicle\n2: Creating lipid Mixture\n3: Membrane domains\n4: Adding proteins to a membrane\n5: Proteins with a specific domain\n6: Fixed shapes\n\nGeneral information on how to run the outputs from TS2CG\n\n.tsi file Format\nVisualizing .tsi or .q files\n\nHow to obtain a TS file\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nTS2CG is used to build coarse-grained membrane models with user-defined shapes and compositions. Initially, it was developed for backmapping dynamically triangulated simulation structures into their corresponding molecular models. This gives us the possibility to incorporate experimentally obtained membrane shapes and compositions and generate CG membrane’s initial structure.\nIn Fig. 1 the general workflow of TS2CG is exemplified for a vesicle containing a single protein (shown as a yellow bead). The initial triangulated surface is rescaled to the desired system size and the two monolayers are generated. In order to have enough points for the subsequent lipid placement, the number of vertices in both monolayers is increased using a pointillism operation, i.e. each triangle is divided into four new triangles thereby increasing the number of vertices by a factor of four. In the last steps, proteins and lipids are placed on the respective vertices. For more details on the method, please refer to the original paper[1].\n\n\n\nFigure 1 | Steps in backmapping a triangulated surface (TS) mesh using TS2CG. (Step 1) A TS structure of a vesicle containing one protein (yellow bead) is rescaled and two TS structures corresponding to the two monolayers that are generated. (Step 2) Using a Pointillism operation, the number of vertices is increased. (Step 3) The CG protein structure together with a membrane segment is placed at the appropriate TS position. (Step 4) Lipids are placed at the remaining positions and the configuration is ready for subsequent MD simulation.\n\n\nCurrently, TS2CG version 1.1 can utilize two types of TS input file formats: Files with .q and .tsi extension. While both are quite similar, .tsi files are more generic and future developments will be based on this file format. For more details about the .tsi file format see the end of this file. In tutorials 1 to 5 we will use a .tsi file called Sphere.tsi to build a simple vesicle and subsequently add different membrane domains with and without protein insertions.\nAdditionally, TS2CG can be used to create well-defined (analytical) shapes from scratch. In tutorial 6 we will demonstrate how to build a curved bilayer and maintain the curvature using a shape-preserving wall.\n\n\n\nFigure 2 | Example applications of TS2CG. Mitochodrion lipid membrane backmapped from EM map (upper panel left), protein induced membrane tubulation backmapped from DTS simulation (upper panel right), budded lipid bilayer including STxB proteins backmapped from DTS simulation (lower panel left) and curved lipid bilayer with two different lipid types created from scratch using PCG.\n\n\n\nDownload and install TS2CG\n\nDownload the latest version of the TS2CG from:\n\nhttps://github.com/marrink-lab/TS2CG1.1\n\nFor compiling, gcc version 8.3.0 or above is needed.\nIn the source code folder, execute the script compile.sh as:\n./compile.sh\nIn this folder, two binary files will be generated: PLM and PCG (and a SOL script for adding solvent to the systems). PLM performs pointillism (Step 1 and 2) and PCG performs Membrane builder (Step 3 and 4).\n\n\n\nTutorials\n\nFrom the downloaded TS2CG folder, you can find all the files needed for these tutorials in the tutorials folder. Please create a new folder for each tutorial and copy the files you from the files folder into this new folder.\n\n1: Creating a simple vesicle\n\nIn this tutorial we will use a simple TS file (sphere) to create a vesicle. We choose this shape because it is small and can be run on your local machines. However, the same scheme can be used for any other TS files.\nFrom the files folder select the Sphere.tsi file. Use a text editor to open this and familiarize yourself with the structure. See .tsi file format at the end of this document for more information about the file format. You can also use pymol or paraview to visualize the structure (see Visualizing .tsi or .q files).\nThe first step in backmapping any TS file to a CG structure is to increase the number of vertices using a pointillism operation (done by PLM). In the same step we also generate the two monolayers.\nPath_to_TS2CG/PLM -TSfile Sphere.tsi -bilayerThickness 3.8 -rescalefactor 4 4 4 \nIn the pointvisualization_data folder, you will find gromacs compatible structure files (.gro) for the upper and lower monolayer including a topology file (.top) each as well as paraview compatible .vtu files for both monolayers. You can have a look at the created points using vmd or paraview.\nThe second step to create a vesicle is two place lipids on the generated points using PCG. For this you need to write a .str file defining the lipid composition of both monolayers. Using any text editor, create an input.str file and write the following text in it:\n[Lipids List]\nDomain      0\nPOPC     1     1     0.64\nEnd\nThis implies that your system should contain only one lipid domain with POPC in both monolayers using an area per lipid (APL) for POPC of 0.64. To know more about the .str file format and other options see the User Manual.\nThe other thing we need is a lipid structure file (.LIB). This file simply defines the lipid connectivity for placing the lipid beads on the previously generated points. Making this file is easy but might be time consuming for many different lipids. (See the User Manual for the exact file format). Luckily, we already have a file that contains all Martini3 lipids called Martini3.LIB, you can find it in the files folder.\nUsing these two files now you can execute PCG:\nPath_to_TS2CG/PCG -str input.str -Bondlength 0.2 -LLIB Martini3.LIB -defout system\nThe outputs are system.gro and system.top:\n\n\n\nFigure 3 | Snapshot of the simple POPC vesicle made with vmd (left) and the corresponding topology file (right).\n\n\n;This file was generated by TS Back Mapping\n[ system ]\nExpect a large membrane\n; domain 0\n; in the upper monolayer\nPOPC 6256\n; domain 0\n; in the lower monolayer\nPOPC 3876\nCreating vesicles like shown above is straightforward however running them is not so simple. Here we used the assumption that POPC has the same area per lipid in both leaflets which is unfortunately not true for small vesicles due to the highly curved nature of the leaflets. To account for the curvature effect we have to allow the vesicle to equilibrate both water content and number of lipids in each leaflet. The easiest way to do this is by creating water pores for equilibration and closing theses pores in a step-wise manner. You can find a script called run_vesicle.sh in the files folder, which will create a POPC vesicle with 4 nm pores along each dimension. The vesicle will also be filled with water, energy minimized and equilibrated, thereby gradually closing the water pores. Note: We use MDAnalysis to create a position restraints file which is need to keep the lipid tails out of the pores.\n\n\n2: Creating lipid Mixture\n\nRepeating the previous tutorial but with the .str file shown below, you will create a 50/50 mixture of POPC and DOPC in both monolayers.\n[Lipids List]\nDomain      0\nPOPC      0.5     0.5     0.64\nDOPC      0.5     0.5     0.67\nEnd\nExecuting PCG will generate two output files system.gro and system.top:\n\n\n\nFigure 4 | Snapshot of the mixed POPC (blue) / DOPC (orange) vesicle made with vmd (left) and the corresponding topology file (right).\n\n\n;This file was generated by TS Back Mapping\n[ system ]\nExpect a large membrane\n[ molecules ]\n; domain 0\n; in the upper monolayer\nPOPC 3056\nDOPC 3056\n; domain 0\n; in the lower monolayer POPC 1893\nDOPC 1893\n\n\n3: Membrane domains\n\nTo make a membrane containing two or more different lipid domains, we need to modify the .tsi file. These changes can be made manually or by using a script. Here we only try it manually.\nFirst use the command below to obtain a .gro file containing all the vertices:\nPath_to_TS2CG/PLM -TSfile Sphere.tsi -bilayerThickness 0 -rescalefactor 0.2 0.2 0.2 -Mashno 0\nThis time, we reduced the size of the original .tsi file (using -rescalefactor 0.2 0.2 0.2) and kept the initial number of vertices (using -Mashno 0). This allows for an easier selection of points when done manually. Now, open the file Upper.gro from the pointvisualization_data folder using vmd. You will see all the vertices of the triangulated surface. Find a few beads for which you want to create a new domain of lipids (e.g. select beads in vmd using Mouse &gt; Label &gt; Atoms). I selected vertices [113, 117, 124, 48, 112] for domain number 1 and [74, 82, 81, 45] for domain number 2 and the rest remains as domain 0.\nNext, open Sphere.tsi using a text editor and find the line of selected vertices. Add the domain ID to the end of the line (here: add a 1 for vertices with index 113, 117, 124, 48, 112 and a 2 for vertices with index 74, 82, 81, 45). Note: Lines that do not have any domain ID belong to domain 0 per default. After doing so, you need to modify the input.str file to define the lipid composition of each domain:\n[Lipids List]\nDomain      0\nPOPC     1     1     0.64\nEnd\nDomain      1\nDOPC     1     1     0.64\nEnd\nDomain       2\nPOPE     1     1     0.64\nEnd\nThen execute PLM and PCG using the commands below (as done in the previous tutorials). This will generate a vesicle with three lipid domains.\nPath_to_TS2CG/PLM -TSfile Sphere.tsi -bilayerThickness 3.8 -rescalefactor 4 4 4\nPath_to_TS2CG/PCG -str input.str -Bondlength 0.2 -LLIB Martini3.LIB -defout system\n\n\n\nFigure 5 | Snapshot of vertices from Upper.gro after defining three different domains made with vmd (left) and the corresponding topology file (right).\n\n\n;This file was generated by TS Back Mapping\n[ system ]\nExpect a large membrane\n; domain 0\n; in the upper monolayer\nPOPC 5833\n; domain 0\n; in the lower monolayer\nPOPC 3615\n; domain 1\n; in the upper monolayer\nDOPC 262\n; domain 1\n; in the lower monolayer\nDOPC 161\n; domain 2\n; in the upper monolayer\nPOPE 160\n; domain 2\n; in the lower monolayer\nPOPE 99\n\n\n4: Adding proteins to a membrane\n\nIn this tutorial we are going to add two types of proteins to a vesicle containing POPC lipids. These proteins are named P1.gro and P2.gro, which will be called protein1 and protein2 in the rest of this tutorial. First, we need to select vertices for the protein placmenent in the .tsi file. Afterwards, we match their corresponding names in the .gro file with the ones in the .str file. Therefore, we need to perform some tricks on the .tsi and .str file. These changes can be made manually or by using a script. Here we only try it manually.\nFirst, use the below command to obtain a .gro file of vertices positions of our vesicle:\nPath_to_TS2CG/PLM -TSfile Sphere.tsi -bilayerThickness 0 -rescalefactor 0.2 0.2 0.2 -Mashno 0\nThen in the pointvisualization_data folder, open Upper.gro using vmd. You will see all the vertices of the triangulated surface. Find some vertices at which you would like to place the proteins. We selected vertices 22 and 5 to place two copies of protein1 and vertex 30 to place one copy of protein2. Using a text editor, open the Sphere.tsi file and go to the bottom of the file to the inclusion section. As we want to add 3 proteins, change the zero to 3 and then in the next line, add the protein information. For each protein, you need 3 integer numbers and 2 float numbers. The first number is the protein index that should start from 0. The second number is the protein type id, which is 1 for potein1 and 2 protein2 (it can be any number but the type id must match the one in input.str, see below). The third number is the index of the vertex that the protein will be placed on. The last two numbers are the orientation of the protein in the local coordinate frame of the vertex, these should be a unit two-dimensional vector. The inclusion section of Sphere.tsi file should look like this:\ninclusion      3\n0     1     22     0     1\n1     1      5     0     1\n2     2     30     0     1\nNow, open P1.gro and P2.gro from the files folder and change the first line to the name of the proteins (protein1 and protein2). These files should be included on top of your input.str file as:\ninclude P1.gro\ninclude P2.gro\nThe last step is to define the proteins in the input.str file. In addition to including the protein .gro file names in the header, there should be some information about the protein placement:\n[Protein List]\nprotein1     1     0.01     0     0     -3.7\nprotein2     2     0.01     0     0     -2.4\nEnd Protein\nThe first and the last line are keywords indicating that we want to define proteins. The lines in between the first and the last depend on the number of unique proteins you want to include. Here we got two, therefore we only have two lines in between. The first entry is the protein name in the .gro file. The second entry indicates the protein type ID (this ID was used in the .tsi file in the inclusion section). The last entry indicates how much we should move the proteins in the normal direction of the membrane surface. The remaining three numbers are not being used in the current approach.\nFinally, you can execute PLM and PCG using the commands below (or as previous tutorials). The result should be a POPC membrane with three proteins.\nPath_to_TS2CG/PLM -TSfile Sphere.tsi -bilayerThickness 3.8 -rescalefactor 3 3 3\nPath_to_TS2CG/PCG -str input.str -Bondlength 0.2 -LLIB Martini3.LIB -defout system\n\n\n\nFigure 6 | Cross-section (left) and full vesicle (right) of system.gro after placment of three protein copies.\n\n\n\n\n5: Proteins with a specific domain\n\nIn this tutorial we are going to combine Tutorials 3 and 4 to define a specific lipid domain for each protein copy. So let’s change the domain ID of vertices 22, 5, 30 that are supposed to be the location of the proteins in Sphere.tsi as demonstrated in Tutorial 3. We set 22 and 5 to domain 1 and 30 to domain 2. We also change the lipid section in input.str to:\n[Lipids List]\nDomain      0\nPOPC     1     1     0.64\nEnd\nDomain      1\nDOPC     1     1     0.64\nEnd\nDomain       2\nPOPE     1     1     0.64\nEnd\nNow perform PLM and PCG again:\nPath_to_TS2CG/PLM -TSfile Sphere.tsi -bilayerThickness 3.8 -rescalefactor 6 6 6\nPath_to_TS2CG/PCG -str input.str -Bondlength 0.2 -LLIB Martini3.LIB -defout system\n\n\n\nFigure 7 | Mixed POPC/DOPC/POPE with three proteins. Each protein copy has its own spectic lipid enviornment.\n\n\nYou may not be happy about the lipid domain around the proteins. Since the resolution of the .tsi file is low, the shape of the lipid domain around the proteins gets strongly affected by the discretization. This can be improved with a little bit of effort.\nUse Sphere.tsi from the files folder and add the same inclusion section as before but without adding the lipid domains. The end of your .tsi file should look like this:\ninclusion      3\n0     1     22     0     1\n1     1      5     0     1\n2     2     30     0     1\nNow we are adding the lipid domains around each protein copy using a small script. But first we need to increase the number of the triangles and global size of the system without affecting the shape of the .tsi file:\nPath_to_TS2CG/PLM -TSfile Sphere.tsi -bilayerThickness 0 -rescalefactor 8 8 8\nThe output .tsi file is called extended.tsi. Change the name of this file to Sphere_2.tsi.\nNext, compile tsi_format.cpp, which can be found in the files, for creating the lipid domains using c++:\ng++ -o domain tsi_change.cpp\nand then execute following command to create lipid domains with diameter of 8 nm around each protein copy:\n./domain Sphere_2.tsi Sphere_domain.tsi 8\nThe Sphere_domain.tsi file is the new .tsi file which contains the Sphere_2.tsi surface and protein information. The domain ids around each protein match the protein ids. Next, we are going to perform PLM and PCG using Sphere_2.tsi. This time we ask PLM to not to extend the surface and just create the two monolayer.\nPath_to_TS2CG/PLM -TSfile Sphere_domain.tsi -bilayerThickness 4 -rescalefactor 1 1 1 -Mashno 0 \nPath_to_TS2CG/PCG -str input.str -Bondlength 0.2 -LLIB Martini3.LIB -defout system\nYou should get an output as shown below figure.\n\n\n\nFigure 8 | Mixed POPC/DOPC/POPE with three proteins. The lipid domain around each protein is precisely defined by an 8 nm circle around each protein copy.\n\n\n\n\n6: Fixed shapes\n\nWithout a need for a .tsi file, PCG also allows for creating membranes with certain fixed shapes such as flat bilayers, spheres, cylinders and other periodic shapes that can be written as a sum of fourier 1D modes. This is a new feature of PCG and therefore some limitations exist. There is also a wall option that allows you to keep the shape during both the equilibration and production run.\nPath_to_TS2CG/PCG -str input.str -Bondlength 0.2 -LLIB Martini3.LIB -defout system -function analytical_shape\nIn the .str file the shape information is defined as below for creating different shapes.\nNote: Not all the options need to be specified in the .str file. The shape type option is needed but you could use the default values for the rest.\n\n\n\n\n\n\n\n\n\nCylinder\n\n\n[Shape Data] ShapeType Cylinder Box 40 40 40 Density 2 Thickness 4 Radius 12 End\n\n\n\n\n1D Fourier Shape\n\n\n[Shape Data] ShapeType 1D_PBC_Fourier Box 20 10 20 WallRange 0 1 0 1 Density 3 1 Thickness 4 Mode 1.5 1 0 Mode 0.5 2 0 End\n\n\n\n\n\n\nSphere\n\n\n[Shape Data] ShapeType Sphere Box 40 40 40 Density 2 WallDensity 1 1Thickness 4DL 0.2Radius 15 End\n\n\n\n\nFlat\n\n\n[Shape Data]  ShapeType Flat Box 40 40 40 Density 2 2 Thickness 4WallRange 0 1 0 1 End\n\n\n\n\n\n\n\n\n\nFigure 9 | Curved lipid bilayer created with the analytic shape function of PCG.\n\n\n\n\nCreating the Wall\n\nTo generate the wall beads, you need to add the following flags to the PCG command line:\n-Wall -WallBName WL\nNote, it is all on you how to make the wall bead to interact with the bilayer for keeping the shape. However, the best option is to create a repulsive LJ interaction between the wall beads and lipid tail beads while the wall beads are invisible to other beads in the system. Example .mdp can be found in files/mdp_wall.\n\n\n\n\nGeneral information on how to run the outputs from TS2CG\n\n\nA short (100 steps) energy minimization with softcore potentials while restraining the lipid headgroups and protein backbones.\nNormal energy minimization without solvent.\nShort equilibration without solvent.\nSolvation (Note: Before solvation, always make sure the box size is what you need).\n\n./SOL -in input.gro -tem water.gro -unsize 3 -ion 0 0 -o solvated.gro -Rcutoff 0.32\n\nEnergy minimization.\nEquilibration.\nProduction run.\n\n\n.tsi file Format\n\nThe following shows a part of a .tsi file with all necessary keywords highlighted in bold. Every .tsi file starts with a line calling version 1.1 of TS2CG. The next line defines the box size (x, y, and z) of the system in nm. The next three sections describe the TS mesh. Each section starts with a keyword (vertex, triangle and inclusion) and their corresponding number. Here, we have 130 vertices (the numbering starts from 0). Each vertex has an index and a position in x, y and z (in nm). Additionally, a vertex can have a domain id, e.g., vertices 1, 126 and 127 belong to domain 1. The default domain is 0. The 130 vertices are connected via 256 triangles. Again, every triangle has an index (starting from 0) and is defined by the vertices the triangle connects, i.e. triangle 0 connects vertices 11, 55 and 43. Furthermore, a .tsi file can have a (protein) inclusion section. Here, there are three inclusions from two different types. Again, each inclusion has an index. The index is followed by the inclusion type (here: type 1 for inclusions 0 and 1, type 2 for inclusion 2) and the corresponding vertex index. The last two (floating point) numbers describe a unit two dimensional vector (sum of both numbers must be one!) which defines the orientation of the inclusion with respect to the bilayer normal.\n\nversion 1.1  box   50.0000000000   50.0000000000   50.0000000000  vertex   130  0   21.1606233083   25.4394806652   25.5960855271  1   27.0284995400   23.2012757654   21.6715285158   1  2   26.9921761232   25.5136587223   28.0195776981  3   23.3273229896   26.2315165676   28.0075875808   2  4   26.2722773116   26.3271061222   28.1420707299  5   22.0396876425   23.6080597437   26.8858740866   2  .  .  .  125   21.5556280860   25.5595098219   26.5363425272  126   23.2182025326   26.8060871266   21.5195141902   1  127   25.3199303865   24.3519379911   20.6752314764   1  128   28.0093200458   22.6356946990   23.4685318698  129   21.4000741257   26.5841316766   25.2761757772  triangle 256  0   11   55   43  1   94   75   14  2   64   3     91  3   59   52   40  .  .  .  253   33   109   44  254   53   69     47  255   85   6       74  inclusion   3  0   1   22   0   1  1   1     5   0   1  2   2   30   0   1 \n\n\n\n\nVisualizing .tsi or .q files\n\nFrom the files folder in the tutorial folder copy a .tsi file in your working folder. These files can be visualized using pymol, vmd or paraview.\n\nPymol\nYou need PyMOL2q.py from the TS2CG folder then do the following steps:\n\nLoad Pymol.\nOn pymol window, execute “run PyMOL2q.py”\nThen execute “loadq Your_TS_File.tsi”\n\n\n\nparaview or vmd visualization of the generated points\nPath_to_TS2CG/PLM -TSfile Your_TS_File -bilayerThickness 0 -rescalefactor 1 1 1 -Mashno 0\nThen in pointvisualization_data folder, you can find several files and it is the gro file which can be used for visualization.\n\n\n\nHow to obtain a TS file\n\nTS files can be obtained from different sources. 1) Form DTS simulations or 2) by converting density points to mashes for example using Blender, Geogram and GAMer. When using Blender you can import any .stl file or other 3D file and use blender_mesh2tsi.py which can be found in the files folder.\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nVMD (https://www.ks.uiuc.edu/Research/vmd/)\nTS2CG (https://github.com/marrink-lab/TS2CG1.1)\n\n\n\nReferences\n\n[1] Pezeshkian, W., König, M., Wassenaar, T.A. et al. Backmapping triangulated surfaces to coarse-grained membrane models. Nat Commun 11, 2296 (2020) (https://doi.org/10.1038/s41467-020-16094-y)"
  },
  {
    "objectID": "docs/tutorials/Martini3/Small_Molecule_Parametrization/index.html",
    "href": "docs/tutorials/Martini3/Small_Molecule_Parametrization/index.html",
    "title": "Parametrization of a new small molecule",
    "section": "",
    "text": "In case of issues, please contact riccardo.alessandri@kuleuven.be or open an issue on the repo.\n\n\nSummary\n\nIntroduction\nGenerate atomistic reference data\nAtom-to-bead mapping\nGenerate the CG mapped trajectory from the atomistic simulation\nCreate the initial CG itp and tpr files\nGenerate target CG distributions from the CG mapped trajectory\n\nOn the choice of bonded terms for the CG model\nIndex files and generation of target distributions\n\nCreate the CG simulation\nOptimize CG bonded parameters\nComparison to experimental results, further refinements, and final considerations\n\nPartitioning free energies\nMolecular volume and shape\n\nUsing Bartender to generate bonded parameters\n\nInstalling Bartender\nPreparing Bartender input files\nRunning Bartender\nAnalyzing the resulting files\n\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nIn this tutorial, we will discuss how to build a Martini 3 topology for a new small molecule. The aim is to have a pragmatic description of the Martini 3 coarse-graining (CGing) principles [1,2], which follow the main ideas outlined in the seminal Martini 2 work [3]. Among other things, you may want to parametrize a small molecule with Martini 3 in order to perform protein-ligand binding simulations [4] or perhaps test the solubility of a molecular dopant in different environments [5].\nWe will use as an example the molecule 1-ethylnaphthalene (Fig. 1), and make use of Gromacs versions 2019.x or later. Required files and worked examples can be downloaded here, and files for Bartender can be obtained here.\n\n\n\nFigure 1 | 1-ethylnaphthalene.\n\n\n\n\n1. Generate atomistic reference data\n\nWe will need atomistic reference data to extract bonded parameters for the CG model. Note that we will need all the hydrogen atoms to extract bond lengths further down this tutorial, so make sure that your atomistic structure contains all the hydrogens.\nHere, we will use the LigParGen server [6] as a way to obtain an atomistic (or all-atom, AA) structure and molecule topology based on the OPLS-AA force field, but of course feel free to use your favorite atomistic force field. Other web-based services such as the automated topology builder (ATB) or CHARMM-GUI can also be used to obtain reference topologies based on other AA force fields. Another important option is to look in the literature for atomistic studies of the molecule you want to parametrize: if you are lucky, somebody might have already published a validated atomistic force field for the molecule, which you can then use to create reference atomistic simulations.\nStart by feeding the SMILES string for 1-ethylnaphthalene (namely, CCc1cccc2ccccc21) to the LigParGen server, and pick the “1.14*CM1A-LBCC (Neutral molecules)” charge model (nothing special about this choice of charge model). After submitting the molecule, the server will generate input parameters for several molecular dynamics (MD) packages. Download the structure file (.pdb) as well as the OPLS-AA topology in the GROMACS format (.top) and rename them ENAP_LigParGen.pdb and ENAP_LigParGen.itp, respectively. You can now unzip the zip archive provided:\nunzip files-m3-parametrize_new_small_molecule.zip\nwhich contains a folder called ENAP-in-water that contains some template folders and useful scripts. We will assume that you will be carrying out the tutorial using this folder structure and scripts. Note that the archive contains also a folder called ENAP-worked where you will find a worked version of the tutorial (trajectories not included). This might be useful to use as reference to compare your files (e.g., to compare the ENAP_LigParGen.itp you obtained with the one you find in ENAP-worked/1_AA-reference).\nWe can now move to the first subfolder, 1_AA-reference, and copy over the files you just obtained from the LigParGen server:\ncd ENAP-in-water/1_AA-reference\n\n[move here the obtained ENAP_LigParGen.pdb and ENAP_LigParGen.itp files]\n\nInput files obtained from LigParGen may come with unknown residue names. Before launching the AA MD simulation, we will substitute the UNK residue name by ENAP. To do so, open the ENAP_LigParGen.pdb with your text editor of choice and replace the UNK entries on the 4th column of the ATOM records section. This column defines the residue name on a .pdb file. Now open the ENAP_LigParGen.itp file and replace the UNK entries under the [ moleculetype ] directive and on the 4th column of the [ atoms ] directive. These define the residue name in a GROMACS topology file. (A lengthier discussion on GROMACS topology files will be given in section 4.) Alternatively, the following command - that relies on the Unix utility sed - will replace any UNK occurrence with ENAP (note the extra space after UNK which is important to keep the formatting of the .pdb file!):\nsed -i 's/UNK /ENAP/' ENAP_LigParGen.pdb\nsed -i 's/UNK /ENAP/' ENAP_LigParGen.itp\nNow launch the AA MD simulation:\nbash prepare_1mol_AA_system.sh  ENAP_LigParGen.pdb  spc216.gro  SOL  3\nThe last command will run an energy-minimization, followed by an NPT equilibration of 250 ps, and by an MD run of 10 ns (inspect the script and the various .mdp files to know more). Note that 10 ns is a rather short simulation time, selected for speeding up the current tutorial. You should rather use at least 50 ns, or an even longer running time in case of more complex molecules (you can try to experiment with the simulation time yourself!). In this case, the solvent used is water; however, the script can be adapted to run with any other solvent, provided that you input also an equilibrated solvent box. You should choose a solvent that represents the environment where the molecule will spend most of its time.\n\n\n2. Atom-to-bead mapping\n\nMapping, i.e., splitting the molecule in building blocks to be described by CG beads, is the heart of coarse-graining and relies on experience, chemical knowledge, and trial-and-error. Here are some guidelines you should follow when mapping a molecule to a Martini 3 model:\n\nonly non-hydrogen atoms are considered to define the mapping;\navoid dividing specific chemical groups (e.g., amide or carboxylate) between two beads;\nrespect the symmetry of the molecule; it is moreover desirable to retain as much as possible the volume and shape of the underlying AA structure;\ndefault option for 4-to-1, 3-to-1 and 2-to-1 mappings are regular (R), small (S), and tiny (T) beads; they are the default option for linear fragments, e.g., the two 4-to-1 segments in octane;\nR-beads are the best option in terms of computational performance, with the bead size reasonably good to represent 4-to-1 linear molecules;\nT-beads are especially suited to represent the flatness of aromatic rings;\nS-beads usually better mimic the “bulkier” shape of aliphatic rings;\nthe number of beads should be optimized such that the maximum mismatch in mapping is ±1 non-hydrogen atom per 10 non-hydrogen atoms of the atomistic structure;\nfully branched fragments should usually use beads of smaller size (the rational being that the central atom of a branched group is buried, that is, it is not exposed to the environment, reducing its influence on the interactions); for example, a neopentane group contains 5 non-hydrogen atoms but, as it is fully branched, you can safely model it as a regular bead.\n\nIn this example, first of all it is important to realize that, within Martini 3, conjugated, atom-thick structures are best described by Tiny (T) beads. This ensures packing-related properties closely matching atomistic data [1,2]. In this case, the 10 carbon atoms of the naphthalene moiety are therefore mapped to 5 T-beads, as shown in Fig. 2 below:\n\n\n\n\n\nFigure 2 | Atom-to-bead mapping of the 1-ethylnaphthalene.\n\n\n\nWhich leaves us with the ethyl group. A T-bead is again a good choice because the T-bead size is suited for describing 2 non-hydrogen atoms. Note that, the beads have also been numbered in the figure for further reference.\nA good idea to settle on a mapping is to draw your molecule a few times on a piece of paper, come up with several mappings, compare them, and choose the one that best fulfills the guidelines outlined above.\n\n\n3. Generate the CG mapped trajectory from the atomistic simulation\n\nUsing the mapping you just created, you will now transform the simulation you did at section 1 to CG resolution. One way to do this is by creating a Gromacs (AA-to-CG) index file where every index group stands for a bead and contains the mapped atom numbers.\nInstead of creating an index file by hand from scratch, an initial AA-to-CG index file can be obtained with the CGbuilder tool [7]. The intuitive GUI allows to map a molecule on the virtual environment almost as one does on paper. Just load the atomistic .pdb/.gro file of the molecule, click on the atoms you want to be part of the first bead, click again to remove them if you change your mind, create the next bead by clicking on the “new bead” button, and so on; finally, download the files once done. In fact, the tool allows also to obtain an initial CG configuration (a .gro file) for the beads and a CG-to-AA mapping file (a .map file) based on the chosen mapping. Doesn’t this sound better than traditional paper?! Current caveats of CGbuilder include the fact that atoms cannot contribute with a weight different from 1 to a certain bead, something which is sometimes needed when mapping atomistic structures to Martini. In such cases, the index and/or mapping files should be subsequently refined by hand.\nBefore you get to it: an important change in Martini 3 with respect to Martini 2.x is the fact that now hydrogen atoms are taken into account to determine the relative position of the beads when mapping an atomistic structure to CG resolution [1,2] - more on this later in this Section. This should be reflected in your AA-to-CG index file, that is, your index should also contain the hydrogens (in CGbuilder terms, click also on the hydrogens!). The general rule is to map a certain hydrogen atom to the bead which contains the non-hydrogen atom it is attached to.\nYou can now try to map the ENAP_LigParGen.pdb via CGbuilder. Once done, download the files that CGbuilder creates - .ndx, .map, and .gro - to the 2_atom-to-bead-mapping folder:\ncd ../2_atom-to-bead-mapping/\n\n[download cgbuilder.ndx, cgbuilder.map, and cgbuilder.gro and move them to the current folder, i.e., ‘2_atom-to-bead-mapping’]\n\nand compare the files obtained to the ones provided in ENAP-worked/2_atom-to-bead-mapping where, besides the files we just explained, you can also find a screenshot (ENAP_cgbuilder.png) of the mapping as done with the CGbuilder tool. Note also that the files provided assume the beads to be ordered in the same way as shown in Fig. 2; it is hence recommended to use the same order to greatly facilitate comparisons.\nAfter having populated your own ENAP-in-water/2_atom-to-bead-mapping subfolder with - at least - the ndx file (let’s call it ENAP_oplsaaTOcg_cgbuilder.ndx), move to the folder 3_mapped and copy over the index (we just rename it to mapping.ndx), that is:\ncd ../3_mapped/\ncp  ../2_atom-to-bead-mapping/ENAP_oplsaaTOcg_cgbuilder.ndx  mapping.ndx\nNow, we took into account the hydrogens because center of geometry (COG)-based mapping of AA structures, done taking into account the hydrogen atoms, constitutes the standard procedure for obtaining bonded parameters in Martini 3 [1,2]. Hence, we need to consider the hydrogens when mapping the AA structure to CG resolution. Because of a gmx traj unexpected behavior (a potential bug, see note [8]), if we want to stick to gmx traj (alternatives include, e.g., using the MDAnalysis Python library), we need a little hack before being able to run gmx traj. Namely, we need to first create an AA .tpr file with the atoms of the atomistic structure all having the same mass. To do this, still from the 3_mapped folder, create a new .itp with the modified masses:\ncp  ../1_AA-reference/ENAP_LigParGen.itp  ENAP_LigParGen_COG.itp\nOpen ENAP_LigParGen_COG.itp with your text editor of choice and change the values on the 8th column under the [ atoms ] directive to an equal value (of, for example, 1.0). This column defines the atom mass in a GROMACS topology file. Now prepare a new .top file which includes it:\ncp ../1_AA-reference/system.top system_COG.top\nsed -i 's/ENAP_LigParGen.itp/ENAP_LigParGen_COG.itp/' system_COG.top\nYou can now run the script:\nbash 3_map_trajectory_COG.sh\nwhich will:\n\nfirst make sure that the AA trajectory is whole, i.e., your molecule of interest is not split by the periodic boundary conditions in one or more frames in the trajectory file (the gmx trjconv -pbc whole … command);\nsubsequently create a AA-COG.tpr, which will be used for the COG mapping in the following step (the gmx grompp -p … command);\nfinally, map the AA trajectory to CG resolution: the gmx traj -f… command contained in 3_map_trajectory_COG.sh will do COG-mapping because it uses the AA-COG.tpr.\n\n\n\n4. Create the initial CG itp and tpr files\n\nGROMACS .itp files are used to define components of a topology as a separate file. In this case we will create one to define the topology for our molecule of interest, that is, define the atoms (that, when talking about CG molecules, are usually called beads), atom types, and properties that make up the molecule, as well as the bonded parameters that define how the molecule is held together.\nThe creation of the CG .itp file has to be done by hand, although some copy-pasting from existing .itp files might help in getting the format right. A thorough guide on the GROMACS specification for molecular topologies can be found in the GROMACS reference manual, however, this tutorial will guide you through the basics.\nThe first entry in the .itp is the [ moleculetype ], one line containing the molecule name and the number of nonbonded interaction exclusions. For Martini topologies, the standard number of exclusions is 1, which means that nonbonded interactions between particles directly connected are excluded. For our example this would be:\n[ moleculetype ]\n; molname    nrexcl\n  ENAP         1\nThe second entry in the .itp file is [ atoms ], where each of the particles that make up the molecule are defined. One line entry per particle is defined, containing the beadnumber, beadtype, residuenumber, residuename, beadname, chargegroup, charge, and mass. For each bead we can freely define a beadname. The residue number and residue name will be the same for all beads in small molecules, such as in this example.\nIn Martini, we must also assign a bead type for each of the beads. This assignment follows the “Martini 3 Bible” (from Refs. [1,2]), where initial bead types are assigned based on the underlying chemical building blocks. You can find the “Martini 3 Bible” in the form of a table at this link. In this example, bead number 1 represents the ethyl group substituent; according to the “Martini 3 Bible” ethyl groups are represented by TC3 beads. Check the table yourself to see which bead types to use to describe the remaining beads. For a lengthier discussion of bead choices, see the final section of this tutorial.\nEach bead will also have its own charge, which in this example will be 0 for all beads. Mass is usually not specified in Martini; in this way, default masses of 72, 54, and 36 a.m.u. are used for R-, S-, and T-beads, respectively. However, when defined the mass of the beads is typically the sum of the mass of the underlying atoms.\nFor our example, the atom entry for our first bead would be:\n[ atoms ]\n; nr type resnr residue atom cgnr charge mass\n   1  TC2   0    ENAP   C1    1    0     \n...\nThese first two entries in the .itp file are mandatory and make up a basic .itp. Finish building your initial CG .itp entries and name the file ENAP_initial.itp. The [ moleculetype ] and [ atoms ] entries are typically followed by entries which define the bonded parameters: [ bonds ], [ constraints ], [ angles ], and [ dihedrals ]. For now, you do not need to care about the bonded entries, have a look at the next section for considerations about which bonded terms you will need and how to define them.\nBefore going onto the next step, we need a CG tpr file to generate the distributions of the bonds, angles, and dihedrals from the mapped trajectory. To do this, move to the directory 4_initial-CG, where you should place the ENAP_initial.itp and that also contains a system_CG.top, the martini_v3.0.0.itp and a martini.mdp and run the script:\ncd ../4_initial-CG\nbash 4_create_CG_tpr.sh\nThe script will:\n\nextract one frame from your trajectory (mapping it to CG resolution, of course);\nuse the frame, along with the .top and .mdp files (see examples of the latter here and here, respectively) to create a CG.tpr file for your molecule.\n\n\n\n5. Generate target CG distributions from the CG mapped trajectory\nWe need to obtain the parameters of the bonded interactions (bonds, constraints, angles, proper and improper dihedrals) which we want in our CG model from our mapped-to-CG atomistic simulations from section 3). However, which bonded terms do we need to have? Let’s go back to the drawing table and identify between which beads there should be bonded interactions.\n\n5.1 On the choice of bonded terms for the CG model\n\nThe bonds connecting the T-beads within the 1-ethyl-naphthalene moiety are most likely going to be very stiff, that is, their distributions are going to be very narrow. This calls for the use of constraints [1-3]. A “naive” way of putting the model together would be to constrain all the beads (see Fig.3A below):\n\n\n\nFigure 3 | Possible bonded interactions in the 1-ethylnaphthalene.\n\n\nsuch a model, however, is prone to numerical instabilities, because it is increasingly complicated for the constraint algorithm to satisfy a growing number of connected constraints. Another option is to build a “hinge” model [2] (inspired by the work of Melo et al. [9]) where the 4 external beads (beads 2, 3, 5, and 6 of Fig. 3) are connected by 5 constraints to form a “hinge” construction, while the central bead (bead number 4) is described as a virtual site, that is, a particle whose position is completely defined by its constructing particles (Fig. 3B above). The use of virtual particles not only improves the numerical stability of the model but also improves performance [2]. As virtual sites are mass-less, the mass of the virtual site should be shared among the four constructing beads, so that beads 2, 3, 5, and 6 should have each a mass of 45 (= 36 + 36/4, where 36 is the mass of a T-bead).\nBead 1 can then be connected by means of two bonds, namely 1-2 and 1-4. Two improper dihedrals (1-3-6-5 and 2-1-4-3) will be required in order to keep bead 1 on the right position onto the naphthalene ring. A final improper dihedral 2-3-6-5 will also be needed to keep the naphthalene ring flat. Exclusions between all beads should also be applied in this case, as the molecule is quite stiff and having intramolecular interactions in this case is not needed.\nHaving decided on the bonded terms to use, they must now be defined in the .itp file under the [ bonds ], [ constraints ], [ angles ], [ dihedrals ], and [ virtual_sitesn ] entries. In general, each bonded potential is defined by stating the atom number of the particles involved, the type of potential involved, and then the parameters involved in the potential, such as reference bond lengths/angle values or force constants. This definition is highly dependent on the type of potentials employed and, as such, users should always reference the GROMACS manual for specific details. Here, we will use this example to cover the most common potentials used in defining Martini topologies.\nBonds are defined under [ bonds ] by stating the atom number of the particles involved, the type of bond potential (in this case, type 1, a regular harmonic bond) followed by the reference bond length and force constant. Constraints are defined similarly to bonds, under the [constraints ] section, with the exception that no force constant is needed. If we use bond 1-2 and constraint 2-3 as examples, your .itp should look something like this:\n[bonds]\n; i j funct length kb\n 1 2 1 0.260 20000 \n...\n\n[constraints]\n; i j funct length\n 2 3 1 0.260 \n...\nAngles and dihedrals follow the same strategy, stating the atom number of the particles involved, the type of potential, and, in this case, the reference angle and force constant. While there are no angles defined in this example, we have 3 improper dihedral potentials in place (regular and improper dihedral potentials correspond to dihedral function types 1 and 2, respectively):\n[ dihedrals ]\n; improper\n; i j k l funct ref.angle force_k\n 1 3 6 5 2 0 10 \n...\nVirtual sites are defined slightly differently. In this case, you define the atom number of the virtual site, followed by the type of virtual site, and the atom numbers of the constructing particles. In our case:\n[ virtual_sitesn ]\n; site funct constructing atom indices\n 4 1 2 3 5 6\nFinally, to apply exclusions, we state the atom number of the target particle followed by the numbers of the atoms from which the target particle is to be excluded:\n[ exclusions ]\n 1 2 3 4 5 6\nUsing initial guesses for the reference bond lengths/angles and force constants you can now create a complete topology for the target molecule. These initial guesses will be improved upon in a further section by comparing the AA and CG bonded distributions and adjusting these values.\n\n\n5.2 Index files and generation of target distributions\n\nOnce you have settled on the bonded terms, create index files for the bonds with a directive [bondX] for each bond, and which contains pairs of CG beads, for example:\n[bond1]\n 1 2\n[bond2]\n 1 4\n...\nand similarly for angles (with triples of CG beads) and dihedrals (with quartets). Write scripts that generate distributions for all bonds, angles, and dihedrals you are interested in. For 1-ethyl-naphthalene, there are seven bonds (5 constraints and 2 bonds) and three dihedrals, as discussed. A script is also provided, so that:\ncd  ENAP-in-water/5_target-distr\n\n[create bonds.ndx and dihedrals.ndx]\n\nbash 5_generate_target_distr.sh\nwill create the distributions. Inspect the folders bonds_mapped, and dihedrals_mapped for the results. You will find each bond distributions as bonds_mapped/distr_bond_X.xvg and a summary of the mean and standard deviations of the mapped bonds as bonds_mapped/data_bonds.txt.\nFor each bond, the script uses the following command (in this example, the command is applied for the first bond, whose index is 0):\necho 0 | gmx distance -f ../3_mapped/mapped.xtc -n bonds.ndx -s ../4_initial-CG/CG.tpr -oall bonds_mapped/bond_0.xvg -xvg none\ngmx analyze -f bonds_mapped/bond_0.xvg -dist bonds_mapped/distr_bond_0.xvg -xvg none -bw 0.001\nand similarly for the first dihedral:\necho 0 | gmx angle -type dihedral -f ../3_mapped/mapped.xtc -n dihedrals.ndx -ov dihedrals_mapped/dih_0.xvg\ngmx analyze -f dihedrals_mapped/dih_0.xvg -dist dihedrals_mapped/distr_dih_0.xvg -xvg none -bw 1.0\n\n\n\n6. Create the CG simulation\n\nWe can now finalize the first take on the CG model, ENAP_take1.itp, where we can use the info contained in the data_bonds.txt and data_dihedrals.txt files to come up with better guesses for the bonded parameters:\ncd ENAP-in-water/6_CG-takeCURRENT\ncp ../4_initial-CG/molecule.gro .\ncp ../4_initial-CG/ENAP_initial.itp ENAP_take1.itp\n\n[adjust ENAP_take1.itp with input from the previous step]\n\nbash prepare_CG_1mol_system.sh  molecule.gro  box_CG_W_eq.gro  W  1\nwhere the command will run an energy-minimization, followed by an NPT equilibration, and by an MD run of 50 ns (inspect the script and the various .mdp files to know more) for the Martini system in water.\nOnce the MD is run, you can use the index files generated for the mapped trajectory to generate the distributions of the CG trajectory:\ncp ../5_target-distr/bonds.ndx .\ncp ../5_target-distr/dihedrals.ndx .\nbash 6_generate_CG_distr.sh\nwhich will produce files as done by the 5_generate_target_distr.sh in the previous step but now for the CG trajectory.\n\n\n7. Optimize CG bonded parameters\n\nYou can now plot the distributions against each other and compare. You can use the following scripts:\ncd ENAP-in-water\ngnuplot plot_bonds_tutorial_4x2.gnu\ngnuplot plot_dihedrals_tutorial_4x1.gnu \nThe plots produced should look like the following, for bonds (Fig. 4):\n\n\n\nFigure 4 | Comparison of the mapped and target distributions for the bonds in the 1-ethylnaphthalene.\n\n\nand dihedrals (Fig. 5):\n\n\n\nFigure 5 | Comparison of the mapped and target distributions for the dihedrals in the 1-ethylnaphthalene. AA is in blue, Martini is in red.\n\n\nThe agreement is very good. Note that the bimodality of the distributions of the first two dihedrals cannot be captured by the CG model. However, the size of the CG distribution will seemingly capture the two AA configurations into the single CG configuration. If the agreement is not satisfactory at the first iteration - which is likely to happen - you should play with the equilibrium value and force constants in the CG .itp and iterate till satisfactory agreement is achieved.\n\n\n8. Comparison to experimental results, further refinements, and final considerations\n\n\n8.1 Partitioning free energies\n\nPartitioning free energies (see tutorial on how to compute them) constitute particularly good reference experimental data. In the case of 1-ethyl-naphthalene, a model using 5 TC5 beads for the naphthalene ring, and a TC3 bead for the ethyl group, leads to the following (excellent!) agreement with available partitioning data (the experimental values are from Ref. [10]):\n\n\n\n\nlogHD (kJ/mol)\n\n\n \n\n\n \n\n\nlogP (kJ/mol)\n\n\n \n\n\n \n\n\n\n\n\n\nExp.\n\n\nCG\n\n\nErr.\n\n\nExp.\n\n\nCG\n\n\nErr.\n\n\n\n\n25.2\n\n\n25.8\n\n\n0.6\n\n\n25.2\n\n\n24.4\n\n\n-0.6\n\n\n\n\n\n\n8.2 Molecular volume and shape\n\nThe approach described so far is oriented to high-throughput applications where this procedure could be automated. However, COG-based mappings cannot necessarily always work perfectly. In case packing and/or densities seem off, it is advisable to look into how the molecular volume and shape of the CG model compare to the ones of the underlying AA structure.\nTo this end, we can use the Gromacs tool gmx sasa to compute the solvent accessible surface area (SASA) and the Connolly surface of the AA and CG models. While AA force fields can use the default vdwradii.dat provided by Gromacs, for CG molecules, such file needs to be modified. For this, copy the vdwradii.dat file from the default location to the folder where we will execute the analysis:\ncd ENAP-in-water/7_SASA\ncp /usr/local/gromacs-VERSION/share/gromacs/top/vdwradii.dat vdwradii_CG.dat\nThe vdwradii_CG.dat file in the current folder should now be edited so as to contain the radius of the Martini 3 beads based on the atomnames (!) of your system. By the way, the radii for the Martini R-, S-, and T-beads are 0.264, 0.230, and 0.191 nm, respectively. Take a look at ENAP-worked/7_SASA/vdwradii_CG.dat in case of doubts.\nWe also recommend using an updated vdwradii.dat for the atomistic reference calculations, instead of the Gromacs default. The file - that you can find among the provided files with the name vdwradii_AA.dat - uses more recent vdW radii from Rowland and Taylor, J. Phys. Chem. 1996, 100, 7384-7391.\nNow, run:\nbash 7_compute_SASAs.sh ENAP\nthat will compute the SASA and Connolly surfaces for both the CG and AA models. The SASA will be compute along the trajectory, with a command that in the case of the AA model looks like this:\ngmx sasa -f ../../3_mapped/AA-traj.whole.xtc -s ../../3_mapped/AA-COG.tpr -ndots 4800 -probe 0.191  -o SASA-AA.xvg\nNote that the probe size is the size of a T-bead (the size of the probe does not matter but you must consistently use a certain size if you want to meaningfully compare the obtained SASA values), and the -ndots 4800 flag guarantees accurate SASA value. You will instead see that the command used to obtain the Connolly surface uses fewer points (-ndots 240) to ease the visualization with softwares such as VMD. Indeed, we can now overlap the Connolly surfaces (computed by the script on the energy-minimized AA structure and its mapped version) by using the following command:\nvmd -m  AA/ENAP-AA-min.gro  AA/surf-AA.pdb  CG/surf-CG.pdb\nThis should give you some of the views you find rendered below. Below you find also the plot of the distribution of the SASA along the trajectory (Fig. 6) - distr-SASA-AA.xvg and distr-SASA-CG.xvg -:\n\n\n\nFigure 6 | Comparison of the mapped and target distributions for the SASA in the 1-ethylnaphthalene. AA is in blue, Martini is in red.\n\n\nThe SASA distributions show a discrepancy of about 5% (the average CG SASA is about 5% smaller than the AA one - see data_sasa_AA.xvg and distr-SASA-CG.xvg -), which is acceptable (NOTE: These figures were generated with the open-beta parameters, which tended to systematically underestimate the SASA; this is improved in the published Martini 3 version, so you should get better agreement!), but not ideal. Inspecting the Connolly surfaces (AA in gray, CG in blue) gives you a clearer picture: while the naphthalene moiety on average seems to be captured quite accurately by the CG model, the T-bead 1 does seem not to account for the whole molecular volume of the ethyl group. One way to improve this could be to lengthen bonds 1-2, and 1-4.\n\n\n8.3 Final considerations\n\n\nMapping of some chemical groups, especially when done at higher resolutions (e.g., in aromatic rings), can vary based on the proximity of functional groups. The rule of thumb is that such perturbations may require a shift of ±1 in the degree of polarity of the bead in question.\nTake inspiration from already-developed models when trying to build a Martini 3 molecule for a new small molecule. Several examples can be found on the Martini 3 small molecule GitHub repo.\n\nBesides hydrogen bonding labels (“d” for donor, and “a” for acceptor), electron polarizability labels are also made available in Martini 3: these mimic electron-rich (label “e”) or electron-poor (label “v”, for “vacancy”) regions of aromatic rings. Such labels have been tested to a less extended degree than “d”/“a” labels, but have shown great potentials in applications involving aedamers [1]. In the case of 1-ethylnaphthalene, the “e” label may be used to describe bead number 4 (at the center of the naphthalene moiety) and bead number 1 (because connected to an electron-donating group such as -CH2CH3).\n\nDepending on your application, you may want to include other validation targets, besides free energies of transfer. These can allow you to fine-tune and optimize bead type choices and bonded parameters. Below a non-exhaustive list of potential target properties:\n\nif molecular stacking or packing are of importance, one can use use dimerization free energy landscapes as reference [2];\nmiscibility of binary mixtures has been successfully employed in the parameterization of martini CG solvent models [1] - either by qualitative assessing the mixing behavior or by computing the excess free energy of mixing [1-2];\nother experimental data such as the density of pure liquids or phase transition temperatures [11] can be also used;\nfinally, more specific references are also used, such as the hydrogen-bonding strengths and specificity of interactions for nucleobases [1], following the Martini 2 DNA work [12].\n\n\n\n\n\n9. Using Bartender to obtain bonded parameters for a small molecule\n\nBartender is a program aimed at obtaining bonded parameters for Martini models while bypassing the atomistic force field development and simulation step. It does so by relying on (semi-empirical) quantum chemical calculations. Specifically, Bartender makes extensive use of the GFN family of methods from the Grimme group, implemented in their xtb program. If you use Bartender in your research we ask you to cite the relevant GFN papers [13].\nHence, this step of the tutorial can replace steps 1, 3, and 5 above.\n\n9.1 Installing Bartender\n\nTo install Bartender, first uncompress the m3_bartender.zip provided in the Introduction (if you did’t download it then, you can also download it here) and access the .tgz file inside. Uncompress the .tgz file into a directory and set the BTROOT environment variable to point to that directory. Optionally, you can add BTROOT to PATH.\nLet us go through this installation process. Say your home directory is /home/alfred, and you have the Bartender .tgz file in that folder (you can find the .tgz file among the downloaded files). Switch to that directory:\ncd /home/alfred\nCreate a bartender directory and move the Bartender .tgz file there:\nmkdir bartender\nmv bartenderX.Y.Z.tgz bartender/\nWhere X.Y.Z is the version number for your binary. Now enter the bartender directory and uncompress the binary:\ncd bartender\ntar xvzf bartenderX.Y.Z.tgz\nGo back to the home directory and define the required environment variables. If you are using the Bash shell, that would be:\ncd \necho \"export BTROOT=/home/alfred/bartender\" &gt;&gt; .bashrc\necho \"source $BTROOT/bartender_config.sh\" &gt;&gt; .bashrc\nNow use:\nsource .bashrc\nand Bartender is ready to use.\n\n\n9.2 Preparing Bartender input files\n\nIn the following step you will need the bartender python script, and a few input files. You can find the necessary input files in the m3_bartender.zip file you downloaded in the previous step!\nBartender requires an input file and a geometry file.\nThe input file tells Bartender two things:\n\nthe atom-to-bead mapping;\nthe bonded terms you want to obtain.\n\nThe syntax of the Bartender input file is fairly simple, but we provide a script to automatically generate it from existing .itp and .ndx files. The .itp needs to contain the bonded terms, although, of course, you can assign any nonsensical value you want to each of the required constants. The ndx file contains the atom-to-bead mapping. Issuing the command (note that script requires python3, of course!):\npython3 ./write_bartender_inp.py --ndx ENAP_oplsaaTOcg_cgbuilder.ndx --itp ENAP_blank.itp --out ENAP_bartender.inp\nwill produce the required ENAP_bartender.inp input file. Notice that gmx2bar also asks for the number of atoms in the geometry file (24, in this case).\nFor the geometry file, Bartender supports the .pdb, .gro, and .xyz formats. Unfortunately, the LigParGen server generates non-standard .pdb files which Bartender cannot read. The easiest way to proceed is to transform these non-standard .pdb files into simpler .xyz files. This conversion is easy to do with a text editor that supports column selection, but you can also issue the command:\nawk 'BEGIN{COORDS=\"\";NATOMS=0};NF==8{ COORDS=COORDS substr($3,1,1)\" \"$6\" \"$7\" \"$8\"\\n\";NATOMS++}END{print NATOMS\"\\n\\n\"COORDS }' ENAP_LigParGen.pdb &gt; ENAP.xyz\nwhich calls the Unix utility awk and casts the non-standard ~ file onto an .xyx file. We now have everything Bartender needs!\n\n\n9.3 Running Bartender\n\nBartender has many optional flags, but it is designed so they are rarely needed. Here, we can just use the basic command: bartender geometry.pdb/.gro/.xyz bartender_input.inp, which, in our case, will be:\nbartender ENAP.xyz ENAP_bartender.inp\n\n\n9.4 Analyzing the resulting files\n\nAfter a short wait (3-10 minutes depending on your CPU(s)), Bartender has produced several files, among which:\n\nA gmx_out.itp file: This is the topology file we were after, with the bonded parameters.\nA series of .png files. These files contain plots of the actual distributions for each term and each fit (red triangles) and the corresponding fitted function (blue lines).\n\nIf we open the gmx_out.itp file, we will see that Bartender will have generated bonded parameters for all the bonds, constraints, and impropers terms we have in the topology. How do the parameters compare to the ones you obtained by optimizing them by hand while using the atomistic simulation as a reference?\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nVMD (https://www.ks.uiuc.edu/Research/vmd/)\nBartender (downloadable here)\n\n\n\nReferences\n\n[1] P.C.T. Souza, et al., Nat. Methods 2021, DOI: 10.1038/s41592-021-01098-3.\n[2] R. Alessandri, et al., Chemrxiv 2021, DOI: 10.33774/chemrxiv-2021-1qmq9.\n[3] S.J. Marrink, et al., J. Phys. Chem. B. 2007, 111, 7812-7824.\n[4] P.C.T. Souza, S. Thallmair, et al., Nat. Commun. 2020, DOI: 10.1038/s41467-020-17437-5.\n[5] J. Liu, et al., Adv. Mater. 2018, DOI: 10.1002/adma.201704630.\n[6] W.L. Jorgensen and J. Tirado-Rives, PNAS 2005, 102, 6665; L.S. Dodda, et al., J. Phys. Chem. B, 2017, 121, 3864; L.S. Dodda, et al., Nucleic Acids Res. 2017, 45, W331.\n[7] J. Barnoud, https://github.com/jbarnoud/cgbuilder.\n[8] The Gromacs tool gmx traj won’t allow to choose more than one group unless one passes the flag -com. Neither -nocom or omitting the flag altogether (which should give -nocom) work.\n[9] M.N. Melo, H.I. Ingolfsson, S.J. Marrink, J. Chem. Phys. 2015, 143, 243152.\n[10] S. Natesan, et al., J. Chem. Inf. Model. 2013, 53, 6, 1424-1435.\n[11] L.I. Vazquez-Salazar, M. Selle, et al., Green Chem. 2020, DOI: 10.1039/D0GC01823F.\n[12] J.J. Uusitalo, et al., J. Chem. Theory Comput. 2015, 11, 8, 3932-3945.\n[13] [General reference] C. Bannwarth, et al., WIRES Comput. Mol. Sci. 2021, DOI: 10.1002/wcms.1493. [Solvation model] S. Ehlert, et al., Chemrxiv 2021, DOI: 10.26434/chemrxiv.14555355.v1. [GFN2-xTB] C. Bannwarth, et al., J. Chem. Theory. Comput. 2019, 15, 1652-1671. [GFNFF] S. Spicher and S. Grimme Ang. Chem. Int. Ed. 2020, 59, 15665-15673."
  },
  {
    "objectID": "docs/tutorials/Martini3/Titratable_Martini/index.html",
    "href": "docs/tutorials/Martini3/Titratable_Martini/index.html",
    "title": "Titratable Martini for constant pH simulations",
    "section": "",
    "text": "In case of issues, please contact s.sami@rug.nl or f.grunewald@rug.nl.\n\n\nSummary\n\nIntroduction\n1: Acid titration\n\nConverting the system to Titratable Martini\nTitration\nAnalysis\n\n2: Base titration\n\nConverting the system to Titratable Martini\nTitration\nAnalysis\n\n3: Enviroment dependent pKa shifts\n\nConverting the system to Titratable Martini\nTitration\nAnalysis\n\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nIn this tutorial, we will discuss how to convert a Martini 3[1] system into a titratable Martini[1] one and perform constant pH simulations.\nPlease note that this tutorial makes use of Python 3 and several of its external modules. So make sure that you have Python 3 installed in your system together with the following external modules (pip install module_name): numpy, pandas, matplotlib, MDAnalysis, pymbar, tdqm.\nTo get started, download the archive titratable_martini_tutorial_files.zip here, which contains necessary files for this tutorial. Extract the contents of the .zip file in your working directory and you are ready to begin! Additionally, you can download the worked version of this tutorial to either get some hints or to compare your results.\nNote that these MD simulations might take several hours depending on your computational resources. You can always reduce the number of pH data points and/or shorten the simulation times to fasten the process if you have limited resources: The fitted pKa values will lose accuracy and precision but you will still get acquainted with the methodology. Alternatively, you can use the trajectory files from the worked example instead of running the simulations.\n\n\n1: Acid titration\n\nIn this example, we will study the titration of acetic acid. Go to the directory 1_acid_titration. As the starting point, we have a standard Martini 3 system with 16 acetic acid molecules (P2 beads) and 1936 water beads.\n\n1.1 Converting the system to Titratable Martini\n\nThe first step is to convert your existing standard Martini 3 coordinate file (standard.gro) into a titratable one by running the script 1_convert_gro_file.sh. The script contains:\nrun=\"python3 ../scripts/convert_gro_to_titratable.py\"\n\n$run -f standard.gro -o temp.gro -sel \"name P2\" -bead acid\n$run -f temp.gro -o start.gro -sel \"name WN\" -bead water\nHere, the -f and -o flags set the input and out files, respectively. -sel selects the bead that will be converted to the titratable version. Any selection command from MDAnalysis can be used, but we will stick with the name command, which selects based on the atom/bead name. -bead specifies the type of that bead (water, acid, base, acid-deprot, base-deprot). The script is called here twice since we have two type of titratable beads in the system: In the first step acetic acid (P2) beads are converted, which correspond to acid beads; in the second step, water beads (WN) are converted, which clearly have the type water. convert_gro_to_titratable.py script adds the necessary dummy particles and H+ ions to each titratable bead type as described in the article[2]. The titratable version of the coordinate file start.gro can now be found in the same directory.\nThe next next step is to create a topology file (system.top, see below) corresponding to the titratable system. Here, the first line (#define pH&lt;value&gt;) is where the pH of the system is defined. &lt;value&gt; will be replaced by the actual pH value that we are interested in. For example, for a pH of 3, this line would read: #define pH3.0. Acceptable pH values range from 3 to 8 with increments of 0.25. In the next two lines, we link to the titratable Martini force field (martini.itp) and the already parametrized titratable molecules (molecules.itp). Finally, in the [molecules] block, we specify the molecules that are present in the system. Here, we still have 16 acetic acid (PPA) molecules, 1936 water beads (WNA) just as the standard system. Additionally, we now have 1952 H+ ions, one for each titratable site (16+1936).\n#define pH&lt;value&gt;\n#include \"../../force_fields/martini.itp\"\n#include \"../../force_fields/molecules.itp\"\n\n[ System ]\nacetic acid\n\n[ molecules ]\nPPA 16\nWNA 1936\nH+ 1952\n\n\n1.2 Titration\n\nNow that we have both the coordinate (start.gro) and the topology (system.top) files, we are ready to begin the titration! This will be done by running the script 2_titrate.sh. This script simply changes the pH value in the system.top file and starts the necessary MD runs. In this tutorial, we will titrate from pH=3.0 to 8.0 with increments of 0.5.\nAt each pH, we will perform energy minimization, equilibrium and production runs. The corresponding run parameters (.mdp) are given in the directory mdp_files. Note that these parameters are specifically for the titratable Martini simulations and are different than the standard Martini 3 run parameters (see the paper for the discussion [2]).\n\n\n1.3 Analysis\n\nAfter the simulations have finished, we can proceed with the analysis. This will be done by running the script 3_analyze.sh. At each pH, this script calls degree_of_deprot.py, which computes the degree of deprotonation of the system (see the paper for the methodology [2]). Here, with -f, -s and -o flags the trajectory, topology and output file names, respectively, are given. The flag -b sets the starting simulation time (picoseconds) for analysis. The flags -ref and -sel again uses the MDAnalysis selection commands for the reference and the titratable bead, respectively. In this case, our reference is water (WN) and the selection is the titratable and the only bead of acetic acid (P2).\nThe results, which are the degrees of deprotonation at each pH, are written to the text file results.txt. Additionally, a plot is generated (results.pdf) containing these data points and the computed pKa and q value by fitting the results to the following equation:\n\\[ \\alpha = \\frac{1}{10^{q*(pKa-pH)}+1} \\]\nThere you have it! If all went well, you should have a plot that looks like the figure below. As expected, the acetic acid becomes more and more protonated as the pH value is decreased.\n\n\n\n\n\n\n2: Base titration\n\nIn this example, we will study the titration of aniline. Go to the directory 2_base_titration. As the starting point, we have a standard Martini 3 system with a single aniline molecule and 2021 water beads. Since this exercise is mostly similar to the acid titration, we will only go over the main differences.\n\n2.1 Converting the system to Titratable Martini\n\nThe main difference when converting the coordinate file is that in this case the titratable bead is a base instead of an acid. This again is specified with the -bead flag.\nNext difference is the [molecules] block of the topology file (system.top). We now have a single aniline molecule (ANIL) and 2021 water beads (WNA). These water beads also contain H+ ions. Note that unlike the acid bead, the base bead does not contain an H+ ion. Consequently, the [molecules] block looks like:\n[ molecules ]\nANIL 1\nWNA 2021\nH+ 2021\n\n\n2.2 Titration\n\nThis part goes exactly the same as previous exercise.\n\n\n2.3 Analysis\n\nThis part also goes exactly the same as previous exercise, except the results of course. If all went well, you should have ended up with a titration curve that looks like the figure below. As expected, aniline becomes more and more protonated as the pH value is decreased.\n\n\n\n\n\n\n3: Enviroment dependent pKa shifts\n\nCapturing changes in the apparent pKa due to interactions with the environment is one of the most important aspects of any constant pH simulation methodology. In this example, we will study the environment dependent pKa shift of the G5 dendrimer poly(propylene imine) (PPI). Go to the directory 3_environment_dependent_pka_shifts. As the starting point, we have a standard Martini 3 system with a single G5 PPI dendrimer and 1936 water beads. Again, the parts that are similar to the previous exercises will not be explained in detail.\n\n3.1 Converting the system to Titratable Martini\n\nIn this case, the G5 PPI dendrimer contains 126 titratable base sites. As all these bead names starts with N, we use an asterisk for selection (-sel \"name N*\") for the generation of the titratabe version of the coordinate file. For the topology file, as in the previous example, only the water beads contain an H+ ion. Consequently, the [molecules] block looks like:\n[ molecules ]\nG5 1\nWNA 1936\nH+ 1936\n\n\n3.2 Titration\n\nThis part goes exactly the same as previous exercise.\n\n\n3.3 Analysis\n\nFor this exercise, we can analyze using the 3_analyze.sh script the degree of deprotonation separately for each generation of the dendrimer to see the effect of the environment on the degree of (de)protonation. Here, G1 is the innermost generation and G5 is the outermost. The separate analysis is done by specifying for each generation all other titratable sites as the reference. For example for calculating the degree of deprotonation of G1, we select the G1 beads (-name NG1) with the -sel flag and the rest (-name WN NG2 NG3 NG4 NG5) as the reference with the -ref flag. You can see the results of this analysis in the figure below: At high pH values (~7-8), only the outermost generation (G5) is protonated, as the pH is lowered (5-6), the inner generations starts becoming partially protonated and at even lower pH values (3-4), all titratable sites are almost fully protonated. This is also apparent from the fitted pKa values: G5 has the highest pKa value (9.8), followed by G4 (5.5), then, the three inner generations have similar low pKa values (~5).\n\n\n\nThe radius of gyration will also be computed as a function of pH with the same analysis script and its results are shown in the figure below. It can be seen that the dendrimer expands with the decrease of pH. This correlates well with the increased amount of protonated residues.\n\n\n\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\n\n\n\nReferences\n\n[1] P. C. T. Souza, R. Alessandri, J. Barnoud, S. Thallmair, I. Faustino, F. Grünewald, I. Patmanidis, H. Abdizadeh, B. M. H. Bruininks, T. A. Wassenaar, P. C. Kroon, J. Melcr, V. Nieto, V. Corradi, H. M. Khan, J. Domański, M. Javanainen, H. Martinez-Seara, N. Reuter, R. B. Best, I. Vattulainen, L. Monticelli, X. Periole, D. P. Tieleman, A. H. de Vries, S. J. Marrink, Nat. Methods 2021, 18, 382–388.\n[2] F. Grünewald, P. C. T. Souza, H. Abdizadeh, J. Barnoud, A. H. de Vries, S. J. Marrink, J. Chem. Phys. 2020, 153, 024118."
  },
  {
    "objectID": "docs/tutorials/Martini3/ProteinsII/index.html",
    "href": "docs/tutorials/Martini3/ProteinsII/index.html",
    "title": "Proteins - Part II: TM proteins and Protein complexes",
    "section": "",
    "text": "In case of issues, please contact paulo.telles-de-souza@ibcp.fr.\n\n\nSummary\n\nIntroduction\nProteins in membrane environment\n\nSelf-assembly approach\n‘Insane approach’\n\nProtein complexes\n\nProtein complexes with independent.itps for each monomer\nProtein complexes withmergeoption\nComparison between models\n\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nIn this last module of the Proteins tutorial, we will increase the complexity of our system by embedding the protein in a lipid bilayer (please take a look in the lipid tutorials, part I and part II,). We propose here to have a look at the processes of tilt and dimerization of KALP peptides [1,2] embedded in a POPC membrane. Eukaryotic plasma membranes (PM) are often approximated as a pure POPC bilayer (being the most common PM phospholipid) or a pure DOPC bilayer (were average bilayer properties can be closer to those of a PM, although DOPC itself is not prevalent in eukaryotic cells) [3].\nThe coarse-grained structure and topology of KALP can be simply generate by using martinize2.\nmartinize2 -ff martini3001 -f kalp-AA.pdb -x kalp.pdb -p backbone -o system.top -scfix -ss \nOutput:\n\nCCHHHHHHHHHHHHHHHHHHHCC\nIn simulations involving peptides, an important step is to well define the secondary structure. As they can be very flexible, is important to be sure of your assumptions. For transmembrane (TM) peptides like KALP with 20-30 residues as chain length (23 residues the example used in this tutorial), it is expected that the charged terminals would be more disordered, while the hydrophobic TM section should be helical. For other TM peptides, maybe we useful to add longer terminals and/or cap the terminals, depending of the specific systems being studied. Elastic networks [4] or Gō models [5] are not necessary in this case as the bonded parameters should be enough to keep the structure stable. However, side chain corrections [6] can be important. Given that Martini 3 protein models [7] avoid excessive overmapping (an approximation used in Martini 2 Protein models) [1,8], residues as leucine and lysines use S-beads to represent their side chains. Without steric effects, additional dihedrals maybe necessary to keep the proper orientation of the side chains.\n\n\nProteins in membrane environment\n\nAfter getting the CG structure and topology of KALP, we can start by solvating the protein directly with the membrane environment so that it ends up inserted. Different ways to perform this step are possible. This tutorial presents two approaches, which are shown in the following sections:\n\nSelf-assembly approach\n\nA bilayer self-assembly dynamics, as presented in the first module of the lipid tutorial part I, will result in the self-insertion of the KALP inside the bilayer (Fig. 1). The files required for this tutorial (including worked files) can be downloaded from here.\n\nThe first steps are to generate a simulations box containing KALP, POPC, water and ions. This can be done by the following commands:\n\ngmx editconf -f kalp.pdb -o kalp.gro -d 1.5\ngmx insert-molecules -f kalp.gro -ci popc.gro -nmol 156 -box 7 7 6 -try 500 -o system_no-solvent.gro\ngmx editconf -f system_no-solvent.gro -o system_no-solvent.gro -c -box 7 7 10\ngmx solvate -cp system_no-solvent.gro -cs water.gro -o system_solvated.gro -radius 0.21\n\n\n\nFigure 1 | A) Self-assembly (4 ns) of a lipid bilayer (green) embedding a KALP peptide. B) Initial “soup” of lipid and solvent (water; blue) in which the KALP (red) is mixed. C) Final conformation of the simulation.\n\n\n\nIn addition, the .top file should be adapted, adding the Martini 3 .itp files:\n\nsed -i -e 's/martini\\.itp/martini_v3.0.0.itp/' system.top\nNLIPIDS=$(($(grep -c POPC system_solvated.gro)/12))\nNWATERS=$(grep -c W system_solvated.gro)\necho -e \"\\nPOPC   $NLIPIDS \\nW  $NWATERS\" &gt;&gt; system.top\nYou should also replace 4 water beads by CL ions in the .top file, as the systems needs to be neutralized. In addition, do not forget to add the missing .itp files in the .top file.\n\nNow, run the minimization, equilibration and production simulations. Do not forget to create a restraint.gro based on the initial configuration.\n\ngmx grompp -f minimization.mdp -c system_solvated.gro -p system.top -o minimization.tpr \ngmx mdrun -deffnm minimization -v\ngmx grompp -f equilibration.mdp -c minimization.gro -p system.top -o equilibration.tpr -n index.ndx\ngmx mdrun -deffnm equilibration -v\ngmx grompp -f dynamic.mdp -c equilibration.gro -p system.top -o dynamic.tpr -n index.ndx\ngmx mdrun -deffnm dynamic -v\n\n\nInsane approach\n\nThis second method, being the easiest and the most straightforward, is the recommended one to build such systems. Here is the procedure:\n\nThe syntax of the insane.py [9] script is very similar to what was used so far; it can be invoked by running insane.py -h. (Get the latest from the Downloads page.) Let’s see a practical example:\n\npython2 insane.py -f kalp.gro -o system.gro -p system.top -pbc square -box 7,7,9 -l POPC -u POPC -center -sol W -salt 0.01\nThe previous command line will set up a complete system, containing a squared POPC bilayer of \\(7×7 nm^2\\), with the KALP peptide inserted and centered in this bilayer. The whole system will be solvated in standard coarse-grained water. A small concentration of NaCl was added only to neuralize the +4 charge of KALP. More on the insane.py tool can be found in separate tutorials, notably setting up a complex bilayer (lipid tutorial part II).\n\nProceed as before and start a production run. To remind you, this involves (A) editing the system.top file to reflect the version of Martini you want to use and providing include statements for the topology files; (B) downloading or copying definitions of Martini 3 .itp files, including martini_v3.0.0_phospholipids_v1.itp; (C) using the correct names of the molecules involved; (D) downloading or copying set-up .mdp files for minimization, equilibration, and production runs (you can also find them in the template folder of this module zip file) and if necessary, editing them (bilayer simulations are best done using semi-isotropic pressure coupling and you may want to separately couple different groups to the thermostat(s)); (E) running the minimization and equilibration runs.\nGenerate a new system in which membrane thickness is reduced (different the lipid type, DLPC for instance). Observe how the thickness is affecting the tilt of the transmembrane helix; compare it to the previous simulation.\nDouble these previous boxes in one dimension (gmx genconf) and rerun the simulations. Observe the different dimerization conformations (parallel or anti-parallel tilts). Note that more than one simulation (or a longer one) might be required to observe both cases!\nChoose your favorite orientation and backmap the final conformation (tutorial on backmapping available here). Simulate this system atomistically to refine and have a closer and detailed look at the interactions between KALPs.\n\n\n\n\nProtein complexes\n\nThe aim of this second module is to see how application of elastic networks can be combined with the Martini model to conserve quaternary structures more faithfully without sacrificing realistic dynamics of a protein. As example, we will use HIV-1 protease, which is an essential enzyme for viral particle maturation and is a target in the fight against HIV-1 infection worldwide [10-12]. You should be aware that the HIV-1 protease structure used in this tutorial (pdb code 1A8G) includes a ligand. For now, this ligand is not known as a building block to martinize2 and need to be removed from the .pdb, which can be done using the command:\ngrep \"^ATOM\" 1A8G.pdb &gt; 1A8G_clean.pdb\nIf you want to study this or other ligand binding, you will need to build a Martini topology for the ligand yourself and then add to your simulation box, together with your protein CG model. We suggest you to take a look at tutorials Parametrizing a new small molecule and Protein - small molecule binding in case you want to go in this direction.\nAnother point to be aware is that the protein is a dimer. By default, you will get a topology file with the two subunits being treated as individual molecules in martinize2. Overall, Martini 3 can deal well which such structures, however you may have potential packing problems, which can make Martini 3 models to form complexes not so stable. These problems are usually related with backbone (BB) bead interactions between different proteins in the complex. As the bead size for the BB beads is actually too big to well represent the BB-BB distances, you can create a packing problem that pushes the proteins apart, reducing their interactions. In these cases, you may need to consider using Elastic networks [4] or Gō models [5] between the chains. But first, let’s evaluate if this is the case in the HIV-1 protease dimer.\n\nProtein complexes with independent .itps for each monomer\n\n\nRepeat steps 1 to 7 from the Protein Tutorial Part-I with the HIV-1 protease (1A8G_clean.pdb). Another option is to use this quicker route:\n\n\nMartinize the complex:\n\nmartinize2 -f 1A8G_clean.pdb -o hivProtease_only.top -x hivProtease_cg.pdb -dssp /path/to/dssp -p backbone -ff martini3001 -elastic -ef 700.0 -el 0.5 -eu 0.9 -ea 0 -ep 0 -scfix -cys auto\n\nbuild a simulation box with your protein in water solution with 0.15 M of NaCL, using insane code:\n\npython insane.py -f 1A8G-CG.pdb -o system.gro -p system.top -pbc square -box 10,10,10 -center -sol W\nUpdate the system.top file of your system and then run a minimization, equilibration and production simulations. Given the size of the system, you may need to use less CPU/threads in the MD steps.\ngmx grompp -p system.top -c system.gro  -f minimization.mdp -o minimization.tpr -maxwarn 1 \ngmx mdrun -deffnm minimization -v\ngmx grompp -p system.top -c minimization.gro -f equilibration.mdp -o equilibration.tpr\ngmx mdrun -deffnm equilibration -v \ngmx grompp -p system.top -c equilibration.gro -f dynamic.mdp -o dynamic.tpr -maxwarn 1\ngmx mdrun -deffnm dynamic -v \n\nVisualize the simulation, look especially at the binding pocket of the protein: does it stay closed, open up? Is the protein complex stable? What happens to the overall structure? You can take a lool the elastic network in Figure 2.\n\n\n\n\nFigure 2 | Elastic network (gray) applied on both monomers of the HIV-1 protease (yellow and orange, respectively).\n\n\n\n\nProtein complexes with merge option\n\nIn case you gave doubts that the dynamics of your protein complex is not good enough, an option to help to preserve higher-order structure of complex is to add an elastic network between the chains.\n\nFor that, you can use the merge flag of martinize2\n\nmartinize2 -f 1A8G_clean.pdb -o hivProtease_only.top -x hivProtease_cg.pdb -dssp /path/to/dssp -p backbone -ff martini3001 -elastic -ef 700.0 -el 0.5 -eu 0.9 -ea 0 -ep 0 -scfix -cys auto -merge A,B\n\nProceed as before, creating a new box with insane, which can be followed by a minimization and an equilibration step. You may need extra supplementary relaxation steps as you added extra additional constraints in the structure when you merged the .itp files.\n\nIt is worth mention that martinize2 allows you to easily manipulate the elastic network. In addition to the options related to cutoff and force constant, you can also change some other definition of the elastic model. For instance, the extra elastic bonds do not need to be used only in BB beads. Other beads of your system can be used defining them in the flag -eb RB_SELECTION. This feature will be useful in the future to generate stiff Martini 2 models of DNA [13] and RNA [14]. Another important option is to redefine which part of your system will get elastic network or not. This can be done with the flag –eunit.\n\n\nComparison between models\n\nWith two simulations of the same protein complex using different approaches for elastic network, you can now compare the trajectories with different Martini protein models. If you do not want to wait, some pre-run trajectories can be found in the tutorial folder. As in Protein tutorial part I RMSD and RMSF can be calculated using GROMACS tools (gmx rms and gmx rmsf) [15] while VMD [16] or Pymol can be used to visualize the trajectories.\nBased on the results of Figure 3, try now figure out which approach is the best in this case. One aspect to consider is that we used a HIV-1 Protease conformation from a structure with a ligand (holo state) but the simulations was performed without the ligand (apo state). What the literature indicate about previous NMR, crystallography and MD simulations studies with apo states of this enzyme?\n\n\n\nFigure 3 | (A) and (B) showed the aligned backbone of HIV-1 Protease models using Martini combined with independent elastic networks for each monomer (A) or with the elastic networks also between the monomers (B, which has the models represented by a unique .itp file). (C) RMSD of HIV-1 Protease with two different approaches described previously: elastic networks only in each monomer (black) and elastic networks also between the monomers (red).\n\n\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nVMD (https://www.ks.uiuc.edu/Research/vmd/)\nmartinize2 (https://github.com/marrink-lab/vermouth-martinize)\ninsane (downloadable here)\n\n\n\nReferences\n\n[1] Monticelli, L.; Kandasamy, S. K.; Periole, X.; Larson, R. G.; Tieleman, D. P.; Marrink, S.-J. The MARTINI Coarse-Grained Force Field: Extension to Proteins. J. Chem. Theory Comput. 2008, 4 (5), 819–834. https://doi.org/10.1021/ct700324x.\n[2] Ramadurai, S.; Holt, A.; Schäfer, L. V.; Krasnikov, V. V.; Rijkers, D. T. S.; Marrink, S. J.; Killian, J. A.; Poolman, B. Influence of Hydrophobic Mismatch and Amino Acid Composition on the Lateral Diffusion of Transmembrane Peptides. Biophys. J. 2010, 99 (5), 1447–1454. https://doi.org/10.1016/J.BPJ.2010.05.042.\n[3] Marrink, S. J.; Corradi, V.; Souza, P. C. T.; Ingólfsson, H. I.; Tieleman, D. P.; Sansom, M. S. P. Computational Modeling of Realistic Cell Membranes. Chem. Rev. 2019, 119 (9), 6184–6226. https://doi.org/10.1021/acs.chemrev.8b00460.\n[4] Periole, X.; Cavalli, M.; Marrink, S.-J.; Ceruso, M. A. Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition. J. Chem. Theory Comput. 2009, 5 (9), 2531–2543. https://doi.org/10.1021/ct9002114.\n[5] Poma, A. B.; Cieplak, M.; Theodorakis, P. E. Combining the MARTINI and Structure-Based Coarse-Grained Approaches for the Molecular Dynamics Studies of Conformational Transitions in Proteins. J. Chem. Theory Comput. 2017, 13 (3), 1366–1374. https://doi.org/10.1021/acs.jctc.6b00986.\n[6] Herzog, F. A.; Braun, L.; Schoen, I.; Vogel, V. Improved Side Chain Dynamics in MARTINI Simulations of Protein–Lipid Interfaces. J. Chem. Theory Comput. 2016, 12 (5), 2446–2458. https://doi.org/10.1021/acs.jctc.6b00122.\n[7] Souza, P. C. T.; Alessandri, R.; Barnoud, J.; Thallmair, S.; Faustino, I.; Grünewald, F.; Patmanidis, I.; Abdizadeh, H.; Bruininks, B. M. H.; Wassenaar, T. A.; et al. Martini 3: A General Purpose Force Field for Coarse-Grained Molecular Dynamics. Nat. Methods 2021, 18 (4), 382–388. https://doi.org/10.1038/s41592-021-01098-3.\n[8] de Jong, D. H.; Singh, G.; Bennett, W. F. D.; Arnarez, C.; Wassenaar, T. A.; Schäfer, L. V; Periole, X.; Tieleman, D. P.; Marrink, S. J. Improved Parameters for the Martini Coarse-Grained Protein Force Field. J. Chem. Theory Comput. 2013, 9 (1), 687–697. https://doi.org/10.1021/ct300646g.\n[9] Wassenaar, T. A.; Ingólfsson, H. I.; Böckmann, R. A.; Tieleman, D. P.; Marrink, S. J. Computational Lipidomics with Insane : A Versatile Tool for Generating Custom Membranes for Molecular Simulations. J. Chem. Theory Comput. 2015, 11 (5), 2144–2155. https://doi.org/10.1021/acs.jctc.5b00209.\n[10] Nicholson, L. K.; Yamazaki, T.; Torchia, D. A.; Grzesiek, S.; Bax, A.; Stahl, S. J.; Kaufman, J. D.; Wingfield, P. T.; Lam, P. Y. .; Jadhav, P. K.; et al. Flexibility and Function in HIV-1 Protease. Nat. Struct. Biol. 1995 24 1995, 2 (4), 274–280. https://doi.org/10.1038/nsb0495-274.\n[11] Pomerantz, R. J.; Horn, D. L. Twenty Years of Therapy for HIV-1 Infection. Nat. Med. 2003 97 2003, 9 (7), 867–873. https://doi.org/10.1038/nm0703-867.\n[12] Torbeev, V. Y.; Raghuraman, H.; Hamelberg, D.; Tonelli, M.; Westler, W. M.; Perozo, E.; Kent, S. B. H. Protein Conformational Dynamics in the Mechanism of HIV-1 Protease Catalysis. Proc. Natl. Acad. Sci. 2011, 108 (52), 20982–20987. https://doi.org/10.1073/PNAS.1111202108.\n[13] Uusitalo, J. J.; Ingólfsson, H. I.; Akhshi, P.; Tieleman, D. P.; Marrink, S. J. Martini Coarse-Grained Force Field: Extension to DNA. J. Chem. Theory Comput. 2015, 11 (8), 3932–3945. https://doi.org/10.1021/acs.jctc.5b00286.\n[14] Uusitalo, J. J.; Ingólfsson, H. I.; Marrink, S. J.; Faustino, I. Martini Coarse-Grained Force Field: Extension to RNA. Biophys. J. 2017, 113 (2), 246–256. https://doi.org/10.1016/J.BPJ.2017.05.043.\n[15] Abraham, M. J.; Murtola, T.; Schulz, R.; Páll, S.; Smith, J. C.; Hess, B.; Lindah, E. Gromacs: High Performance Molecular Simulations through Multi-Level Parallelism from Laptops to Supercomputers. SoftwareX 2015, 1–2, 19–25. https://doi.org/10.1016/j.softx.2015.06.001.\n[16] Humphrey, W., Dalke, A. and Schulten, K. VMD - Visual Molecular Dynamics. J. Molec. Graph. 1996, 14, 33–38."
  },
  {
    "objectID": "docs/publications/entries/2014/Pannuzzo2014_PEG.html",
    "href": "docs/publications/entries/2014/Pannuzzo2014_PEG.html",
    "title": "Simulation of polyethylene glycol and calcium-mediated membrane fusion",
    "section": "",
    "text": "Pannuzzo, M., De Jong, D. H., Raudino, A., & Marrink, S. J. (2014). Simulation of polyethylene glycol and calcium-mediated membrane fusion. The Journal of Chemical Physics, 140(12)."
  },
  {
    "objectID": "docs/publications/entries/2014/Pannuzzo2014_PEG.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Pannuzzo2014_PEG.html#citation-apa-7",
    "title": "Simulation of polyethylene glycol and calcium-mediated membrane fusion",
    "section": "",
    "text": "Pannuzzo, M., De Jong, D. H., Raudino, A., & Marrink, S. J. (2014). Simulation of polyethylene glycol and calcium-mediated membrane fusion. The Journal of Chemical Physics, 140(12)."
  },
  {
    "objectID": "docs/publications/entries/2014/Pannuzzo2014_PEG.html#abstract",
    "href": "docs/publications/entries/2014/Pannuzzo2014_PEG.html#abstract",
    "title": "Simulation of polyethylene glycol and calcium-mediated membrane fusion",
    "section": "Abstract",
    "text": "Abstract\nWe report on the mechanism of membrane fusion mediated by polyethylene glycol (PEG) and Ca2+ by means of a coarse-grained molecular dynamics simulation approach. Our data provide a detailed view on the role of cations and polymer in modulating the interaction between negatively charged apposed membranes. The PEG chains cause a reduction of the inter-lamellar distance and cause an increase in concentration of divalent cations. When thermally driven fluctuations bring the membranes at close contact, a switch from cis to trans Ca2+-lipid complexes stabilizes a focal contact acting as a nucleation site for further expansion of the adhesion region. Flipping of lipid tails induces subsequent stalk formation. Together, our results provide a molecular explanation for the synergistic effect of Ca2+ and PEG on membrane fusion."
  },
  {
    "objectID": "docs/publications/entries/2014/López2014_Cellulose.html",
    "href": "docs/publications/entries/2014/López2014_Cellulose.html",
    "title": "MARTINI Coarse-Grained Model for Crystalline Cellulose Microfibers",
    "section": "",
    "text": "López, C. A., Bellesia, G., Redondo, A., Langan, P., Chundawat, S. P., Dale, B. E., … & Gnanakaran, S. (2015). MARTINI coarse-grained model for crystalline cellulose microfibers. The Journal of Physical Chemistry B, 119(2), 465-473."
  },
  {
    "objectID": "docs/publications/entries/2014/López2014_Cellulose.html#citation-apa-7",
    "href": "docs/publications/entries/2014/López2014_Cellulose.html#citation-apa-7",
    "title": "MARTINI Coarse-Grained Model for Crystalline Cellulose Microfibers",
    "section": "",
    "text": "López, C. A., Bellesia, G., Redondo, A., Langan, P., Chundawat, S. P., Dale, B. E., … & Gnanakaran, S. (2015). MARTINI coarse-grained model for crystalline cellulose microfibers. The Journal of Physical Chemistry B, 119(2), 465-473."
  },
  {
    "objectID": "docs/publications/entries/2014/López2014_Cellulose.html#abstract",
    "href": "docs/publications/entries/2014/López2014_Cellulose.html#abstract",
    "title": "MARTINI Coarse-Grained Model for Crystalline Cellulose Microfibers",
    "section": "Abstract",
    "text": "Abstract\nCommercial-scale biofuel production requires a deep understanding of the structure and dynamics of its principal target: cellulose. However, an accurate description and modeling of this carbohydrate structure at the mesoscale remains elusive, particularly because of its overwhelming length scale and configurational complexity. We have derived a set of MARTINI coarse-grained force field parameters for the simulation of crystalline cellulose fibers. The model is adapted to reproduce different physicochemical and mechanical properties of native cellulose Iβ. The model is able not only to handle a transition from cellulose Iβ to another cellulose allomorph, cellulose IIII, but also to capture the physical response to temperature and mechanical bending of longer cellulose nanofibers. By developing the MARTINI model of a solid cellulose crystalline fiber from the building blocks of a soluble cellobiose coarse-grained model, we have provided a systematic way to build MARTINI models for other crystalline biopolymers."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_Phytochemicals.html",
    "href": "docs/publications/entries/2014/Ingólfsson2014_Phytochemicals.html",
    "title": "Phytochemicals Perturb Membranes and Promiscuously Alter Protein Function",
    "section": "",
    "text": "Ingólfsson, H. I., Thakur, P., Herold, K. F., Hobart, E. A., Ramsey, N. B., Periole, X., … & Andersen, O. S. (2014). Phytochemicals perturb membranes and promiscuously alter protein function. ACS chemical biology, 9(8), 1788-1798."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_Phytochemicals.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Ingólfsson2014_Phytochemicals.html#citation-apa-7",
    "title": "Phytochemicals Perturb Membranes and Promiscuously Alter Protein Function",
    "section": "",
    "text": "Ingólfsson, H. I., Thakur, P., Herold, K. F., Hobart, E. A., Ramsey, N. B., Periole, X., … & Andersen, O. S. (2014). Phytochemicals perturb membranes and promiscuously alter protein function. ACS chemical biology, 9(8), 1788-1798."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_Phytochemicals.html#abstract",
    "href": "docs/publications/entries/2014/Ingólfsson2014_Phytochemicals.html#abstract",
    "title": "Phytochemicals Perturb Membranes and Promiscuously Alter Protein Function",
    "section": "Abstract",
    "text": "Abstract\nA wide variety of phytochemicals are consumed for their perceived health benefits. Many of these phytochemicals have been found to alter numerous cell functions, but the mechanisms underlying their biological activity tend to be poorly understood. Phenolic phytochemicals are particularly promiscuous modifiers of membrane protein function, suggesting that some of their actions may be due to a common, membrane bilayer-mediated mechanism. To test whether bilayer perturbation may underlie this diversity of actions, we examined five bioactive phenols reported to have medicinal value: capsaicin from chili peppers, curcumin from turmeric, EGCG from green tea, genistein from soybeans, and resveratrol from grapes. We find that each of these widely consumed phytochemicals alters lipid bilayer properties and the function of diverse membrane proteins. Molecular dynamics simulations show that these phytochemicals modify bilayer properties by localizing to the bilayer/solution interface. Bilayer-modifying propensity was verified using a gramicidin-based assay, and indiscriminate modulation of membrane protein function was demonstrated using four proteins: membrane-anchored metalloproteases, mechanosensitive ion channels, and voltage-dependent potassium and sodium channels. Each protein exhibited similar responses to multiple phytochemicals, consistent with a common, bilayer-mediated mechanism. Our results suggest that many effects of amphiphilic phytochemicals are due to cell membrane perturbations, rather than specific protein binding."
  },
  {
    "objectID": "docs/publications/entries/2014/Wassenaar2014_Backward.html",
    "href": "docs/publications/entries/2014/Wassenaar2014_Backward.html",
    "title": "Going Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models",
    "section": "",
    "text": "Wassenaar, T. A., Pluhackova, K., Bockmann, R. A., Marrink, S. J., & Tieleman, D. P. (2014). Going backward: a flexible geometric approach to reverse transformation from coarse grained to atomistic models. Journal of chemical theory and computation, 10(2), 676-690."
  },
  {
    "objectID": "docs/publications/entries/2014/Wassenaar2014_Backward.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Wassenaar2014_Backward.html#citation-apa-7",
    "title": "Going Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models",
    "section": "",
    "text": "Wassenaar, T. A., Pluhackova, K., Bockmann, R. A., Marrink, S. J., & Tieleman, D. P. (2014). Going backward: a flexible geometric approach to reverse transformation from coarse grained to atomistic models. Journal of chemical theory and computation, 10(2), 676-690."
  },
  {
    "objectID": "docs/publications/entries/2014/Wassenaar2014_Backward.html#abstract",
    "href": "docs/publications/entries/2014/Wassenaar2014_Backward.html#abstract",
    "title": "Going Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models",
    "section": "Abstract",
    "text": "Abstract\nThe conversion of coarse-grained to atomistic models is an important step in obtaining insight about atomistic scale processes from coarse-grained simulations. For this process, called backmapping or reverse transformation, several tools are available, but these commonly require libraries of molecule fragments or they are linked to a specific software package. In addition, the methods are usually restricted to specific molecules and to a specific force field. Here, we present an alternative method, consisting of geometric projection and subsequent force-field based relaxation. This method is designed to be simple and flexible, and offers a generic solution for resolution transformation. For simple systems, the conversion only requires a list of particle correspondences on the two levels of resolution. For special cases, such as nondefault protonation states of amino acids and virtual sites, a target particle list can be specified. The mapping uses simple building blocks, which list the particles on the different levels of resolution. For conversion to higher resolution, the initial model is relaxed with several short cycles of energy minimization and position-restrained MD. The reconstruction of an atomistic backbone from a coarse-grained model is done using a new dedicated algorithm. The method is generic and can be used to map between any two particle based representations, provided that a mapping can be written. The focus of this work is on the coarse-grained MARTINI force field, for which mapping definitions are written to allow conversion to and from the higher-resolution force fields GROMOS, CHARMM, and AMBER, and to and from a simplified three-bead lipid model. Together, these offer the possibility to simulate mesoscopic membrane structures, to be transformed to MARTINI and subsequently to an atomistic model for investigation of detailed interactions. The method was tested on a set of systems ranging from a simple, single-component bilayer to a large protein–membrane–solvent complex. The results demonstrate the efficiency and the efficacy of the new approach."
  },
  {
    "objectID": "docs/publications/entries/2014/Zavadlav2014_Solvents.html",
    "href": "docs/publications/entries/2014/Zavadlav2014_Solvents.html",
    "title": "Adaptive Resolution Simulation of MARTINI Solvents",
    "section": "",
    "text": "Zavadlav, J., Melo, M. N., Cunha, A. V., De Vries, A. H., Marrink, S. J., & Praprotnik, M. (2014). Adaptive resolution simulation of MARTINI solvents. Journal of Chemical Theory and Computation, 10(6), 2591-2598."
  },
  {
    "objectID": "docs/publications/entries/2014/Zavadlav2014_Solvents.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Zavadlav2014_Solvents.html#citation-apa-7",
    "title": "Adaptive Resolution Simulation of MARTINI Solvents",
    "section": "",
    "text": "Zavadlav, J., Melo, M. N., Cunha, A. V., De Vries, A. H., Marrink, S. J., & Praprotnik, M. (2014). Adaptive resolution simulation of MARTINI solvents. Journal of Chemical Theory and Computation, 10(6), 2591-2598."
  },
  {
    "objectID": "docs/publications/entries/2014/Zavadlav2014_Solvents.html#abstract",
    "href": "docs/publications/entries/2014/Zavadlav2014_Solvents.html#abstract",
    "title": "Adaptive Resolution Simulation of MARTINI Solvents",
    "section": "Abstract",
    "text": "Abstract\nWe present adaptive resolution molecular dynamics simulations of aqueous and apolar solvents using coarse-grained molecular models that are compatible with the MARTINI force field. As representatives of both classes of solvents we have chosen liquid water and butane, respectively, at ambient temperature. The solvent molecules change their resolution back and forth between the atomistic and coarse-grained representations according to their positions in the system. The difficulties that arise from coupling to a coarse-grained model with a multimolecule mapping, for example, 4-to-1 mapping in the case of the Simple Point Charge (SPC) and MARTINI water models, could be successfully circumvented by using bundled water models. We demonstrate that the presented multiscale approach faithfully reproduces the structural and dynamical properties computed by reference fully atomistic molecular dynamics simulations. Our approach is general and can be used with any atomistic force field to be linked with the MARTINI force field."
  },
  {
    "objectID": "docs/publications/entries/2014/Campelo2014_MembraneBending.html",
    "href": "docs/publications/entries/2014/Campelo2014_MembraneBending.html",
    "title": "Helfrich model of membrane bending: From Gibbs theory of liquid interfaces to membranes as thick anisotropic elastic layers",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2014/Campelo2014_MembraneBending.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Campelo2014_MembraneBending.html#citation-apa-7",
    "title": "Helfrich model of membrane bending: From Gibbs theory of liquid interfaces to membranes as thick anisotropic elastic layers",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2014/Campelo2014_MembraneBending.html#abstract",
    "href": "docs/publications/entries/2014/Campelo2014_MembraneBending.html#abstract",
    "title": "Helfrich model of membrane bending: From Gibbs theory of liquid interfaces to membranes as thick anisotropic elastic layers",
    "section": "Abstract",
    "text": "Abstract\nHelfrich model of membrane bending elasticity has been most influential in establishment and development of Soft-Matter Physics of lipid bilayers and biological membranes. Recently, Helfrich theory has been extensively used in Cell Biology to understand the phenomena of shaping, fusion and fission of cellular membranes. The general background of Helfrich theory on the one hand, and the ways of specifying the model parameters on the other, are important for quantitative treatment of particular biologically relevant membrane phenomena. Here we present the origin of Helfrich model within the context of the general Gibbs theory of capillary interfaces, and review the strategies of computing the membrane elastic moduli based on considering a lipid monolayer as a three-dimensional thick layer characterized by trans-monolayer profiles of elastic parameters. We present the results of original computations of these profiles by a state-of-the-art numerical approach."
  },
  {
    "objectID": "docs/publications/entries/2007/Baoukina2007_PressureArea.html",
    "href": "docs/publications/entries/2007/Baoukina2007_PressureArea.html",
    "title": "Pressure−Area Isotherm of a Lipid Monolayer from Molecular Dynamics Simulations",
    "section": "",
    "text": "Baoukina, S., Monticelli, L., Marrink, S. J., & Tieleman, D. P. (2007). Pressure− area isotherm of a lipid monolayer from molecular dynamics simulations. Langmuir, 23(25), 12617-12623."
  },
  {
    "objectID": "docs/publications/entries/2007/Baoukina2007_PressureArea.html#citation-apa-7",
    "href": "docs/publications/entries/2007/Baoukina2007_PressureArea.html#citation-apa-7",
    "title": "Pressure−Area Isotherm of a Lipid Monolayer from Molecular Dynamics Simulations",
    "section": "",
    "text": "Baoukina, S., Monticelli, L., Marrink, S. J., & Tieleman, D. P. (2007). Pressure− area isotherm of a lipid monolayer from molecular dynamics simulations. Langmuir, 23(25), 12617-12623."
  },
  {
    "objectID": "docs/publications/entries/2007/Baoukina2007_PressureArea.html#abstract",
    "href": "docs/publications/entries/2007/Baoukina2007_PressureArea.html#abstract",
    "title": "Pressure−Area Isotherm of a Lipid Monolayer from Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nWe calculated the pressure−area isotherm of a dipalmitoyl-phosphatidylcholine (DPPC) lipid monolayer from molecular dynamics simulations using a coarse-grained molecular model. We characterized the monolayer structure, geometry, and phases directly from the simulations and compared the calculated isotherm to experiments. The calculated isotherm shows liquid-expanded and liquid-condensed phases and their coexistence plateau. At high pressure, the monolayer surface is rippled; upon further compression, the monolayer undergoes a collapse. We studied the effect of temperature and system size on the isotherm slope and phase coexistence region. Thermodynamic and dynamic properties of the monolayer phases were also investigated."
  },
  {
    "objectID": "docs/publications/entries/2007/Periole2007_GPCRs.html",
    "href": "docs/publications/entries/2007/Periole2007_GPCRs.html",
    "title": "G Protein-Coupled Receptors Self-Assemble in Dynamics Simulations of Model Bilayers",
    "section": "",
    "text": "Periole, X., Huber, T., Marrink, S. J., & Sakmar, T. P. (2007). G protein-coupled receptors self-assemble in dynamics simulations of model bilayers. Journal of the American Chemical Society, 129(33), 10126-10132."
  },
  {
    "objectID": "docs/publications/entries/2007/Periole2007_GPCRs.html#citation-apa-7",
    "href": "docs/publications/entries/2007/Periole2007_GPCRs.html#citation-apa-7",
    "title": "G Protein-Coupled Receptors Self-Assemble in Dynamics Simulations of Model Bilayers",
    "section": "",
    "text": "Periole, X., Huber, T., Marrink, S. J., & Sakmar, T. P. (2007). G protein-coupled receptors self-assemble in dynamics simulations of model bilayers. Journal of the American Chemical Society, 129(33), 10126-10132."
  },
  {
    "objectID": "docs/publications/entries/2007/Periole2007_GPCRs.html#abstract",
    "href": "docs/publications/entries/2007/Periole2007_GPCRs.html#abstract",
    "title": "G Protein-Coupled Receptors Self-Assemble in Dynamics Simulations of Model Bilayers",
    "section": "Abstract",
    "text": "Abstract\nMany integral membrane proteins assemble to form oligomeric structures in biological membranes. In particular, seven-transmembrane helical G protein-coupled receptors (GPCRs) appear to self-assemble constitutively in membranes, but the mechanism and physiological role of this assembly are unknown. We developed and employed coarse-grain molecular dynamics (CGMD) models to investigate the molecular basis of how the physicochemical properties of the phospholipid bilayer membrane affect self-assembly of visual rhodopsin, a prototypical GPCR. The CGMD method is a mesoscopic simulation technique in which groups of atoms are mapped to particles on the basis of a four-to-one rule. This systematic reduction of the degrees of freedom allows for computationally efficient calculation of the structure and dynamics of molecular assemblies for larger time and length scales than accessible to atomistic models, providing here an unprecedented view of spontaneous protein assembly in biomembranes. Systems with up to 16 rhodopsin molecules at a protein-to-lipid ratio of 1:100 were simulated for time scales of up to 8 μs. The results obtained for four different phospholipid environments showed that localized adaptation of the membrane bilayer to the presence of receptors is reproducibly most pronounced near transmembrane helices 2, 4, and 7. This local membrane deformation appears to be a key factor defining the rate, extent, and orientational preference of protein−protein association. The implications of our findings are discussed within a framework of a generalized mechanism of membrane protein self-assembly."
  },
  {
    "objectID": "docs/publications/entries/2016/Arnarez2016_RespiratoryComplex.html",
    "href": "docs/publications/entries/2016/Arnarez2016_RespiratoryComplex.html",
    "title": "Molecular mechanism of cardiolipin-mediated assembly of respiratory chain supercomplexes",
    "section": "",
    "text": "Arnarez, C., Marrink, S. J., & Periole, X. (2016). Molecular mechanism of cardiolipin-mediated assembly of respiratory chain supercomplexes. Chemical Science, 7(7), 4435-4443."
  },
  {
    "objectID": "docs/publications/entries/2016/Arnarez2016_RespiratoryComplex.html#citation-apa-7",
    "href": "docs/publications/entries/2016/Arnarez2016_RespiratoryComplex.html#citation-apa-7",
    "title": "Molecular mechanism of cardiolipin-mediated assembly of respiratory chain supercomplexes",
    "section": "",
    "text": "Arnarez, C., Marrink, S. J., & Periole, X. (2016). Molecular mechanism of cardiolipin-mediated assembly of respiratory chain supercomplexes. Chemical Science, 7(7), 4435-4443."
  },
  {
    "objectID": "docs/publications/entries/2016/Arnarez2016_RespiratoryComplex.html#abstract",
    "href": "docs/publications/entries/2016/Arnarez2016_RespiratoryComplex.html#abstract",
    "title": "Molecular mechanism of cardiolipin-mediated assembly of respiratory chain supercomplexes",
    "section": "Abstract",
    "text": "Abstract\nMitochondria produce most of the ATP consumed by cells through the respiratory chain in their inner membrane. This process involves protein complexes assembled into larger structures, the respiratory supercomplexes (SCs). Cardiolipin (CL), the mitochondrial signature phospholipid, is crucial for the structural and functional integrity of these SCs, but it is as yet unclear by what mechanism it operates. Our data disclose the mechanism for bulk CL in gluing SCs, steering their formation, and suggest how it may stabilize specific interfaces. We describe self-assembly molecular dynamics simulations of 9 cytochrome bc1 (CIII) dimers and 27 cytochrome c oxidase (CIV) monomers from bovine heart mitochondria embedded in a CL-containing model lipid bilayer, aimed at mimicking the crowdedness and complexity of mitochondrial membranes. The simulations reveal a large diversity of interfaces, including those of existing experimental CIII/CIV SC models and an alternative interface with CIV rotated by 180°. SC interfaces enclose 4 to 12 CLs, a ∼10 fold enrichment from the bulk. Half of these CLs glue complexes together using CL binding sites at the surface of both complexes. Free energy calculations demonstrate a larger CL binding strength, compared to other mitochondrial lipids, that is exclusive to these binding sites and results from non-additive electrostatic and van der Waals forces. This study provides a key example of the ability of lipids to selectively mediate protein–protein interactions by altering all ranges of forces, lubricate protein interfaces and act as traffic control agents steering proteins together."
  },
  {
    "objectID": "docs/publications/entries/2016/De_Jong2016_MartiniStraight.html",
    "href": "docs/publications/entries/2016/De_Jong2016_MartiniStraight.html",
    "title": "MARTINI straight: Boosting performance using a shorter cutoff and GPUs",
    "section": "",
    "text": "De Jong, D. H., Baoukina, S., Ingólfsson, H. I., & Marrink, S. J. (2016). Martini straight: Boosting performance using a shorter cutoff and GPUs. Computer Physics Communications, 199, 1-7."
  },
  {
    "objectID": "docs/publications/entries/2016/De_Jong2016_MartiniStraight.html#citation-apa-7",
    "href": "docs/publications/entries/2016/De_Jong2016_MartiniStraight.html#citation-apa-7",
    "title": "MARTINI straight: Boosting performance using a shorter cutoff and GPUs",
    "section": "",
    "text": "De Jong, D. H., Baoukina, S., Ingólfsson, H. I., & Marrink, S. J. (2016). Martini straight: Boosting performance using a shorter cutoff and GPUs. Computer Physics Communications, 199, 1-7."
  },
  {
    "objectID": "docs/publications/entries/2016/De_Jong2016_MartiniStraight.html#abstract",
    "href": "docs/publications/entries/2016/De_Jong2016_MartiniStraight.html#abstract",
    "title": "MARTINI straight: Boosting performance using a shorter cutoff and GPUs",
    "section": "Abstract",
    "text": "Abstract\nIn molecular dynamics simulations, sufficient sampling is of key importance and a continuous challenge in the field. The coarse grain Martini force field has been widely used to enhance sampling. In its original implementation, this force field applied a shifted Lennard-Jones potential for the non-bonded van der Waals interactions, to avoid problems related to a relatively short cutoff. Here we investigate the use of a straight cutoff Lennard-Jones potential with potential modifiers. Together with a Verlet neighbor search algorithm, the modified potential allows the use of GPUs to accelerate the computations in Gromacs. We find that this alternative potential has little influence on most of the properties studied, including partitioning free energies, bulk liquid properties and bilayer properties. At the same time, energy conservation is kept within reasonable bounds. We conclude that the newly proposed straight cutoff approach is a viable alternative to the standard shifted potentials used in Martini, offering significant speedup even in the absence of GPUs."
  },
  {
    "objectID": "docs/publications/entries/2016/Zavadlav2016_DNA.html",
    "href": "docs/publications/entries/2016/Zavadlav2016_DNA.html",
    "title": "Adaptive resolution simulation of an atomistic DNA molecule in MARTINI salt solution",
    "section": "",
    "text": "Zavadlav, J., Podgornik, R., Melo, M. N., Marrink, S. J., & Praprotnik, M. (2016). Adaptive resolution simulation of an atomistic DNA molecule in MARTINI salt solution. The European Physical Journal Special Topics, 225, 1595-1607."
  },
  {
    "objectID": "docs/publications/entries/2016/Zavadlav2016_DNA.html#citation-apa-7",
    "href": "docs/publications/entries/2016/Zavadlav2016_DNA.html#citation-apa-7",
    "title": "Adaptive resolution simulation of an atomistic DNA molecule in MARTINI salt solution",
    "section": "",
    "text": "Zavadlav, J., Podgornik, R., Melo, M. N., Marrink, S. J., & Praprotnik, M. (2016). Adaptive resolution simulation of an atomistic DNA molecule in MARTINI salt solution. The European Physical Journal Special Topics, 225, 1595-1607."
  },
  {
    "objectID": "docs/publications/entries/2016/Zavadlav2016_DNA.html#abstract",
    "href": "docs/publications/entries/2016/Zavadlav2016_DNA.html#abstract",
    "title": "Adaptive resolution simulation of an atomistic DNA molecule in MARTINI salt solution",
    "section": "Abstract",
    "text": "Abstract\nWe present a dual-resolution model of a deoxyribonucleic acid (DNA) molecule in a bathing solution, where we concurrently couple atomistic bundled water and ions with the coarse-grained MARTINI model of the solvent. We use our fine-grained salt solution model as a solvent in the inner shell surrounding the DNA molecule, whereas the solvent in the outer shell is modeled by the coarse-grained model. The solvent entities can exchange between the two domains and adapt their resolution accordingly. We critically asses the performance of our multiscale model in adaptive resolution simulations of an infinitely long DNA molecule, focusing on the structural characteristics of the solvent around DNA. Our analysis shows that the adaptive resolution scheme does not produce any noticeable artifacts in comparison to a reference system simulated in full detail. The effect of using a bundled-SPC model, required for multiscaling, compared to the standard free SPC model is also evaluated. Our multiscale approach opens the way for large scale applications of DNA and other biomolecules which require a large solvent reservoir to avoid boundary effects."
  },
  {
    "objectID": "docs/publications/entries/2017/Hsu2017_CHARMMGUI.html",
    "href": "docs/publications/entries/2017/Hsu2017_CHARMMGUI.html",
    "title": "CHARMM‐GUI MARTINI Maker for modeling and simulation of complex bacterial membranes with lipopolysaccharides",
    "section": "",
    "text": "Hsu, P. C., Bruininks, B. M., Jefferies, D., Cesar Telles de Souza, P., Lee, J., Patel, D. S., … & Im, W. (2017). CHARMM‐GUI Martini Maker for modeling and simulation of complex bacterial membranes with lipopolysaccharides."
  },
  {
    "objectID": "docs/publications/entries/2017/Hsu2017_CHARMMGUI.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Hsu2017_CHARMMGUI.html#citation-apa-7",
    "title": "CHARMM‐GUI MARTINI Maker for modeling and simulation of complex bacterial membranes with lipopolysaccharides",
    "section": "",
    "text": "Hsu, P. C., Bruininks, B. M., Jefferies, D., Cesar Telles de Souza, P., Lee, J., Patel, D. S., … & Im, W. (2017). CHARMM‐GUI Martini Maker for modeling and simulation of complex bacterial membranes with lipopolysaccharides."
  },
  {
    "objectID": "docs/publications/entries/2017/Hsu2017_CHARMMGUI.html#abstract",
    "href": "docs/publications/entries/2017/Hsu2017_CHARMMGUI.html#abstract",
    "title": "CHARMM‐GUI MARTINI Maker for modeling and simulation of complex bacterial membranes with lipopolysaccharides",
    "section": "Abstract",
    "text": "Abstract\nA complex cell envelope, composed of a mixture of lipid types including lipopolysaccharides, protects bacteria from the external environment. Clearly, the proteins embedded within the various components of the cell envelope have an intricate relationship with their local environment. Therefore, to obtain meaningful results, molecular simulations need to mimic as far as possible this chemically heterogeneous system. However, setting up such systems for computational studies is far from trivial, and consequently the vast majority of simulations of outer membrane proteins still rely on oversimplified phospholipid membrane models. This work presents an update of CHARMM-GUI Martini Maker for coarse-grained modeling and simulation of complex bacterial membranes with lipopolysaccharides. The qualities of the outer membrane systems generated by Martini Maker are validated by simulating them in bilayer, vesicle, nanodisc, and micelle environments (with and without outer membrane proteins) using the Martini force field. We expect this new feature in Martini Maker to be a useful tool for modeling large, complicated bacterial outer membrane systems in a user-friendly manner."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII_JPhysChemB.html",
    "href": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII_JPhysChemB.html",
    "title": "Molecular Dynamics of Photosystem II Embedded in the Thylakoid Membrane",
    "section": "",
    "text": "Van Eerden, F. J., Van Den Berg, T., Frederix, P. W., De Jong, D. H., Periole, X., & Marrink, S. J. (2017). Molecular dynamics of photosystem II embedded in the thylakoid membrane. The Journal of Physical Chemistry B, 121(15), 3237-3249."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII_JPhysChemB.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII_JPhysChemB.html#citation-apa-7",
    "title": "Molecular Dynamics of Photosystem II Embedded in the Thylakoid Membrane",
    "section": "",
    "text": "Van Eerden, F. J., Van Den Berg, T., Frederix, P. W., De Jong, D. H., Periole, X., & Marrink, S. J. (2017). Molecular dynamics of photosystem II embedded in the thylakoid membrane. The Journal of Physical Chemistry B, 121(15), 3237-3249."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII_JPhysChemB.html#abstract",
    "href": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII_JPhysChemB.html#abstract",
    "title": "Molecular Dynamics of Photosystem II Embedded in the Thylakoid Membrane",
    "section": "Abstract",
    "text": "Abstract\nPhotosystem II (PSII) is one of the key protein complexes in photosynthesis. We introduce a coarse grained model of PSII and present the analysis of 60 μs molecular dynamics simulations of PSII in both monomeric and dimeric form, embedded in a thylakoid membrane model that reflects its native lipid composition. We describe in detail the setup of the protein complex and the many natural cofactors and characterize their mobility. Overall we find that the protein subunits and cofactors are more flexible toward the periphery of the complex as well as near the PLQ exchange cavity and at the dimer interface. Of all cofactors, β-carotenes show the highest mobility. Some of the β-carotenes diffuse in and out of the protein complex via the thylakoid membrane. In contrast with the PSII dimer, the monomeric form adopts a tilted conformation in the membrane, with strong interactions between the soluble PsbO subunit and the glycolipid headgroups. Interestingly, the tilted conformation causes buckling of the membrane. Together, our results provide an unprecedented view of PSII dynamics on a microsecond time scale. Our data may be used as basis for the interpretation of experimental data as well as for theoretical models describing exciton energy transfer."
  },
  {
    "objectID": "docs/publications/entries/2017/Alessandri2017_BHJ.html",
    "href": "docs/publications/entries/2017/Alessandri2017_BHJ.html",
    "title": "Bulk Heterojunction Morphologies with Atomistic Resolution from Coarse-Grain Solvent Evaporation Simulations",
    "section": "",
    "text": "Alessandri, R., Uusitalo, J. J., De Vries, A. H., Havenith, R. W., & Marrink, S. J. (2017). Bulk heterojunction morphologies with atomistic resolution from coarse-grain solvent evaporation simulations. Journal of the American Chemical Society, 139(10), 3697-3705."
  },
  {
    "objectID": "docs/publications/entries/2017/Alessandri2017_BHJ.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Alessandri2017_BHJ.html#citation-apa-7",
    "title": "Bulk Heterojunction Morphologies with Atomistic Resolution from Coarse-Grain Solvent Evaporation Simulations",
    "section": "",
    "text": "Alessandri, R., Uusitalo, J. J., De Vries, A. H., Havenith, R. W., & Marrink, S. J. (2017). Bulk heterojunction morphologies with atomistic resolution from coarse-grain solvent evaporation simulations. Journal of the American Chemical Society, 139(10), 3697-3705."
  },
  {
    "objectID": "docs/publications/entries/2017/Alessandri2017_BHJ.html#abstract",
    "href": "docs/publications/entries/2017/Alessandri2017_BHJ.html#abstract",
    "title": "Bulk Heterojunction Morphologies with Atomistic Resolution from Coarse-Grain Solvent Evaporation Simulations",
    "section": "Abstract",
    "text": "Abstract\nControl over the morphology of the active layer of bulk heterojunction (BHJ) organic solar cells is paramount to achieve high-efficiency devices. However, no method currently available can predict morphologies for a novel donor–acceptor blend. An approach which allows reaching relevant length scales, retaining chemical specificity, and mimicking experimental fabrication conditions, and which is suited for high-throughput schemes has been proven challenging to find. Here, we propose a method to generate atom-resolved morphologies of BHJs which conforms to these requirements. Coarse-grain (CG) molecular dynamics simulations are employed to simulate the large-scale morphological organization during solution-processing. The use of CG models which retain chemical specificity translates into a direct path to the rational design of donor and acceptor compounds which differ only slightly in chemical nature. Finally, the direct retrieval of fully atomistic detail is possible through backmapping, opening the way for improved quantum mechanical calculations addressing the charge separation mechanism. The method is illustrated for the poly(3-hexyl-thiophene) (P3HT)–phenyl-C61-butyric acid methyl ester (PCBM) mixture, and found to predict morphologies in agreement with experimental data. The effect of drying rate, P3HT molecular weight, and thermal annealing are investigated extensively, resulting in trends mimicking experimental findings. The proposed methodology can help reduce the parameter space which has to be explored before obtaining optimal morphologies not only for BHJ solar cells but also for any other solution-processed soft matter device."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII.html",
    "href": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII.html",
    "title": "Prediction of Thylakoid Lipid Binding Sites on Photosystem II",
    "section": "",
    "text": "Van Eerden, F. J., Melo, M. N., Frederix, P. W., & Marrink, S. J. (2017). Prediction of thylakoid lipid binding sites on photosystem II. Biophysical journal, 113(12), 2669-2681."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII.html#citation-apa-7",
    "title": "Prediction of Thylakoid Lipid Binding Sites on Photosystem II",
    "section": "",
    "text": "Van Eerden, F. J., Melo, M. N., Frederix, P. W., & Marrink, S. J. (2017). Prediction of thylakoid lipid binding sites on photosystem II. Biophysical journal, 113(12), 2669-2681."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII.html#abstract",
    "href": "docs/publications/entries/2017/Van-Eerden2017_PhotosystemII.html#abstract",
    "title": "Prediction of Thylakoid Lipid Binding Sites on Photosystem II",
    "section": "Abstract",
    "text": "Abstract\nThe thylakoid membrane has a unique lipid composition, consisting mostly of galactolipids. These thylakoid lipids have important roles in photosynthesis. Here, we investigate to what extent these lipids bind specifically to the Photosystem II complex. To this end, we performed coarse-grain MD simulations of the Photosystem II complex embedded in a thylakoid membrane with realistic composition. Based on &gt;85 μs simulation time, we find that monogalactosyldiacylglycerol and sulfoquinovosyldiacylglycerol lipids are enriched in the annular shell around the protein, and form distinct binding sites. From the analysis of residue contacts, we conclude that electrostatic interactions play an important role in stabilizing these binding sites. Furthermore, we find that chlorophyll a has a prevalent role in the coordination of the lipids. In addition, we observe lipids to diffuse in and out of the plastoquinone exchange cavities, allowing exchange of cocrystallized lipids with the bulk membrane and suggesting a more open nature of the plastoquinone exchange cavity. Together, our data provide a wealth of information on protein-lipid interactions for a key protein in photosynthesis."
  },
  {
    "objectID": "docs/publications/entries/2017/Uusitalo2017_RNA.html",
    "href": "docs/publications/entries/2017/Uusitalo2017_RNA.html",
    "title": "MARTINI coarse-grained force field: extension to RNA",
    "section": "",
    "text": "Uusitalo, J. J., Ingólfsson, H. I., Marrink, S. J., & Faustino, I. (2017). Martini coarse-grained force field: extension to RNA. Biophysical journal, 113(2), 246-256."
  },
  {
    "objectID": "docs/publications/entries/2017/Uusitalo2017_RNA.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Uusitalo2017_RNA.html#citation-apa-7",
    "title": "MARTINI coarse-grained force field: extension to RNA",
    "section": "",
    "text": "Uusitalo, J. J., Ingólfsson, H. I., Marrink, S. J., & Faustino, I. (2017). Martini coarse-grained force field: extension to RNA. Biophysical journal, 113(2), 246-256."
  },
  {
    "objectID": "docs/publications/entries/2017/Uusitalo2017_RNA.html#abstract",
    "href": "docs/publications/entries/2017/Uusitalo2017_RNA.html#abstract",
    "title": "MARTINI coarse-grained force field: extension to RNA",
    "section": "Abstract",
    "text": "Abstract\nRNA has an important role not only as the messenger of genetic information but also as a regulator of gene expression. Given its central role in cell biology, there is significant interest in studying the structural and dynamic behavior of RNA in relation to other biomolecules. Coarse-grain molecular dynamics simulations are a key tool to that end. Here, we have extended the coarse-grain Martini force field to include RNA after our recent extension to DNA. In the same way DNA was modeled, the tertiary structure of RNA is constrained using an elastic network. This model, therefore, is not designed for applications involving RNA folding but rather offers a stable RNA structure for studying RNA interactions with other (bio)molecules. The RNA model is compatible with all other Martini models and opens the way to large-scale explicit-solvent molecular dynamics simulations of complex systems involving RNA."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_plastoquinone.html",
    "href": "docs/publications/entries/2017/Van-Eerden2017_plastoquinone.html",
    "title": "Exchange pathways of plastoquinone and plastoquinol in the photosystem II complex",
    "section": "",
    "text": "Van Eerden, F. J., Melo, M. N., Frederix, P. W., Periole, X., & Marrink, S. J. (2017). Exchange pathways of plastoquinone and plastoquinol in the photosystem II complex. Nature communications, 8(1), 15214."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_plastoquinone.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Van-Eerden2017_plastoquinone.html#citation-apa-7",
    "title": "Exchange pathways of plastoquinone and plastoquinol in the photosystem II complex",
    "section": "",
    "text": "Van Eerden, F. J., Melo, M. N., Frederix, P. W., Periole, X., & Marrink, S. J. (2017). Exchange pathways of plastoquinone and plastoquinol in the photosystem II complex. Nature communications, 8(1), 15214."
  },
  {
    "objectID": "docs/publications/entries/2017/Van-Eerden2017_plastoquinone.html#abstract",
    "href": "docs/publications/entries/2017/Van-Eerden2017_plastoquinone.html#abstract",
    "title": "Exchange pathways of plastoquinone and plastoquinol in the photosystem II complex",
    "section": "Abstract",
    "text": "Abstract\nPlastoquinone (PLQ) acts as an electron carrier between photosystem II (PSII) and the cytochrome b6f complex. To understand how PLQ enters and leaves PSII, here we show results of coarse grained molecular dynamics simulations of PSII embedded in the thylakoid membrane, covering a total simulation time of more than 0.5 ms. The long time scale allows the observation of many spontaneous entries of PLQ into PSII, and the unbinding of plastoquinol (PLQol) from the complex. In addition to the two known channels, we observe a third channel for PLQ/PLQol diffusion between the thylakoid membrane and the PLQ binding sites. Our simulations point to a promiscuous diffusion mechanism in which all three channels function as entry and exit channels. The exchange cavity serves as a PLQ reservoir. Our simulations provide a direct view on the exchange of electron carriers, a key step of the photosynthesis machinery."
  },
  {
    "objectID": "docs/publications/entries/2017/Venable2017_Diffusion.html",
    "href": "docs/publications/entries/2017/Venable2017_Diffusion.html",
    "title": "Lipid and Peptide Diffusion in Bilayers: The Saffman–Delbrück Model and Periodic Boundary Conditions",
    "section": "",
    "text": "Venable, R. M., Ingólfsson, H. I., Lerner, M. G., Perrin Jr, B. S., Camley, B. A., Marrink, S. J., … & Pastor, R. W. (2017). Lipid and Peptide Diffusion in Bilayers: The Saffman–Delbrück Model and Periodic Boundary Conditions. The Journal of Physical Chemistry B, 121(15), 3443-3457."
  },
  {
    "objectID": "docs/publications/entries/2017/Venable2017_Diffusion.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Venable2017_Diffusion.html#citation-apa-7",
    "title": "Lipid and Peptide Diffusion in Bilayers: The Saffman–Delbrück Model and Periodic Boundary Conditions",
    "section": "",
    "text": "Venable, R. M., Ingólfsson, H. I., Lerner, M. G., Perrin Jr, B. S., Camley, B. A., Marrink, S. J., … & Pastor, R. W. (2017). Lipid and Peptide Diffusion in Bilayers: The Saffman–Delbrück Model and Periodic Boundary Conditions. The Journal of Physical Chemistry B, 121(15), 3443-3457."
  },
  {
    "objectID": "docs/publications/entries/2017/Venable2017_Diffusion.html#abstract",
    "href": "docs/publications/entries/2017/Venable2017_Diffusion.html#abstract",
    "title": "Lipid and Peptide Diffusion in Bilayers: The Saffman–Delbrück Model and Periodic Boundary Conditions",
    "section": "Abstract",
    "text": "Abstract\nThe periodic Saffman–Delbrück (PSD) model, an extension of the Saffman–Delbrück model developed to describe the effects of periodic boundary conditions on the diffusion constants of lipids and proteins obtained from simulation, is tested using the coarse-grained Martini and all-atom CHARMM36 (C36) force fields. Simulations of pure Martini dipalmitoylphosphatidylcholine (DPPC) bilayers and those with one embedded gramicidin A (gA) dimer or one gA monomer with sizes ranging from 512 to 2048 lipids support the PSD model. Underestimates of D∞ (the value of the diffusion constant for an infinite system) from the 512-lipid system are 35% for DPPC, 45% for the gA monomer, and 70% for the gA dimer. Simulations of all-atom DPPC and dioleoylphosphatidylcholine (DOPC) bilayers yield diffusion constants not far from experiment. However, the PSD model predicts that diffusion constants at the sizes of the simulation should underestimate experiment by approximately a factor of 3 for DPPC and 2 for DOPC. This likely implies a deficiency in the C36 force field. A Bayesian method for extrapolating diffusion constants of lipids and proteins in membranes obtained from simulation to infinite system size is provided."
  },
  {
    "objectID": "docs/publications/entries/2021/Chakraborty2021_Glycans.html",
    "href": "docs/publications/entries/2021/Chakraborty2021_Glycans.html",
    "title": "Development of Martini 2.2 parameters for N-glycans: A case study of the HIV-1 Env glycoprotein dynamics",
    "section": "",
    "text": "Chakraborty, S., Wagh, K., Gnanakaran, S., & López, C. A. (2021). Development of Martini 2.2 parameters for N-glycans: A case study of the HIV-1 Env glycoprotein dynamics. Glycobiology, 31(7), 787-799."
  },
  {
    "objectID": "docs/publications/entries/2021/Chakraborty2021_Glycans.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Chakraborty2021_Glycans.html#citation-apa-7",
    "title": "Development of Martini 2.2 parameters for N-glycans: A case study of the HIV-1 Env glycoprotein dynamics",
    "section": "",
    "text": "Chakraborty, S., Wagh, K., Gnanakaran, S., & López, C. A. (2021). Development of Martini 2.2 parameters for N-glycans: A case study of the HIV-1 Env glycoprotein dynamics. Glycobiology, 31(7), 787-799."
  },
  {
    "objectID": "docs/publications/entries/2021/Chakraborty2021_Glycans.html#abstract",
    "href": "docs/publications/entries/2021/Chakraborty2021_Glycans.html#abstract",
    "title": "Development of Martini 2.2 parameters for N-glycans: A case study of the HIV-1 Env glycoprotein dynamics",
    "section": "Abstract",
    "text": "Abstract\nN-linked glycans are ubiquitous in nature and play key roles in biology. For example, glycosylation of pathogenic proteins is a common immune evasive mechanism, hampering the development of successful vaccines. Due to their chemical variability and complex dynamics, an accurate molecular understanding of glycans is still limited by the lack of effective resolution of current experimental approaches. Here, we have developed and implemented a reductive model based on the popular Martini 2.2 coarse-grained force field for the computational study of N-glycosylation. We used the HIV-1 Env as a direct applied example of a highly glycosylated protein. Our results indicate that the model not only reproduces many observables in very good agreement with a fully atomistic force field but also can be extended to study large amount of glycosylation variants, a fundamental property that can aid in the development of drugs and vaccines."
  },
  {
    "objectID": "docs/publications/entries/2021/Pezeshkian2021_RealisticShapes.html",
    "href": "docs/publications/entries/2021/Pezeshkian2021_RealisticShapes.html",
    "title": "Simulating realistic membrane shapes",
    "section": "",
    "text": "Pezeshkian, W., & Marrink, S. J. (2021). Simulating realistic membrane shapes. Current opinion in cell biology, 71, 103-111."
  },
  {
    "objectID": "docs/publications/entries/2021/Pezeshkian2021_RealisticShapes.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Pezeshkian2021_RealisticShapes.html#citation-apa-7",
    "title": "Simulating realistic membrane shapes",
    "section": "",
    "text": "Pezeshkian, W., & Marrink, S. J. (2021). Simulating realistic membrane shapes. Current opinion in cell biology, 71, 103-111."
  },
  {
    "objectID": "docs/publications/entries/2021/Pezeshkian2021_RealisticShapes.html#abstract",
    "href": "docs/publications/entries/2021/Pezeshkian2021_RealisticShapes.html#abstract",
    "title": "Simulating realistic membrane shapes",
    "section": "Abstract",
    "text": "Abstract\nBiological membranes exhibit diversity in their shapes and complexity in chemical compositions that are linked to many cellular functions. These two central features of biomembranes have been the subject of numerous simulation studies, using a diverse range of computational techniques. Currently, the field is able to capture this complexity at increasing levels of realism and connect the microscopic view on protein–lipid interactions to cellular morphologies at the level of entire organelles. Here we highlight recent advances in this topic, identify current bottlenecks, and sketch possible ways ahead."
  },
  {
    "objectID": "docs/publications/entries/2021/Souza2021_LigandProteinHT.html",
    "href": "docs/publications/entries/2021/Souza2021_LigandProteinHT.html",
    "title": "Perspectives on high-throughput ligand/protein docking with martini MD simulations",
    "section": "",
    "text": "Souza, P. C., Limongelli, V., Wu, S., Marrink, S. J., & Monticelli, L. (2021). Perspectives on high-throughput ligand/protein docking with martini MD simulations. Frontiers in Molecular Biosciences, 8, 657222."
  },
  {
    "objectID": "docs/publications/entries/2021/Souza2021_LigandProteinHT.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Souza2021_LigandProteinHT.html#citation-apa-7",
    "title": "Perspectives on high-throughput ligand/protein docking with martini MD simulations",
    "section": "",
    "text": "Souza, P. C., Limongelli, V., Wu, S., Marrink, S. J., & Monticelli, L. (2021). Perspectives on high-throughput ligand/protein docking with martini MD simulations. Frontiers in Molecular Biosciences, 8, 657222."
  },
  {
    "objectID": "docs/publications/entries/2021/Souza2021_LigandProteinHT.html#abstract",
    "href": "docs/publications/entries/2021/Souza2021_LigandProteinHT.html#abstract",
    "title": "Perspectives on high-throughput ligand/protein docking with martini MD simulations",
    "section": "Abstract",
    "text": "Abstract\nMolecular docking is central to rational drug design. Current docking techniques suffer, however, from limitations in protein flexibility and solvation models and by the use of simplified scoring functions. All-atom molecular dynamics simulations, on the other hand, feature a realistic representation of protein flexibility and solvent, but require knowledge of the binding site. Recently we showed that coarse-grained molecular dynamics simulations, based on the most recent version of the Martini force field, can be used to predict protein/ligand binding sites and pathways, without requiring any a priori information, and offer a level of accuracy approaching all-atom simulations. Given the excellent computational efficiency of Martini, this opens the way to high-throughput drug screening based on dynamic docking pipelines. In this opinion article, we sketch the roadmap to achieve this goal."
  },
  {
    "objectID": "docs/publications/entries/2021/Grünewald2021_PEGylatedProteins.html",
    "href": "docs/publications/entries/2021/Grünewald2021_PEGylatedProteins.html",
    "title": "Protocol for Simulations of PEGylated Proteins with Martini 3",
    "section": "",
    "text": "Grünewald, F., Kroon, P. C., Souza, P. C., & Marrink, S. J. (2021). Protocol for simulations of PEGylated proteins with martini 3. Structural Genomics: General Applications, 315-335."
  },
  {
    "objectID": "docs/publications/entries/2021/Grünewald2021_PEGylatedProteins.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Grünewald2021_PEGylatedProteins.html#citation-apa-7",
    "title": "Protocol for Simulations of PEGylated Proteins with Martini 3",
    "section": "",
    "text": "Grünewald, F., Kroon, P. C., Souza, P. C., & Marrink, S. J. (2021). Protocol for simulations of PEGylated proteins with martini 3. Structural Genomics: General Applications, 315-335."
  },
  {
    "objectID": "docs/publications/entries/2021/Grünewald2021_PEGylatedProteins.html#abstract",
    "href": "docs/publications/entries/2021/Grünewald2021_PEGylatedProteins.html#abstract",
    "title": "Protocol for Simulations of PEGylated Proteins with Martini 3",
    "section": "Abstract",
    "text": "Abstract\nEnhancement of proteins by PEGylation is an active area of research. However, the interactions between polymer and protein are far from fully understood. To gain a better insight into these interactions or even make predictions, molecular dynamics (MD) simulations can be applied to study specific protein-polymer systems at molecular level detail. Here we present instructions on how to simulate PEGylated proteins using the latest iteration of the Martini coarse-grained (CG) force-field. CG MD simulations offer near atomistic information and at the same time allow to study complex biological systems over longer time and length scales than fully atomistic-level simulations."
  },
  {
    "objectID": "docs/publications/entries/2021/Sousa2021_Metabolites.html",
    "href": "docs/publications/entries/2021/Sousa2021_Metabolites.html",
    "title": "Coarse-Grained Parameterization of Nucleotide Cofactors and Metabolites: Protonation Constants, Partition Coefficients, and Model Topologies",
    "section": "",
    "text": "Sousa, F. M., Lima, L. M., Arnarez, C., Pereira, M. M., & Melo, M. N. (2021). Coarse-grained parameterization of nucleotide cofactors and metabolites: protonation constants, partition coefficients, and model topologies. Journal of Chemical Information and Modeling, 61(1), 335-346."
  },
  {
    "objectID": "docs/publications/entries/2021/Sousa2021_Metabolites.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Sousa2021_Metabolites.html#citation-apa-7",
    "title": "Coarse-Grained Parameterization of Nucleotide Cofactors and Metabolites: Protonation Constants, Partition Coefficients, and Model Topologies",
    "section": "",
    "text": "Sousa, F. M., Lima, L. M., Arnarez, C., Pereira, M. M., & Melo, M. N. (2021). Coarse-grained parameterization of nucleotide cofactors and metabolites: protonation constants, partition coefficients, and model topologies. Journal of Chemical Information and Modeling, 61(1), 335-346."
  },
  {
    "objectID": "docs/publications/entries/2021/Sousa2021_Metabolites.html#abstract",
    "href": "docs/publications/entries/2021/Sousa2021_Metabolites.html#abstract",
    "title": "Coarse-Grained Parameterization of Nucleotide Cofactors and Metabolites: Protonation Constants, Partition Coefficients, and Model Topologies",
    "section": "Abstract",
    "text": "Abstract\nNucleotides are structural units relevant not only in nucleic acids but also as substrates or cofactors in key biochemical reactions. The size- and timescales of such nucleotide–protein interactions fall well within the scope of coarse-grained molecular dynamics, which holds promise of important mechanistic insight. However, the lack of specific parameters has prevented accurate coarse-grained simulations of protein interactions with most nucleotide compounds. In this work, we comprehensively develop coarse-grained parameters for key metabolites/cofactors (FAD, FMN, riboflavin, NAD, NADP, ATP, ADP, AMP, and thiamine pyrophosphate) in different oxidation and protonation states as well as for smaller molecules derived from them (among others, nicotinamide, adenosine, adenine, ribose, thiamine, and lumiflavin), summing up a total of 79 different molecules. In line with the Martini parameterization methodology, parameters were tuned to reproduce octanol–water partition coefficients. Given the lack of existing data, we set out to experimentally determine these partition coefficients, developing two methodological approaches, based on 31P-NMR and fluorescence spectroscopy, specifically tailored to the strong hydrophilicity of most of the parameterized compounds. To distinguish the partition of each relevant protonation species, we further potentiometrically characterized the protonation constants of key molecules. This work successfully builds a comprehensive and relevant set of computational models that will boost the biochemical application of coarse-grained simulations. It does so based on the measurement of partition and acid–base physicochemical data that, in turn, covers important gaps in nucleotide characterization."
  },
  {
    "objectID": "docs/publications/entries/2021/Liu2021_DualResolution.html",
    "href": "docs/publications/entries/2021/Liu2021_DualResolution.html",
    "title": "Capturing Membrane Phase Separation by Dual Resolution Molecular Dynamics Simulations",
    "section": "",
    "text": "Liu, Y., de Vries, A. H., Pezeshkian, W., & Marrink, S. J. (2021). Capturing membrane phase separation by dual resolution molecular dynamics simulations. Journal of Chemical Theory and Computation, 17(9), 5876-5884."
  },
  {
    "objectID": "docs/publications/entries/2021/Liu2021_DualResolution.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Liu2021_DualResolution.html#citation-apa-7",
    "title": "Capturing Membrane Phase Separation by Dual Resolution Molecular Dynamics Simulations",
    "section": "",
    "text": "Liu, Y., de Vries, A. H., Pezeshkian, W., & Marrink, S. J. (2021). Capturing membrane phase separation by dual resolution molecular dynamics simulations. Journal of Chemical Theory and Computation, 17(9), 5876-5884."
  },
  {
    "objectID": "docs/publications/entries/2021/Liu2021_DualResolution.html#abstract",
    "href": "docs/publications/entries/2021/Liu2021_DualResolution.html#abstract",
    "title": "Capturing Membrane Phase Separation by Dual Resolution Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nUnderstanding the lateral organization in plasma membranes remains an open problem and is of great interest to many researchers. Model membranes consisting of coexisting domains are commonly used as simplified models of plasma membranes. The coarse-grained (CG) Martini force field has successfully captured spontaneous separation of ternary membranes into a liquid-disordered and a liquid-ordered domain. With all-atom (AA) models, however, phase separation is much harder to achieve due to the slow underlying dynamics. To remedy this problem, here, we apply the virtual site (VS) hybrid method on a ternary membrane composed of saturated lipids, unsaturated lipids, and cholesterol to investigate the phase separation. The VS scheme couples the two membrane leaflets at CG and AA resolution. We found that the rapid phase separation reached by the CG leaflet can accelerate and guide this process in the AA leaflet."
  },
  {
    "objectID": "docs/publications/entries/2021/Alessandri2021_MaterialsScience.html",
    "href": "docs/publications/entries/2021/Alessandri2021_MaterialsScience.html",
    "title": "The Martini model in materials science",
    "section": "",
    "text": "Alessandri, R., Grünewald, F., & Marrink, S. J. (2021). The martini model in materials science. Advanced Materials, 33(24), 2008635."
  },
  {
    "objectID": "docs/publications/entries/2021/Alessandri2021_MaterialsScience.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Alessandri2021_MaterialsScience.html#citation-apa-7",
    "title": "The Martini model in materials science",
    "section": "",
    "text": "Alessandri, R., Grünewald, F., & Marrink, S. J. (2021). The martini model in materials science. Advanced Materials, 33(24), 2008635."
  },
  {
    "objectID": "docs/publications/entries/2021/Alessandri2021_MaterialsScience.html#abstract",
    "href": "docs/publications/entries/2021/Alessandri2021_MaterialsScience.html#abstract",
    "title": "The Martini model in materials science",
    "section": "Abstract",
    "text": "Abstract\nThe Martini model, a coarse-grained force field initially developed with biomolecular simulations in mind, has found an increasing number of applications in the field of soft materials science. The model’s underlying building block principle does not pose restrictions on its application beyond biomolecular systems. Here, the main applications to date of the Martini model in materials science are highlighted, and a perspective for the future developments in this field is given, particularly in light of recent developments such as the new version of the model, Martini 3."
  },
  {
    "objectID": "docs/publications/entries/2021/Liaci2021_SignalPeptidase.html",
    "href": "docs/publications/entries/2021/Liaci2021_SignalPeptidase.html",
    "title": "Structure of the human signal peptidase complex reveals the determinants for signal peptide cleavage",
    "section": "",
    "text": "Liaci, A. M., Steigenberger, B., de Souza, P. C. T., Tamara, S., Gröllers-Mulderij, M., Ogrissek, P., … & Förster, F. (2021). Structure of the human signal peptidase complex reveals the determinants for signal peptide cleavage. Molecular cell, 81(19), 3934-3948."
  },
  {
    "objectID": "docs/publications/entries/2021/Liaci2021_SignalPeptidase.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Liaci2021_SignalPeptidase.html#citation-apa-7",
    "title": "Structure of the human signal peptidase complex reveals the determinants for signal peptide cleavage",
    "section": "",
    "text": "Liaci, A. M., Steigenberger, B., de Souza, P. C. T., Tamara, S., Gröllers-Mulderij, M., Ogrissek, P., … & Förster, F. (2021). Structure of the human signal peptidase complex reveals the determinants for signal peptide cleavage. Molecular cell, 81(19), 3934-3948."
  },
  {
    "objectID": "docs/publications/entries/2021/Liaci2021_SignalPeptidase.html#abstract",
    "href": "docs/publications/entries/2021/Liaci2021_SignalPeptidase.html#abstract",
    "title": "Structure of the human signal peptidase complex reveals the determinants for signal peptide cleavage",
    "section": "Abstract",
    "text": "Abstract\nThe signal peptidase complex (SPC) is an essential membrane complex in the endoplasmic reticulum (ER), where it removes signal peptides (SPs) from a large variety of secretory pre-proteins with exquisite specificity. Although the determinants of this process have been established empirically, the molecular details of SP recognition and removal remain elusive. Here, we show that the human SPC exists in two functional paralogs with distinct proteolytic subunits. We determined the atomic structures of both paralogs using electron cryo-microscopy and structural proteomics. The active site is formed by a catalytic triad and abuts the ER membrane, where a transmembrane window collectively formed by all subunits locally thins the bilayer. Molecular dynamics simulations indicate that this unique architecture generates specificity for SPs based on the length of their hydrophobic segments."
  },
  {
    "objectID": "docs/publications/entries/2025/Vreeker2025_Nanopore.html",
    "href": "docs/publications/entries/2025/Vreeker2025_Nanopore.html",
    "title": "Nanopore-Functionalized Hybrid Lipid-Block Copolymer Membranes Allow Efficient Single-Molecule Sampling and Stable Sensing of Human Serum",
    "section": "",
    "text": "Vreeker, E., Grünewald, F., van der Heide, N. J., Bonini, A., Marrink, S. J., Tych, K., & Maglia, G. (2025). Nanopore‐Functionalized Hybrid Lipid‐Block Copolymer Membranes Allow Efficient Single‐Molecule Sampling and Stable Sensing of Human Serum. Advanced Materials, 2418462."
  },
  {
    "objectID": "docs/publications/entries/2025/Vreeker2025_Nanopore.html#citation-apa-7",
    "href": "docs/publications/entries/2025/Vreeker2025_Nanopore.html#citation-apa-7",
    "title": "Nanopore-Functionalized Hybrid Lipid-Block Copolymer Membranes Allow Efficient Single-Molecule Sampling and Stable Sensing of Human Serum",
    "section": "",
    "text": "Vreeker, E., Grünewald, F., van der Heide, N. J., Bonini, A., Marrink, S. J., Tych, K., & Maglia, G. (2025). Nanopore‐Functionalized Hybrid Lipid‐Block Copolymer Membranes Allow Efficient Single‐Molecule Sampling and Stable Sensing of Human Serum. Advanced Materials, 2418462."
  },
  {
    "objectID": "docs/publications/entries/2025/Vreeker2025_Nanopore.html#abstract",
    "href": "docs/publications/entries/2025/Vreeker2025_Nanopore.html#abstract",
    "title": "Nanopore-Functionalized Hybrid Lipid-Block Copolymer Membranes Allow Efficient Single-Molecule Sampling and Stable Sensing of Human Serum",
    "section": "Abstract",
    "text": "Abstract\nBiological nanopores are powerful tools for single-molecule detection, with promising potential as next-generation biosensors. A major bottleneck in nanopore analysis is the fragility of the supporting lipid membranes, that easily rupture after exposure to biological samples. Membranes comprising PMOXA-PDMS-PMOXA (poly(2-methyloxazoline-b-dimethylsiloxane-b-2-methyloxazoline)) or PBD-PEO (poly(1,2-butadiene)-b-poly(ethylene oxide)) polymers may form robust alternatives, but their suitability for the reconstitution of a broad range of nanopores has not yet been investigated. Here, PBD-PEO membranes are found to be highly robust toward applied voltages and human serum, while providing a poor environment for nanopore reconstitution. However, hybrid membranes containing a similar molar ratio of PBD11PEO8 polymers and diphytanoyl phosphatidylcholine (DPhPC) lipids show the best of both worlds: highly robust membranes suitable for the reconstitution of a wide variety of nanopores. Molecular dynamics simulations reveal that lipids form ≈12 nm domains interspersed by a polymer matrix. Nanopores partition into these lipid nanodomains and sequester lipids, possibly offering the same binding strength as in a native bilayer. Nanopores reconstituted in hybrid membranes yield efficient sampling of biomolecules and enable sensing of high concentrations of human serum. This work thus shows that hybrid membranes functionalized with nanopores allow single-molecule sensing, while forming robust interfaces, resolving an important bottleneck for novel nanopore-based biosensors."
  },
  {
    "objectID": "docs/publications/entries/2025/Brandner2025_Disaccharides.html",
    "href": "docs/publications/entries/2025/Brandner2025_Disaccharides.html",
    "title": "A systematic approach to parameterization of disaccharides for the Martini 3 coarse-grained force-field",
    "section": "",
    "text": "Brandner, A. F., Smith, I. P., Marrink, S. J., Souza, P. C., & Khalid, S. (2025). Systematic Approach to Parametrization of Disaccharides for the Martini 3 Coarse-Grained Force Field. Journal of chemical information and modeling."
  },
  {
    "objectID": "docs/publications/entries/2025/Brandner2025_Disaccharides.html#citation-apa-7",
    "href": "docs/publications/entries/2025/Brandner2025_Disaccharides.html#citation-apa-7",
    "title": "A systematic approach to parameterization of disaccharides for the Martini 3 coarse-grained force-field",
    "section": "",
    "text": "Brandner, A. F., Smith, I. P., Marrink, S. J., Souza, P. C., & Khalid, S. (2025). Systematic Approach to Parametrization of Disaccharides for the Martini 3 Coarse-Grained Force Field. Journal of chemical information and modeling."
  },
  {
    "objectID": "docs/publications/entries/2025/Brandner2025_Disaccharides.html#abstract",
    "href": "docs/publications/entries/2025/Brandner2025_Disaccharides.html#abstract",
    "title": "A systematic approach to parameterization of disaccharides for the Martini 3 coarse-grained force-field",
    "section": "Abstract",
    "text": "Abstract\nSugars are ubiquitous in biology; they occur in all kingdoms of life. Despite their prevalence, they have often been somewhat neglected in studies of structure–dynamics–function relationships of macromolecules to which they are attached, with the exception of nucleic acids. This is largely due to the inherent difficulties of not only studying the conformational dynamics of sugars using experimental methods but indeed also resolving their static structures. Molecular dynamics (MD) simulations offer a route to the prediction of conformational ensembles and the time-dependent behavior of sugars and glycosylated macromolecules. However, at the all-atom level of detail, MD simulations are often too computationally demanding to allow a systematic investigation of molecular interactions in systems of interest. To overcome this, large scale simulations of complex biological systems have profited from advances in coarse-grained (CG) simulations. Perhaps the most widely used CG force field for biomolecular simulations is Martini. Here, we present a parameter set for glucose- and mannose-based disaccharides for Martini 3. The generation of the CG parameters from atomistic trajectories is automated as fully as possible, and where not possible, we provide details of the protocol used for manual intervention."
  },
  {
    "objectID": "docs/publications/entries/2018/Thallmair2018_Cholesterol.html",
    "href": "docs/publications/entries/2018/Thallmair2018_Cholesterol.html",
    "title": "Cholesterol Flip-Flop Impacts Domain Registration in Plasma Membrane Models",
    "section": "",
    "text": "Thallmair, S., Ingólfsson, H. I., & Marrink, S. J. (2018). Cholesterol flip-flop impacts domain registration in plasma membrane models. The journal of physical chemistry letters, 9(18), 5527-5533."
  },
  {
    "objectID": "docs/publications/entries/2018/Thallmair2018_Cholesterol.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Thallmair2018_Cholesterol.html#citation-apa-7",
    "title": "Cholesterol Flip-Flop Impacts Domain Registration in Plasma Membrane Models",
    "section": "",
    "text": "Thallmair, S., Ingólfsson, H. I., & Marrink, S. J. (2018). Cholesterol flip-flop impacts domain registration in plasma membrane models. The journal of physical chemistry letters, 9(18), 5527-5533."
  },
  {
    "objectID": "docs/publications/entries/2018/Thallmair2018_Cholesterol.html#abstract",
    "href": "docs/publications/entries/2018/Thallmair2018_Cholesterol.html#abstract",
    "title": "Cholesterol Flip-Flop Impacts Domain Registration in Plasma Membrane Models",
    "section": "Abstract",
    "text": "Abstract\nThe plasma membrane is a highly complex multicomponent system that is central to the functioning of cells. Cholesterol, a key lipid component of the plasma membrane, promotes the formation of nanodomains. These nanodomains are often correlated across the two membrane leaflets, but the underlying physical mechanism remains unclear. Using coarse-grained molecular dynamics simulations, we investigate the influence of cholesterol flip-flop on membrane properties, in particular, the interleaflet coupling of cholesterol-enriched domains. We show that the cholesterol density correlation between the leaflets of an average mammalian plasma membrane is significantly reduced by suppressing interleaflet cholesterol population. Our results suggest an amplifying role of cholesterol in signal transduction across the leaflets."
  },
  {
    "objectID": "docs/publications/entries/2018/Baoukina2018_Curvature.html",
    "href": "docs/publications/entries/2018/Baoukina2018_Curvature.html",
    "title": "Curvature-Induced Sorting of Lipids in Plasma Membrane Tethers",
    "section": "",
    "text": "Baoukina, S., Ingólfsson, H. I., Marrink, S. J., & Tieleman, D. P. (2018). Curvature‐induced sorting of lipids in plasma membrane tethers. Advanced Theory and Simulations, 1(8), 1800034."
  },
  {
    "objectID": "docs/publications/entries/2018/Baoukina2018_Curvature.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Baoukina2018_Curvature.html#citation-apa-7",
    "title": "Curvature-Induced Sorting of Lipids in Plasma Membrane Tethers",
    "section": "",
    "text": "Baoukina, S., Ingólfsson, H. I., Marrink, S. J., & Tieleman, D. P. (2018). Curvature‐induced sorting of lipids in plasma membrane tethers. Advanced Theory and Simulations, 1(8), 1800034."
  },
  {
    "objectID": "docs/publications/entries/2018/Baoukina2018_Curvature.html#abstract",
    "href": "docs/publications/entries/2018/Baoukina2018_Curvature.html#abstract",
    "title": "Curvature-Induced Sorting of Lipids in Plasma Membrane Tethers",
    "section": "Abstract",
    "text": "Abstract\nMembrane curvature controls the spatial organization and activity of cells. Lipid sorting in cell membranes can be explained by matching lipid molecular shape to regions of different curvatures. A molecular view of curvature-induced lipid sorting is obtained using coarse-grained molecular dynamics. A model membrane consisting of an asymmetric bilayer of multiple lipid species is simulated. Curvature is induced by pulling a tether, that is, a bilayer nanotube, from a flat membrane. Pulling is performed both from the inner and outer leaflets, corresponding to directions in and out of the cell. Redistribution of different lipid types between the tether and the bilayer is observed, leading to spatial variations in the composition of both leaflets, and, in turn, softening of the tether. Depending on the direction of pulling, the lipid distributions and the tether properties differ. Formation of a tether from the planar membrane thus induces lipid sorting without phase separation."
  },
  {
    "objectID": "docs/publications/entries/2018/Pedersen2018_Liprotide.html",
    "href": "docs/publications/entries/2018/Pedersen2018_Liprotide.html",
    "title": "Role of Charge and Hydrophobicity in Liprotide Formation: A Molecular Dynamics Study with Experimental Constraints",
    "section": "",
    "text": "Nedergaard Pedersen, J., Frederix, P. W. J. M., Skov Pedersen, J., Marrink, S. J., & Otzen, D. E. (2018). Role of charge and hydrophobicity in liprotide formation: A molecular dynamics study with experimental constraints. ChemBioChem, 19(3), 263-271."
  },
  {
    "objectID": "docs/publications/entries/2018/Pedersen2018_Liprotide.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Pedersen2018_Liprotide.html#citation-apa-7",
    "title": "Role of Charge and Hydrophobicity in Liprotide Formation: A Molecular Dynamics Study with Experimental Constraints",
    "section": "",
    "text": "Nedergaard Pedersen, J., Frederix, P. W. J. M., Skov Pedersen, J., Marrink, S. J., & Otzen, D. E. (2018). Role of charge and hydrophobicity in liprotide formation: A molecular dynamics study with experimental constraints. ChemBioChem, 19(3), 263-271."
  },
  {
    "objectID": "docs/publications/entries/2018/Pedersen2018_Liprotide.html#abstract",
    "href": "docs/publications/entries/2018/Pedersen2018_Liprotide.html#abstract",
    "title": "Role of Charge and Hydrophobicity in Liprotide Formation: A Molecular Dynamics Study with Experimental Constraints",
    "section": "Abstract",
    "text": "Abstract\nBovine α-lactalbumin (aLA) and oleate (OA) form a complex that has been intensively studied for its tumoricidal activity. Small-angle X-ray scattering (SAXS) has revealed that this complex consists of a lipid core surrounded by partially unfolded protein. We call this type of complex a liprotide. Little is known of the molecular interactions between OA and aLA, and no technique has so far provided any high-resolution structure of a liprotide. Here we have used coarse-grained (CG) molecular dynamics (MD) simulations, isothermal titration calorimetry (ITC) and SAXS to investigate the interactions between aLA and OA during the process of liprotide formation. With ITC we found that the strongest enthalpic interactions occurred at a molar ratio of 12.0±1.4:1 OA/aLA. Liprotides formed between OA and aLA at several OA/aLA ratios in silico were stable both in CG and in all-atom simulations. From the simulated structures we calculated SAXS spectra that show good agreement with experimentally measured patterns of matching liprotides. The simulations showed that aLA assumes a molten globular (MG) state, exposing several hydrophobic patches involved in interactions with OA. Initial binding of aLA to OA occurs in an area of aLA in which a high amount of positive charge is located, and only later do hydrophobic interactions become important. The results reveal how unfolding of aLA to expose hydrophobic residues is important for complex formation between aLA and OA. Our findings suggest a general mechanism for liprotide formation and might explain the ability of a large number of proteins to form liprotides with OA."
  },
  {
    "objectID": "docs/publications/entries/2018/Sun2018_FERM.html",
    "href": "docs/publications/entries/2018/Sun2018_FERM.html",
    "title": "Molecular Dynamics of the Association of L-Selectin and FERM Regulated by PIP2",
    "section": "",
    "text": "Sun, F., Schroer, C. F., Xu, L., Yin, H., Marrink, S. J., & Luo, S. Z. (2018). Molecular Dynamics of the Association of L-Selectin and FERM Regulated by PIP2. Biophysical journal, 114(8), 1858-1868."
  },
  {
    "objectID": "docs/publications/entries/2018/Sun2018_FERM.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Sun2018_FERM.html#citation-apa-7",
    "title": "Molecular Dynamics of the Association of L-Selectin and FERM Regulated by PIP2",
    "section": "",
    "text": "Sun, F., Schroer, C. F., Xu, L., Yin, H., Marrink, S. J., & Luo, S. Z. (2018). Molecular Dynamics of the Association of L-Selectin and FERM Regulated by PIP2. Biophysical journal, 114(8), 1858-1868."
  },
  {
    "objectID": "docs/publications/entries/2018/Sun2018_FERM.html#abstract",
    "href": "docs/publications/entries/2018/Sun2018_FERM.html#abstract",
    "title": "Molecular Dynamics of the Association of L-Selectin and FERM Regulated by PIP2",
    "section": "Abstract",
    "text": "Abstract\nPhosphatidylinositol 4,5-bisphosphate (PIP2) acts as a signaling lipid, mediating membrane trafficking and recruitment of proteins to membranes. A key example is the PIP2-dependent regulation of the adhesion of L-selectin to the cytoskeleton adaptors of the N-terminal subdomain of ezrin-radixin-moesin (FERM). The molecular details of the mediating behavior of multivalent anionic PIP2 lipids in this process, however, remain unclear. Here, we use coarse-grained molecular dynamics simulation to explore the mechanistic details of PIP2 in the transformation, translocation, and association of the FERM/L-selectin complex. We compare membranes of different compositions and find that anionic phospholipids are necessary for both FERM and the cytoplasmic domain of L-selectin to absorb on the membrane surface. The subsequent formation of the FERM/L-selectin complex is strongly favored by the presence of PIP2, which clusters around both proteins and triggers a conformational transition in the cytoplasmic domain of L-selectin. We are able to quantify the effect of PIP2 on the association free energy of the complex by means of a potential of mean force. We conclude that PIP2 behaves as an adhesive agent to enhance the stability of the FERM/L-selectin complex and identify key residues involved. The molecular information revealed in this study highlights the specific role of membrane lipids such as PIP2 in protein translocation and potential signaling."
  },
  {
    "objectID": "docs/publications/entries/2018/Grunewald2018_Polyethyleneoxide.html",
    "href": "docs/publications/entries/2018/Grunewald2018_Polyethyleneoxide.html",
    "title": "Transferable MARTINI Model of Poly (ethylene Oxide)",
    "section": "",
    "text": "Grunewald, F., Rossi, G., De Vries, A. H., Marrink, S. J., & Monticelli, L. (2018). Transferable MARTINI model of poly (ethylene oxide). The journal of physical chemistry B, 122(29), 7436-7449."
  },
  {
    "objectID": "docs/publications/entries/2018/Grunewald2018_Polyethyleneoxide.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Grunewald2018_Polyethyleneoxide.html#citation-apa-7",
    "title": "Transferable MARTINI Model of Poly (ethylene Oxide)",
    "section": "",
    "text": "Grunewald, F., Rossi, G., De Vries, A. H., Marrink, S. J., & Monticelli, L. (2018). Transferable MARTINI model of poly (ethylene oxide). The journal of physical chemistry B, 122(29), 7436-7449."
  },
  {
    "objectID": "docs/publications/entries/2018/Grunewald2018_Polyethyleneoxide.html#abstract",
    "href": "docs/publications/entries/2018/Grunewald2018_Polyethyleneoxide.html#abstract",
    "title": "Transferable MARTINI Model of Poly (ethylene Oxide)",
    "section": "Abstract",
    "text": "Abstract\nMotivated by the deficiencies of the previous MARTINI models of poly(ethylene oxide) (PEO), we present a new model featuring a high degree of transferability. The model is parametrized on (a) a set of 8 free energies of transfer of dimethoxyethane (PEO dimer) from water to solvents of varying polarity; (b) the radius of gyration in water at high dilution; and (c) matching angle and dihedral distributions from atomistic simulations. We demonstrate that our model behaves well in five different areas of application: (1) it produces accurate densities and phase behavior or small PEO oligomers and water mixtures; (2) it yields chain dimensions in good agreement with the experiment in three different solvents (water, diglyme, and benzene) over a broad range of molecular weights (∼1.2 kg/mol to 21 kg/mol); (3) it reproduces qualitatively the structural features of lipid bilayers containing PEGylated lipids in the brush and mushroom regime; (4) it is able to reproduce the phase behavior of several PEO-based nonionic surfactants in water; and (5) it can be combined with the existing MARTINI PS to model PS–PEO block copolymers. Overall, the new PEO model outperforms previous models and features a high degree of transferability."
  },
  {
    "objectID": "docs/publications/entries/2006/Baron2006_Hydrocarbons.html",
    "href": "docs/publications/entries/2006/Baron2006_Hydrocarbons.html",
    "title": "Comparison of Atomic-Level and Coarse-Grained Models for Liquid Hydrocarbons from Molecular Dynamics Configurational Entropy Estimates",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2006/Baron2006_Hydrocarbons.html#citation-apa-7",
    "href": "docs/publications/entries/2006/Baron2006_Hydrocarbons.html#citation-apa-7",
    "title": "Comparison of Atomic-Level and Coarse-Grained Models for Liquid Hydrocarbons from Molecular Dynamics Configurational Entropy Estimates",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2006/Baron2006_Hydrocarbons.html#abstract",
    "href": "docs/publications/entries/2006/Baron2006_Hydrocarbons.html#abstract",
    "title": "Comparison of Atomic-Level and Coarse-Grained Models for Liquid Hydrocarbons from Molecular Dynamics Configurational Entropy Estimates",
    "section": "Abstract",
    "text": "Abstract\nMolecular liquids can be modeled at different levels of spatial resolution. In atomic-level (AL) models, all (heavy) atoms can be explicitly simulated. In coarse-grained (CG) models, particles (beads) that represent groups of covalently bound atoms are used as elementary units. Ideally, a CG model should reproduce the thermodynamic and structural properties of the corresponding AL model after mapping to the lower-resolution scale. In the present work, two such models are investigated:  (i) the classical GROMOS atomic-level model; (ii) a CG model recently proposed by Marrink et al., which maps approximately four non-hydrogen atoms to one bead [J. Phys. Chem. B2004, 108, 750]. The study is restricted to n-alkanes whose aliphatic fragments are abundantly found in lipids of biological interest. Additionally, cis-9-octadecene is included, as a template chain of the lipid dioleoylphosphatidylcholine (DOPC). The two representations of molecules in the liquid phase are compared in terms of average molecular structures, extent of configurational space sampled, and single-molecule entropies. An approximate method is used to estimate the rotational contributions to the absolute configurational entropy. Good correspondence between the AL and CG representations is found. The loss in configurational entropy due to the reduction in degrees of freedom upon coarse-graining of the model is estimated."
  },
  {
    "objectID": "docs/publications/entries/2023/Ingolfsson2023_TDP-43.html",
    "href": "docs/publications/entries/2023/Ingolfsson2023_TDP-43.html",
    "title": "Multiscale simulations reveal TDP-43 molecularlevel interactions driving condensation",
    "section": "",
    "text": "Ingólfsson, H. I., Rizuan, A., Liu, X., Mohanty, P., Souza, P. C., Marrink, S. J., … & Berry, J. (2023). Multiscale simulations reveal TDP-43 molecular-level interactions driving condensation. Biophysical Journal, 122(22), 4370-4381."
  },
  {
    "objectID": "docs/publications/entries/2023/Ingolfsson2023_TDP-43.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Ingolfsson2023_TDP-43.html#citation-apa-7",
    "title": "Multiscale simulations reveal TDP-43 molecularlevel interactions driving condensation",
    "section": "",
    "text": "Ingólfsson, H. I., Rizuan, A., Liu, X., Mohanty, P., Souza, P. C., Marrink, S. J., … & Berry, J. (2023). Multiscale simulations reveal TDP-43 molecular-level interactions driving condensation. Biophysical Journal, 122(22), 4370-4381."
  },
  {
    "objectID": "docs/publications/entries/2023/Ingolfsson2023_TDP-43.html#abstract",
    "href": "docs/publications/entries/2023/Ingolfsson2023_TDP-43.html#abstract",
    "title": "Multiscale simulations reveal TDP-43 molecularlevel interactions driving condensation",
    "section": "Abstract",
    "text": "Abstract\nThe RNA-binding protein TDP-43 is associated with mRNA processing and transport from the nucleus to the cytoplasm. TDP-43 localizes in the nucleus as well as accumulating in cytoplasmic condensates such as stress granules. Aggregation and formation of amyloid-like fibrils of cytoplasmic TDP-43 are hallmarks of numerous neurodegenerative diseases, most strikingly present in &gt;90% of amyotrophic lateral sclerosis (ALS) patients. If excessive accumulation of cytoplasmic TDP-43 causes, or is caused by, neurodegeneration is presently not known. In this work, we use molecular dynamics simulations at multiple resolutions to explore TDP-43 self- and cross-interaction dynamics. A full-length molecular model of TDP-43, all 414 amino acids, was constructed from select structures of the protein functional domains (N-terminal domain, and two RNA recognition motifs, RRM1 and RRM2) and modeling of disordered connecting loops and the low complexity glycine-rich C-terminus domain. All-atom CHARMM36m simulations of single TDP-43 proteins served as guides to construct a coarse-grained Martini 3 model of TDP-43. The Martini model and a coarser implicit solvent C⍺ model, optimized for disordered proteins, were subsequently used to probe TDP-43 interactions; self-interactions from single-chain full-length TDP-43 simulations, cross-interactions from simulations with two proteins and simulations with assemblies of dozens to hundreds of proteins. Our findings illustrate the utility of different modeling scales for accessing TDP-43 molecular-level interactions and suggest that TDP-43 has numerous interaction preferences or patterns, exhibiting an overall strong, but dynamic, association and driving the formation of biomolecular condensates."
  },
  {
    "objectID": "docs/publications/entries/2023/DeFranceschi2023_LiposomeDeformation.html",
    "href": "docs/publications/entries/2023/DeFranceschi2023_LiposomeDeformation.html",
    "title": "Synthetic Membrane Shaper for Controlled Liposome Deformation",
    "section": "",
    "text": "De Franceschi, N., Pezeshkian, W., Fragasso, A., Bruininks, B. M., Tsai, S., Marrink, S. J., & Dekker, C. (2022). Synthetic membrane shaper for controlled liposome deformation. ACS nano, 17(2), 966-978."
  },
  {
    "objectID": "docs/publications/entries/2023/DeFranceschi2023_LiposomeDeformation.html#citation-apa-7",
    "href": "docs/publications/entries/2023/DeFranceschi2023_LiposomeDeformation.html#citation-apa-7",
    "title": "Synthetic Membrane Shaper for Controlled Liposome Deformation",
    "section": "",
    "text": "De Franceschi, N., Pezeshkian, W., Fragasso, A., Bruininks, B. M., Tsai, S., Marrink, S. J., & Dekker, C. (2022). Synthetic membrane shaper for controlled liposome deformation. ACS nano, 17(2), 966-978."
  },
  {
    "objectID": "docs/publications/entries/2023/DeFranceschi2023_LiposomeDeformation.html#abstract",
    "href": "docs/publications/entries/2023/DeFranceschi2023_LiposomeDeformation.html#abstract",
    "title": "Synthetic Membrane Shaper for Controlled Liposome Deformation",
    "section": "Abstract",
    "text": "Abstract\nShape defines the structure and function of cellular membranes. In cell division, the cell membrane deforms into a “dumbbell” shape, while organelles such as the autophagosome exhibit “stomatocyte” shapes. Bottom-up in vitro reconstitution of protein machineries that stabilize or resolve the membrane necks in such deformed liposome structures is of considerable interest to characterize their function. Here we develop a DNA-nanotechnology-based approach that we call the synthetic membrane shaper (SMS), where cholesterol-linked DNA structures attach to the liposome membrane to reproducibly generate high yields of stomatocytes and dumbbells. In silico simulations confirm the shape-stabilizing role of the SMS. We show that the SMS is fully compatible with protein reconstitution by assembling bacterial divisome proteins (DynaminA, FtsZ:ZipA) at the catenoidal neck of these membrane structures. The SMS approach provides a general tool for studying protein binding to complex membrane geometries that will greatly benefit synthetic cell research."
  },
  {
    "objectID": "docs/publications/entries/2023/Stępień2023_CRAFTing.html",
    "href": "docs/publications/entries/2023/Stępień2023_CRAFTing.html",
    "title": "CRAFTing Delivery of Membrane Proteins into Protocells using Nanodiscs",
    "section": "",
    "text": "Stępień, P., Świątek, S., Robles, M. Y. Y., Markiewicz-Mizera, J., Balakrishnan, D., Inaba-Inoue, S., … & Heddle, J. G. (2023). CRAFTing Delivery of Membrane Proteins into Protocells using Nanodiscs. ACS Applied Materials & Interfaces, 15(49), 56689-56701."
  },
  {
    "objectID": "docs/publications/entries/2023/Stępień2023_CRAFTing.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Stępień2023_CRAFTing.html#citation-apa-7",
    "title": "CRAFTing Delivery of Membrane Proteins into Protocells using Nanodiscs",
    "section": "",
    "text": "Stępień, P., Świątek, S., Robles, M. Y. Y., Markiewicz-Mizera, J., Balakrishnan, D., Inaba-Inoue, S., … & Heddle, J. G. (2023). CRAFTing Delivery of Membrane Proteins into Protocells using Nanodiscs. ACS Applied Materials & Interfaces, 15(49), 56689-56701."
  },
  {
    "objectID": "docs/publications/entries/2023/Stępień2023_CRAFTing.html#abstract",
    "href": "docs/publications/entries/2023/Stępień2023_CRAFTing.html#abstract",
    "title": "CRAFTing Delivery of Membrane Proteins into Protocells using Nanodiscs",
    "section": "Abstract",
    "text": "Abstract\nFor the successful generative engineering of functional artificial cells, a convenient and controllable means of delivering membrane proteins into membrane lipid bilayers is necessary. Here we report a delivery system that achieves this by employing membrane protein-carrying nanodiscs and the calcium-dependent fusion of phosphatidylserine lipid membranes. We show that lipid nanodiscs can fuse a transported lipid bilayer with the lipid bilayers of small unilamellar vesicles (SUVs) or giant unilamellar vesicles (GUVs) while avoiding recipient vesicles aggregation. This is triggered by a simple, transient increase in calcium concentration, which results in efficient and rapid fusion in a one-pot reaction. Furthermore, nanodiscs can be loaded with membrane proteins that can be delivered into target SUV or GUV membranes in a detergent-independent fashion while retaining their functionality. Nanodiscs have a proven ability to carry a wide range of membrane proteins, control their oligomeric state, and are highly adaptable. Given this, our approach may be the basis for the development of useful tools that will allow bespoke delivery of membrane proteins to protocells, equipping them with the cell-like ability to exchange material across outer/subcellular membranes."
  },
  {
    "objectID": "docs/publications/entries/2023/Manrho2023_NanotubeAssembly.html",
    "href": "docs/publications/entries/2023/Manrho2023_NanotubeAssembly.html",
    "title": "Watching Molecular Nanotubes Self-Assemble in Real Time",
    "section": "",
    "text": "Manrho, M., Krishnaswamy, S. R., Kriete, B., Patmanidis, I., de Vries, A. H., Marrink, S. J., … & Pshenichnikov, M. S. (2023). Watching molecular nanotubes self-assemble in real time. Journal of the American Chemical Society, 145(41), 22494-22503."
  },
  {
    "objectID": "docs/publications/entries/2023/Manrho2023_NanotubeAssembly.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Manrho2023_NanotubeAssembly.html#citation-apa-7",
    "title": "Watching Molecular Nanotubes Self-Assemble in Real Time",
    "section": "",
    "text": "Manrho, M., Krishnaswamy, S. R., Kriete, B., Patmanidis, I., de Vries, A. H., Marrink, S. J., … & Pshenichnikov, M. S. (2023). Watching molecular nanotubes self-assemble in real time. Journal of the American Chemical Society, 145(41), 22494-22503."
  },
  {
    "objectID": "docs/publications/entries/2023/Manrho2023_NanotubeAssembly.html#abstract",
    "href": "docs/publications/entries/2023/Manrho2023_NanotubeAssembly.html#abstract",
    "title": "Watching Molecular Nanotubes Self-Assemble in Real Time",
    "section": "Abstract",
    "text": "Abstract\nMolecular self-assembly is a fundamental process in nature that can be used to develop novel functional materials for medical and engineering applications. However, their complex mechanisms make the short-lived stages of self-assembly processes extremely hard to reveal. In this article, we track the self-assembly process of a benchmark system, double-walled molecular nanotubes, whose structure is similar to that found in biological and synthetic systems. We selectively dissolved the outer wall of the double-walled system and used the inner wall as a template for the self-reassembly of the outer wall. The reassembly kinetics were followed in real time using a combination of microfluidics, spectroscopy, cryogenic transmission electron microscopy, molecular dynamics simulations, and exciton modeling. We found that the outer wall self-assembles through a transient disordered patchwork structure: first, several patches of different orientations are formed, and only on a longer time scale will the patches interact with each other and assume their final preferred global orientation. The understanding of patch formation and patch reorientation marks a crucial step toward steering self-assembly processes and subsequent material engineering."
  },
  {
    "objectID": "docs/publications/entries/2023/Konig2023_CurvatureLipidPacking.html",
    "href": "docs/publications/entries/2023/Konig2023_CurvatureLipidPacking.html",
    "title": "Curvature-induced lipid sorting beyond the critical packing parameter",
    "section": "",
    "text": "Konig, M., de Vries, R., Grunewald, F., Marrink, S. J., & Pezeshkian, W. (2023). Curvature-induced lipid sorting beyond the critical packing parameter. bioRxiv, 2023-12."
  },
  {
    "objectID": "docs/publications/entries/2023/Konig2023_CurvatureLipidPacking.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Konig2023_CurvatureLipidPacking.html#citation-apa-7",
    "title": "Curvature-induced lipid sorting beyond the critical packing parameter",
    "section": "",
    "text": "Konig, M., de Vries, R., Grunewald, F., Marrink, S. J., & Pezeshkian, W. (2023). Curvature-induced lipid sorting beyond the critical packing parameter. bioRxiv, 2023-12."
  },
  {
    "objectID": "docs/publications/entries/2023/Konig2023_CurvatureLipidPacking.html#abstract",
    "href": "docs/publications/entries/2023/Konig2023_CurvatureLipidPacking.html#abstract",
    "title": "Curvature-induced lipid sorting beyond the critical packing parameter",
    "section": "Abstract",
    "text": "Abstract\nOver the last few decades, the spatial organization of biomembranes has received a lot of attention. With the fluid mosaic model, Singer and Nicolson proposed that biomembranes behave as two-dimensional fluids, allowing proteins and lipids to diffuse freely and thus react to external stimuli. Biological functionality and membrane organization are intricately linked to each other, however, how these organizations emerge is yet to be established. Here we use coarse-grained molecular dynamics simulations to explore the relationship between membrane shape and lateral organization at the nanoscale for a broad range of lipid mixtures. Our results illustrate that membrane curvature and lateral organization are intimately linked at the nanoscale and the relationship is much more complicated compared to the traditional views, in particular the lipid shape concept. Furthermore, we show that large membrane curvature can disrupt phase separation, line tension, and interleaflet coupling leading to non-intuitive lipid sorting. Our findings highlight how curvature-driven sorting can alter the phase behavior of lipid mixtures, which could be crucial for cellular functionality."
  },
  {
    "objectID": "docs/publications/entries/2023/Borges-Araújo2023_Cholesterol.html",
    "href": "docs/publications/entries/2023/Borges-Araújo2023_Cholesterol.html",
    "title": "Martini 3 Coarse-Grained Force Field for Cholesterol",
    "section": "",
    "text": "Borges-Araújo, L., Borges-Araújo, A. C., Ozturk, T. N., Ramirez-Echemendia, D. P., Fábián, B., Carpenter, T. S., … & Melo, M. N. (2023). Martini 3 Coarse-Grained Force Field for Cholesterol. Journal of Chemical Theory and Computation, 19(20), 7387-7404."
  },
  {
    "objectID": "docs/publications/entries/2023/Borges-Araújo2023_Cholesterol.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Borges-Araújo2023_Cholesterol.html#citation-apa-7",
    "title": "Martini 3 Coarse-Grained Force Field for Cholesterol",
    "section": "",
    "text": "Borges-Araújo, L., Borges-Araújo, A. C., Ozturk, T. N., Ramirez-Echemendia, D. P., Fábián, B., Carpenter, T. S., … & Melo, M. N. (2023). Martini 3 Coarse-Grained Force Field for Cholesterol. Journal of Chemical Theory and Computation, 19(20), 7387-7404."
  },
  {
    "objectID": "docs/publications/entries/2023/Borges-Araújo2023_Cholesterol.html#abstract",
    "href": "docs/publications/entries/2023/Borges-Araújo2023_Cholesterol.html#abstract",
    "title": "Martini 3 Coarse-Grained Force Field for Cholesterol",
    "section": "Abstract",
    "text": "Abstract\nCholesterol plays a crucial role in biomembranes by regulating various properties, such as fluidity, rigidity, permeability, and organization of lipid bilayers. The latest version of the Martini model, Martini 3, offers significant improvements in interaction balance, molecular packing, and inclusion of new bead types and sizes. However, the release of the new model resulted in the need to reparameterize many core molecules, including cholesterol. Here, we describe the development and validation of a Martini 3 cholesterol model, addressing issues related to its bonded setup, shape, volume, and hydrophobicity. The proposed model mitigates some limitations of its Martini 2 predecessor while maintaining or improving the overall behavior."
  },
  {
    "objectID": "docs/publications/entries/2023/Thangaratnarajah2023_ECF.html",
    "href": "docs/publications/entries/2023/Thangaratnarajah2023_ECF.html",
    "title": "Expulsion mechanism of the substrate-translocating subunit in ECF transporters",
    "section": "",
    "text": "Thangaratnarajah, C., Nijland, M., Borges-Araújo, L., Jeucken, A., Rheinberger, J., Marrink, S. J., … & Slotboom, D. J. (2023). Expulsion mechanism of the substrate-translocating subunit in ECF transporters. Nature Communications, 14(1), 4484."
  },
  {
    "objectID": "docs/publications/entries/2023/Thangaratnarajah2023_ECF.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Thangaratnarajah2023_ECF.html#citation-apa-7",
    "title": "Expulsion mechanism of the substrate-translocating subunit in ECF transporters",
    "section": "",
    "text": "Thangaratnarajah, C., Nijland, M., Borges-Araújo, L., Jeucken, A., Rheinberger, J., Marrink, S. J., … & Slotboom, D. J. (2023). Expulsion mechanism of the substrate-translocating subunit in ECF transporters. Nature Communications, 14(1), 4484."
  },
  {
    "objectID": "docs/publications/entries/2023/Thangaratnarajah2023_ECF.html#abstract",
    "href": "docs/publications/entries/2023/Thangaratnarajah2023_ECF.html#abstract",
    "title": "Expulsion mechanism of the substrate-translocating subunit in ECF transporters",
    "section": "Abstract",
    "text": "Abstract\nEnergy-coupling factor (ECF)-type transporters mediate the uptake of micronutrients in many bacteria. They consist of a substrate-translocating subunit (S-component) and an ATP-hydrolysing motor (ECF module) Previous data indicate that the S-component topples within the membrane to alternately expose the binding site to either side of the membrane. In many ECF transporters, the substrate-free S-component can be expelled from the ECF module. Here we study this enigmatic expulsion step by cryogenic electron microscopy and reveal that ATP induces a concave-to-convex shape change of two long helices in the motor, thereby destroying the S-component’s docking site and allowing for its dissociation. We show that adaptation of the membrane morphology to the conformational state of the motor may favour expulsion of the substrate-free S-component when ATP is bound and docking of the substrate-loaded S-component after hydrolysis. Our work provides a picture of bilayer-assisted chemo-mechanical coupling in the transport cycle of ECF transporters."
  },
  {
    "objectID": "docs/publications/entries/2023/Melcrová2023_Antimicrobial.html",
    "href": "docs/publications/entries/2023/Melcrová2023_Antimicrobial.html",
    "title": "Lateral membrane organization as target of an antimicrobial peptidomimetic compound",
    "section": "",
    "text": "Melcrová, A., Maity, S., Melcr, J., de Kok, N. A., Gabler, M., van der Eyden, J., … & Roos, W. H. (2023). Lateral membrane organization as target of an antimicrobial peptidomimetic compound. Nature Communications, 14(1), 4038."
  },
  {
    "objectID": "docs/publications/entries/2023/Melcrová2023_Antimicrobial.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Melcrová2023_Antimicrobial.html#citation-apa-7",
    "title": "Lateral membrane organization as target of an antimicrobial peptidomimetic compound",
    "section": "",
    "text": "Melcrová, A., Maity, S., Melcr, J., de Kok, N. A., Gabler, M., van der Eyden, J., … & Roos, W. H. (2023). Lateral membrane organization as target of an antimicrobial peptidomimetic compound. Nature Communications, 14(1), 4038."
  },
  {
    "objectID": "docs/publications/entries/2023/Melcrová2023_Antimicrobial.html#abstract",
    "href": "docs/publications/entries/2023/Melcrová2023_Antimicrobial.html#abstract",
    "title": "Lateral membrane organization as target of an antimicrobial peptidomimetic compound",
    "section": "Abstract",
    "text": "Abstract\nAntimicrobial resistance is one of the leading concerns in medical care. Here we study the mechanism of action of an antimicrobial cationic tripeptide, AMC-109, by combining high speed-atomic force microscopy, molecular dynamics, fluorescence assays, and lipidomic analysis. We show that AMC-109 activity on negatively charged membranes derived from Staphylococcus aureus consists of two crucial steps. First, AMC-109 self-assembles into stable aggregates consisting of a hydrophobic core and a cationic surface, with specificity for negatively charged membranes. Second, upon incorporation into the membrane, individual peptides insert into the outer monolayer, affecting lateral membrane organization and dissolving membrane nanodomains, without forming pores. We propose that membrane domain dissolution triggered by AMC-109 may affect crucial functions such as protein sorting and cell wall synthesis. Our results indicate that the AMC-109 mode of action resembles that of the disinfectant benzalkonium chloride (BAK), but with enhanced selectivity for bacterial membranes."
  },
  {
    "objectID": "docs/publications/entries/2023/Alessandri2023_ProteinLigand.html",
    "href": "docs/publications/entries/2023/Alessandri2023_ProteinLigand.html",
    "title": "A Practical Introduction to Martini 3 and its Application to Protein-Ligand Binding Simulations",
    "section": "",
    "text": "Alessandri, R., Thallmair, S., Herrero, C. G., Mera-Adasme, R., Marrink, S. J., & Souza, P. C. (2023). A practical introduction to martini 3 and its application to protein-ligand binding simulations. In A Practical Guide to Recent Advances in Multiscale Modeling and Simulation of Biomolecules (pp. 1-1). Melville, New York: AIP Publishing LLC."
  },
  {
    "objectID": "docs/publications/entries/2023/Alessandri2023_ProteinLigand.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Alessandri2023_ProteinLigand.html#citation-apa-7",
    "title": "A Practical Introduction to Martini 3 and its Application to Protein-Ligand Binding Simulations",
    "section": "",
    "text": "Alessandri, R., Thallmair, S., Herrero, C. G., Mera-Adasme, R., Marrink, S. J., & Souza, P. C. (2023). A practical introduction to martini 3 and its application to protein-ligand binding simulations. In A Practical Guide to Recent Advances in Multiscale Modeling and Simulation of Biomolecules (pp. 1-1). Melville, New York: AIP Publishing LLC."
  },
  {
    "objectID": "docs/publications/entries/2023/Alessandri2023_ProteinLigand.html#abstract",
    "href": "docs/publications/entries/2023/Alessandri2023_ProteinLigand.html#abstract",
    "title": "A Practical Introduction to Martini 3 and its Application to Protein-Ligand Binding Simulations",
    "section": "Abstract",
    "text": "Abstract\nMartini 3 is the new version of a widely used coarse-grained (CG) model that have been extensively parameterized to reproduce experimental and thermodynamic data. Based on a building-block approach, the new version shows a better coverage of the chemical space and more accurate predictions of interactions and molecular packing in general. Given these improvements, the Martini 3 model allows new applications such as studies involving protein–ligand interactions. In this chapter, a summary of the key elements of the new Martini version is presented, followed by an example of a practical application: a simulation of caffeine binding to the buried pocket of the adenosine A2A receptor, which is part of the GPCR family. Formulated as a hands-on tutorial, this chapter contains guidelines to build CG models of important systems, such as small drug-like molecules, transmembrane proteins, and lipid membranes. Finally, the last sections contain an outlook of possible future developments and notes describing useful information, limitations, and tips about Martini."
  },
  {
    "objectID": "docs/publications/entries/2023/Stevens2023_MinimalCell.html",
    "href": "docs/publications/entries/2023/Stevens2023_MinimalCell.html",
    "title": "Molecular dynamics simulation of an entire cell",
    "section": "",
    "text": "Stevens, J. A., Grünewald, F., van Tilburg, P. M., König, M., Gilbert, B. R., Brier, T. A., … & Marrink, S. J. (2023). Molecular dynamics simulation of an entire cell. Frontiers in Chemistry, 11, 1106495."
  },
  {
    "objectID": "docs/publications/entries/2023/Stevens2023_MinimalCell.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Stevens2023_MinimalCell.html#citation-apa-7",
    "title": "Molecular dynamics simulation of an entire cell",
    "section": "",
    "text": "Stevens, J. A., Grünewald, F., van Tilburg, P. M., König, M., Gilbert, B. R., Brier, T. A., … & Marrink, S. J. (2023). Molecular dynamics simulation of an entire cell. Frontiers in Chemistry, 11, 1106495."
  },
  {
    "objectID": "docs/publications/entries/2023/Stevens2023_MinimalCell.html#abstract",
    "href": "docs/publications/entries/2023/Stevens2023_MinimalCell.html#abstract",
    "title": "Molecular dynamics simulation of an entire cell",
    "section": "Abstract",
    "text": "Abstract\nThe ultimate microscope, directed at a cell, would reveal the dynamics of all the cell’s components with atomic resolution. In contrast to their real-world counterparts, computational microscopes are currently on the brink of meeting this challenge. In this perspective, we show how an integrative approach can be employed to model an entire cell, the minimal cell, JCVI-syn3A, at full complexity. This step opens the way to interrogate the cell’s spatio-temporal evolution with molecular dynamics simulations, an approach that can be extended to other cell types in the near future."
  },
  {
    "objectID": "docs/publications/entries/2023/Blanco-González2023_Machnotherapy.html",
    "href": "docs/publications/entries/2023/Blanco-González2023_Machnotherapy.html",
    "title": "Molecular insights into the effects of focused ultrasound mechanotherapy on lipid bilayers: Unlocking the keys to design effective treatment",
    "section": "",
    "text": "Blanco-González, A., Marrink, S. J., Piñeiro, Á., & García-Fandiño, R. (2023). Molecular insights into the effects of focused ultrasound mechanotherapy on lipid bilayers: Unlocking the keys to design effective treatments. Journal of Colloid and Interface Science, 650, 1201-1210."
  },
  {
    "objectID": "docs/publications/entries/2023/Blanco-González2023_Machnotherapy.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Blanco-González2023_Machnotherapy.html#citation-apa-7",
    "title": "Molecular insights into the effects of focused ultrasound mechanotherapy on lipid bilayers: Unlocking the keys to design effective treatment",
    "section": "",
    "text": "Blanco-González, A., Marrink, S. J., Piñeiro, Á., & García-Fandiño, R. (2023). Molecular insights into the effects of focused ultrasound mechanotherapy on lipid bilayers: Unlocking the keys to design effective treatments. Journal of Colloid and Interface Science, 650, 1201-1210."
  },
  {
    "objectID": "docs/publications/entries/2023/Blanco-González2023_Machnotherapy.html#abstract",
    "href": "docs/publications/entries/2023/Blanco-González2023_Machnotherapy.html#abstract",
    "title": "Molecular insights into the effects of focused ultrasound mechanotherapy on lipid bilayers: Unlocking the keys to design effective treatment",
    "section": "Abstract",
    "text": "Abstract\nAdministration of focused ultrasounds (US) represents an attractive complement to classical therapies for a wide range of maladies, from cancer to neurological pathologies, as they are non-invasive, easily targeted, their dosage is easy to control, and they involve low risks. Different mechanisms have been proposed for their activity but the direct effect of their interaction with cell membranes is not well understood at the molecular level. This is in part due to the difficulty of designing experiments able to probe the required spatio-temporal resolutions. Here we use Molecular Dynamics (MD) simulations at two resolution levels and machine learning (ML) classification tools to shed light on the effects that focused US mechanotherapy methods have over a range of lipid bilayers. Our results indicate that the dynamic-structural response of the membrane models to the mechanical perturbations caused by the sound waves strongly depends on the lipid composition. The analyses performed on the MD trajectories contribute to a better understanding of the behavior of lipid membranes, and to open up a path for the rational design of new therapies for the long list of diseases characterized by specific lipid profiles of pathological membrane cells."
  },
  {
    "objectID": "docs/publications/entries/2023/Hilpert2023_MADdatabase.html",
    "href": "docs/publications/entries/2023/Hilpert2023_MADdatabase.html",
    "title": "Facilitating CG Simulations with MAD: The MArtini Database Server",
    "section": "",
    "text": "Hilpert, C., Beranger, L., Souza, P. C., Vainikka, P. A., Nieto, V., Marrink, S. J., … & Launay, G. (2023). Facilitating CG simulations with MAD: The MArtini database server. Journal of chemical information and modeling, 63(3), 702-710."
  },
  {
    "objectID": "docs/publications/entries/2023/Hilpert2023_MADdatabase.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Hilpert2023_MADdatabase.html#citation-apa-7",
    "title": "Facilitating CG Simulations with MAD: The MArtini Database Server",
    "section": "",
    "text": "Hilpert, C., Beranger, L., Souza, P. C., Vainikka, P. A., Nieto, V., Marrink, S. J., … & Launay, G. (2023). Facilitating CG simulations with MAD: The MArtini database server. Journal of chemical information and modeling, 63(3), 702-710."
  },
  {
    "objectID": "docs/publications/entries/2023/Hilpert2023_MADdatabase.html#abstract",
    "href": "docs/publications/entries/2023/Hilpert2023_MADdatabase.html#abstract",
    "title": "Facilitating CG Simulations with MAD: The MArtini Database Server",
    "section": "Abstract",
    "text": "Abstract\nThe MArtini Database (MAD - https://mad.ibcp.fr) is a web server designed for the sharing of structures and topologies of molecules parametrized with the Martini coarse-grained (CG) force field. MAD can also convert atomistic structures into CG structures and prepare complex systems (including proteins, lipids, etc.) for molecular dynamics (MD) simulations at the CG level. It is dedicated to the generation of input files for Martini 3, the most recent version of this popular CG force field. Specifically, the MAD server currently includes tools to submit or retrieve CG models of a wide range of molecules (lipids, carbohydrates, nanoparticles, etc.), transform atomistic protein structures into CG structures and topologies, with fine control on the process and assemble biomolecules into large systems, and deliver all files necessary to start simulations in the GROMACS MD engine."
  },
  {
    "objectID": "docs/publications/entries/2023/Marrink2023_MartiniTwoDecades.html",
    "href": "docs/publications/entries/2023/Marrink2023_MartiniTwoDecades.html",
    "title": "Two decades of Martini: Better beads, broader scope",
    "section": "",
    "text": "Marrink, S. J., Monticelli, L., Melo, M. N., Alessandri, R., Tieleman, D. P., & Souza, P. C. (2023). Two decades of Martini: Better beads, broader scope. Wiley Interdisciplinary Reviews: Computational Molecular Science, 13(1), e1620."
  },
  {
    "objectID": "docs/publications/entries/2023/Marrink2023_MartiniTwoDecades.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Marrink2023_MartiniTwoDecades.html#citation-apa-7",
    "title": "Two decades of Martini: Better beads, broader scope",
    "section": "",
    "text": "Marrink, S. J., Monticelli, L., Melo, M. N., Alessandri, R., Tieleman, D. P., & Souza, P. C. (2023). Two decades of Martini: Better beads, broader scope. Wiley Interdisciplinary Reviews: Computational Molecular Science, 13(1), e1620."
  },
  {
    "objectID": "docs/publications/entries/2023/Marrink2023_MartiniTwoDecades.html#abstract",
    "href": "docs/publications/entries/2023/Marrink2023_MartiniTwoDecades.html#abstract",
    "title": "Two decades of Martini: Better beads, broader scope",
    "section": "Abstract",
    "text": "Abstract\nThe Martini model, a coarse-grained force field for molecular dynamics simulations, has been around for nearly two decades. Originally developed for lipid-based systems by the groups of Marrink and Tieleman, the Martini model has over the years been extended as a community effort to the current level of a general-purpose force field. Apart from the obvious benefit of a reduction in computational cost, the popularity of the model is largely due to the systematic yet intuitive building-block approach that underlies the model, as well as the open nature of the development and its continuous validation. The easy implementation in the widely used Gromacs software suite has also been instrumental. Since its conception in 2002, the Martini model underwent a gradual refinement of the bead interactions and a widening scope of applications. In this review, we look back at this development, culminating with the release of the Martini 3 version in 2021. The power of the model is illustrated with key examples of recent important findings in biological and material sciences enabled with Martini, as well as examples from areas where coarse-grained resolution is essential, namely high-throughput applications, systems with large complexity, and simulations approaching the scale of whole cells."
  },
  {
    "objectID": "docs/publications/entries/2009/López2009_Carbohydrates.html",
    "href": "docs/publications/entries/2009/López2009_Carbohydrates.html",
    "title": "Martini Coarse-Grained Force Field: Extension to Carbohydrates",
    "section": "",
    "text": "López, C. A., Rzepiela, A. J., de Vries, A. H., Dijkhuizen, L., Hünenberger, P. H., & Marrink, S. J. (2009). Martini coarse-grained force field: extension to carbohydrates. Journal of Chemical Theory and Computation, 5(12), 3195-3210."
  },
  {
    "objectID": "docs/publications/entries/2009/López2009_Carbohydrates.html#citation-apa-7",
    "href": "docs/publications/entries/2009/López2009_Carbohydrates.html#citation-apa-7",
    "title": "Martini Coarse-Grained Force Field: Extension to Carbohydrates",
    "section": "",
    "text": "López, C. A., Rzepiela, A. J., de Vries, A. H., Dijkhuizen, L., Hünenberger, P. H., & Marrink, S. J. (2009). Martini coarse-grained force field: extension to carbohydrates. Journal of Chemical Theory and Computation, 5(12), 3195-3210."
  },
  {
    "objectID": "docs/publications/entries/2009/López2009_Carbohydrates.html#abstract",
    "href": "docs/publications/entries/2009/López2009_Carbohydrates.html#abstract",
    "title": "Martini Coarse-Grained Force Field: Extension to Carbohydrates",
    "section": "Abstract",
    "text": "Abstract\nWe present an extension of the Martini coarse-grained force field to carbohydrates. The parametrization follows the same philosophy as was used previously for lipids and proteins, focusing on the reproduction of partitioning free energies of small compounds between polar and nonpolar phases. The carbohydrate building blocks considered are the monosaccharides glucose and fructose and the disaccharides sucrose, trehalose, maltose, cellobiose, nigerose, laminarabiose, kojibiose, and sophorose. Bonded parameters for these saccharides are optimized by comparison to conformations sampled with an atomistic force field, in particular with respect to the representation of the most populated rotameric state for the glycosidic bond. Application of the new coarse-grained carbohydrate model to the oligosaccharides amylose and Curdlan shows a preservation of the main structural properties with 3 orders of magnitude more efficient sampling than the atomistic counterpart. Finally, we investigate the cryo- and anhydro-protective effect of glucose and trehalose on a lipid bilayer and find a strong decrease of the melting temperature, in good agreement with both experimental findings and atomistic simulation studies."
  },
  {
    "objectID": "docs/publications/entries/2009/Fuhrmans2009_FusionPeptides.html",
    "href": "docs/publications/entries/2009/Fuhrmans2009_FusionPeptides.html",
    "title": "A Single Bicontinuous Cubic Phase Induced by Fusion Peptides",
    "section": "",
    "text": "Fuhrmans, M., Knecht, V., & Marrink, S. J. (2009). A single bicontinuous cubic phase induced by fusion peptides. Journal of the American Chemical Society, 131(26), 9166-9167."
  },
  {
    "objectID": "docs/publications/entries/2009/Fuhrmans2009_FusionPeptides.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Fuhrmans2009_FusionPeptides.html#citation-apa-7",
    "title": "A Single Bicontinuous Cubic Phase Induced by Fusion Peptides",
    "section": "",
    "text": "Fuhrmans, M., Knecht, V., & Marrink, S. J. (2009). A single bicontinuous cubic phase induced by fusion peptides. Journal of the American Chemical Society, 131(26), 9166-9167."
  },
  {
    "objectID": "docs/publications/entries/2009/Fuhrmans2009_FusionPeptides.html#abstract",
    "href": "docs/publications/entries/2009/Fuhrmans2009_FusionPeptides.html#abstract",
    "title": "A Single Bicontinuous Cubic Phase Induced by Fusion Peptides",
    "section": "Abstract",
    "text": "Abstract\nWe report a bicontinuous cubic phase forming in the presence of the Influenza HA fusion peptide in coarse grained molecular dynamics simulations. Starting from a random mixture of DOPE, water, and fusion peptides, we observe spontaneous formation of a stable bicontinuous phase. Unlike all previously reported bicontinuous cubic phases the one formed in our simulations is a single phase in the sense that there are no multiple isolated compartments of water or lipid."
  },
  {
    "objectID": "docs/publications/entries/2009/Periole2009_ElasticNetwork.html",
    "href": "docs/publications/entries/2009/Periole2009_ElasticNetwork.html",
    "title": "Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition",
    "section": "",
    "text": "Periole, X., Cavalli, M., Marrink, S. J., & Ceruso, M. A. (2009). Combining an elastic network with a coarse-grained molecular force field: structure, dynamics, and intermolecular recognition. Journal of chemical theory and computation, 5(9), 2531-2543."
  },
  {
    "objectID": "docs/publications/entries/2009/Periole2009_ElasticNetwork.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Periole2009_ElasticNetwork.html#citation-apa-7",
    "title": "Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition",
    "section": "",
    "text": "Periole, X., Cavalli, M., Marrink, S. J., & Ceruso, M. A. (2009). Combining an elastic network with a coarse-grained molecular force field: structure, dynamics, and intermolecular recognition. Journal of chemical theory and computation, 5(9), 2531-2543."
  },
  {
    "objectID": "docs/publications/entries/2009/Periole2009_ElasticNetwork.html#abstract",
    "href": "docs/publications/entries/2009/Periole2009_ElasticNetwork.html#abstract",
    "title": "Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition",
    "section": "Abstract",
    "text": "Abstract\nStructure-based and physics-based coarse-grained molecular force fields have become attractive approaches to gain mechanistic insight into the function of large biomolecular assemblies. Here, we study how both approaches can be combined into a single representation, that we term ELNEDIN. In this representation an elastic network is used as a structural scaffold to describe and maintain the overall shape of a protein and a physics-based coarse-grained model (MARTINI-2.1) is used to describe both inter- and intramolecular interactions in the system. The results show that when used in molecular dynamics simulations ELNEDIN models can be built so that the resulting structural and dynamical properties of a protein, including its collective motions, are comparable to those obtained using atomistic protein models. We then evaluate the behavior of such models in (1) long, microsecond time-scale, simulations, (2) the modeling of very large macromolecular assemblies, a viral capsid, and (3) the study of a protein−protein association process, the reassembly of the ROP homodimer. The results for this series of tests indicate that ELNEDIN models allow microsecond time-scale molecular dynamics simulations to be carried out readily, that large biological entities such as the viral capsid of the cowpea mosaic virus can be stably modeled as assemblies of independent ELNEDIN models, and that ELNEDIN models show significant promise for modeling protein−protein association processes."
  },
  {
    "objectID": "docs/publications/entries/2009/Sengupta2009_ATPSynthase.html",
    "href": "docs/publications/entries/2009/Sengupta2009_ATPSynthase.html",
    "title": "Simulations of the c-subunit of ATP-synthase reveal helix rearrangements",
    "section": "",
    "text": "Sengupta, D., Rampioni, A., & Marrink, S. J. (2009). Simulations of the c-subunit of ATP-synthase reveal helix rearrangements. Molecular Membrane Biology, 26(8), 422-434."
  },
  {
    "objectID": "docs/publications/entries/2009/Sengupta2009_ATPSynthase.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Sengupta2009_ATPSynthase.html#citation-apa-7",
    "title": "Simulations of the c-subunit of ATP-synthase reveal helix rearrangements",
    "section": "",
    "text": "Sengupta, D., Rampioni, A., & Marrink, S. J. (2009). Simulations of the c-subunit of ATP-synthase reveal helix rearrangements. Molecular Membrane Biology, 26(8), 422-434."
  },
  {
    "objectID": "docs/publications/entries/2009/Sengupta2009_ATPSynthase.html#abstract",
    "href": "docs/publications/entries/2009/Sengupta2009_ATPSynthase.html#abstract",
    "title": "Simulations of the c-subunit of ATP-synthase reveal helix rearrangements",
    "section": "Abstract",
    "text": "Abstract\nThe c-subunit of the enzyme, ATP synthase couples the proton movement through the a-subunit with its own rotation and subsequent rotation of the F1 ring to drive ATP synthesis. Here, we perform μs time-scale coarse-grained molecular dynamics simulations of the c-subunit to characterize its structure and dynamics. Two different helix-helix interfaces, albeit with similar interfacial characteristics, are sampled in the simulations. The helix-2 of the c-subunit monomer rotates around the axis of helix-1 bringing about a change in the interface. Previous models have also proposed such a change in the helix interface but postulated that helix-2 swivels around its own axis. Such large-scale changes in helix packing motifs have not been observed before. The helix-swirling persists even in the c-subunit ring but the dynamics is much slower. The cooperative behavior in the ring appears to stabilize a conformation less-populated in the monomer. Analyzing the stability of the c-subunit ring, it was found that six lipid molecules are necessary to fill the central cavity of the ring. These lipid molecules were not aligned with the surrounding bilayer but protruded towards the periplasmic side. The characterization of the monomer and ring presented in this work sheds light into the structural dynamics of the c-subunit and its functional relevance."
  },
  {
    "objectID": "docs/publications/entries/2009/Ollila2009_3Dpressure.html",
    "href": "docs/publications/entries/2009/Ollila2009_3Dpressure.html",
    "title": "3D Pressure Field in Lipid Membranes and Membrane-Protein Complexes",
    "section": "",
    "text": "Ollila, O. S., Risselada, H. J., Louhivuori, M., Lindahl, E., Vattulainen, F. I., & Marrink, S. J. (2009). 3D pressure field in lipid membranes and membrane-protein complexes. Physical review letters, 102(7), 078101."
  },
  {
    "objectID": "docs/publications/entries/2009/Ollila2009_3Dpressure.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Ollila2009_3Dpressure.html#citation-apa-7",
    "title": "3D Pressure Field in Lipid Membranes and Membrane-Protein Complexes",
    "section": "",
    "text": "Ollila, O. S., Risselada, H. J., Louhivuori, M., Lindahl, E., Vattulainen, F. I., & Marrink, S. J. (2009). 3D pressure field in lipid membranes and membrane-protein complexes. Physical review letters, 102(7), 078101."
  },
  {
    "objectID": "docs/publications/entries/2009/Ollila2009_3Dpressure.html#abstract",
    "href": "docs/publications/entries/2009/Ollila2009_3Dpressure.html#abstract",
    "title": "3D Pressure Field in Lipid Membranes and Membrane-Protein Complexes",
    "section": "Abstract",
    "text": "Abstract\nWe calculate full 3D pressure fields for inhomogeneous nanoscale systems using molecular dynamics simulation data. The fields represent systems with increasing level of complexity, ranging from semivesicles and vesicles to membranes characterized by coexistence of two phases, including also a protein-membrane complex. We show that the 3D pressure field is distinctly different for curved and planar bilayers, the pressure field depends strongly on the phase of the membrane, and that an integral protein modulates the tension and elastic properties of the membrane."
  },
  {
    "objectID": "docs/publications/entries/2009/Risselada2009_FreezeVesicles.html",
    "href": "docs/publications/entries/2009/Risselada2009_FreezeVesicles.html",
    "title": "The freezing process of small lipid vesicles at molecular resolution",
    "section": "",
    "text": "Risselada, H. J., & Marrink, S. J. (2009). The freezing process of small lipid vesicles at molecular resolution. Soft Matter, 5(22), 4531-4541."
  },
  {
    "objectID": "docs/publications/entries/2009/Risselada2009_FreezeVesicles.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Risselada2009_FreezeVesicles.html#citation-apa-7",
    "title": "The freezing process of small lipid vesicles at molecular resolution",
    "section": "",
    "text": "Risselada, H. J., & Marrink, S. J. (2009). The freezing process of small lipid vesicles at molecular resolution. Soft Matter, 5(22), 4531-4541."
  },
  {
    "objectID": "docs/publications/entries/2009/Risselada2009_FreezeVesicles.html#abstract",
    "href": "docs/publications/entries/2009/Risselada2009_FreezeVesicles.html#abstract",
    "title": "The freezing process of small lipid vesicles at molecular resolution",
    "section": "Abstract",
    "text": "Abstract\nAt present very little is known about the kinetic barriers which a small vesicle will face during the transformation from the liquid-crystalline to the gel phase, and what the structure of frozen vesicles looks like at the molecular level. The formation of gel domains in the strongly curved bilayer of a small vesicle seems almost paradoxical and is expected to involve large structural reorganizations. In this work we use coarse-grained molecular dynamics simulations to study the kinetic and structural aspects of gel domain formation in small lipid vesicles, specifically dipalmitoylphosphatidylcholine (DPPC) vesicles with a diameter range of 20–40 nm. We observe that cooling of such vesicles below the phase transition temperature does not result in gel phase formation on a microsecond time scale, which we attribute to the presence of an effective area constraint. This area constraint is due to the strongly reduced membrane permeability at lower temperatures, preventing the rapid efflux of water and the required decrease in membrane area to form a gel phase. Control simulations with lamellar bilayers, simulated at fixed area, show that gel phase formation is indeed only possible below a certain threshold area. The effect of lipid asymmetry was also studied with the lamellar setup, and found to be of less importance. To circumvent the kinetic barrier imposed by the effective area constraint of the liposomes, i.e. to mimic the long time behavior, we introduce artificial pores in the membrane facilitating the solvent efflux. In this case, spontaneous gel domains are formed. We identify several stages during the microsecond-long transformation, finally resulting in strongly deformed or ruptured vesicles entirely in the gel state."
  },
  {
    "objectID": "docs/publications/entries/2010/Schäfer2010_Partitioning.html",
    "href": "docs/publications/entries/2010/Schäfer2010_Partitioning.html",
    "title": "Partitioning of Lipids at Domain Boundaries in Model Membranes",
    "section": "",
    "text": "Schäfer, L. V., & Marrink, S. J. (2010). Partitioning of lipids at domain boundaries in model membranes. Biophysical journal, 99(12), L91-L93."
  },
  {
    "objectID": "docs/publications/entries/2010/Schäfer2010_Partitioning.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Schäfer2010_Partitioning.html#citation-apa-7",
    "title": "Partitioning of Lipids at Domain Boundaries in Model Membranes",
    "section": "",
    "text": "Schäfer, L. V., & Marrink, S. J. (2010). Partitioning of lipids at domain boundaries in model membranes. Biophysical journal, 99(12), L91-L93."
  },
  {
    "objectID": "docs/publications/entries/2010/Schäfer2010_Partitioning.html#abstract",
    "href": "docs/publications/entries/2010/Schäfer2010_Partitioning.html#abstract",
    "title": "Partitioning of Lipids at Domain Boundaries in Model Membranes",
    "section": "Abstract",
    "text": "Abstract\nLine-active molecules (“linactants”) that bind to the boundary interface between different fluid lipid domains in membranes have a strong potential as regulators of the lateral heterogeneity that is important for many biological processes. Here, we use molecular dynamics simulations in combination with a coarse-grain model that retains near-atomic resolution to identify lipid species that can act as linactants in a model membrane that is segregated into two lipid domains of different fluidity. Our simulations predict that certain hybrid saturated/unsaturated chain lipids can bind to the interface and lower the line tension, whereas cone-shaped lysolipids have a less pronounced effect."
  },
  {
    "objectID": "docs/publications/entries/2010/Louhivuori2010_PressurizedLiposomes.html",
    "href": "docs/publications/entries/2010/Louhivuori2010_PressurizedLiposomes.html",
    "title": "Release of content through mechano-sensitive gates in pressurized liposomes",
    "section": "",
    "text": "Louhivuori, M., Risselada, H. J., van der Giessen, E., & Marrink, S. J. (2010). Release of content through mechano-sensitive gates in pressurized liposomes. Proceedings of the National Academy of Sciences, 107(46), 19856-19860."
  },
  {
    "objectID": "docs/publications/entries/2010/Louhivuori2010_PressurizedLiposomes.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Louhivuori2010_PressurizedLiposomes.html#citation-apa-7",
    "title": "Release of content through mechano-sensitive gates in pressurized liposomes",
    "section": "",
    "text": "Louhivuori, M., Risselada, H. J., van der Giessen, E., & Marrink, S. J. (2010). Release of content through mechano-sensitive gates in pressurized liposomes. Proceedings of the National Academy of Sciences, 107(46), 19856-19860."
  },
  {
    "objectID": "docs/publications/entries/2010/Louhivuori2010_PressurizedLiposomes.html#abstract",
    "href": "docs/publications/entries/2010/Louhivuori2010_PressurizedLiposomes.html#abstract",
    "title": "Release of content through mechano-sensitive gates in pressurized liposomes",
    "section": "Abstract",
    "text": "Abstract\nMechano-sensitive channels are ubiquitous membrane proteins that activate in response to increasing tension in the lipid membrane. They facilitate a sudden, nonselective release of solutes and water that safeguards the integrity of the cell in hypo- or hyper-osmotic shock conditions. We have simulated the rapid release of content from a pressurized liposome through a particular mechano-sensitive protein channel, MscL, embedded in the liposomal membrane. We show that a single channel is able to relax the liposome, stressed to the point of bursting, in a matter of microseconds. We map the full activation–deactivation cycle of MscL in near-atomic detail and are able to quantify the rapid decrease in liposomal stress as a result of channel activation. This provides a computational tool that opens the way to contribute to the rational design of functional nano-containers."
  },
  {
    "objectID": "docs/publications/entries/2010/Marrink2010_Comment.html",
    "href": "docs/publications/entries/2010/Marrink2010_Comment.html",
    "title": "Comment on “On using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models” by M. Winger, D. Trzesniak, R. Baron and W. F. van Gunsteren, Phys. Chem. Chem. Phys., 2009, 11, 1934",
    "section": "",
    "text": "Marrink, S. J., Periole, X., Tieleman, D. P., & de Vries, A. H. (2010). Comment on “On using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models” by M. Winger, D. Trzesniak, R. Baron and WF van Gunsteren, Phys. Chem. Chem. Phys., 2009, 11, 1934. Physical Chemistry Chemical Physics, 12(9), 2254-2256."
  },
  {
    "objectID": "docs/publications/entries/2010/Marrink2010_Comment.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Marrink2010_Comment.html#citation-apa-7",
    "title": "Comment on “On using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models” by M. Winger, D. Trzesniak, R. Baron and W. F. van Gunsteren, Phys. Chem. Chem. Phys., 2009, 11, 1934",
    "section": "",
    "text": "Marrink, S. J., Periole, X., Tieleman, D. P., & de Vries, A. H. (2010). Comment on “On using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models” by M. Winger, D. Trzesniak, R. Baron and WF van Gunsteren, Phys. Chem. Chem. Phys., 2009, 11, 1934. Physical Chemistry Chemical Physics, 12(9), 2254-2256."
  },
  {
    "objectID": "docs/publications/entries/2010/Marrink2010_Comment.html#abstract",
    "href": "docs/publications/entries/2010/Marrink2010_Comment.html#abstract",
    "title": "Comment on “On using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models” by M. Winger, D. Trzesniak, R. Baron and W. F. van Gunsteren, Phys. Chem. Chem. Phys., 2009, 11, 1934",
    "section": "Abstract",
    "text": "Abstract\nIn a recent study published in this journal, Winger et al. investigate the magnitude of the time step to integrate the equations of motion in simulations with the coarse-grained MARTINI force field, using an implementation3 of MARTINI in the GROMOS software. Based primarily on the drift in temperature and the magnitude of the energy fluctuations in bulk liquids, the authors conclude that a time step not exceeding 10 fs should be used to avoid artificial energy flow into or out of the system. In most applications of the MARTINI model to date, time steps of 20–40 fs have been used. Thus, the observation of Winger et al. raises questions about possible artefacts caused by the apparent use of a too large integration time step. Although we appreciate the effort put into testing our model, we do not support the conclusions drawn."
  },
  {
    "objectID": "docs/publications/entries/2010/Sengupta2010_GlycophorinA.html",
    "href": "docs/publications/entries/2010/Sengupta2010_GlycophorinA.html",
    "title": "Lipid-mediated interactions tune the association of glycophorin A helix and its disruptive mutants in membranes",
    "section": "",
    "text": "Sengupta, D., & Marrink, S. J. (2010). Lipid-mediated interactions tune the association of glycophorin A helix and its disruptive mutants in membranes. Physical Chemistry Chemical Physics, 12(40), 12987-12996."
  },
  {
    "objectID": "docs/publications/entries/2010/Sengupta2010_GlycophorinA.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Sengupta2010_GlycophorinA.html#citation-apa-7",
    "title": "Lipid-mediated interactions tune the association of glycophorin A helix and its disruptive mutants in membranes",
    "section": "",
    "text": "Sengupta, D., & Marrink, S. J. (2010). Lipid-mediated interactions tune the association of glycophorin A helix and its disruptive mutants in membranes. Physical Chemistry Chemical Physics, 12(40), 12987-12996."
  },
  {
    "objectID": "docs/publications/entries/2010/Sengupta2010_GlycophorinA.html#abstract",
    "href": "docs/publications/entries/2010/Sengupta2010_GlycophorinA.html#abstract",
    "title": "Lipid-mediated interactions tune the association of glycophorin A helix and its disruptive mutants in membranes",
    "section": "Abstract",
    "text": "Abstract\nThe specific and non-specific driving forces of helix association within membranes are still poorly understood. Here, we use coarse-grain molecular dynamics simulations to study the association behavior of glycophorin A and two disruptive mutants, T87F and a triple mutant of the GxxxG motif (G79LG83LG86L), embedded in a lipid membrane. Self-assembly simulations and the association free-energy profile confirm an energetically-favorable dimerized state for both the wild type and the mutants. The reduced association of the mutants compared to the wild type, as observed in experiments, can be justified from comparisons of the free energy profiles. Less-favorable protein–protein interactions as well as disruption of lipid packing around the mutant dimers is responsible for their reduced association. The role of the non-specific “lipid-phobic” contribution appears to be as important as the specific “helix–helix” contribution. However, the differences between the wild type and mutants are subtle and our simulations predict a dimerization state not only for the wild-type glycophorin A, but also for these ‘disruptive’ mutants. Our results highlight the importance of both specific as well as non-specific driving forces in the association of transmembrane helices, and point to the need of more careful interpretation of experimental measurements."
  },
  {
    "objectID": "docs/publications/entries/2010/Fuhrmans2010_SPCWater.html",
    "href": "docs/publications/entries/2010/Fuhrmans2010_SPCWater.html",
    "title": "Effects of bundling on the properties of the SPC water model",
    "section": "",
    "text": "Fuhrmans, M., Sanders, B. P., Marrink, S. J., & de Vries, A. H. (2010). Effects of bundling on the properties of the SPC water model. Theoretical Chemistry Accounts, 125, 335-344."
  },
  {
    "objectID": "docs/publications/entries/2010/Fuhrmans2010_SPCWater.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Fuhrmans2010_SPCWater.html#citation-apa-7",
    "title": "Effects of bundling on the properties of the SPC water model",
    "section": "",
    "text": "Fuhrmans, M., Sanders, B. P., Marrink, S. J., & de Vries, A. H. (2010). Effects of bundling on the properties of the SPC water model. Theoretical Chemistry Accounts, 125, 335-344."
  },
  {
    "objectID": "docs/publications/entries/2010/Fuhrmans2010_SPCWater.html#abstract",
    "href": "docs/publications/entries/2010/Fuhrmans2010_SPCWater.html#abstract",
    "title": "Effects of bundling on the properties of the SPC water model",
    "section": "Abstract",
    "text": "Abstract\nSimultaneous representation of molecules at an all-atom and coarse-grained level, as required by multiscaling molecular dynamics simulations, poses problems for the treatment of small molecules. If more than one of these molecules are mapped to a single coarse-grained interaction site, unrestricted movement in the all-atom representation can make a meaningful correspondence of the coordinates between the two representations impossible. Restricting the relative movement of molecules mapped to the same coarse-grained interaction site solves that problem, but will have consequences for the properties of the model. Here we investigate the effects of introducing bundling to the common simple point charge (SPC) water model and present a bundled water model that preserves important properties of SPC water relevant for multiscaling."
  },
  {
    "objectID": "docs/publications/entries/2010/Polyansky2010_AntimicrobialPeptides.html",
    "href": "docs/publications/entries/2010/Polyansky2010_AntimicrobialPeptides.html",
    "title": "Antimicrobial Peptides Induce Growth of Phosphatidylglycerol Domains in a Model Bacterial Membrane",
    "section": "",
    "text": "Polyansky, A. A., Ramaswamy, R., Volynsky, P. E., Sbalzarini, I. F., Marrink, S. J., & Efremov, R. G. (2010). Antimicrobial peptides induce growth of phosphatidylglycerol domains in a model bacterial membrane. The Journal of Physical Chemistry Letters, 1(20), 3108-3111."
  },
  {
    "objectID": "docs/publications/entries/2010/Polyansky2010_AntimicrobialPeptides.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Polyansky2010_AntimicrobialPeptides.html#citation-apa-7",
    "title": "Antimicrobial Peptides Induce Growth of Phosphatidylglycerol Domains in a Model Bacterial Membrane",
    "section": "",
    "text": "Polyansky, A. A., Ramaswamy, R., Volynsky, P. E., Sbalzarini, I. F., Marrink, S. J., & Efremov, R. G. (2010). Antimicrobial peptides induce growth of phosphatidylglycerol domains in a model bacterial membrane. The Journal of Physical Chemistry Letters, 1(20), 3108-3111."
  },
  {
    "objectID": "docs/publications/entries/2010/Polyansky2010_AntimicrobialPeptides.html#abstract",
    "href": "docs/publications/entries/2010/Polyansky2010_AntimicrobialPeptides.html#abstract",
    "title": "Antimicrobial Peptides Induce Growth of Phosphatidylglycerol Domains in a Model Bacterial Membrane",
    "section": "Abstract",
    "text": "Abstract\nWe performed microsecond long coarse-grained molecular dynamics simulations to elucidate the lateral structure and domain dynamics of a phosphatidylethanolamine (PE)/phosphatidylglycerol (PG) mixed bilayer (7/3), mimicking the inner membrane of gram-negative bacteria. Specifically, we address the effect of surface bound antimicrobial peptides (AMPs) on the lateral organization of the membrane. We find that, in the absence of the peptides, the minor PG fraction only forms small clusters, but that these clusters grow in size upon binding of the cationic AMPs. The presence of AMPs systematically affects the dynamics and induces long-range order in the structure of PG domains, stabilizing the separation between the two lipid fractions. Our results help in understanding the initial stages of destabilization of cytoplasmic bacterial membranes below the critical peptide concentration necessary for disruption, and provide a possible explanation for the multimodal character of AMP activity."
  },
  {
    "objectID": "docs/publications/entries/2010/Vuorela2010_Lipoproteins.html",
    "href": "docs/publications/entries/2010/Vuorela2010_Lipoproteins.html",
    "title": "Role of Lipids in Spheroidal High Density Lipoproteins",
    "section": "",
    "text": "Vuorela, T., Catte, A., Niemelä, P. S., Hall, A., Hyvönen, M. T., Marrink, S. J., … & Vattulainen, I. (2010). Role of lipids in spheroidal high density lipoproteins. PLoS computational biology, 6(10), e1000964."
  },
  {
    "objectID": "docs/publications/entries/2010/Vuorela2010_Lipoproteins.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Vuorela2010_Lipoproteins.html#citation-apa-7",
    "title": "Role of Lipids in Spheroidal High Density Lipoproteins",
    "section": "",
    "text": "Vuorela, T., Catte, A., Niemelä, P. S., Hall, A., Hyvönen, M. T., Marrink, S. J., … & Vattulainen, I. (2010). Role of lipids in spheroidal high density lipoproteins. PLoS computational biology, 6(10), e1000964."
  },
  {
    "objectID": "docs/publications/entries/2010/Vuorela2010_Lipoproteins.html#abstract",
    "href": "docs/publications/entries/2010/Vuorela2010_Lipoproteins.html#abstract",
    "title": "Role of Lipids in Spheroidal High Density Lipoproteins",
    "section": "Abstract",
    "text": "Abstract\nWe study the structure and dynamics of spherical high density lipoprotein (HDL) particles through coarse-grained multi-microsecond molecular dynamics simulations. We simulate both a lipid droplet without the apolipoprotein A-I (apoA-I) and the full HDL particle including two apoA-I molecules surrounding the lipid compartment. The present models are the first ones among computational studies where the size and lipid composition of HDL are realistic, corresponding to human serum HDL. We focus on the role of lipids in HDL structure and dynamics. Particular attention is paid to the assembly of lipids and the influence of lipid-protein interactions on HDL properties. We find that the properties of lipids depend significantly on their location in the particle (core, intermediate region, surface). Unlike the hydrophobic core, the intermediate and surface regions are characterized by prominent conformational lipid order. Yet, not only the conformations but also the dynamics of lipids are found to be distinctly different in the different regions of HDL, highlighting the importance of dynamics in considering the functionalization of HDL. The structure of the lipid droplet close to the HDL-water interface is altered by the presence of apoA-Is, with most prominent changes being observed for cholesterol and polar lipids. For cholesterol, slow trafficking between the surface layer and the regimes underneath is observed. The lipid-protein interactions are strongest for cholesterol, in particular its interaction with hydrophobic residues of apoA-I. Our results reveal that not only hydrophobicity but also conformational entropy of the molecules are the driving forces in the formation of HDL structure. The results provide the first detailed structural model for HDL and its dynamics with and without apoA-I, and indicate how the interplay and competition between entropy and detailed interactions may be used in nanoparticle and drug design through self-assembly."
  },
  {
    "objectID": "docs/publications/entries/2010/Ramadurai2010_HydrophobicMismatch.html",
    "href": "docs/publications/entries/2010/Ramadurai2010_HydrophobicMismatch.html",
    "title": "Influence of Hydrophobic Mismatch and Amino Acid Composition on the Lateral Diffusion of Transmembrane Peptides",
    "section": "",
    "text": "Ramadurai, S., Holt, A., Schäfer, L. V., Krasnikov, V. V., Rijkers, D. T., Marrink, S. J., … & Poolman, B. (2010). Influence of hydrophobic mismatch and amino acid composition on the lateral diffusion of transmembrane peptides. Biophysical journal, 99(5), 1447-1454."
  },
  {
    "objectID": "docs/publications/entries/2010/Ramadurai2010_HydrophobicMismatch.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Ramadurai2010_HydrophobicMismatch.html#citation-apa-7",
    "title": "Influence of Hydrophobic Mismatch and Amino Acid Composition on the Lateral Diffusion of Transmembrane Peptides",
    "section": "",
    "text": "Ramadurai, S., Holt, A., Schäfer, L. V., Krasnikov, V. V., Rijkers, D. T., Marrink, S. J., … & Poolman, B. (2010). Influence of hydrophobic mismatch and amino acid composition on the lateral diffusion of transmembrane peptides. Biophysical journal, 99(5), 1447-1454."
  },
  {
    "objectID": "docs/publications/entries/2010/Ramadurai2010_HydrophobicMismatch.html#abstract",
    "href": "docs/publications/entries/2010/Ramadurai2010_HydrophobicMismatch.html#abstract",
    "title": "Influence of Hydrophobic Mismatch and Amino Acid Composition on the Lateral Diffusion of Transmembrane Peptides",
    "section": "Abstract",
    "text": "Abstract\nWe investigated the effect of amino acid composition and hydrophobic length of α-helical transmembrane peptides and the role of electrostatic interactions on the lateral diffusion of the peptides in lipid membranes. Model peptides of varying length and composition, and either tryptophans or lysines as flanking residues, were synthesized. The peptides were labeled with the fluorescent label Alexa Fluor 488 and incorporated into phospholipid bilayers of different hydrophobic thickness and composition. Giant unilamellar vesicles were formed by electroformation, and the lateral diffusion of the transmembrane peptides (and lipids) was determined by fluorescence correlation spectroscopy. In addition, we performed coarse-grained molecular-dynamics simulations of single peptides of different hydrophobic lengths embedded in planar membranes of different thicknesses. Both the experimental and simulation results indicate that lateral diffusion is sensitive to membrane thickness between the peptides and surrounding lipids. We did not observe a difference in the lateral diffusion of the peptides with respect to the presence of tryptophans or lysines as flanking residues. The specific lipid headgroup composition of the membrane has a much less pronounced impact on the diffusion of the peptides than does the hydrophobic thickness."
  },
  {
    "objectID": "docs/publications/entries/2011/Klacsová2011_AliphaticAlcohols.html",
    "href": "docs/publications/entries/2011/Klacsová2011_AliphaticAlcohols.html",
    "title": "The effect of aliphatic alcohols on fluid bilayers in unilamellar DOPC vesicles — A small-angle neutron scattering and molecular dynamics study",
    "section": "",
    "text": "Klacsová, M., Bulacu, M., Kučerka, N., Uhríková, D., Teixeira, J., Marrink, S. J., & Balgavý, P. (2011). The effect of aliphatic alcohols on fluid bilayers in unilamellar DOPC vesicles—A small-angle neutron scattering and molecular dynamics study. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1808(9), 2136-2146."
  },
  {
    "objectID": "docs/publications/entries/2011/Klacsová2011_AliphaticAlcohols.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Klacsová2011_AliphaticAlcohols.html#citation-apa-7",
    "title": "The effect of aliphatic alcohols on fluid bilayers in unilamellar DOPC vesicles — A small-angle neutron scattering and molecular dynamics study",
    "section": "",
    "text": "Klacsová, M., Bulacu, M., Kučerka, N., Uhríková, D., Teixeira, J., Marrink, S. J., & Balgavý, P. (2011). The effect of aliphatic alcohols on fluid bilayers in unilamellar DOPC vesicles—A small-angle neutron scattering and molecular dynamics study. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1808(9), 2136-2146."
  },
  {
    "objectID": "docs/publications/entries/2011/Klacsová2011_AliphaticAlcohols.html#abstract",
    "href": "docs/publications/entries/2011/Klacsová2011_AliphaticAlcohols.html#abstract",
    "title": "The effect of aliphatic alcohols on fluid bilayers in unilamellar DOPC vesicles — A small-angle neutron scattering and molecular dynamics study",
    "section": "Abstract",
    "text": "Abstract\nSmall-angle neutron scattering and coarse-grained molecular dynamics simulations have been used to determine the structural parameters (bilayer thickness D, polar region thickness DH, interfacial lateral area of the unit cell AUC and alcohol partial interfacial area ACnOH) of fluid dioleoylphosphatidylcholine:dioleoylphosphatidylserine (PCPS, DOPC:DOPS = 24.7 mol:mol) bilayers in extruded unilamellar vesicles with incorporated aliphatic alcohols (CnOH, n = 8–18 is the even number of carbons in alkyl chain). External 2H2O/H2O contrast variation experiments revealed that DH decreases as a function of alkyl chain length and CnOH:PCPS molar ratio. Using measurements at single 100% 2H2O contrast we found that (i) D decreases with CnOH:PCPS molar ratio and increases with CnOH chain length (at 0.4 molar ratio); (ii) AUC significantly increases already in the presence of shortest CnOH studied (at 0.4 molar ratio), further increase is observed with longer CnOHs and at higher molar ratios; (iii) ACnOH of alcohol molecules in PCPS bilayer increases linearly with the alkyl chain length, ACnOH obtained for CnOHs with n ≤ 10 corresponds to ACnOH ≤ 20Å2 — a value specific for the crystalline or solid rotator phase of alkanes. All these structural modifications induced by studied CnOHs were reproduced in MD simulations. The computational results give an accurate description of the alcohol effects at the molecular level, explaining the experimental data. The anomaly in ACnOH is discussed via the “umbrella” effect described for cholesterol."
  },
  {
    "objectID": "docs/publications/entries/2011/Schäfer2011_LipidPacking.html",
    "href": "docs/publications/entries/2011/Schäfer2011_LipidPacking.html",
    "title": "Lipid packing drives the segregation of transmembrane helices into disordered lipid domains in model membranes",
    "section": "",
    "text": "Schäfer, L. V., de Jong, D. H., Holt, A., Rzepiela, A. J., de Vries, A. H., Poolman, B., … & Marrink, S. J. (2011). Lipid packing drives the segregation of transmembrane helices into disordered lipid domains in model membranes. Proceedings of the National Academy of Sciences, 108(4), 1343-1348."
  },
  {
    "objectID": "docs/publications/entries/2011/Schäfer2011_LipidPacking.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Schäfer2011_LipidPacking.html#citation-apa-7",
    "title": "Lipid packing drives the segregation of transmembrane helices into disordered lipid domains in model membranes",
    "section": "",
    "text": "Schäfer, L. V., de Jong, D. H., Holt, A., Rzepiela, A. J., de Vries, A. H., Poolman, B., … & Marrink, S. J. (2011). Lipid packing drives the segregation of transmembrane helices into disordered lipid domains in model membranes. Proceedings of the National Academy of Sciences, 108(4), 1343-1348."
  },
  {
    "objectID": "docs/publications/entries/2011/Schäfer2011_LipidPacking.html#abstract",
    "href": "docs/publications/entries/2011/Schäfer2011_LipidPacking.html#abstract",
    "title": "Lipid packing drives the segregation of transmembrane helices into disordered lipid domains in model membranes",
    "section": "Abstract",
    "text": "Abstract\nCell membranes are comprised of multicomponent lipid and protein mixtures that exhibit a complex partitioning behavior. Regions of structural and compositional heterogeneity play a major role in the sorting and self-assembly of proteins, and their clustering into higher-order oligomers. Here, we use computer simulations and optical microscopy to study the sorting of transmembrane helices into the liquid-disordered domains of phase-separated model membranes, irrespective of peptide–lipid hydrophobic mismatch. Free energy calculations show that the enthalpic contribution due to the packing of the lipids drives the lateral sorting of the helices. Hydrophobic mismatch regulates the clustering into either small dynamic or large static aggregates. These results reveal important molecular driving forces for the lateral organization and self-assembly of transmembrane helices in heterogeneous model membranes, with implications for the formation of functional protein complexes in real cells."
  },
  {
    "objectID": "docs/publications/entries/2011/Rzepiela2011_Hybrid.html",
    "href": "docs/publications/entries/2011/Rzepiela2011_Hybrid.html",
    "title": "Hybrid simulations: combining atomistic and coarse-grained force fields using virtual sites",
    "section": "",
    "text": "Rzepiela, A. J., Louhivuori, M., Peter, C., & Marrink, S. J. (2011). Hybrid simulations: combining atomistic and coarse-grained force fields using virtual sites. Physical Chemistry Chemical Physics, 13(22), 10437-10448."
  },
  {
    "objectID": "docs/publications/entries/2011/Rzepiela2011_Hybrid.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Rzepiela2011_Hybrid.html#citation-apa-7",
    "title": "Hybrid simulations: combining atomistic and coarse-grained force fields using virtual sites",
    "section": "",
    "text": "Rzepiela, A. J., Louhivuori, M., Peter, C., & Marrink, S. J. (2011). Hybrid simulations: combining atomistic and coarse-grained force fields using virtual sites. Physical Chemistry Chemical Physics, 13(22), 10437-10448."
  },
  {
    "objectID": "docs/publications/entries/2011/Rzepiela2011_Hybrid.html#abstract",
    "href": "docs/publications/entries/2011/Rzepiela2011_Hybrid.html#abstract",
    "title": "Hybrid simulations: combining atomistic and coarse-grained force fields using virtual sites",
    "section": "Abstract",
    "text": "Abstract\nHybrid simulations, in which part of the system is represented at atomic resolution and the remaining part at a reduced, coarse-grained, level offer a powerful way to combine the accuracy associated with the atomistic force fields to the sampling speed obtained with coarse-grained (CG) potentials. In this work we introduce a straightforward scheme to perform hybrid simulations, making use of virtual sites to couple the two levels of resolution. With the help of these virtual sites interactions between molecules at different levels of resolution, i.e. between CG and atomistic molecules, are treated the same way as the pure CG–CG interactions. To test our method, we combine the Gromos atomistic force field with a number of coarse-grained potentials, obtained through several approaches that are designed to obtain CG potentials based on an existing atomistic model, namely iterative Boltzmann inversion, force matching, and a potential of mean force subtraction procedure (SB). We also explore the use of the MARTINI force field for the CG potential. A simple system, consisting of atomistic butane molecules dissolved in CG butane, is used to study the performance of our hybrid scheme. Based on the potentials of mean force for atomistic butane in CG solvent, and the properties of 1 : 1 mixtures of atomistic and CG butane which should exhibit ideal mixing behavior, we conclude that the MARTINI and SB potentials are particularly suited to be combined with the atomistic force field. The MARTINI potential is subsequently used to perform hybrid simulations of atomistic dialanine peptides in both CG butane and water. Compared to a fully atomistic description of the system, the hybrid description gives similar results provided that the dielectric screening of water is accounted for. Within the field of biomolecules, our method appears ideally suited to study e.g.protein-ligand binding, where the active site and ligand are modeled in atomistic detail and the rest of the protein, together with the solvent, is coarse-grained."
  },
  {
    "objectID": "docs/publications/entries/2011/Sørensen2011_Protofibrillar.html",
    "href": "docs/publications/entries/2011/Sørensen2011_Protofibrillar.html",
    "title": "Protofibrillar Assembly Toward the Formation of Amyloid Fibrils",
    "section": "",
    "text": "Sørensen, J., Periole, X., Skeby, K. K., Marrink, S. J., & Schiøtt, B. (2011). Protofibrillar assembly toward the formation of amyloid fibrils. The Journal of Physical Chemistry Letters, 2(19), 2385-2390."
  },
  {
    "objectID": "docs/publications/entries/2011/Sørensen2011_Protofibrillar.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Sørensen2011_Protofibrillar.html#citation-apa-7",
    "title": "Protofibrillar Assembly Toward the Formation of Amyloid Fibrils",
    "section": "",
    "text": "Sørensen, J., Periole, X., Skeby, K. K., Marrink, S. J., & Schiøtt, B. (2011). Protofibrillar assembly toward the formation of amyloid fibrils. The Journal of Physical Chemistry Letters, 2(19), 2385-2390."
  },
  {
    "objectID": "docs/publications/entries/2011/Sørensen2011_Protofibrillar.html#abstract",
    "href": "docs/publications/entries/2011/Sørensen2011_Protofibrillar.html#abstract",
    "title": "Protofibrillar Assembly Toward the Formation of Amyloid Fibrils",
    "section": "Abstract",
    "text": "Abstract\nThe formation and growth of amyloid fibrils was investigated using coarse-grained molecular dynamics simulations. In particular, we studied the assembly of amylin(20–29) peptides, preassembled into protofibril fragments. The systems consisted of 27 protofibril fragments initially distributed onto a regular cubic grid with random orientation. Their association was followed on the μs time scale. At 300 K, it was observed that, while the assemblies formed are mainly disordered, there was an apparent preference for the fragments to associate such that an elongation of the structures predominates over their lateral extension. Increasing the temperature in the simulations resulted in an increase of the contact surfaces and allowed for rearrangement within the prefibrillar aggregates over longer time scales. The preferential elongation-like growth mechanism observed at 300 K was not persistent at higher temperatures indicative of a shift in growth pathway, congruent with experimental observations that changing growth conditions alters the morphology of the fibrils."
  },
  {
    "objectID": "docs/publications/entries/2003/mark2023_fusion.html",
    "href": "docs/publications/entries/2003/mark2023_fusion.html",
    "title": "The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2003/mark2023_fusion.html#citation-apa-7",
    "href": "docs/publications/entries/2003/mark2023_fusion.html#citation-apa-7",
    "title": "The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2003/mark2023_fusion.html#abstract",
    "href": "docs/publications/entries/2003/mark2023_fusion.html#abstract",
    "title": "The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nWe describe molecular dynamics simulations elucidating the molecular details of the process of fusion for small lipid vesicles. The simulations are based on a coarse grained (CG) lipid model that accurately represents the lamellar state of a variety of phospholipids and enables us to observe intermediate stages during fusion at near atomic detail. Simulations were conducted on a variety of systems containing common phospholipids such as phosphatidylcholine (PC), phosphatidylethanolamine (PE), lysoPC, and mixtures of the above. The fusion intermediates found are in general agreement with the stalk−pore mechanism. Transient pores sometimes form adjacent to the stalk, however, resulting in the mixing of lipids from the outer and inner monolayers. The speed of stalk formation and the opening of the fusion pore can be modulated by altering the lipid composition in qualitative agreement with experimental observations."
  },
  {
    "objectID": "docs/publications/entries/2004/Marrink2004_Semiquantitive.html",
    "href": "docs/publications/entries/2004/Marrink2004_Semiquantitive.html",
    "title": "Coarse Grained Model for Semiquantitative Lipid Simulations",
    "section": "",
    "text": "Marrink, S. J., De Vries, A. H., & Mark, A. E. (2004). Coarse grained model for semiquantitative lipid simulations. The Journal of Physical Chemistry B, 108(2), 750-760."
  },
  {
    "objectID": "docs/publications/entries/2004/Marrink2004_Semiquantitive.html#citation-apa-7",
    "href": "docs/publications/entries/2004/Marrink2004_Semiquantitive.html#citation-apa-7",
    "title": "Coarse Grained Model for Semiquantitative Lipid Simulations",
    "section": "",
    "text": "Marrink, S. J., De Vries, A. H., & Mark, A. E. (2004). Coarse grained model for semiquantitative lipid simulations. The Journal of Physical Chemistry B, 108(2), 750-760."
  },
  {
    "objectID": "docs/publications/entries/2004/Marrink2004_Semiquantitive.html#abstract",
    "href": "docs/publications/entries/2004/Marrink2004_Semiquantitive.html#abstract",
    "title": "Coarse Grained Model for Semiquantitative Lipid Simulations",
    "section": "Abstract",
    "text": "Abstract\nThis paper describes the parametrization of a new coarse grained (CG) model for lipid and surfactant systems. Reduction of the number of degrees of freedom together with the use of short range potentials makes it computationally very efficient. Compared to atomistic models a gain of 3−4 orders of magnitude can be achieved. Micrometer length scales or millisecond time scales are therefore within reach. To encourage applications, the model is kept very simple. Only a small number of coarse grained atom types are defined, which interact using a few discrete levels of interaction. Despite the computational speed and the simplistic nature of the model, it proves to be both versatile in its applications and accurate in its predictions. We show that densities of liquid alkanes from decane up to eicosane can be reproduced to within 5%, and the mutual solubilities of alkanes in water and water in alkanes can be reproduced within 0.5 kT of the experimental values. The CG model for dipalmitoylphosphatidylcholine (DPPC) is shown to aggregate spontaneously into a bilayer. Structural properties such as the area per headgroup and the phosphate−phosphate distance match the experimentally measured quantities closely. The same is true for elastic properties such as the bending modulus and the area compressibility, and dynamic properties such as the lipid lateral diffusion coefficient and the water permeation rate. The distribution of the individual lipid components along the bilayer normal is very similar to distributions obtained from atomistic simulations. Phospholipids with different headgroup (ethanolamine) or different tail lengths (lauroyl, stearoyl) or unsaturated tails (oleoyl) can also be modeled with the CG force field. The experimental area per headgroup can be reproduced for most lipids within 0.02 nm2. Finally, the CG model is applied to nonbilayer phases. Dodecylphosphocholine (DPC) aggregates into small micelles that are structurally very similar to ones modeled atomistically, and DOPE forms an inverted hexagonal phase with structural parameters in agreement with experimental data."
  },
  {
    "objectID": "docs/publications/entries/2004/Marrink2004_HexagonalPhase.html",
    "href": "docs/publications/entries/2004/Marrink2004_HexagonalPhase.html",
    "title": "Molecular View of Hexagonal Phase Formation in Phospholipid Membranes",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2004). Molecular view of hexagonal phase formation in phospholipid membranes. Biophysical journal, 87(6), 3894-3900."
  },
  {
    "objectID": "docs/publications/entries/2004/Marrink2004_HexagonalPhase.html#citation-apa-7",
    "href": "docs/publications/entries/2004/Marrink2004_HexagonalPhase.html#citation-apa-7",
    "title": "Molecular View of Hexagonal Phase Formation in Phospholipid Membranes",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2004). Molecular view of hexagonal phase formation in phospholipid membranes. Biophysical journal, 87(6), 3894-3900."
  },
  {
    "objectID": "docs/publications/entries/2004/Marrink2004_HexagonalPhase.html#abstract",
    "href": "docs/publications/entries/2004/Marrink2004_HexagonalPhase.html#abstract",
    "title": "Molecular View of Hexagonal Phase Formation in Phospholipid Membranes",
    "section": "Abstract",
    "text": "Abstract\nImportant biological processes, such as vesicle fusion or budding, require the cell matrix to undergo a transition from a lamellar to a nonlamellar state. Although equilibrium properties of membranes are amenable to detailed theoretical studies, collective rearrangements involved in phase transitions have thus far only been modeled on a qualitative level. Here, for the first time, the complete transition pathway from a multilamellar to an inverted hexagonal phase is elucidated at near-atomic detail using a recently developed coarse-grained molecular dynamics simulation model. Insight is provided into experimentally inaccessible data such as the molecular structure of the intermediates and the kinetics involved. Starting from multilamellar configurations, the spontaneous formation of stalks between the bilayers is observed on a nanosecond timescale at elevated temperatures or reduced hydration levels. The stalks subsequently elongate in a cooperative manner leading to the formation of an inverted hexagonal phase. The rate of stalk elongation is ∼0.1 nm ns−1. Within a narrow hydration/temperature/composition range the stalks appear stable and rearrange into the rhombohedral phase."
  },
  {
    "objectID": "docs/publications/entries/2019/Liu2019_Gangliosides.html",
    "href": "docs/publications/entries/2019/Liu2019_Gangliosides.html",
    "title": "Gangliosides Destabilize Lipid Phase Separation in Multicomponent Membranes",
    "section": "",
    "text": "Liu, Y., Barnoud, J., & Marrink, S. J. (2019). Gangliosides destabilize lipid phase separation in multicomponent membranes. Biophysical Journal, 117(7), 1215-1223."
  },
  {
    "objectID": "docs/publications/entries/2019/Liu2019_Gangliosides.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Liu2019_Gangliosides.html#citation-apa-7",
    "title": "Gangliosides Destabilize Lipid Phase Separation in Multicomponent Membranes",
    "section": "",
    "text": "Liu, Y., Barnoud, J., & Marrink, S. J. (2019). Gangliosides destabilize lipid phase separation in multicomponent membranes. Biophysical Journal, 117(7), 1215-1223."
  },
  {
    "objectID": "docs/publications/entries/2019/Liu2019_Gangliosides.html#abstract",
    "href": "docs/publications/entries/2019/Liu2019_Gangliosides.html#abstract",
    "title": "Gangliosides Destabilize Lipid Phase Separation in Multicomponent Membranes",
    "section": "Abstract",
    "text": "Abstract\nGangliosides (GMs) form an important class of lipids found in the outer leaflet of the plasma membrane. Typically, they colocalize with cholesterol and sphingomyelin in ordered membrane domains. However, detailed understanding of the lateral organization of GM-rich membranes is still lacking. To gain molecular insight, we performed molecular dynamics simulations of GMs in model membranes composed of coexisting liquid-ordered and liquid-disordered domains. We found that GMs indeed have a preference to partition into the ordered domains. At higher concentrations (&gt;10 mol %), we observed a destabilizing effect of GMs on the phase coexistence. Further simulations with modified GMs show that the structure of the GM headgroup affects the phase separation, whereas the nature of the tail determines the preferential location. Together, our findings provide a molecular basis to understand the lateral organization of GM-rich membranes."
  },
  {
    "objectID": "docs/publications/entries/2019/Dadsena2019_VDAC2.html",
    "href": "docs/publications/entries/2019/Dadsena2019_VDAC2.html",
    "title": "Ceramides bind VDAC2 to trigger mitochondrial apoptosis",
    "section": "",
    "text": "Dadsena, S., Bockelmann, S., Mina, J. G., Hassan, D. G., Korneev, S., Razzera, G., … & Holthuis, J. C. (2019). Ceramides bind VDAC2 to trigger mitochondrial apoptosis. Nature Communications, 10."
  },
  {
    "objectID": "docs/publications/entries/2019/Dadsena2019_VDAC2.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Dadsena2019_VDAC2.html#citation-apa-7",
    "title": "Ceramides bind VDAC2 to trigger mitochondrial apoptosis",
    "section": "",
    "text": "Dadsena, S., Bockelmann, S., Mina, J. G., Hassan, D. G., Korneev, S., Razzera, G., … & Holthuis, J. C. (2019). Ceramides bind VDAC2 to trigger mitochondrial apoptosis. Nature Communications, 10."
  },
  {
    "objectID": "docs/publications/entries/2019/Dadsena2019_VDAC2.html#abstract",
    "href": "docs/publications/entries/2019/Dadsena2019_VDAC2.html#abstract",
    "title": "Ceramides bind VDAC2 to trigger mitochondrial apoptosis",
    "section": "Abstract",
    "text": "Abstract\nCeramides draw wide attention as tumor suppressor lipids that act directly on mitochondria to trigger apoptotic cell death. However, molecular details of the underlying mechanism are largely unknown. Using a photoactivatable ceramide probe, we here identify the voltage-dependent anion channels VDAC1 and VDAC2 as mitochondrial ceramide binding proteins. Coarse-grain molecular dynamics simulations reveal that both channels harbor a ceramide binding site on one side of the barrel wall. This site includes a membrane-buried glutamate that mediates direct contact with the ceramide head group. Substitution or chemical modification of this residue abolishes photolabeling of both channels with the ceramide probe. Unlike VDAC1 removal, loss of VDAC2 or replacing its membrane-facing glutamate with glutamine renders human colon cancer cells largely resistant to ceramide-induced apoptosis. Collectively, our data support a role of VDAC2 as direct effector of ceramide-mediated cell death, providing a molecular framework for how ceramides exert their anti-neoplastic activity."
  },
  {
    "objectID": "docs/publications/entries/2019/Koch2019_SecA.html",
    "href": "docs/publications/entries/2019/Koch2019_SecA.html",
    "title": "Two distinct anionic phospholipid-dependent events involved in SecA-mediated protein translocation",
    "section": "",
    "text": "Koch, S., Exterkate, M., López, C. A., Patro, M., Marrink, S. J., & Driessen, A. J. (2019). Two distinct anionic phospholipid-dependent events involved in SecA-mediated protein translocation. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1861(11), 183035."
  },
  {
    "objectID": "docs/publications/entries/2019/Koch2019_SecA.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Koch2019_SecA.html#citation-apa-7",
    "title": "Two distinct anionic phospholipid-dependent events involved in SecA-mediated protein translocation",
    "section": "",
    "text": "Koch, S., Exterkate, M., López, C. A., Patro, M., Marrink, S. J., & Driessen, A. J. (2019). Two distinct anionic phospholipid-dependent events involved in SecA-mediated protein translocation. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1861(11), 183035."
  },
  {
    "objectID": "docs/publications/entries/2019/Koch2019_SecA.html#abstract",
    "href": "docs/publications/entries/2019/Koch2019_SecA.html#abstract",
    "title": "Two distinct anionic phospholipid-dependent events involved in SecA-mediated protein translocation",
    "section": "Abstract",
    "text": "Abstract\nProtein translocation across the bacterial cytoplasmic membrane is an essential process catalyzed by the Sec translocase, which in its minimal form consists of the protein-conducting channel SecYEG, and the motor ATPase SecA. SecA binds via its positively charged N-terminus to membranes containing anionic phospholipids, leading to a lipid-bound intermediate. This interaction induces a conformational change in SecA, resulting in a high-affinity association with SecYEG, which initiates protein translocation. Here, we examined the effect of anionic lipids on the SecA-SecYEG interaction in more detail, and discovered a second, yet unknown, anionic lipid-dependent event that stimulates protein translocation. Based on molecular dynamics simulations we identified an anionic lipid-enriched region in vicinity of the lateral gate of SecY. Here, the anionic lipid headgroup accesses the lateral gate, thereby stabilizing the pre-open state of the channel. The simulations suggest flip-flop movement of phospholipid along the lateral gate. Electrostatic contribution of the anionic phospholipids at the lateral gate may directly stabilize positively charged residues of the signal sequence of an incoming preprotein. Such a mechanism allows for the correct positioning of the entrant peptide, thereby providing a long-sought explanation for the role of anionic lipids in signal sequence folding during protein translocation."
  },
  {
    "objectID": "docs/publications/entries/2019/Alessandri2019_Pitfalls.html",
    "href": "docs/publications/entries/2019/Alessandri2019_Pitfalls.html",
    "title": "Pitfalls of the MARTINI Model",
    "section": "",
    "text": "Alessandri, R., Souza, P. C., Thallmair, S., Melo, M. N., De Vries, A. H., & Marrink, S. J. (2019). Pitfalls of the Martini model. Journal of chemical theory and computation, 15(10), 5448-5460."
  },
  {
    "objectID": "docs/publications/entries/2019/Alessandri2019_Pitfalls.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Alessandri2019_Pitfalls.html#citation-apa-7",
    "title": "Pitfalls of the MARTINI Model",
    "section": "",
    "text": "Alessandri, R., Souza, P. C., Thallmair, S., Melo, M. N., De Vries, A. H., & Marrink, S. J. (2019). Pitfalls of the Martini model. Journal of chemical theory and computation, 15(10), 5448-5460."
  },
  {
    "objectID": "docs/publications/entries/2019/Alessandri2019_Pitfalls.html#abstract",
    "href": "docs/publications/entries/2019/Alessandri2019_Pitfalls.html#abstract",
    "title": "Pitfalls of the MARTINI Model",
    "section": "Abstract",
    "text": "Abstract\nThe computational and conceptual simplifications realized by coarse-grain (CG) models make them a ubiquitous tool in the current computational modeling landscape. Building block based CG models, such as the Martini model, possess the key advantage of allowing for a broad range of applications without the need to reparametrize the force field each time. However, there are certain inherent limitations to this approach, which we investigate in detail in this work. We first study the consequences of the absence of specific cross Lennard-Jones parameters between different particle sizes. We show that this lack may lead to artificially high free energy barriers in dimerization profiles. We then look at the effect of deviating too far from the standard bonded parameters, both in terms of solute partitioning behavior and solvent properties. Moreover, we show that too weak bonded force constants entail the risk of artificially inducing clustering, which has to be taken into account when designing elastic network models for proteins. These results have implications for the current use of the Martini CG model and provide clear directions for the reparametrization of the Martini model. Moreover, our findings are generally relevant for the parametrization of any other building block based force field."
  },
  {
    "objectID": "docs/publications/entries/2019/Piskorz2019_Graphite.html",
    "href": "docs/publications/entries/2019/Piskorz2019_Graphite.html",
    "title": "Nucleation Mechanisms of Self-Assembled Physisorbed Monolayers on Graphite",
    "section": "",
    "text": "Piskorz, T. K., Gobbo, C., Marrink, S. J., De Feyter, S., De Vries, A. H., & Van Esch, J. H. (2019). Nucleation mechanisms of self-assembled physisorbed monolayers on graphite. The Journal of Physical Chemistry C, 123(28), 17510-17520."
  },
  {
    "objectID": "docs/publications/entries/2019/Piskorz2019_Graphite.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Piskorz2019_Graphite.html#citation-apa-7",
    "title": "Nucleation Mechanisms of Self-Assembled Physisorbed Monolayers on Graphite",
    "section": "",
    "text": "Piskorz, T. K., Gobbo, C., Marrink, S. J., De Feyter, S., De Vries, A. H., & Van Esch, J. H. (2019). Nucleation mechanisms of self-assembled physisorbed monolayers on graphite. The Journal of Physical Chemistry C, 123(28), 17510-17520."
  },
  {
    "objectID": "docs/publications/entries/2019/Piskorz2019_Graphite.html#abstract",
    "href": "docs/publications/entries/2019/Piskorz2019_Graphite.html#abstract",
    "title": "Nucleation Mechanisms of Self-Assembled Physisorbed Monolayers on Graphite",
    "section": "Abstract",
    "text": "Abstract\nCoarse-grained molecular dynamics simulations are employed to obtain a detailed view of the formation of long-range ordered lamellar structures of physisorbed self-assembling long functionalized alkanes on graphite. During the self-assembly, two processes take place: Langmuir preferential adsorption and rearrangement on the surface. The rearrangement starts with nucleation, in which molecules create an ordered domain. The nucleation mechanism is temperature dependent. At lower temperature independent, small and stable nuclei seed the emergence of long-range ordered domains. In contrast, at a higher temperature, molecules adsorb on the surface, and only when a certain level of surface coverage by the adsorbent is reached, the whole structure undergoes a transition from a liquid-like structure to an ordered structure. After this step, relatively slow corrections of the structure take place by Ostwald ripening."
  },
  {
    "objectID": "docs/publications/entries/2019/Pezeshkian2019_MultiScale.html",
    "href": "docs/publications/entries/2019/Pezeshkian2019_MultiScale.html",
    "title": "A Multi-Scale Approach to Membrane Remodeling Processes",
    "section": "",
    "text": "Pezeshkian, W., König, M., Marrink, S. J., & Ipsen, J. H. (2019). A multi-scale approach to membrane remodeling processes. Frontiers in molecular biosciences, 6, 59."
  },
  {
    "objectID": "docs/publications/entries/2019/Pezeshkian2019_MultiScale.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Pezeshkian2019_MultiScale.html#citation-apa-7",
    "title": "A Multi-Scale Approach to Membrane Remodeling Processes",
    "section": "",
    "text": "Pezeshkian, W., König, M., Marrink, S. J., & Ipsen, J. H. (2019). A multi-scale approach to membrane remodeling processes. Frontiers in molecular biosciences, 6, 59."
  },
  {
    "objectID": "docs/publications/entries/2019/Pezeshkian2019_MultiScale.html#abstract",
    "href": "docs/publications/entries/2019/Pezeshkian2019_MultiScale.html#abstract",
    "title": "A Multi-Scale Approach to Membrane Remodeling Processes",
    "section": "Abstract",
    "text": "Abstract\nWe present a multi-scale simulation procedure to describe membrane-related biological processes that span over a wide range of length scales. At macroscopic length-scale, a membrane is described as a flexible thin film modeled by a dynamic triangulated surface with its spatial conformations governed by an elastic energy containing only a few model parameters. An implicit protein model allows us to include complex effects of membrane-protein interactions in the macroscopic description. The gist of this multi-scale approach is a scheme to calibrate the implicit protein model using finer scale simulation techniques e.g., all atom and coarse grain molecular dynamics. We previously used this approach and properly described the formation of membrane tubular invaginations upon binding of B-subunit of Shiga toxin. Here, we provide a perspective of our multi-scale approach, summarizing its main features and sketching possible routes for future development."
  },
  {
    "objectID": "docs/publications/entries/2019/Newe2019_ERM.html",
    "href": "docs/publications/entries/2019/Newe2019_ERM.html",
    "title": "Serine Phosphorylation of L-Selectin Regulates ERM Binding, Clustering, and Monocyte Protrusion in Transendothelial Migration",
    "section": "",
    "text": "Newe, A., Rzeniewicz, K., König, M., Schroer, C. F., Joachim, J., Rey-Gallardo, A., … & Ivetic, A. (2019). Serine phosphorylation of L-selectin regulates ERM binding, clustering, and monocyte protrusion in transendothelial migration. Frontiers in Immunology, 10, 2227."
  },
  {
    "objectID": "docs/publications/entries/2019/Newe2019_ERM.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Newe2019_ERM.html#citation-apa-7",
    "title": "Serine Phosphorylation of L-Selectin Regulates ERM Binding, Clustering, and Monocyte Protrusion in Transendothelial Migration",
    "section": "",
    "text": "Newe, A., Rzeniewicz, K., König, M., Schroer, C. F., Joachim, J., Rey-Gallardo, A., … & Ivetic, A. (2019). Serine phosphorylation of L-selectin regulates ERM binding, clustering, and monocyte protrusion in transendothelial migration. Frontiers in Immunology, 10, 2227."
  },
  {
    "objectID": "docs/publications/entries/2019/Newe2019_ERM.html#abstract",
    "href": "docs/publications/entries/2019/Newe2019_ERM.html#abstract",
    "title": "Serine Phosphorylation of L-Selectin Regulates ERM Binding, Clustering, and Monocyte Protrusion in Transendothelial Migration",
    "section": "Abstract",
    "text": "Abstract\nThe migration of circulating leukocytes toward damaged tissue is absolutely fundamental to the inflammatory response, and transendothelial migration (TEM) describes the first cellular barrier that is breached in this process. Human CD14+ inflammatory monocytes express L-selectin, bestowing a non-canonical role in invasion during TEM. In vivo evidence supports a role for L-selectin in regulating TEM and chemotaxis, but the intracellular mechanism is poorly understood. The ezrin-radixin-moesin (ERM) proteins anchor transmembrane proteins to the cortical actin-based cytoskeleton and additionally act as signaling adaptors. During TEM, the L-selectin tail within transmigrating pseudopods interacts first with ezrin to transduce signals for protrusion, followed by moesin to drive ectodomain shedding of L-selectin to limit protrusion. Collectively, interaction of L-selectin with ezrin and moesin fine-tunes monocyte protrusive behavior in TEM. Using FLIM/FRET approaches, we show that ERM binding is absolutely required for outside-in L-selectin clustering. The cytoplasmic tail of human L-selectin contains two serine (S) residues at positions 364 and 367, and here we show that they play divergent roles in regulating ERM binding. Phospho-S364 blocks direct interaction with ERM, whereas molecular modeling suggests phospho-S367 likely drives desorption of the L-selectin tail from the inner leaflet of the plasma membrane to potentiate ERM binding. Serine-to-alanine mutagenesis of S367, but not S364, significantly reduced monocyte protrusive behavior in TEM under flow conditions. Our data propose a model whereby L-selectin tail desorption from the inner leaflet of the plasma membrane and ERM binding are two separable steps that collectively regulate protrusive behavior in TEM."
  },
  {
    "objectID": "docs/publications/entries/2015/Qi2015_CHARMMGUI.html",
    "href": "docs/publications/entries/2015/Qi2015_CHARMMGUI.html",
    "title": "CHARMM-GUI Martini Maker for Coarse-Grained Simulations with the Martini Force Field",
    "section": "",
    "text": "Qi, Y., Ingólfsson, H. I., Cheng, X., Lee, J., Marrink, S. J., & Im, W. (2015). CHARMM-GUI martini maker for coarse-grained simulations with the martini force field. Journal of chemical theory and computation, 11(9), 4486-4494."
  },
  {
    "objectID": "docs/publications/entries/2015/Qi2015_CHARMMGUI.html#citation-apa-7",
    "href": "docs/publications/entries/2015/Qi2015_CHARMMGUI.html#citation-apa-7",
    "title": "CHARMM-GUI Martini Maker for Coarse-Grained Simulations with the Martini Force Field",
    "section": "",
    "text": "Qi, Y., Ingólfsson, H. I., Cheng, X., Lee, J., Marrink, S. J., & Im, W. (2015). CHARMM-GUI martini maker for coarse-grained simulations with the martini force field. Journal of chemical theory and computation, 11(9), 4486-4494."
  },
  {
    "objectID": "docs/publications/entries/2015/Qi2015_CHARMMGUI.html#abstract",
    "href": "docs/publications/entries/2015/Qi2015_CHARMMGUI.html#abstract",
    "title": "CHARMM-GUI Martini Maker for Coarse-Grained Simulations with the Martini Force Field",
    "section": "Abstract",
    "text": "Abstract\nCoarse-grained simulations are widely used to study large biological systems. Nonetheless, building such simulation systems becomes nontrivial, especially when membranes with various lipid types are involved. Taking advantage of the frameworks in all-atom CHARMM-GUI modules, we have developed CHARMM-GUI Martini Maker for building solution, micelle, bilayer, and vesicle systems as well as systems with randomly distributed lipids using the Martini force field. Martini Maker supports 82 lipid types and different flavors of the Martini force field, including polar and nonpolar Martini, Dry Martini, and ElNeDyn (an elastic network model for proteins). The qualities of the systems generated by Martini Maker are validated by simulations of various examples involving proteins and lipids. We expect Martini Maker to be a useful tool for modeling large, complicated biomolecular systems in a user-friendly way."
  },
  {
    "objectID": "docs/publications/entries/2015/van-Eerden2015_Thylakoid.html",
    "href": "docs/publications/entries/2015/van-Eerden2015_Thylakoid.html",
    "title": "Characterization of thylakoid lipid membranes from cyanobacteria and higher plants by molecular dynamics simulations",
    "section": "",
    "text": "van Eerden, F. J., de Jong, D. H., de Vries, A. H., Wassenaar, T. A., & Marrink, S. J. (2015). Characterization of thylakoid lipid membranes from cyanobacteria and higher plants by molecular dynamics simulations. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1848(6), 1319-1330."
  },
  {
    "objectID": "docs/publications/entries/2015/van-Eerden2015_Thylakoid.html#citation-apa-7",
    "href": "docs/publications/entries/2015/van-Eerden2015_Thylakoid.html#citation-apa-7",
    "title": "Characterization of thylakoid lipid membranes from cyanobacteria and higher plants by molecular dynamics simulations",
    "section": "",
    "text": "van Eerden, F. J., de Jong, D. H., de Vries, A. H., Wassenaar, T. A., & Marrink, S. J. (2015). Characterization of thylakoid lipid membranes from cyanobacteria and higher plants by molecular dynamics simulations. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1848(6), 1319-1330."
  },
  {
    "objectID": "docs/publications/entries/2015/van-Eerden2015_Thylakoid.html#abstract",
    "href": "docs/publications/entries/2015/van-Eerden2015_Thylakoid.html#abstract",
    "title": "Characterization of thylakoid lipid membranes from cyanobacteria and higher plants by molecular dynamics simulations",
    "section": "Abstract",
    "text": "Abstract\nThe thylakoid membrane is mainly composed of non-common lipids, so called galactolipids. Despite the importance of these lipids for the function of the photosynthetic reaction centers, the molecular organization of these membranes is largely unexplored. Here we use multiscale molecular dynamics simulations to characterize the thylakoid membrane of both cyanobacteria and higher plants. We consider mixtures of up to five different galactolipids plus phosphatidylglycerol to represent these complex membranes. We find that the different lipids generally mix well, although nanoscale heterogeneities are observed especially in case of the plant membrane. The fluidity of the cyanobacterial membrane is markedly reduced compared to the plant membrane, even considering elevated temperatures at which thermophilic cyanobacteria are found. We also find that the plant membrane more readily undergoes a phase transformation to an inverted hexagonal phase. We furthermore characterized the conformation and dynamics of the cofactors plastoquinone and plastoquinol, revealing of the fast flip-flop rates for the non-reduced form. Together, our results provide a molecular view on the dynamical organization of the thylakoid membrane."
  },
  {
    "objectID": "docs/publications/entries/2015/Arnarez2015_DryMartini.html",
    "href": "docs/publications/entries/2015/Arnarez2015_DryMartini.html",
    "title": "Dry Martini, a Coarse-Grained Force Field for Lipid Membrane Simulations with Implicit Solvent",
    "section": "",
    "text": "Arnarez, C., Uusitalo, J. J., Masman, M. F., Ingólfsson, H. I., De Jong, D. H., Melo, M. N., … & Marrink, S. J. (2015). Dry Martini, a coarse-grained force field for lipid membrane simulations with implicit solvent. Journal of chemical theory and computation, 11(1), 260-275."
  },
  {
    "objectID": "docs/publications/entries/2015/Arnarez2015_DryMartini.html#citation-apa-7",
    "href": "docs/publications/entries/2015/Arnarez2015_DryMartini.html#citation-apa-7",
    "title": "Dry Martini, a Coarse-Grained Force Field for Lipid Membrane Simulations with Implicit Solvent",
    "section": "",
    "text": "Arnarez, C., Uusitalo, J. J., Masman, M. F., Ingólfsson, H. I., De Jong, D. H., Melo, M. N., … & Marrink, S. J. (2015). Dry Martini, a coarse-grained force field for lipid membrane simulations with implicit solvent. Journal of chemical theory and computation, 11(1), 260-275."
  },
  {
    "objectID": "docs/publications/entries/2015/Arnarez2015_DryMartini.html#abstract",
    "href": "docs/publications/entries/2015/Arnarez2015_DryMartini.html#abstract",
    "title": "Dry Martini, a Coarse-Grained Force Field for Lipid Membrane Simulations with Implicit Solvent",
    "section": "Abstract",
    "text": "Abstract\nCoarse-grained (CG) models allow simulation of larger systems for longer times by decreasing the number of degrees of freedom compared with all-atom models. Here we introduce an implicit-solvent version of the popular CG Martini model, nicknamed “Dry” Martini. To account for the omitted solvent degrees of freedom, the nonbonded interaction matrix underlying the Martini force field was reparametrized. The Dry Martini force field reproduces relatively well a variety of lipid membrane properties such as area per lipid, bilayer thickness, bending modulus, and coexistence of liquid-ordered and disordered domains. Furthermore, we show that the new model can be applied to study membrane fusion and tether formation, with results similar to those of the standard Martini model. Membrane proteins can also be included, but less quantitative results are obtained. The absence of water in Dry Martini leads to a significant speedup for large systems, opening the way to the study of complex multicomponent membranes containing millions of lipids."
  },
  {
    "objectID": "docs/publications/entries/2015/Wassenaar2015_DAFT.html",
    "href": "docs/publications/entries/2015/Wassenaar2015_DAFT.html",
    "title": "High-Throughput Simulations of Dimer and Trimer Assembly of Membrane Proteins. The DAFT Approach",
    "section": "",
    "text": "Wassenaar, T. A., Pluhackova, K., Moussatova, A., Sengupta, D., Marrink, S. J., Tieleman, D. P., & Böckmann, R. A. (2015). High-throughput simulations of dimer and trimer assembly of membrane proteins. The DAFT approach. Journal of chemical theory and computation, 11(5), 2278-2291."
  },
  {
    "objectID": "docs/publications/entries/2015/Wassenaar2015_DAFT.html#citation-apa-7",
    "href": "docs/publications/entries/2015/Wassenaar2015_DAFT.html#citation-apa-7",
    "title": "High-Throughput Simulations of Dimer and Trimer Assembly of Membrane Proteins. The DAFT Approach",
    "section": "",
    "text": "Wassenaar, T. A., Pluhackova, K., Moussatova, A., Sengupta, D., Marrink, S. J., Tieleman, D. P., & Böckmann, R. A. (2015). High-throughput simulations of dimer and trimer assembly of membrane proteins. The DAFT approach. Journal of chemical theory and computation, 11(5), 2278-2291."
  },
  {
    "objectID": "docs/publications/entries/2015/Wassenaar2015_DAFT.html#abstract",
    "href": "docs/publications/entries/2015/Wassenaar2015_DAFT.html#abstract",
    "title": "High-Throughput Simulations of Dimer and Trimer Assembly of Membrane Proteins. The DAFT Approach",
    "section": "Abstract",
    "text": "Abstract\nInteractions between membrane proteins are of great biological significance and are consequently an important target for pharmacological intervention. Unfortunately, it is still difficult to obtain detailed views on such interactions, both experimentally, where the environment hampers atomic resolution investigation, and computationally, where the time and length scales are problematic. Coarse grain simulations have alleviated the later issue, but the slow movement through the bilayer, coupled to the long life times of nonoptimal dimers, still stands in the way of characterizing binding distributions. In this work, we present DAFT, a Docking Assay For Transmembrane components, developed to identify preferred binding orientations. The method builds on a program developed recently for generating custom membranes, called insane (INSert membrANE). The key feature of DAFT is the setup of starting structures, for which optimal periodic boundary conditions are devised. The purpose of DAFT is to perform a large number of simulations with different components, starting from unbiased noninteracting initial states, such that the simulations evolve collectively, in a manner reflecting the underlying energy landscape of interaction. The implementation and characteristic features of DAFT are explained, and the efficacy and relaxation properties of the method are explored for oligomerization of glycophorin A dimers, polyleucine dimers and trimers, MS1 trimers, and rhodopsin dimers. The results suggest that, for simple helices, such as GpA and polyleucine, in POPC/DOPC membranes series of 500 simulations of 500 ns each allow characterization of the helix dimer orientations and allow comparing associating and nonassociating components. However, the results also demonstrate that short simulations may suffer significantly from nonconvergence of the ensemble and that using too few simulations may obscure or distort features of the interaction distribution. For trimers, simulation times exceeding several microseconds appear needed, due to the increased complexity. Similarly, characterization of larger proteins, such as rhodopsin, takes longer time scales due to the slower diffusion and the increased complexity of binding interfaces. DAFT and its auxiliary programs have been made available from http://cgmartini.nl/, together with a working example."
  },
  {
    "objectID": "docs/publications/entries/2015/Uusitalo2015_DNA.html",
    "href": "docs/publications/entries/2015/Uusitalo2015_DNA.html",
    "title": "Martini Coarse-Grained Force Field: Extension to DNA",
    "section": "",
    "text": "Uusitalo, J. J., Ingólfsson, H. I., Akhshi, P., Tieleman, D. P., & Marrink, S. J. (2015). Martini coarse-grained force field: extension to DNA. Journal of chemical theory and computation, 11(8), 3932-3945."
  },
  {
    "objectID": "docs/publications/entries/2015/Uusitalo2015_DNA.html#citation-apa-7",
    "href": "docs/publications/entries/2015/Uusitalo2015_DNA.html#citation-apa-7",
    "title": "Martini Coarse-Grained Force Field: Extension to DNA",
    "section": "",
    "text": "Uusitalo, J. J., Ingólfsson, H. I., Akhshi, P., Tieleman, D. P., & Marrink, S. J. (2015). Martini coarse-grained force field: extension to DNA. Journal of chemical theory and computation, 11(8), 3932-3945."
  },
  {
    "objectID": "docs/publications/entries/2015/Uusitalo2015_DNA.html#abstract",
    "href": "docs/publications/entries/2015/Uusitalo2015_DNA.html#abstract",
    "title": "Martini Coarse-Grained Force Field: Extension to DNA",
    "section": "Abstract",
    "text": "Abstract\nWe systematically parameterized a coarse-grained (CG) model for DNA that is compatible with the Martini force field. The model maps each nucleotide into six to seven CG beads and is parameterized following the Martini philosophy. The CG nonbonded interactions are based on partitioning of the nucleobases between polar and nonpolar solvents as well as base–base potential of mean force calculations. The bonded interactions are fit to single-stranded DNA (ssDNA) atomistic simulations and an elastic network is used to retain double-stranded DNA (dsDNA) and other specific DNA conformations. We present the implementation of the Martini DNA model and demonstrate the properties of individual bases, ssDNA as well as dsDNA, and DNA–protein complexes. The model opens up large-scale simulations of DNA interacting with a wide range of other (bio)molecules that are available within the Martini framework."
  },
  {
    "objectID": "docs/publications/entries/2012/Bulacu2012_Bolalipid.html",
    "href": "docs/publications/entries/2012/Bulacu2012_Bolalipid.html",
    "title": "In Silico Design of Robust Bolalipid Membranes",
    "section": "",
    "text": "Bulacu, M., Périole, X., & Marrink, S. J. (2012). In silico design of robust bolalipid membranes. Biomacromolecules, 13(1), 196-205."
  },
  {
    "objectID": "docs/publications/entries/2012/Bulacu2012_Bolalipid.html#citation-apa-7",
    "href": "docs/publications/entries/2012/Bulacu2012_Bolalipid.html#citation-apa-7",
    "title": "In Silico Design of Robust Bolalipid Membranes",
    "section": "",
    "text": "Bulacu, M., Périole, X., & Marrink, S. J. (2012). In silico design of robust bolalipid membranes. Biomacromolecules, 13(1), 196-205."
  },
  {
    "objectID": "docs/publications/entries/2012/Bulacu2012_Bolalipid.html#abstract",
    "href": "docs/publications/entries/2012/Bulacu2012_Bolalipid.html#abstract",
    "title": "In Silico Design of Robust Bolalipid Membranes",
    "section": "Abstract",
    "text": "Abstract\nThe robustness of microorganisms used in industrial fermentations is essential for the efficiency and yield of the production process. A viable tool to increase the robustness is through engineering of the cell membrane and especially by incorporating lipids from species that survive under harsh conditions. Bolalipids are tetraether lipids found in Archaea bacteria, conferring stability to these bacteria by spanning across the cytoplasmic membrane. Here we report on in silico experiments to characterize and design optimal bolalipid membranes in terms of robustness. We use coarse-grained molecular dynamics simulations to study the structure, dynamics, and stability of membranes composed of model bolalipids, consisting of two dipalmitoylphosphatidylcholine (DPPC) lipids covalently linked together at either one or both tail ends. We find that bolalipid membranes differ substantially from a normal lipid membrane, with an increase in thickness and tail order, an increase in the gel-to-liquid crystalline phase transition temperature, and a decrease in diffusivity of the lipids. By changing the flexibility of the linker between the lipid tails, we furthermore show how the membrane properties can be controlled. A stiffer linker increases the ratio between spanning and looping conformations, rendering the membrane more rigid. Our study may help in designing artificial membranes, with tunable properties, able to function under extreme conditions. As an example, we show that incorporation of bolalipids makes the membrane more tolerant toward butanol."
  },
  {
    "objectID": "docs/publications/entries/2012/Domański2021_transmembrane.html",
    "href": "docs/publications/entries/2012/Domański2021_transmembrane.html",
    "title": "Transmembrane helices can induce domain formation in crowded model membranes",
    "section": "",
    "text": "Domański, J., Marrink, S. J., & Schäfer, L. V. (2012). Transmembrane helices can induce domain formation in crowded model membranes. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1818(4), 984-994."
  },
  {
    "objectID": "docs/publications/entries/2012/Domański2021_transmembrane.html#citation-apa-7",
    "href": "docs/publications/entries/2012/Domański2021_transmembrane.html#citation-apa-7",
    "title": "Transmembrane helices can induce domain formation in crowded model membranes",
    "section": "",
    "text": "Domański, J., Marrink, S. J., & Schäfer, L. V. (2012). Transmembrane helices can induce domain formation in crowded model membranes. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1818(4), 984-994."
  },
  {
    "objectID": "docs/publications/entries/2012/Domański2021_transmembrane.html#abstract",
    "href": "docs/publications/entries/2012/Domański2021_transmembrane.html#abstract",
    "title": "Transmembrane helices can induce domain formation in crowded model membranes",
    "section": "Abstract",
    "text": "Abstract\nWe studied compositionally heterogeneous multi-component model membranes comprised of saturated lipids, unsaturated lipids, cholesterol, and α-helical TM protein models using coarse-grained molecular dynamics simulations. Reducing the mismatch between the length of the saturated and unsaturated lipid tails reduced the driving force for segregation into liquid-ordered (lo) and liquid-disordered (ld) lipid domains. Cholesterol depletion had a similar effect, and binary lipid mixtures without cholesterol did not undergo large-scale phase separation under the simulation conditions. The phase-separating ternary dipalmitoyl-phosphatidylcholine (DPPC)/dilinoleoyl-PC (DLiPC)/cholesterol bilayer was found to segregate into lo and ld domains also in the presence of a high concentration of ΤΜ helices. The ld domain was highly crowded with TM helices (protein-to-lipid ratio ~ 1:5), slowing down lateral diffusion by a factor of 5–10 as compared to the dilute case, with anomalous (sub)-diffusion on the μs time scale. The membrane with the less strongly unsaturated palmitoyl-linoleoyl-PC instead of DLiPC, which in the absence of TM α-helices less strongly deviated from ideal mixing, could be brought closer to a miscibility critical point by introducing a high concentration of TM helices. Finally, the 7-TM protein bacteriorhodopsin was found to partition into the ld domains irrespective of hydrophobic matching. These results show that it is possible to directly study the lateral reorganization of lipids and proteins in compositionally heterogeneous and crowded model biomembranes with coarse-grained molecular dynamics simulations, a step toward simulations of realistic, compositionally complex cellular membranes. This article is part of a Special Issue entitled: Protein Folding in Membranes."
  },
  {
    "objectID": "docs/publications/entries/2012/de-Jong2012_Dimerization.html",
    "href": "docs/publications/entries/2012/de-Jong2012_Dimerization.html",
    "title": "Dimerization of Amino Acid Side Chains: Lessons from the Comparison of Different Force Fields",
    "section": "",
    "text": "de Jong, D. H., Periole, X., & Marrink, S. J. (2012). Dimerization of amino acid side chains: lessons from the comparison of different force fields. Journal of Chemical Theory and Computation, 8(3), 1003-1014."
  },
  {
    "objectID": "docs/publications/entries/2012/de-Jong2012_Dimerization.html#citation-apa-7",
    "href": "docs/publications/entries/2012/de-Jong2012_Dimerization.html#citation-apa-7",
    "title": "Dimerization of Amino Acid Side Chains: Lessons from the Comparison of Different Force Fields",
    "section": "",
    "text": "de Jong, D. H., Periole, X., & Marrink, S. J. (2012). Dimerization of amino acid side chains: lessons from the comparison of different force fields. Journal of Chemical Theory and Computation, 8(3), 1003-1014."
  },
  {
    "objectID": "docs/publications/entries/2012/de-Jong2012_Dimerization.html#abstract",
    "href": "docs/publications/entries/2012/de-Jong2012_Dimerization.html#abstract",
    "title": "Dimerization of Amino Acid Side Chains: Lessons from the Comparison of Different Force Fields",
    "section": "Abstract",
    "text": "Abstract\nThe interactions between amino acid side chains govern protein secondary, tertiary, and quaternary structure formation. For molecular modeling approaches to be able to realistically describe these phenomena, the underlying force fields have to represent these interactions as accurately as possible. Here, we compare the side chain–side chain interactions for a number of commonly used force fields, namely the all-atom OPLS, the united-atom GROMOS, and the coarse-grain MARTINI force field. We do so by calculating the dimerization free energies between selected pairs of side chains and structural characterization of their binding modes. To mimic both polar and nonpolar environments, the simulations are performed in water, n-octanol, and decane. In general, reasonable correlations are found between all three force fields, with deviations on the order of 1 kT in aqueous solvent. In apolar solvent, however, significantly larger differences are found, especially for charged amino acid pairs between the OPLS and GROMOS force fields, and for polar interactions in the MARTINI force field in comparison to the higher resolution models. Interestingly, even in cases where the dimerization free energies are similar, the binding mode may differ substantially between the force fields. This was found to be especially the case for aromatic residues. In addition to the inter-force-field comparison, we compared the various force fields to a knowledge-based potential. The two independent approaches show good correlation in aqueous solvent with an exception of aromatic residues for which the interaction strength is lower in the knowledge-based potentials."
  },
  {
    "objectID": "docs/publications/entries/2012/Baoukina2012_Tether.html",
    "href": "docs/publications/entries/2012/Baoukina2012_Tether.html",
    "title": "Molecular Structure of Membrane Tethers",
    "section": "",
    "text": "Baoukina, S., Marrink, S. J., & Tieleman, D. P. (2012). Molecular structure of membrane tethers. Biophysical journal, 102(8), 1866-1871."
  },
  {
    "objectID": "docs/publications/entries/2012/Baoukina2012_Tether.html#citation-apa-7",
    "href": "docs/publications/entries/2012/Baoukina2012_Tether.html#citation-apa-7",
    "title": "Molecular Structure of Membrane Tethers",
    "section": "",
    "text": "Baoukina, S., Marrink, S. J., & Tieleman, D. P. (2012). Molecular structure of membrane tethers. Biophysical journal, 102(8), 1866-1871."
  },
  {
    "objectID": "docs/publications/entries/2012/Baoukina2012_Tether.html#abstract",
    "href": "docs/publications/entries/2012/Baoukina2012_Tether.html#abstract",
    "title": "Molecular Structure of Membrane Tethers",
    "section": "Abstract",
    "text": "Abstract\nMembrane tethers are nanotubes formed by a lipid bilayer. They play important functional roles in cell biology and provide an experimental window on lipid properties. Tethers have been studied extensively in experiments and described by theoretical models, but their molecular structure remains unknown due to their small diameters and dynamic nature. We used molecular dynamics simulations to obtain molecular-level insight into tether formation. Tethers were pulled from single-component lipid bilayers by application of an external force to a lipid patch along the bilayer normal or by lateral compression of a confined bilayer. Tether development under external force proceeded by viscoelastic protrusion followed by viscous lipid flow. Weak forces below a threshold value produced only a protrusion. Larger forces led to a crossover to tether elongation, which was linear at a constant force. Under lateral compression, tethers formed from undulations of unrestrained bilayer area. We characterized in detail the tether structure and its formation process, and obtained the material properties of the membrane. To our knowledge, these results provide the first molecular view of membrane tethers."
  },
  {
    "objectID": "docs/publications/entries/2013/Hu2013_GuassianCurvature.html",
    "href": "docs/publications/entries/2013/Hu2013_GuassianCurvature.html",
    "title": "Gaussian curvature elasticity determined from global shape transformations and local stress distributions: a comparative study using the MARTINI model",
    "section": "",
    "text": "Hu, M., de Jong, D. H., Marrink, S. J., & Deserno, M. (2013). Gaussian curvature elasticity determined from global shape transformations and local stress distributions: a comparative study using the MARTINI model. Faraday discussions, 161, 365-382."
  },
  {
    "objectID": "docs/publications/entries/2013/Hu2013_GuassianCurvature.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Hu2013_GuassianCurvature.html#citation-apa-7",
    "title": "Gaussian curvature elasticity determined from global shape transformations and local stress distributions: a comparative study using the MARTINI model",
    "section": "",
    "text": "Hu, M., de Jong, D. H., Marrink, S. J., & Deserno, M. (2013). Gaussian curvature elasticity determined from global shape transformations and local stress distributions: a comparative study using the MARTINI model. Faraday discussions, 161, 365-382."
  },
  {
    "objectID": "docs/publications/entries/2013/Hu2013_GuassianCurvature.html#abstract",
    "href": "docs/publications/entries/2013/Hu2013_GuassianCurvature.html#abstract",
    "title": "Gaussian curvature elasticity determined from global shape transformations and local stress distributions: a comparative study using the MARTINI model",
    "section": "Abstract",
    "text": "Abstract\nWe calculate the Gaussian curvature modulus [small kappa, Greek, macron] of a systematically coarse-grained (CG) one-component lipid membrane by applying the method recently proposed by Hu et al. [Biophys. J., 2012, 102, 1403] to the MARTINI representation of 1,2-dimyristoyl-sn-glycero-3-phosphocholine (DMPC). We find the value [small kappa, Greek, macron]/κ = −1.04 ± 0.03 for the elastic ratio between the Gaussian and the mean curvature modulus and deduce [small kappa, Greek, macron]m/κm ≈ −0.98 ± 0.09 for the monolayer elastic ratio, where the latter is based on plausible assumptions for the distance z0 of the monolayer neutral surface from the bilayer midplane and the spontaneous lipid curvature K0m. By also analyzing the lateral stress profile σ0(z) of our system, two other lipid types and pertinent data from the literature, we show that determining K0m and [small kappa, Greek, macron] through the first and second moment of σ0(z) gives rise to physically implausible values for these observables. This discrepancy, which we previously observed for a much simpler CG model, suggests that the moment conditions derived from simple continuum assumptions miss the effect of physically important correlations in the lipid bilayer."
  },
  {
    "objectID": "docs/publications/entries/2013/Arnarez2013_CardiolipinProton.html",
    "href": "docs/publications/entries/2013/Arnarez2013_CardiolipinProton.html",
    "title": "Identification of cardiolipin binding sites on cytochrome c oxidase at the entrance of proton channels",
    "section": "",
    "text": "Arnarez, C., Marrink, S. J., & Periole, X. (2013). Identification of cardiolipin binding sites on cytochrome c oxidase at the entrance of proton channels. Scientific reports, 3(1), 1263."
  },
  {
    "objectID": "docs/publications/entries/2013/Arnarez2013_CardiolipinProton.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Arnarez2013_CardiolipinProton.html#citation-apa-7",
    "title": "Identification of cardiolipin binding sites on cytochrome c oxidase at the entrance of proton channels",
    "section": "",
    "text": "Arnarez, C., Marrink, S. J., & Periole, X. (2013). Identification of cardiolipin binding sites on cytochrome c oxidase at the entrance of proton channels. Scientific reports, 3(1), 1263."
  },
  {
    "objectID": "docs/publications/entries/2013/Arnarez2013_CardiolipinProton.html#abstract",
    "href": "docs/publications/entries/2013/Arnarez2013_CardiolipinProton.html#abstract",
    "title": "Identification of cardiolipin binding sites on cytochrome c oxidase at the entrance of proton channels",
    "section": "Abstract",
    "text": "Abstract\nThe respiratory chain or oxidative phosphorylation system (OxPhos) generates most of the chemical energy (ATP) used by our cells. The cytochrome c oxidase (CcO) is one of three protein complexes of OxPhos building up a proton gradient across the inner mitochondrial membrane, which is ultimately used by the ATP synthase to produce ATP. We present molecular dynamic simulations of CcO in a mimic of the mitochondrial membrane and identify precise binding sites of cardiolipin (CL, signature phospholipid of mitochondria) on the protein surface. Two of these CL binding sites reveal pathways linking CLs to the entrance of the D and H proton channels across CcO. CLs being able to carry protons our results strongly support an involvement of CLs in the proton delivery machinery to CcO. The ubiquitous nature of CL interactions with the components of the OxPhos suggests that this delivery mechanism might extend to the other respiratory complexes."
  },
  {
    "objectID": "docs/publications/entries/2013/de-Jong2013_Domains.html",
    "href": "docs/publications/entries/2013/de-Jong2013_Domains.html",
    "title": "Molecular view on protein sorting into liquid-ordered membrane domains mediated by gangliosides and lipid anchors",
    "section": "",
    "text": "de Jong, D. H., Lopez, C. A., & Marrink, S. J. (2013). Molecular view on protein sorting into liquid-ordered membrane domains mediated by gangliosides and lipid anchors. Faraday discussions, 161, 347-363."
  },
  {
    "objectID": "docs/publications/entries/2013/de-Jong2013_Domains.html#citation-apa-7",
    "href": "docs/publications/entries/2013/de-Jong2013_Domains.html#citation-apa-7",
    "title": "Molecular view on protein sorting into liquid-ordered membrane domains mediated by gangliosides and lipid anchors",
    "section": "",
    "text": "de Jong, D. H., Lopez, C. A., & Marrink, S. J. (2013). Molecular view on protein sorting into liquid-ordered membrane domains mediated by gangliosides and lipid anchors. Faraday discussions, 161, 347-363."
  },
  {
    "objectID": "docs/publications/entries/2013/de-Jong2013_Domains.html#abstract",
    "href": "docs/publications/entries/2013/de-Jong2013_Domains.html#abstract",
    "title": "Molecular view on protein sorting into liquid-ordered membrane domains mediated by gangliosides and lipid anchors",
    "section": "Abstract",
    "text": "Abstract\nWe present results from coarse grain molecular dynamics simulations of mixed model membranes consisting of saturated and unsaturated lipids together with cholesterol, in which lipid-anchored membrane proteins are embedded. The membrane proteins studied are the peripherally bound H-Ras, N-Ras, and Hedgehog, and the transmembrane peptides WALP and LAT. We provide a molecular view on how the presence and nature of these lipid anchors affects partitioning of the proteins between liquid-ordered and liquid-disordered domains. In addition, we probed the role of the ganglioside lipid GM1 on the protein sorting, showing formation of GM1-protein nano-domains that act as shuttles between the differently ordered membrane regions."
  },
  {
    "objectID": "docs/publications/entries/2013/Smirnova2013_Interbilayer.html",
    "href": "docs/publications/entries/2013/Smirnova2013_Interbilayer.html",
    "title": "Interbilayer repulsion forces between tension-free lipid bilayers from simulation",
    "section": "",
    "text": "Smirnova, Y. G., Aeffner, S., Risselada, H. J., Salditt, T., Marrink, S. J., Müller, M., & Knecht, V. (2013). Interbilayer repulsion forces between tension-free lipid bilayers from simulation. Soft Matter, 9(45), 10705-10718."
  },
  {
    "objectID": "docs/publications/entries/2013/Smirnova2013_Interbilayer.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Smirnova2013_Interbilayer.html#citation-apa-7",
    "title": "Interbilayer repulsion forces between tension-free lipid bilayers from simulation",
    "section": "",
    "text": "Smirnova, Y. G., Aeffner, S., Risselada, H. J., Salditt, T., Marrink, S. J., Müller, M., & Knecht, V. (2013). Interbilayer repulsion forces between tension-free lipid bilayers from simulation. Soft Matter, 9(45), 10705-10718."
  },
  {
    "objectID": "docs/publications/entries/2013/Smirnova2013_Interbilayer.html#abstract",
    "href": "docs/publications/entries/2013/Smirnova2013_Interbilayer.html#abstract",
    "title": "Interbilayer repulsion forces between tension-free lipid bilayers from simulation",
    "section": "Abstract",
    "text": "Abstract\nHere we report studies on biologically important intermembrane repulsion forces using molecular dynamics (MD) simulations and experimental (osmotic stress) investigations of repulsion forces between 1-palmitoyl-2-oleyl-sn-glycero-3-phosphocholine bilayers. We show that the repulsion between tension-free membranes can be determined from MD simulations by either (i) simulating membrane stacks under different hydration conditions (unrestrained setup) and monitoring the change in the area per lipid upon dehydration or (ii) simulating two single punctured membranes immersed in a water reservoir and controlling the center-of-mass distance between the bilayers using an external potential (umbrella sampling setup). Despite the coarse-grained nature of the (MARTINI) model employed, the disjoining pressure profiles obtained from the simulations are in good agreement with our experiments. Remarkably, the two setups behave very differently in terms of membrane structure, as explained by considerations using elasticity theory, and the balance of interactions. In the unrestrained setup, dehydration decreases the area per lipid and lipid entropy. Dehydration in the umbrella sampling setup, in contrast, leads to an increase in area per lipid and lipid entropy. Hence, in the latter case, entropic effects from protrusion and zippering forces appear to be overcompensated by the entropy gain due to the disorder emerging from the expansion of the bilayers. The balance of interactions involves near cancellation of large opposing terms, for which also intramembrane and water–water interactions are important, and which appears to be largely a consequence, rather than the cause, of the intermembrane repulsion. Hence, care must be taken when drawing conclusions on the origin of intermembrane repulsion from thermodynamic analyses."
  },
  {
    "objectID": "docs/publications/entries/2013/De-Jong2013_ImprovedParameters.html",
    "href": "docs/publications/entries/2013/De-Jong2013_ImprovedParameters.html",
    "title": "Improved Parameters for the Martini Coarse-Grained Protein Force Field",
    "section": "",
    "text": "De Jong, D. H., Singh, G., Bennett, W. D., Arnarez, C., Wassenaar, T. A., Schafer, L. V., … & Marrink, S. J. (2013). Improved parameters for the martini coarse-grained protein force field. Journal of chemical theory and computation, 9(1), 687-697."
  },
  {
    "objectID": "docs/publications/entries/2013/De-Jong2013_ImprovedParameters.html#citation-apa-7",
    "href": "docs/publications/entries/2013/De-Jong2013_ImprovedParameters.html#citation-apa-7",
    "title": "Improved Parameters for the Martini Coarse-Grained Protein Force Field",
    "section": "",
    "text": "De Jong, D. H., Singh, G., Bennett, W. D., Arnarez, C., Wassenaar, T. A., Schafer, L. V., … & Marrink, S. J. (2013). Improved parameters for the martini coarse-grained protein force field. Journal of chemical theory and computation, 9(1), 687-697."
  },
  {
    "objectID": "docs/publications/entries/2013/De-Jong2013_ImprovedParameters.html#abstract",
    "href": "docs/publications/entries/2013/De-Jong2013_ImprovedParameters.html#abstract",
    "title": "Improved Parameters for the Martini Coarse-Grained Protein Force Field",
    "section": "Abstract",
    "text": "Abstract\nThe Martini coarse-grained force field has been successfully used for simulating a wide range of (bio)molecular systems. Recent progress in our ability to test the model against fully atomistic force fields, however, has revealed some shortcomings. Most notable, phenylalanine and proline were too hydrophobic, and dimers formed by polar residues in apolar solvents did not bind strongly enough. Here, we reparametrize these residues either through reassignment of particle types or by introducing embedded charges. The new parameters are tested with respect to partitioning across a lipid bilayer, membrane binding of Wimley–White peptides, and dimerization free energy in solvents of different polarity. In addition, we improve some of the bonded terms in the Martini protein force field that lead to a more realistic length of α-helices and to improved numerical stability for polyalanine and glycine repeats. The new parameter set is denoted Martini version 2.2."
  },
  {
    "objectID": "docs/publications/entries/2013/Marrink2013_Perspective.html",
    "href": "docs/publications/entries/2013/Marrink2013_Perspective.html",
    "title": "Perspective on the Martini model",
    "section": "",
    "text": "Marrink, S. J., & Tieleman, D. P. (2013). Perspective on the Martini model. Chemical Society Reviews, 42(16), 6801-6822."
  },
  {
    "objectID": "docs/publications/entries/2013/Marrink2013_Perspective.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Marrink2013_Perspective.html#citation-apa-7",
    "title": "Perspective on the Martini model",
    "section": "",
    "text": "Marrink, S. J., & Tieleman, D. P. (2013). Perspective on the Martini model. Chemical Society Reviews, 42(16), 6801-6822."
  },
  {
    "objectID": "docs/publications/entries/2013/Marrink2013_Perspective.html#abstract",
    "href": "docs/publications/entries/2013/Marrink2013_Perspective.html#abstract",
    "title": "Perspective on the Martini model",
    "section": "Abstract",
    "text": "Abstract\nThe Martini model, a coarse-grained force field for biomolecular simulations, has found a broad range of applications since its release a decade ago. Based on a building block principle, the model combines speed and versatility while maintaining chemical specificity. Here we review the current state of the model. We describe recent highlights as well as shortcomings, and our ideas on the further development of the model."
  },
  {
    "objectID": "docs/publications/entries/2013/Wassenaar2013_MixingMartini.html",
    "href": "docs/publications/entries/2013/Wassenaar2013_MixingMartini.html",
    "title": "Mixing MARTINI: Electrostatic Coupling in Hybrid Atomistic–Coarse-Grained Biomolecular Simulations",
    "section": "",
    "text": "Wassenaar, T. A., Ingólfsson, H. I., Prieß, M., Marrink, S. J., & Schäfer, L. V. (2013). Mixing MARTINI: electrostatic coupling in hybrid atomistic–coarse-grained biomolecular simulations. The Journal of Physical Chemistry B, 117(13), 3516-3530."
  },
  {
    "objectID": "docs/publications/entries/2013/Wassenaar2013_MixingMartini.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Wassenaar2013_MixingMartini.html#citation-apa-7",
    "title": "Mixing MARTINI: Electrostatic Coupling in Hybrid Atomistic–Coarse-Grained Biomolecular Simulations",
    "section": "",
    "text": "Wassenaar, T. A., Ingólfsson, H. I., Prieß, M., Marrink, S. J., & Schäfer, L. V. (2013). Mixing MARTINI: electrostatic coupling in hybrid atomistic–coarse-grained biomolecular simulations. The Journal of Physical Chemistry B, 117(13), 3516-3530."
  },
  {
    "objectID": "docs/publications/entries/2013/Wassenaar2013_MixingMartini.html#abstract",
    "href": "docs/publications/entries/2013/Wassenaar2013_MixingMartini.html#abstract",
    "title": "Mixing MARTINI: Electrostatic Coupling in Hybrid Atomistic–Coarse-Grained Biomolecular Simulations",
    "section": "Abstract",
    "text": "Abstract\nHybrid molecular dynamics simulations of atomistic (AA) solutes embedded in coarse-grained (CG) environment can substantially reduce the computational cost with respect to fully atomistic simulations. However, interfacing both levels of resolution is a major challenge that includes a balanced description of the relevant interactions. This is especially the case for polar solvents such as water, which screen the electrostatic interactions and thus require explicit electrostatic coupling between AA and CG subsystems. Here, we present and critically test computationally efficient hybrid AA/CG models. We combined the Gromos atomistic force field with the MARTINI coarse-grained force field. To enact electrostatic coupling, two recently developed CG water models with explicit electrostatic interactions were used: the polarizable MARTINI water model and the BMW model. The hybrid model was found to be sensitive to the strength of the AA–CG electrostatic coupling, which was adjusted through the relative dielectric permittivity εr(AA–CG). Potentials of mean force (PMFs) between pairs of amino acid side chain analogues in water and partitioning free enthalpies of uncharged amino acid side chain analogues between apolar solvent and water show significant differences between the hybrid simulations and the fully AA or CG simulations, in particular for charged and polar molecules. For apolar molecules, the results obtained with the hybrid AA/CG models are in better agreement with the fully atomistic results. The structures of atomistic ubiquitin solvated in CG water and of a single atomistic transmembrane α-helix and the transmembrane portion of an atomistic mechanosensitive channel in CG lipid bilayers were largely maintained during 50–100 ns of AA/CG simulations, partly due to an overstabilization of intramolecular interactions. This work highlights some key challenges on the way toward hybrid AA/CG models that are both computationally efficient and sufficiently accurate for biomolecular simulations."
  },
  {
    "objectID": "docs/publications/entries/2022/Frallicciardi2022_Permiability.html",
    "href": "docs/publications/entries/2022/Frallicciardi2022_Permiability.html",
    "title": "Membrane thickness, lipid phase and sterol type are determining factors in the permeability of membranes to small solutes",
    "section": "",
    "text": "Frallicciardi, J., Melcr, J., Siginou, P., Marrink, S. J., & Poolman, B. (2022). Membrane thickness, lipid phase and sterol type are determining factors in the permeability of membranes to small solutes. Nature communications, 13(1), 1605."
  },
  {
    "objectID": "docs/publications/entries/2022/Frallicciardi2022_Permiability.html#citation-apa-7",
    "href": "docs/publications/entries/2022/Frallicciardi2022_Permiability.html#citation-apa-7",
    "title": "Membrane thickness, lipid phase and sterol type are determining factors in the permeability of membranes to small solutes",
    "section": "",
    "text": "Frallicciardi, J., Melcr, J., Siginou, P., Marrink, S. J., & Poolman, B. (2022). Membrane thickness, lipid phase and sterol type are determining factors in the permeability of membranes to small solutes. Nature communications, 13(1), 1605."
  },
  {
    "objectID": "docs/publications/entries/2022/Frallicciardi2022_Permiability.html#abstract",
    "href": "docs/publications/entries/2022/Frallicciardi2022_Permiability.html#abstract",
    "title": "Membrane thickness, lipid phase and sterol type are determining factors in the permeability of membranes to small solutes",
    "section": "Abstract",
    "text": "Abstract\nCell membranes provide a selective semi-permeable barrier to the passive transport of molecules. This property differs greatly between organisms. While the cytoplasmic membrane of bacterial cells is highly permeable for weak acids and glycerol, yeasts can maintain large concentration gradients. Here we show that such differences can arise from the physical state of the plasma membrane. By combining stopped-flow kinetic measurements with molecular dynamics simulations, we performed a systematic analysis of the permeability of a variety of small molecules through synthetic membranes of different lipid composition to obtain detailed molecular insight into the permeation mechanisms. While membrane thickness is an important parameter for the permeability through fluid membranes, the largest differences occur when the membranes transit from the liquid-disordered to liquid-ordered and/or to gel state, which is in agreement with previous work on passive diffusion of water. By comparing our results with in vivo measurements from yeast, we conclude that the yeast membrane exists in a highly ordered and rigid state, which is comparable to synthetic saturated DPPC-sterol membranes."
  },
  {
    "objectID": "docs/publications/entries/2022/Machado2022_Nanoemulsion.html",
    "href": "docs/publications/entries/2022/Machado2022_Nanoemulsion.html",
    "title": "Complex nanoemulsion for vitamin delivery: droplet organization and interaction with skin membranes",
    "section": "",
    "text": "Machado, N., Bruininks, B. M., Singh, P., Dos Santos, L., Dal Pizzol, C., Dieamant, G. D. C., … & Favero, P. P. (2022). Complex nanoemulsion for vitamin delivery: droplet organization and interaction with skin membranes. Nanoscale, 14(2), 506-514."
  },
  {
    "objectID": "docs/publications/entries/2022/Machado2022_Nanoemulsion.html#citation-apa-7",
    "href": "docs/publications/entries/2022/Machado2022_Nanoemulsion.html#citation-apa-7",
    "title": "Complex nanoemulsion for vitamin delivery: droplet organization and interaction with skin membranes",
    "section": "",
    "text": "Machado, N., Bruininks, B. M., Singh, P., Dos Santos, L., Dal Pizzol, C., Dieamant, G. D. C., … & Favero, P. P. (2022). Complex nanoemulsion for vitamin delivery: droplet organization and interaction with skin membranes. Nanoscale, 14(2), 506-514."
  },
  {
    "objectID": "docs/publications/entries/2022/Machado2022_Nanoemulsion.html#abstract",
    "href": "docs/publications/entries/2022/Machado2022_Nanoemulsion.html#abstract",
    "title": "Complex nanoemulsion for vitamin delivery: droplet organization and interaction with skin membranes",
    "section": "Abstract",
    "text": "Abstract\nLipid nanoemulsions are promising nanomaterials for drug delivery applications in food, pharmaceutical and cosmetic industries. Despite the noteworthy commercial interest, little is known about their supramolecular organization, especially about how such multicomponent formulations interact with cell membranes. In the present work, coarse-grained molecular dynamics simulations have been employed to study the self-assembly of a 15-component lipid nanoemulsion droplet containing vitamins A and E for skin delivery. Our results display aspects of the unique “onion-like” agglomeration between the chemical constituents in the different layers of the lipid nanodroplet. Vitamin E molecules are more concentrated in the center of the droplet together with other hydrophobic constituents such as the triglycerides with long tails. On the other hand, vitamin A occupies an intermediate layer between the core and the co-emulsifier surface of the nanodroplet, together with lecithin phospholipids. Coarse-grained molecular dynamics simulations were also performed to provide insight into the first steps involved in absorption and penetration of the nanodroplet through skin membrane models, representing an intracellular (hair follicle infundibulum) and intercellular pathway (stratum corneum) through the skin. Our data provide a first view on the complex organization of commercial nanoemulsion and its interaction with skin membranes. We expect our results to open the way towards the rational design of such nanomaterials."
  },
  {
    "objectID": "docs/publications/entries/2022/Azadi-Chegeni2022_Thyalkoid.html",
    "href": "docs/publications/entries/2022/Azadi-Chegeni2022_Thyalkoid.html",
    "title": "Protein dynamics and lipid affinity of monomeric, zeaxanthin-binding LHCII in thylakoid membranes",
    "section": "",
    "text": "Azadi-Chegeni, F., Thallmair, S., Ward, M. E., Perin, G., Marrink, S. J., Baldus, M., … & Pandit, A. (2022). Protein dynamics and lipid affinity of monomeric, zeaxanthin-binding LHCII in thylakoid membranes. Biophysical journal, 121(3), 396-409."
  },
  {
    "objectID": "docs/publications/entries/2022/Azadi-Chegeni2022_Thyalkoid.html#citation-apa-7",
    "href": "docs/publications/entries/2022/Azadi-Chegeni2022_Thyalkoid.html#citation-apa-7",
    "title": "Protein dynamics and lipid affinity of monomeric, zeaxanthin-binding LHCII in thylakoid membranes",
    "section": "",
    "text": "Azadi-Chegeni, F., Thallmair, S., Ward, M. E., Perin, G., Marrink, S. J., Baldus, M., … & Pandit, A. (2022). Protein dynamics and lipid affinity of monomeric, zeaxanthin-binding LHCII in thylakoid membranes. Biophysical journal, 121(3), 396-409."
  },
  {
    "objectID": "docs/publications/entries/2022/Azadi-Chegeni2022_Thyalkoid.html#abstract",
    "href": "docs/publications/entries/2022/Azadi-Chegeni2022_Thyalkoid.html#abstract",
    "title": "Protein dynamics and lipid affinity of monomeric, zeaxanthin-binding LHCII in thylakoid membranes",
    "section": "Abstract",
    "text": "Abstract\nThe xanthophyll cycle in the antenna of photosynthetic organisms under light stress is one of the most well-known processes in photosynthesis, but its role is not well understood. In the xanthophyll cycle, violaxanthin (Vio) is reversibly transformed to zeaxanthin (Zea) that occupies Vio binding sites of light-harvesting antenna proteins. Higher monomer/trimer ratios of the most abundant light-harvesting protein, the light-harvesting complex II (LHCII), usually occur in Zea accumulating membranes and have been observed in plants after prolonged illumination and during high-light acclimation. We present a combined NMR and coarse-grained simulation study on monomeric LHCII from the npq2 mutant that constitutively binds Zea in the Vio binding pocket. LHCII was isolated from 13C-enriched npq2 Chlamydomonas reinhardtii (Cr) cells and reconstituted in thylakoid lipid membranes. NMR results reveal selective changes in the fold and dynamics of npq2 LHCII compared with the trimeric, wild-type and show that npq2 LHCII contains multiple mono- or digalactosyl diacylglycerol lipids (MGDG and DGDG) that are strongly protein bound. Coarse-grained simulations on npq2 LHCII embedded in a thylakoid lipid membrane agree with these observations. The simulations show that LHCII monomers have more extensive lipid contacts than LHCII trimers and that protein-lipid contacts are influenced by Zea. We propose that both monomerization and Zea binding could have a functional role in modulating membrane fluidity and influence the aggregation and conformational dynamics of LHCII with a likely impact on photoprotection ability."
  },
  {
    "objectID": "docs/publications/entries/2022/Grünewald2022_Polyply.html",
    "href": "docs/publications/entries/2022/Grünewald2022_Polyply.html",
    "title": "Polyply; a python suite for facilitating simulations of macromolecules and nanomaterials",
    "section": "",
    "text": "Grünewald, F., Alessandri, R., Kroon, P. C., Monticelli, L., Souza, P. C., & Marrink, S. J. (2022). Polyply; a python suite for facilitating simulations of macromolecules and nanomaterials. Nature communications, 13(1), 68."
  },
  {
    "objectID": "docs/publications/entries/2022/Grünewald2022_Polyply.html#citation-apa-7",
    "href": "docs/publications/entries/2022/Grünewald2022_Polyply.html#citation-apa-7",
    "title": "Polyply; a python suite for facilitating simulations of macromolecules and nanomaterials",
    "section": "",
    "text": "Grünewald, F., Alessandri, R., Kroon, P. C., Monticelli, L., Souza, P. C., & Marrink, S. J. (2022). Polyply; a python suite for facilitating simulations of macromolecules and nanomaterials. Nature communications, 13(1), 68."
  },
  {
    "objectID": "docs/publications/entries/2022/Grünewald2022_Polyply.html#abstract",
    "href": "docs/publications/entries/2022/Grünewald2022_Polyply.html#abstract",
    "title": "Polyply; a python suite for facilitating simulations of macromolecules and nanomaterials",
    "section": "Abstract",
    "text": "Abstract\nMolecular dynamics simulations play an increasingly important role in the rational design of (nano)-materials and in the study of biomacromolecules. However, generating input files and realistic starting coordinates for these simulations is a major bottleneck, especially for high throughput protocols and for complex multi-component systems. To eliminate this bottleneck, we present the polyply software suite that provides 1) a multi-scale graph matching algorithm designed to generate parameters quickly and for arbitrarily complex polymeric topologies, and 2) a generic multi-scale random walk protocol capable of setting up complex systems efficiently and independent of the target force-field or model resolution. We benchmark quality and performance of the approach by creating realistic coordinates for polymer melt simulations, single-stranded as well as circular single-stranded DNA. We further demonstrate the power of our approach by setting up a microphase-separated block copolymer system, and by generating a liquid-liquid phase separated system inside a lipid vesicle."
  },
  {
    "objectID": "docs/publications/entries/2020/Schroer2020_Actin.html",
    "href": "docs/publications/entries/2020/Schroer2020_Actin.html",
    "title": "Charge-dependent interactions of monomeric and filamentous actin with lipid bilayers",
    "section": "",
    "text": "Schroer, C. F., Baldauf, L., van Buren, L., Wassenaar, T. A., Melo, M. N., Koenderink, G. H., & Marrink, S. J. (2020). Charge-dependent interactions of monomeric and filamentous actin with lipid bilayers. Proceedings of the National Academy of Sciences, 117(11), 5861-5872."
  },
  {
    "objectID": "docs/publications/entries/2020/Schroer2020_Actin.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Schroer2020_Actin.html#citation-apa-7",
    "title": "Charge-dependent interactions of monomeric and filamentous actin with lipid bilayers",
    "section": "",
    "text": "Schroer, C. F., Baldauf, L., van Buren, L., Wassenaar, T. A., Melo, M. N., Koenderink, G. H., & Marrink, S. J. (2020). Charge-dependent interactions of monomeric and filamentous actin with lipid bilayers. Proceedings of the National Academy of Sciences, 117(11), 5861-5872."
  },
  {
    "objectID": "docs/publications/entries/2020/Schroer2020_Actin.html#abstract",
    "href": "docs/publications/entries/2020/Schroer2020_Actin.html#abstract",
    "title": "Charge-dependent interactions of monomeric and filamentous actin with lipid bilayers",
    "section": "Abstract",
    "text": "Abstract\nThe cytoskeletal protein actin polymerizes into filaments that are essential for the mechanical stability of mammalian cells. In vitro experiments showed that direct interactions between actin filaments and lipid bilayers are possible and that the net charge of the bilayer as well as the presence of divalent ions in the buffer play an important role. In vivo, colocalization of actin filaments and divalent ions are suppressed, and cells rely on linker proteins to connect the plasma membrane to the actin network. Little is known, however, about why this is the case and what microscopic interactions are important. A deeper understanding is highly beneficial, first, to obtain understanding in the biological design of cells and, second, as a possible basis for the building of artificial cortices for the stabilization of synthetic cells. Here, we report the results of coarse-grained molecular dynamics simulations of monomeric and filamentous actin in the vicinity of differently charged lipid bilayers. We observe that charges on the lipid head groups strongly determine the ability of actin to adsorb to the bilayer. The inclusion of divalent ions leads to a reversal of the binding affinity. Our in silico results are validated experimentally by reconstitution assays with actin on lipid bilayer membranes and provide a molecular-level understanding of the actin–membrane interaction."
  },
  {
    "objectID": "docs/publications/entries/2020/Maity2020_Polymerization.html",
    "href": "docs/publications/entries/2020/Maity2020_Polymerization.html",
    "title": "Caught in the Act: Mechanistic Insight into Supramolecular Polymerization-Driven Self-Replication from Real-Time Visualization",
    "section": "",
    "text": "Maity, S., Ottelé, J., Santiago, G. M., Frederix, P. W., Kroon, P., Markovitch, O., … & Roos, W. H. (2020). Caught in the act: mechanistic insight into supramolecular polymerization-driven self-replication from real-time visualization. Journal of the American Chemical Society, 142(32), 13709-13717."
  },
  {
    "objectID": "docs/publications/entries/2020/Maity2020_Polymerization.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Maity2020_Polymerization.html#citation-apa-7",
    "title": "Caught in the Act: Mechanistic Insight into Supramolecular Polymerization-Driven Self-Replication from Real-Time Visualization",
    "section": "",
    "text": "Maity, S., Ottelé, J., Santiago, G. M., Frederix, P. W., Kroon, P., Markovitch, O., … & Roos, W. H. (2020). Caught in the act: mechanistic insight into supramolecular polymerization-driven self-replication from real-time visualization. Journal of the American Chemical Society, 142(32), 13709-13717."
  },
  {
    "objectID": "docs/publications/entries/2020/Maity2020_Polymerization.html#abstract",
    "href": "docs/publications/entries/2020/Maity2020_Polymerization.html#abstract",
    "title": "Caught in the Act: Mechanistic Insight into Supramolecular Polymerization-Driven Self-Replication from Real-Time Visualization",
    "section": "Abstract",
    "text": "Abstract\nSelf-assembly features prominently in fields ranging from materials science to biophysical chemistry. Assembly pathways, often passing through transient intermediates, can control the outcome of assembly processes. Yet, the mechanisms of self-assembly remain largely obscure due to a lack of experimental tools for probing these pathways at the molecular level. Here, the self-assembly of self-replicators into fibers is visualized in real-time by high-speed atomic force microscopy (HS-AFM). Fiber growth requires the conversion of precursor molecules into six-membered macrocycles, which constitute the fibers. HS-AFM experiments, supported by molecular dynamics simulations, revealed that aggregates of precursor molecules accumulate at the sides of the fibers, which then diffuse to the fiber ends where growth takes place. This mechanism of precursor reservoir formation, followed by one-dimensional diffusion, which guides the precursor molecules to the sites of growth, reduces the entropic penalty associated with colocalizing precursors and growth sites and constitutes a new mechanism for supramolecular polymerization."
  },
  {
    "objectID": "docs/publications/entries/2020/Sun2020_CD44.html",
    "href": "docs/publications/entries/2020/Sun2020_CD44.html",
    "title": "Molecular mechanism for bidirectional regulation of CD44 for lipid raft affiliation by palmitoylations and PIP2",
    "section": "",
    "text": "Sun, F., Schroer, C. F., Palacios, C. R., Xu, L., Luo, S. Z., & Marrink, S. J. (2020). Molecular mechanism for bidirectional regulation of CD44 for lipid raft affiliation by palmitoylations and PIP2. PLoS Computational Biology, 16(4), e1007777."
  },
  {
    "objectID": "docs/publications/entries/2020/Sun2020_CD44.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Sun2020_CD44.html#citation-apa-7",
    "title": "Molecular mechanism for bidirectional regulation of CD44 for lipid raft affiliation by palmitoylations and PIP2",
    "section": "",
    "text": "Sun, F., Schroer, C. F., Palacios, C. R., Xu, L., Luo, S. Z., & Marrink, S. J. (2020). Molecular mechanism for bidirectional regulation of CD44 for lipid raft affiliation by palmitoylations and PIP2. PLoS Computational Biology, 16(4), e1007777."
  },
  {
    "objectID": "docs/publications/entries/2020/Sun2020_CD44.html#abstract",
    "href": "docs/publications/entries/2020/Sun2020_CD44.html#abstract",
    "title": "Molecular mechanism for bidirectional regulation of CD44 for lipid raft affiliation by palmitoylations and PIP2",
    "section": "Abstract",
    "text": "Abstract\nThe co-localization of Cluster-of-Differentiation-44 protein (CD44) and cytoplasmic adaptors in specific membrane environments is crucial for cell adhesion and migration. The process is controlled by two different pathways: On the one hand palmitoylation keeps CD44 in lipid raft domains and disables the linking to the cytoplasmic adaptor, whereas on the other hand, the presence of phosphatidylinositol-4,5-biphosphate (PIP2) lipids accelerates the formation of the CD44-adaptor complex. The molecular mechanism explaining how CD44 is migrating into and out of the lipid raft domains and its dependence on both palmitoylations and the presence of PIP2 remains, however, elusive. In this study, we performed extensive molecular dynamics simulations to study the raft affinity and translocation of CD44 in phase separated model membranes as well as more realistic plasma membrane environments. We observe a delicate balance between the influence of the palmitoylations and the presence of PIP2 lipids: whereas the palmitoylations of CD44 increases the affinity for raft domains, PIP2 lipids have the opposite effect. Additionally, we studied the association between CD44 and the membrane adaptor FERM in dependence of these factors. We find that the presence of PIP2 lipids allows CD44 and FERM to associate in an experimentally observed binding mode whereas the highly palmitoylated species shows no binding affinity. Together, our results shed light on the sophisticated mechanism on how membrane translocation and peripheral protein association can be controlled by both protein modifications and membrane composition."
  },
  {
    "objectID": "docs/publications/entries/2020/Alessandri2020_Semiconductors.html",
    "href": "docs/publications/entries/2020/Alessandri2020_Semiconductors.html",
    "title": "Resolving Donor–Acceptor Interfaces and Charge Carrier Energy Levels of Organic Semiconductors with Polar Side Chains",
    "section": "",
    "text": "Alessandri, R., Sami, S., Barnoud, J., de Vries, A. H., Marrink, S. J., & Havenith, R. W. (2020). Resolving donor–acceptor interfaces and charge carrier energy levels of organic semiconductors with polar side chains. Advanced Functional Materials, 30(46), 2004799."
  },
  {
    "objectID": "docs/publications/entries/2020/Alessandri2020_Semiconductors.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Alessandri2020_Semiconductors.html#citation-apa-7",
    "title": "Resolving Donor–Acceptor Interfaces and Charge Carrier Energy Levels of Organic Semiconductors with Polar Side Chains",
    "section": "",
    "text": "Alessandri, R., Sami, S., Barnoud, J., de Vries, A. H., Marrink, S. J., & Havenith, R. W. (2020). Resolving donor–acceptor interfaces and charge carrier energy levels of organic semiconductors with polar side chains. Advanced Functional Materials, 30(46), 2004799."
  },
  {
    "objectID": "docs/publications/entries/2020/Alessandri2020_Semiconductors.html#abstract",
    "href": "docs/publications/entries/2020/Alessandri2020_Semiconductors.html#abstract",
    "title": "Resolving Donor–Acceptor Interfaces and Charge Carrier Energy Levels of Organic Semiconductors with Polar Side Chains",
    "section": "Abstract",
    "text": "Abstract\nOrganic semiconductors consisting of molecules bearing polar side chains have been proposed as potential candidates to overcome the limitations of organic photovoltaics owing to their enhanced dielectric constant. However, introducing such polar molecules in photovoltaic devices has not yet resulted in higher efficiencies. A microscopic understanding of the impact of polar side chains on electronic and structural properties of organic semiconductors is paramount to rationalize their effect. Here, the impact of such side chains on bulk heterojunction overall morphology, molecular configurations at donor–acceptor (DA) interfaces, and charge carrier energy levels is investigated. The multiscale modeling approach used allows to resolve DA interfaces with atomistic resolution while taking into account the large-scale self-organization process which takes place during the processing of an organic thin film. The polar fullerene-based blends are compared to the well-studied reference system, poly(3-hexyl-thiophene) (P3HT):phenyl-C61-butyric acid methyl ester (PCBM). Introduction of polar side chains on a similar molecular scaffold does not affect molecular orientations at the DA interfaces; such orientations are, however, found to be affected by processing conditions and polymer molecular weight. Polar side chains, instead, are found to impact considerably the charge carrier energy levels of the organic blend, causing electrostatic-induced broadening of these levels."
  },
  {
    "objectID": "docs/publications/entries/2020/Liguori2020_Photosynthesis.html",
    "href": "docs/publications/entries/2020/Liguori2020_Photosynthesis.html",
    "title": "Molecular dynamics simulations in photosynthesis",
    "section": "",
    "text": "Liguori, N., Croce, R., Marrink, S. J., & Thallmair, S. (2020). Molecular dynamics simulations in photosynthesis. Photosynthesis research, 144(2), 273-295."
  },
  {
    "objectID": "docs/publications/entries/2020/Liguori2020_Photosynthesis.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Liguori2020_Photosynthesis.html#citation-apa-7",
    "title": "Molecular dynamics simulations in photosynthesis",
    "section": "",
    "text": "Liguori, N., Croce, R., Marrink, S. J., & Thallmair, S. (2020). Molecular dynamics simulations in photosynthesis. Photosynthesis research, 144(2), 273-295."
  },
  {
    "objectID": "docs/publications/entries/2020/Liguori2020_Photosynthesis.html#abstract",
    "href": "docs/publications/entries/2020/Liguori2020_Photosynthesis.html#abstract",
    "title": "Molecular dynamics simulations in photosynthesis",
    "section": "Abstract",
    "text": "Abstract\nPhotosynthesis is regulated by a dynamic interplay between proteins, enzymes, pigments, lipids, and cofactors that takes place on a large spatio-temporal scale. Molecular dynamics (MD) simulations provide a powerful toolkit to investigate dynamical processes in (bio)molecular ensembles from the (sub)picosecond to the (sub)millisecond regime and from the Å to hundreds of nm length scale. Therefore, MD is well suited to address a variety of questions arising in the field of photosynthesis research. In this review, we provide an introduction to the basic concepts of MD simulations, at atomistic and coarse-grained level of resolution. Furthermore, we discuss applications of MD simulations to model photosynthetic systems of different sizes and complexity and their connection to experimental observables. Finally, we provide a brief glance on which methods provide opportunities to capture phenomena beyond the applicability of classical MD."
  },
  {
    "objectID": "docs/publications/entries/2020/Bruininks2020_LipoplexedDNA.html",
    "href": "docs/publications/entries/2020/Bruininks2020_LipoplexedDNA.html",
    "title": "A molecular view on the escape of lipoplexed DNA from the endosome",
    "section": "",
    "text": "Bruininks, B. M., Souza, P. C., Ingolfsson, H., & Marrink, S. J. (2020). A molecular view on the escape of lipoplexed DNA from the endosome. Elife, 9, e52012."
  },
  {
    "objectID": "docs/publications/entries/2020/Bruininks2020_LipoplexedDNA.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Bruininks2020_LipoplexedDNA.html#citation-apa-7",
    "title": "A molecular view on the escape of lipoplexed DNA from the endosome",
    "section": "",
    "text": "Bruininks, B. M., Souza, P. C., Ingolfsson, H., & Marrink, S. J. (2020). A molecular view on the escape of lipoplexed DNA from the endosome. Elife, 9, e52012."
  },
  {
    "objectID": "docs/publications/entries/2020/Bruininks2020_LipoplexedDNA.html#abstract",
    "href": "docs/publications/entries/2020/Bruininks2020_LipoplexedDNA.html#abstract",
    "title": "A molecular view on the escape of lipoplexed DNA from the endosome",
    "section": "Abstract",
    "text": "Abstract\nThe use of non-viral vectors for in vivo gene therapy could drastically increase safety, whilst reducing the cost of preparing the vectors. A promising approach to non-viral vectors makes use of DNA/cationic liposome complexes (lipoplexes) to deliver the genetic material. Here we use coarse-grained molecular dynamics simulations to investigate the molecular mechanism underlying efficient DNA transfer from lipoplexes. Our computational fusion experiments of lipoplexes with endosomal membrane models show two distinct modes of transfection: parallel and perpendicular. In the parallel fusion pathway, DNA aligns with the membrane surface, showing very quick release of genetic material shortly after the initial fusion pore is formed. The perpendicular pathway also leads to transfection, but release is slower. We further show that the composition and size of the lipoplex, as well as the lipid composition of the endosomal membrane, have a significant impact on fusion efficiency in our models."
  },
  {
    "objectID": "docs/publications/entries/2020/Liu2020_ReplicaExchange.html",
    "href": "docs/publications/entries/2020/Liu2020_ReplicaExchange.html",
    "title": "Coupling Coarse-Grained to Fine-Grained Models via Hamiltonian Replica Exchange",
    "section": "",
    "text": "Liu, Y., Pezeshkian, W., Barnoud, J., De Vries, A. H., & Marrink, S. J. (2020). Coupling coarse-grained to fine-grained models via Hamiltonian Replica Exchange. Journal of Chemical Theory and Computation, 16(8), 5313-5322."
  },
  {
    "objectID": "docs/publications/entries/2020/Liu2020_ReplicaExchange.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Liu2020_ReplicaExchange.html#citation-apa-7",
    "title": "Coupling Coarse-Grained to Fine-Grained Models via Hamiltonian Replica Exchange",
    "section": "",
    "text": "Liu, Y., Pezeshkian, W., Barnoud, J., De Vries, A. H., & Marrink, S. J. (2020). Coupling coarse-grained to fine-grained models via Hamiltonian Replica Exchange. Journal of Chemical Theory and Computation, 16(8), 5313-5322."
  },
  {
    "objectID": "docs/publications/entries/2020/Liu2020_ReplicaExchange.html#abstract",
    "href": "docs/publications/entries/2020/Liu2020_ReplicaExchange.html#abstract",
    "title": "Coupling Coarse-Grained to Fine-Grained Models via Hamiltonian Replica Exchange",
    "section": "Abstract",
    "text": "Abstract\nThe energy landscape of biomolecular systems contains many local minima that are separated by high energy barriers. Sampling this landscape in molecular dynamics simulations is a challenging task and often requires the use of enhanced sampling techniques. Here, we increase the sampling efficiency by coupling the fine-grained (FG) GROMOS force field to the coarse-grained (CG) Martini force field via the Hamiltonian replica exchange method (HREM). We tested the efficiency of this procedure using a lutein/octane system. In traditional simulations, cis–trans transitions of lutein are barely observed due to the high energy barrier separating these states. However, many of these transitions are sampled with our HREM scheme. The proposed method offers new possibilities for enhanced sampling of biomolecular conformations, making use of CG models without compromising the accuracy of the FG model."
  },
  {
    "objectID": "docs/publications/entries/2020/Su2020_AntimicrobialPeptides.html",
    "href": "docs/publications/entries/2020/Su2020_AntimicrobialPeptides.html",
    "title": "Localization Preference of Antimicrobial Peptides on Liquid-Disordered Membrane Domains",
    "section": "",
    "text": "Su, J., Marrink, S. J., & Melo, M. N. (2020). Localization preference of antimicrobial peptides on liquid-disordered membrane domains. Frontiers in cell and developmental biology, 8, 350."
  },
  {
    "objectID": "docs/publications/entries/2020/Su2020_AntimicrobialPeptides.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Su2020_AntimicrobialPeptides.html#citation-apa-7",
    "title": "Localization Preference of Antimicrobial Peptides on Liquid-Disordered Membrane Domains",
    "section": "",
    "text": "Su, J., Marrink, S. J., & Melo, M. N. (2020). Localization preference of antimicrobial peptides on liquid-disordered membrane domains. Frontiers in cell and developmental biology, 8, 350."
  },
  {
    "objectID": "docs/publications/entries/2020/Su2020_AntimicrobialPeptides.html#abstract",
    "href": "docs/publications/entries/2020/Su2020_AntimicrobialPeptides.html#abstract",
    "title": "Localization Preference of Antimicrobial Peptides on Liquid-Disordered Membrane Domains",
    "section": "Abstract",
    "text": "Abstract\nWe performed coarse-grained simulations of the antimicrobial peptides Magainin-2, BP100, MSI-103, and MSI-78 on a phase-separated membrane to study their preference for the different domains. All the peptides displayed a clear preference for the liquid-disordered (Ld) phase over the liquid-ordered (Lo) one. For BP100, MSI-103, and MSI-78 there was a further preference of the peptides for the domain interface. The peptides’ preference toward the disordered phase was shown to reflect a penalization of lipid–lipid interaction enthalpy in the Lo phase, when in the vicinity of peptides. Similar results were observed at the two studied concentrations, although Ld phase saturation at the higher concentration drove some of the peptide excess to the Lo phase. Magainin-2 and MSI-103 were found to dimerize, in agreement with available experimental data. Interestingly, at high concentrations of Magainin-2 toroidal pores spontaneously formed in the Ld phase. We performed additional simulations to characterize this phenomenon, which is likely related to Magainin-2’s membranolytic action."
  },
  {
    "objectID": "docs/publications/entries/2008/Marrink2008_MartiniBook.html",
    "href": "docs/publications/entries/2008/Marrink2008_MartiniBook.html",
    "title": "The MARTINI force field",
    "section": "",
    "text": "Marrink, S. J., Fuhrmans, M., Risselada, H. J., & Periole, X. (2008). The MARTINI force field. CRC Press: New York."
  },
  {
    "objectID": "docs/publications/entries/2008/Marrink2008_MartiniBook.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Marrink2008_MartiniBook.html#citation-apa-7",
    "title": "The MARTINI force field",
    "section": "",
    "text": "Marrink, S. J., Fuhrmans, M., Risselada, H. J., & Periole, X. (2008). The MARTINI force field. CRC Press: New York."
  },
  {
    "objectID": "docs/publications/entries/2008/Marrink2008_MartiniBook.html#abstract",
    "href": "docs/publications/entries/2008/Marrink2008_MartiniBook.html#abstract",
    "title": "The MARTINI force field",
    "section": "Abstract",
    "text": "Abstract\nThe use of coarse-grained (CG) models in a variety of simulation techniques has proven to be a valuable tool to probe the time and length scales of systems beyond what is feasible with traditional all-atom (AA) models. Applications to lipid systems in particular, pioneered by Smit et al.,1 have become widely used. A large diversity of coarse-graining approaches is available; they range from qualitative, solvent-free models, via more realistic models with explicit water, to models including chemical speci city (for recent reviews see Refs. 2-4). Models within this latter category are typically parameterized based on comparison to atomistic simulations, using inverted Monte Carlo schemes5-7 or force matching8 approaches. Our own model,9,10 coined the MARTINI forcefield, has also been developed in close connection with atomistic models; however, the philosophy of our coarse-graining approach is different. Instead of focusing on an accurate reproduction of structural details at a particular state point for a specic system, we aim for a broader range of applications without the need to reparameterize the model each time. We do so by extensive calibration of the chemical building blocks of the CG force eld against thermodynamic data, in particular oil/water partitioning coefficients. This is similar in spirit to the recent development of the GROMOS forcefield.11 Processes such as lipid self-assembly, peptide membrane binding, and protein-protein recognition depend critically on the degree to which the constituents partition between polar and nonpolar environments. The use of a consistent strategy for the development of compatible CG and atomic-level forcefields is of additional importance for its intended use in multiscale applications.12 The overall aim of our coarse-graining approach is to provide a simple model that is computationally fast and easy to use, yet exible enough to be applicable to a large range of biomolecular systems."
  },
  {
    "objectID": "docs/publications/entries/2008/Baoukina2008_MonolayerCollapse.html",
    "href": "docs/publications/entries/2008/Baoukina2008_MonolayerCollapse.html",
    "title": "The molecular mechanism of lipid monolayer collapse",
    "section": "",
    "text": "Baoukina, S., Monticelli, L., Risselada, H. J., Marrink, S. J., & Tieleman, D. P. (2008). The molecular mechanism of lipid monolayer collapse. Proceedings of the National Academy of Sciences, 105(31), 10803-10808."
  },
  {
    "objectID": "docs/publications/entries/2008/Baoukina2008_MonolayerCollapse.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Baoukina2008_MonolayerCollapse.html#citation-apa-7",
    "title": "The molecular mechanism of lipid monolayer collapse",
    "section": "",
    "text": "Baoukina, S., Monticelli, L., Risselada, H. J., Marrink, S. J., & Tieleman, D. P. (2008). The molecular mechanism of lipid monolayer collapse. Proceedings of the National Academy of Sciences, 105(31), 10803-10808."
  },
  {
    "objectID": "docs/publications/entries/2008/Baoukina2008_MonolayerCollapse.html#abstract",
    "href": "docs/publications/entries/2008/Baoukina2008_MonolayerCollapse.html#abstract",
    "title": "The molecular mechanism of lipid monolayer collapse",
    "section": "Abstract",
    "text": "Abstract\nLipid monolayers at an air–water interface can be compressed laterally and reach high surface density. Beyond a certain threshold, they become unstable and collapse. Lipid monolayer collapse plays an important role in the regulation of surface tension at the air–liquid interface in the lungs. Although the structures of lipid aggregates formed upon collapse can be characterized experimentally, the mechanism leading to these structures is not fully understood. We investigate the molecular mechanism of monolayer collapse using molecular dynamics simulations. Upon lateral compression, the collapse begins with buckling of the monolayer, followed by folding of the buckle into a bilayer in the water phase. Folding leads to an increase in the monolayer surface tension, which reaches the equilibrium spreading value. Immediately after their formation, the bilayer folds have a flat semielliptical shape, in agreement with theoretical predictions. The folds undergo further transformation and form either flat circular bilayers or vesicles. The transformation pathway depends on macroscopic parameters of the system: the bending modulus, the line tension at the monolayer–bilayer connection, and the line tension at the bilayer perimeter. These parameters are determined by the system composition and temperature. Coexistence of the monolayer with lipid aggregates is favorable at lower tensions of the monolayer–bilayer connection. Transformation into a vesicle reduces the energy of the fold perimeter and is facilitated for softer bilayers, e.g., those with a higher content of unsaturated lipids, or at higher temperatures."
  },
  {
    "objectID": "docs/publications/entries/2008/Treptow2008_VoltageGatedKChannels.html",
    "href": "docs/publications/entries/2008/Treptow2008_VoltageGatedKChannels.html",
    "title": "Gating Motions in Voltage-Gated Potassium Channels Revealed by Coarse-Grained Molecular Dynamics Simulations",
    "section": "",
    "text": "Treptow, W., Marrink, S. J., & Tarek, M. (2008). Gating motions in voltage-gated potassium channels revealed by coarse-grained molecular dynamics simulations. The Journal of Physical Chemistry B, 112(11), 3277-3282."
  },
  {
    "objectID": "docs/publications/entries/2008/Treptow2008_VoltageGatedKChannels.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Treptow2008_VoltageGatedKChannels.html#citation-apa-7",
    "title": "Gating Motions in Voltage-Gated Potassium Channels Revealed by Coarse-Grained Molecular Dynamics Simulations",
    "section": "",
    "text": "Treptow, W., Marrink, S. J., & Tarek, M. (2008). Gating motions in voltage-gated potassium channels revealed by coarse-grained molecular dynamics simulations. The Journal of Physical Chemistry B, 112(11), 3277-3282."
  },
  {
    "objectID": "docs/publications/entries/2008/Treptow2008_VoltageGatedKChannels.html#abstract",
    "href": "docs/publications/entries/2008/Treptow2008_VoltageGatedKChannels.html#abstract",
    "title": "Gating Motions in Voltage-Gated Potassium Channels Revealed by Coarse-Grained Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nVoltage-gated potassium (Kv) channels are ubiquitous transmembrane proteins involved in electric signaling of excitable tissues. A fundamental property of these channels is the ability to open or close in response to changes in the membrane potential. To date, their structure-based activation mechanism remains unclear, and there is a large controversy on how these gates function at the molecular level, in particular, how movements of the voltage sensor domain are coupled to channel gating. So far, all mechanisms proposed for this coupling are based on the crystal structure of the open voltage-gated Kv1.2 channel and structural models of the closed form based on electrophysiology experiments. Here, we use coarse-grain (CG) molecular dynamics simulations that allow conformational changes from the open to the closed form of the channel (embedded in its membrane environment) to be followed. Despite the low specificity of the CG force field, the obtained closed structure satisfies several experimental constraints. The overall results suggest a gating mechanism in which a lateral displacement the S4−S5 linker leads to a closing of the gate. Only a small up−down movement of the S4 helices is noticed. Additionally, the study suggests a peculiar upward motion of the intracellular tetramerization domain of the channel, hence providing a molecular view on how this domain may further regulate conduction in Kv channels."
  },
  {
    "objectID": "docs/publications/entries/2008/Risselada2008_LipidRafts.html",
    "href": "docs/publications/entries/2008/Risselada2008_LipidRafts.html",
    "title": "The molecular face of lipid rafts in model membranes",
    "section": "",
    "text": "Risselada, H. J., & Marrink, S. J. (2008). The molecular face of lipid rafts in model membranes. Proceedings of the National Academy of Sciences, 105(45), 17367-17372."
  },
  {
    "objectID": "docs/publications/entries/2008/Risselada2008_LipidRafts.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Risselada2008_LipidRafts.html#citation-apa-7",
    "title": "The molecular face of lipid rafts in model membranes",
    "section": "",
    "text": "Risselada, H. J., & Marrink, S. J. (2008). The molecular face of lipid rafts in model membranes. Proceedings of the National Academy of Sciences, 105(45), 17367-17372."
  },
  {
    "objectID": "docs/publications/entries/2008/Risselada2008_LipidRafts.html#abstract",
    "href": "docs/publications/entries/2008/Risselada2008_LipidRafts.html#abstract",
    "title": "The molecular face of lipid rafts in model membranes",
    "section": "Abstract",
    "text": "Abstract\nCell membranes contain a large number of different lipid species. Such a multicomponent mixture exhibits a complex phase behavior with regions of structural and compositional heterogeneity. Especially domains formed in ternary mixtures, composed of saturated and unsaturated lipids together with cholesterol, have received a lot of attention as they may resemble raft formation in real cells. Here we apply a simulation model to assess the molecular nature of these domains at the nanoscale, information that has thus far eluded experimental determination. We are able to show the spontaneous separation of a saturated phosphatidylcholine (PC)/unsaturated PC/cholesterol mixture into a liquid-ordered and a liquid-disordered phase with structural and dynamic properties closely matching experimental data. The near-atomic resolution of the simulations reveals remarkable features of both domains and the boundary domain interface. Furthermore, we predict the existence of a small surface tension between the monolayer leaflets that drives registration of the domains. At the level of molecular detail, raft-like lipid mixtures show a surprising face with possible implications for many cell membrane processes."
  },
  {
    "objectID": "docs/publications/entries/2008/Yefimov2008_Mechanosensitive.html",
    "href": "docs/publications/entries/2008/Yefimov2008_Mechanosensitive.html",
    "title": "Mechanosensitive Membrane Channels in Action",
    "section": "",
    "text": "Yefimov, S., Van der Giessen, E., Onck, P. R., & Marrink, S. J. (2008). Mechanosensitive membrane channels in action. Biophysical journal, 94(8), 2994-3002."
  },
  {
    "objectID": "docs/publications/entries/2008/Yefimov2008_Mechanosensitive.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Yefimov2008_Mechanosensitive.html#citation-apa-7",
    "title": "Mechanosensitive Membrane Channels in Action",
    "section": "",
    "text": "Yefimov, S., Van der Giessen, E., Onck, P. R., & Marrink, S. J. (2008). Mechanosensitive membrane channels in action. Biophysical journal, 94(8), 2994-3002."
  },
  {
    "objectID": "docs/publications/entries/2008/Yefimov2008_Mechanosensitive.html#abstract",
    "href": "docs/publications/entries/2008/Yefimov2008_Mechanosensitive.html#abstract",
    "title": "Mechanosensitive Membrane Channels in Action",
    "section": "Abstract",
    "text": "Abstract\nThe tension-driven gating process of MscL from Mycobacterium tuberculosis, Tb-MscL, has been addressed at near-atomic detail using coarse-grained molecular dynamics simulations. To perform the simulations, a novel coarse-grained peptide model based on a thermodynamic parameterization of the amino-acid side chains has been applied. Both the wild-type Tb-MscL and its gain-of-function mutant V21D embedded in a solvated lipid bilayer have been studied. To mimic hypoosmotic shock conditions, simulations were performed at increasing levels of membrane tension approaching the rupture threshold of the lipid bilayer. Both the wild-type and the mutant channel are found to undergo significant conformational changes in accordance with an irislike expansion mechanism, reaching a conducting state on a microsecond timescale. The most pronounced expansion of the pore has been observed for the V21D mutant, which is consistent with the experimentally shown gain-of-function phenotype of the V21D mutant."
  },
  {
    "objectID": "docs/publications/entries/2024/Pedersen2024_Martini3Lipidome.html",
    "href": "docs/publications/entries/2024/Pedersen2024_Martini3Lipidome.html",
    "title": "The Martini 3 Lipidome: Expanded and Refined Parameters Improve Lipid Phase Behavior",
    "section": "",
    "text": "Pedersen, K. B., Ingólfsson, H. I., Ramirez-Echemendia, D. P., Borges-Araújo, L., Andreasen, M. D., Empereur-Mot, C., … & Marrink, S. J. (2024). The Martini 3 lipidome: expanded and refined parameters improve lipid phase behavior."
  },
  {
    "objectID": "docs/publications/entries/2024/Pedersen2024_Martini3Lipidome.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Pedersen2024_Martini3Lipidome.html#citation-apa-7",
    "title": "The Martini 3 Lipidome: Expanded and Refined Parameters Improve Lipid Phase Behavior",
    "section": "",
    "text": "Pedersen, K. B., Ingólfsson, H. I., Ramirez-Echemendia, D. P., Borges-Araújo, L., Andreasen, M. D., Empereur-Mot, C., … & Marrink, S. J. (2024). The Martini 3 lipidome: expanded and refined parameters improve lipid phase behavior."
  },
  {
    "objectID": "docs/publications/entries/2024/Pedersen2024_Martini3Lipidome.html#abstract",
    "href": "docs/publications/entries/2024/Pedersen2024_Martini3Lipidome.html#abstract",
    "title": "The Martini 3 Lipidome: Expanded and Refined Parameters Improve Lipid Phase Behavior",
    "section": "Abstract",
    "text": "Abstract\nLipid membranes are central to cellular life. Complementing experiments, computational modeling has been essential in unraveling complex lipid-biomolecule interactions, crucial in both academia and industry. The Martini model, a coarse-grained force field for efficient molecular dynamics simulations, is widely used to study membrane phenomena but has faced limitations, particularly in capturing realistic lipid phase behavior. Here, we present refined Martini 3 lipid models with a mapping scheme that distinguishes lipid tails differing by just two carbon atoms, enhancing structural resolution and thermodynamic accuracy of model membrane systems including ternary mixtures. The expanded Martini lipid library includes thousands of models, enabling simulations of complex and biologically relevant systems. These advancements establish Martini as a robust platform for lipid-based simulations across diverse fields."
  },
  {
    "objectID": "docs/publications/entries/2024/Davoudi2024_Oxygen.html",
    "href": "docs/publications/entries/2024/Davoudi2024_Oxygen.html",
    "title": "Validation of a Coarse-Grained Martini 3 Model for Molecular Oxygen",
    "section": "",
    "text": "Davoudi, S., Vainikka, P. A., Marrink, S. J., & Ghysels, A. (2024). Validation of a Coarse-Grained Martini 3 Model for Molecular Oxygen. Journal of Chemical Theory and Computation, 21(1), 428-439."
  },
  {
    "objectID": "docs/publications/entries/2024/Davoudi2024_Oxygen.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Davoudi2024_Oxygen.html#citation-apa-7",
    "title": "Validation of a Coarse-Grained Martini 3 Model for Molecular Oxygen",
    "section": "",
    "text": "Davoudi, S., Vainikka, P. A., Marrink, S. J., & Ghysels, A. (2024). Validation of a Coarse-Grained Martini 3 Model for Molecular Oxygen. Journal of Chemical Theory and Computation, 21(1), 428-439."
  },
  {
    "objectID": "docs/publications/entries/2024/Davoudi2024_Oxygen.html#abstract",
    "href": "docs/publications/entries/2024/Davoudi2024_Oxygen.html#abstract",
    "title": "Validation of a Coarse-Grained Martini 3 Model for Molecular Oxygen",
    "section": "Abstract",
    "text": "Abstract\nMolecular oxygen (O2) is essential for life, and continuous effort has been made to understand its pathways in cellular respiration with all-atom (AA) molecular dynamics (MD) simulations of, e.g., membrane permeation or binding to proteins. To reach larger length scales with models, such as curved membranes in mitochondria or caveolae, coarse-grained (CG) simulations could be used at much lower computational cost than AA simulations. Yet a CG model for O2 is lacking. In this work, a CG model for O2 is therefore carefully selected from the Martini 3 force field based on criteria including size, zero charge, nonpolarity, solubility in nonpolar organic solvents, and partitioning in a phospholipid membrane. This chosen CG model for O2 (TC3 bead) is then further evaluated through the calculation of its diffusion constant in water and hexadecane, its permeability rate across pure phospholipid- and cholesterol-containing membranes, and its binding to the T4 lysozyme L99A protein. Our CG model shows semiquantitative agreement between CG diffusivity and permeation rates with the corresponding AA values and available experimental data. Additionally, it captures the binding to hydrophobic cavities of the protein, aligning well with the AA simulation of the same system. Thus, the results show that our O2 model approximates the behavior observed in the AA simulations. The CG O2 model is compatible with the widely used multifunctional Martini 3 force field for biological simulations, which will allow for the simulation of large biomolecular systems involved in O2’s transport in the body."
  },
  {
    "objectID": "docs/publications/entries/2024/Vreeker2024_Nanopores.html",
    "href": "docs/publications/entries/2024/Vreeker2024_Nanopores.html",
    "title": "Hybrid lipid-block copolymer membranes enable stable reconstitution of a wide range of nanopores and robust sampling of serum",
    "section": "",
    "text": "Vreeker, E., Grunewald, F., van der Heide, N., Marrink, S. J., Tych, K., & Maglia, G. (2024). Hybrid lipid-block copolymer membranes enable stable reconstitution of a wide range of nanopores and robust sampling of serum. bioRxiv, 2024-05."
  },
  {
    "objectID": "docs/publications/entries/2024/Vreeker2024_Nanopores.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Vreeker2024_Nanopores.html#citation-apa-7",
    "title": "Hybrid lipid-block copolymer membranes enable stable reconstitution of a wide range of nanopores and robust sampling of serum",
    "section": "",
    "text": "Vreeker, E., Grunewald, F., van der Heide, N., Marrink, S. J., Tych, K., & Maglia, G. (2024). Hybrid lipid-block copolymer membranes enable stable reconstitution of a wide range of nanopores and robust sampling of serum. bioRxiv, 2024-05."
  },
  {
    "objectID": "docs/publications/entries/2024/Vreeker2024_Nanopores.html#abstract",
    "href": "docs/publications/entries/2024/Vreeker2024_Nanopores.html#abstract",
    "title": "Hybrid lipid-block copolymer membranes enable stable reconstitution of a wide range of nanopores and robust sampling of serum",
    "section": "Abstract",
    "text": "Abstract\nBiological nanopores are powerful tools for detecting biomolecules at the single-molecule level, making them appealing as sensors for biological samples. However, the lipid membranes in which nanopores reside can be unstable in the presence of biological fluids. Here, membranes formed with the amphiphilic polymers PMOXA-PDMS-PMOXA and PBD-PEO are tested as potential alternatives for nanopore sensing. We demonstrate that polymer membranes can possess increased stability towards applied potentials and high concentrations of human serum, but that the stable insertion of a wide range of biological nanopores is most often compromised. Alternatively, hybrid polymer-lipid membranes comprising a 1:1 w/w mixture of PBD11PEO8 and DPhPC showed high electrical and biochemical stability while creating a suitable environment for all tested nanopores. Analytes such as proteins, DNA and sugars were efficiently sampled, indicating that in hybrid membranes nanopores showed native-like properties. Molecular dynamics simulations revealed that lipids form ∼12 nm domains interspersed by a polymer matrix. Nanopores partitioned into these lipid nanodomains and sequestered lipids possibly offering the same binding strength as in a native bilayer. This work shows that single-molecule analysis with nanopores in [PBD11PEO8 + DPhPC] membranes is feasible and present stable recordings in the presence of human serum. These results pave the way towards novel nanopore-based biosensors."
  },
  {
    "objectID": "docs/publications/entries/2024/van-der-Sleen2024_OpuA.html",
    "href": "docs/publications/entries/2024/van-der-Sleen2024_OpuA.html",
    "title": "Probing the stability and interdomain interactions in the ABC transporter OpuA, using single-molecule optical tweezers",
    "section": "",
    "text": "van der Sleen, L., Stevens, J. A., Marrink, S. J., Poolman, B., & Tych, K. (2024). Probing the stability and interdomain interactions in the ABC transporter OpuA using single-molecule optical tweezers. Cell reports, 43(4)."
  },
  {
    "objectID": "docs/publications/entries/2024/van-der-Sleen2024_OpuA.html#citation-apa-7",
    "href": "docs/publications/entries/2024/van-der-Sleen2024_OpuA.html#citation-apa-7",
    "title": "Probing the stability and interdomain interactions in the ABC transporter OpuA, using single-molecule optical tweezers",
    "section": "",
    "text": "van der Sleen, L., Stevens, J. A., Marrink, S. J., Poolman, B., & Tych, K. (2024). Probing the stability and interdomain interactions in the ABC transporter OpuA using single-molecule optical tweezers. Cell reports, 43(4)."
  },
  {
    "objectID": "docs/publications/entries/2024/van-der-Sleen2024_OpuA.html#abstract",
    "href": "docs/publications/entries/2024/van-der-Sleen2024_OpuA.html#abstract",
    "title": "Probing the stability and interdomain interactions in the ABC transporter OpuA, using single-molecule optical tweezers",
    "section": "Abstract",
    "text": "Abstract\nTransmembrane transporter proteins are essential for maintaining cellular homeostasis and, as such, are key drug targets. Many transmembrane transporter proteins are known to undergo large structural rearrangements during their functional cycles. Despite the wealth of detailed structural and functional data available for these systems, our understanding of their dynamics and, consequently, how they function is generally limited. We introduce an innovative approach that enables us to directly measure the dynamics and stability of interdomain interactions of transmembrane proteins using optical tweezers. Focusing on the osmoregulatory ATP-binding cassette transporter OpuA from Lactococcus lactis, we examine the mechanical properties and potential interactions of its substrate-binding domains. Our measurements are performed in lipid nanodiscs, providing a native-mimicking environment for the transmembrane protein. The technique provides high spatial and temporal resolution and allows us to study the functionally relevant motions and interdomain interactions of individual transmembrane transporter proteins in real time in a lipid bilayer."
  },
  {
    "objectID": "docs/publications/entries/2024/Korshunova2024_OliGomers.html",
    "href": "docs/publications/entries/2024/Korshunova2024_OliGomers.html",
    "title": "Martini 3 OliGo̅mers: A Scalable Approach for Multimers and Fibrils in GROMACS",
    "section": "",
    "text": "Korshunova, K., Kiuru, J., Liekkinen, J., Enkavi, G., Vattulainen, I., & Bruininks, B. M. (2024). Martini 3 OliGo̅mers: A Scalable Approach for Multimers and Fibrils in GROMACS. Journal of Chemical Theory and Computation."
  },
  {
    "objectID": "docs/publications/entries/2024/Korshunova2024_OliGomers.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Korshunova2024_OliGomers.html#citation-apa-7",
    "title": "Martini 3 OliGo̅mers: A Scalable Approach for Multimers and Fibrils in GROMACS",
    "section": "",
    "text": "Korshunova, K., Kiuru, J., Liekkinen, J., Enkavi, G., Vattulainen, I., & Bruininks, B. M. (2024). Martini 3 OliGo̅mers: A Scalable Approach for Multimers and Fibrils in GROMACS. Journal of Chemical Theory and Computation."
  },
  {
    "objectID": "docs/publications/entries/2024/Korshunova2024_OliGomers.html#abstract",
    "href": "docs/publications/entries/2024/Korshunova2024_OliGomers.html#abstract",
    "title": "Martini 3 OliGo̅mers: A Scalable Approach for Multimers and Fibrils in GROMACS",
    "section": "Abstract",
    "text": "Abstract\nMartini 3 is a widely used coarse-grained simulation method for large-scale biomolecular simulations. It can be combined with a Go̅ model to realistically describe higher-order protein structures while allowing the folding and unfolding events. However, as of today, this method has largely been used only for individual monomers. In this article, we describe how the Go̅ model can be implemented within the framework of Martini 3 for a multimer system, taking into account both intramolecular and intermolecular interactions in an oligomeric protein system. We demonstrate the method by showing how it can be applied to both structural stability maintenance and assembly/disassembly of protein oligomers, using aquaporin tetramer, insulin dimer, and amyloid-β fibril as examples. We find that addition of intermolecular Go̅ potentials stabilizes the quaternary structure of proteins. The strength of the Go̅ potentials can be tuned so that the internal fluctuations of proteins match the behavior of atomistic simulation models, however, the results also show that the use of too strong intermolecular Go̅ potentials weakens the chemical specificity of oligomerization. The Martini-Go̅ model presented here enables the use of Go̅ potentials in oligomeric molecular systems in a computationally efficient and parallelizable manner, especially in the case of homopolymers, where the number of identical protein monomers is high. This paves the way for coarse-grained simulations of large protein complexes, such as viral protein capsids and prion fibrils, in complex biological environments."
  },
  {
    "objectID": "docs/publications/entries/2024/Cofas-Vargas2024_SARS-Cov-2Nanobody.html",
    "href": "docs/publications/entries/2024/Cofas-Vargas2024_SARS-Cov-2Nanobody.html",
    "title": "Nanomechanical footprint of SARS-CoV-2 variants in complex with a potent nanobody by molecular simulations",
    "section": "",
    "text": "Cofas-Vargas, L. F., Olivos-Ramirez, G. E., Chwastyk, M., Moreira, R. A., Baker, J. L., Marrink, S. J., & Poma, A. B. (2024). Nanomechanical footprint of SARS-CoV-2 variants in complex with a potent nanobody by molecular simulations. Nanoscale, 16(40), 18824-18834."
  },
  {
    "objectID": "docs/publications/entries/2024/Cofas-Vargas2024_SARS-Cov-2Nanobody.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Cofas-Vargas2024_SARS-Cov-2Nanobody.html#citation-apa-7",
    "title": "Nanomechanical footprint of SARS-CoV-2 variants in complex with a potent nanobody by molecular simulations",
    "section": "",
    "text": "Cofas-Vargas, L. F., Olivos-Ramirez, G. E., Chwastyk, M., Moreira, R. A., Baker, J. L., Marrink, S. J., & Poma, A. B. (2024). Nanomechanical footprint of SARS-CoV-2 variants in complex with a potent nanobody by molecular simulations. Nanoscale, 16(40), 18824-18834."
  },
  {
    "objectID": "docs/publications/entries/2024/Cofas-Vargas2024_SARS-Cov-2Nanobody.html#abstract",
    "href": "docs/publications/entries/2024/Cofas-Vargas2024_SARS-Cov-2Nanobody.html#abstract",
    "title": "Nanomechanical footprint of SARS-CoV-2 variants in complex with a potent nanobody by molecular simulations",
    "section": "Abstract",
    "text": "Abstract\nRational design of novel antibody therapeutics against viral infections such as coronavirus relies on surface complementarity and high affinity for their effectiveness. Here, we explore an additional property of protein complexes, the intrinsic mechanical stability, in SARS-CoV-2 variants when complexed with a potent antibody. In this study, we utilized a recent implementation of the GōMartini 3 approach to investigate large conformational changes in protein complexes with a focus on the mechanostability of the receptor-binding domain (RBD) from WT, Alpha, Delta, and XBB.1.5 variants in complex with the H11-H4 nanobody. The analysis revealed moderate differences in mechanical stability among these variants. Also, we identified crucial residues in both the RBD and certain protein segments in the nanobody that contribute to this property. By performing pulling simulations and monitoring the presence of specific native and non-native contacts across the protein complex interface, we provided mechanistic insights into the dissociation process. Force-displacement profiles indicate a tensile force clamp mechanism associated with the type of protein complex. Our computational approach not only highlights the key mechanostable interactions that are necessary to maintain overall stability, but it also paves the way for the rational design of potent antibodies that are mechanostable and effective against emergent SARS-CoV-2 variants."
  },
  {
    "objectID": "docs/publications/entries/2024/van-Tilburg2024_Shocker.html",
    "href": "docs/publications/entries/2024/van-Tilburg2024_Shocker.html",
    "title": "Shocker-a molecular dynamics protocol and tool for accelerating and analyzing the effects of osmotic shocks",
    "section": "",
    "text": "van Tilburg, M. P., Marrink, S. J., König, M., & Grünewald, F. (2023). Shocker─ A Molecular Dynamics Protocol and Tool for Accelerating and Analyzing the Effects of Osmotic Shocks. Journal of Chemical Theory and Computation, 20(1), 212-223."
  },
  {
    "objectID": "docs/publications/entries/2024/van-Tilburg2024_Shocker.html#citation-apa-7",
    "href": "docs/publications/entries/2024/van-Tilburg2024_Shocker.html#citation-apa-7",
    "title": "Shocker-a molecular dynamics protocol and tool for accelerating and analyzing the effects of osmotic shocks",
    "section": "",
    "text": "van Tilburg, M. P., Marrink, S. J., König, M., & Grünewald, F. (2023). Shocker─ A Molecular Dynamics Protocol and Tool for Accelerating and Analyzing the Effects of Osmotic Shocks. Journal of Chemical Theory and Computation, 20(1), 212-223."
  },
  {
    "objectID": "docs/publications/entries/2024/van-Tilburg2024_Shocker.html#abstract",
    "href": "docs/publications/entries/2024/van-Tilburg2024_Shocker.html#abstract",
    "title": "Shocker-a molecular dynamics protocol and tool for accelerating and analyzing the effects of osmotic shocks",
    "section": "Abstract",
    "text": "Abstract\nThe process of osmosis, a fundamental phenomenon in life, drives water through a semipermeable membrane in response to a solute concentration gradient across this membrane. In vitro, osmotic shocks are often used to drive shape changes in lipid vesicles, for instance, to study fission events in the context of artificial cells. While experimental techniques provide a macroscopic picture of large-scale membrane remodeling processes, molecular dynamics (MD) simulations are a powerful tool to study membrane deformations at the molecular level. However, simulating an osmotic shock is a time-consuming process due to slow water diffusion across the membrane, making it practically impossible to examine its effects in classic MD simulations. In this article, we present Shocker, a Python-based MD tool for simulating the effects of an osmotic shock by selecting and relocating water particles across a membrane over the course of several pumping cycles. Although this method is primarily aimed at efficiently simulating volume changes in vesicles, it can also handle membrane tubes and double bilayer systems. Additionally, Shocker is force field-independent and compatible with both coarse-grained and all-atom systems. We demonstrate that our tool is applicable to simulate both hypertonic and hypotonic osmotic shocks for a range of vesicular and bilamellar setups, including complex multicomponent systems containing membrane proteins or crowded internal solutions."
  },
  {
    "objectID": "docs/publications/entries/2024/Pereira2024_Bartender.html",
    "href": "docs/publications/entries/2024/Pereira2024_Bartender.html",
    "title": "Bartender: Martini 3 Bonded Terms via Quantum Mechanics-based Molecular Dynamics",
    "section": "",
    "text": "Pereira, G. P., Alessandri, R., Domínguez, M., Araya-Osorio, R., Grünewald, L., Borges-Araújo, L., … & Mera-Adasme, R. (2024). Bartender: Martini 3 Bonded Terms via Quantum Mechanics-based Molecular Dynamics."
  },
  {
    "objectID": "docs/publications/entries/2024/Pereira2024_Bartender.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Pereira2024_Bartender.html#citation-apa-7",
    "title": "Bartender: Martini 3 Bonded Terms via Quantum Mechanics-based Molecular Dynamics",
    "section": "",
    "text": "Pereira, G. P., Alessandri, R., Domínguez, M., Araya-Osorio, R., Grünewald, L., Borges-Araújo, L., … & Mera-Adasme, R. (2024). Bartender: Martini 3 Bonded Terms via Quantum Mechanics-based Molecular Dynamics."
  },
  {
    "objectID": "docs/publications/entries/2024/Pereira2024_Bartender.html#abstract",
    "href": "docs/publications/entries/2024/Pereira2024_Bartender.html#abstract",
    "title": "Bartender: Martini 3 Bonded Terms via Quantum Mechanics-based Molecular Dynamics",
    "section": "Abstract",
    "text": "Abstract\nCoarse-grained (CG) molecular dynamics (MD) simulations have grown in applicability over the years. The recently released version of the Martini CG force field (Martini 3) has been successfully applied to simulate many processes, including protein-ligand binding. However, the current ligand parameterization scheme is manual and requires an a priori reference all-atom (AA) simulation for benchmarking. For systems with suboptimal AA parameters, which are often unknown, this translates into a CG model which does not reproduce the true dynamical behavior of the underlying molecule. Here we present Bartender, a quantum mechanics (QM)/MD-based parameterization tool written in Go. Bartender harnesses the power of QM simulations and produces reasonable bonded terms for Martini 3 CG models of small molecules in an efficient and user-friendly manner. For small, ring-like molecules, Bartender generates models whose properties are indistinguishable from the human-made models. For more complex, drug-like ligands, it is able to fit functional forms beyond simple harmonic dihedrals, and thus better captures their dynamical behavior. Bartender has the power to both increase the efficiency and the accuracy of Martini 3-based high-throughput applications by producing stable and physically realistic CG models."
  },
  {
    "objectID": "docs/publications/entries/2024/Nemchinova2024_GlnPQ.html",
    "href": "docs/publications/entries/2024/Nemchinova2024_GlnPQ.html",
    "title": "Exploring the Ligand Binding and Conformational Dynamics of the Substrate-Binding Domain 1 of the ABC Transporter GlnPQ",
    "section": "",
    "text": "Nemchinova, M., Schuurman-Wolters, G. K., Whittaker, J. J., Arkhipova, V., Marrink, S. J., Poolman, B., & Guskov, A. (2024). Exploring the Ligand Binding and Conformational Dynamics of the Substrate-Binding Domain 1 of the ABC Transporter GlnPQ. The Journal of Physical Chemistry B, 128(32), 7822-7832."
  },
  {
    "objectID": "docs/publications/entries/2024/Nemchinova2024_GlnPQ.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Nemchinova2024_GlnPQ.html#citation-apa-7",
    "title": "Exploring the Ligand Binding and Conformational Dynamics of the Substrate-Binding Domain 1 of the ABC Transporter GlnPQ",
    "section": "",
    "text": "Nemchinova, M., Schuurman-Wolters, G. K., Whittaker, J. J., Arkhipova, V., Marrink, S. J., Poolman, B., & Guskov, A. (2024). Exploring the Ligand Binding and Conformational Dynamics of the Substrate-Binding Domain 1 of the ABC Transporter GlnPQ. The Journal of Physical Chemistry B, 128(32), 7822-7832."
  },
  {
    "objectID": "docs/publications/entries/2024/Nemchinova2024_GlnPQ.html#abstract",
    "href": "docs/publications/entries/2024/Nemchinova2024_GlnPQ.html#abstract",
    "title": "Exploring the Ligand Binding and Conformational Dynamics of the Substrate-Binding Domain 1 of the ABC Transporter GlnPQ",
    "section": "Abstract",
    "text": "Abstract\nThe adenosine triphosphate (ATP)-binding cassette (ABC) importer GlnPQ from Lactococcus lactis has two sequential covalently linked substrate-binding domains (SBDs), which capture the substrates and deliver them to the translocon. The two SBDs differ in their ligand specificities, binding affinities and the distance to the transmembrane domain; interestingly, both SBDs can bind their ligands simultaneously without affecting each other. In this work, we studied the binding of ligands to both SBDs using X-ray crystallography and molecular dynamics simulations. We report three high-resolution structures of SBD1, namely, the wild-type SBD1 with bound asparagine or arginine, and E184D SBD1 with glutamine bound. Molecular dynamics (MD) simulations provide a detailed insight into the dynamics associated with open-closed transitions of the SBDs."
  },
  {
    "objectID": "docs/publications/entries/2024/Pedersen2024_OLIVES.html",
    "href": "docs/publications/entries/2024/Pedersen2024_OLIVES.html",
    "title": "OLIVES: A Go-like Model for Stabilizing Protein Structure via Hydrogen Bonding Native Contacts in the Martini 3 Coarse-Grained Force Field",
    "section": "",
    "text": "Pedersen, K. B., Borges-Araújo, L., Stange, A. D., Souza, P. C., Marrink, S. J., & Schiøtt, B. (2024). OLIVES: A Go-like model for stabilizing protein structure via hydrogen bonding native contacts in the Martini 3 coarse-grained force field. Journal of Chemical Theory and Computation, 20(18), 8049-8070."
  },
  {
    "objectID": "docs/publications/entries/2024/Pedersen2024_OLIVES.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Pedersen2024_OLIVES.html#citation-apa-7",
    "title": "OLIVES: A Go-like Model for Stabilizing Protein Structure via Hydrogen Bonding Native Contacts in the Martini 3 Coarse-Grained Force Field",
    "section": "",
    "text": "Pedersen, K. B., Borges-Araújo, L., Stange, A. D., Souza, P. C., Marrink, S. J., & Schiøtt, B. (2024). OLIVES: A Go-like model for stabilizing protein structure via hydrogen bonding native contacts in the Martini 3 coarse-grained force field. Journal of Chemical Theory and Computation, 20(18), 8049-8070."
  },
  {
    "objectID": "docs/publications/entries/2024/Pedersen2024_OLIVES.html#abstract",
    "href": "docs/publications/entries/2024/Pedersen2024_OLIVES.html#abstract",
    "title": "OLIVES: A Go-like Model for Stabilizing Protein Structure via Hydrogen Bonding Native Contacts in the Martini 3 Coarse-Grained Force Field",
    "section": "Abstract",
    "text": "Abstract\nCoarse-grained molecular dynamics simulations enable the modeling of increasingly complex systems at millisecond timescales. The transferable coarse-grained force field Martini 3 has shown great promise in modeling a wide range of biochemical processes, yet folded proteins in Martini 3 are not stable without the application of external bias potentials like elastic networks or Go-like models. We herein develop an algorithm, called OLIVES, which identifies native contacts with hydrogen bond capabilities in coarse-grained proteins and use it to implement a novel Go-like model for Martini 3. We show that the protein structure instability originates, in part, from the lack of hydrogen bond energy in the coarse-grained force field representation. By using realistic hydrogen bond energies obtained from literature ab initio calculations, it is demonstrated that protein stability can be recovered by the reintroduction of a coarse-grained hydrogen bond network and that OLIVES removes the need for secondary structure restraints. OLIVES is validated against known protein complexes, and at the same time addresses the open question of whether there is a need for protein quaternary structure bias in Martini 3 simulations. It is shown that OLIVES can reduce the number of bias terms, hereby speeding up Martini 3 simulations of proteins by up to ≈ 30 % on GPU architecture compared to the established GoMARTINI Go-like model."
  },
  {
    "objectID": "docs/publications/index.html",
    "href": "docs/publications/index.html",
    "title": "Publications",
    "section": "",
    "text": "Order By\n      Default\n      \n        Title\n      \n      \n        Author\n      \n      \n        Publication\n      \n      \n        Year\n      \n    \n  \n    \n      \n      \n    \n\n\n\n  \n    A systematic approach to parameterization of disaccharides for the Martini 3 coarse-grained force-field\n    Astrid F Brandner, Iain PS Smith, Siewert J Marrink, Paulo CT Souza, and Syma Khalid\n    Journal of Chemical Information and Modeling\n    (2025)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Hexokinase-I directly binds to a charged membrane-buried glutamate of mitochondrial VDAC1 and VDAC2\n    Sebastian Bieker, Michael Timme, Nils Woge, Dina G Hassan, Chelsea M Brown, Siewert J Marrink, Manuel N Melo, and Joost CM Holthuis\n    Communications Biology\n    (2025)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3 building blocks for Lipid Nanoparticle design\n    Lisbeth Ravnkilde Kjølbye, Mariana Valerio, Marketa Paloncyova, Luis Borges-Araujo, Roberto Pestana-Nobles, Fabian Grunewald, Bart MH Bruininks, Rocio Araya-Osorio, Martin Šrejber, Raul Mera-Adasme, Luca Monticelli, Siewert J Marrink, Michal Otyepka, Sangwook Wu, and Paulo CT Souza\n    chemRxiv\n    (2025)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Nanopore-Functionalized Hybrid Lipid-Block Copolymer Membranes Allow Efficient Single-Molecule Sampling and Stable Sensing of Human Serum\n    Edo Vreeker, Fabian Grünewald, Nieck Jordy van der Heide, Andrea Bonini, Siewert J. Marrink, Katarzyna (Kasia) Tych, and Giovanni Maglia\n    Advanced Materials\n    (2025)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    An integrative modelling approach to the mitochondrial cristae\n    Chelsea M Brown, Marieke SS Westendorp, Rubi Zarmiento-Garcia, Jan A Stevens, Sarah L Rouse, Siewert-Jan Marrink, Tsjerk A Wassenaar\n    bioRxiv\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Bartender: Martini 3 Bonded Terms via Quantum Mechanics-based Molecular Dynamics\n    Gilberto P Pereira, Riccardo Alessandri, Moisés Domínguez, Rocío Araya-Osorio, Linus Grünewald, Luís Borges-Araújo, Sangwook Wu, Siewert J Marrink, Paulo Cesar Telles de Souza, and Raul Mera-Adasme\n    Journal of Chemical Theory and Computation\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Benchmarking coarse-grained simulation methods for investigation of transport tunnels in enzymes\n    Nishita Mandal, Jan A. Stevens, Adolfo B. Poma, Bartlomiej Surpeta, Carlos Sequeiros-Borja, Aravind Selvaram Thirunavukarasu, Siewert-Jan Marrink, and Jan Brezovsky.\n    bioRxiv\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Building complex membranes with Martini 3\n    Tugba Nur Ozturk, Melanie König, Timothy S Carpenter, Kasper B Pedersen, Tsjerk A Wassenaar, Helgi I Ingólfsson, and Siewert J Marrink\n    Methods in Enzymology\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Capturing chemical reactions inside biomolecular condensates with reactive Martini simulations\n    Christopher Brasnett, Armin Kiani, Selim Sami, Sijbren Otto & Siewert J. Marrink\n    Communications Chemistry\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Exploring the Ligand Binding and Conformational Dynamics of the Substrate-Binding Domain 1 of the ABC Transporter GlnPQ\n    Mariia Nemchinova, Gea K. Schuurman-Wolters, Jacob J. Whittaker, Valentina Arkhipova, Siewert J. Marrink, Bert Poolman, and Albert Guskov\n    The Journal of Physical Chemistry B\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    GōMartini 3: From large conformational changes in proteins to environmental bias corrections\n    Paulo CT Souza, Luis P Borges Araujo, Chris Brasnett, Rodrigo A Moreira, Fabian Grunewald, Peter Park, Liguo Wang, Hafez Razmazma, Ana C Borges-Araujo, Luis F Cofas-Vargas, Luca Monticelli, Raul Mera-Adasme, Manuel N Melo, Sangwook Wu, Siewert J Marrink, Adolfo B Poma, and Sebastian Thallmair\n    bioRxiv\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n  \n\n  \n    Hybrid lipid-block copolymer membranes enable stable reconstitution of a wide range of nanopores and robust sampling of serum\n    Edo Vreeker, Fabian Grunewald, Nieck van der Heide, Siewert-Jan Marrink, Katarzyna Tych, and Giovanni Maglia\n    bioRxiv\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n  \n\n  \n    Martini 3 Coarse-Grained Model for the Cofactors Involved in Photosynthesis\n    Maria Gabriella Chiariello, Rubi Zarmiento-Garcia and Siewert-Jan Marrink\n    International Journal of Molecular Sciences\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3 OliGo̅mers: A Scalable Approach for Multimers and Fibrils in GROMACS\n    Ksenia Korshunova, Julius Kiuru, Juho Liekkinen, Giray Enkavi, Ilpo Vattulainen and Bart M. H. Bruininks\n    Journal of Chemical Theory and Computation\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3 coarse-grained models for carbon nanomaterials\n    Roshan Shrestha, Riccardo Alessandri, Martin Vögele, Paulo Souza, Siewert-Jan Marrink, and Luca Monticelli\n    chemRxiv\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Modeling membranes in situ\n    Chelsea M. Brown, and Siewert J. Marrink\n    Current Opinion in Structural Biology\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Nanomechanical footprint of SARS-CoV-2 variants in complex with a potent nanobody by molecular simulations\n    Luis F Cofas-Vargas, Gustavo E Olivos-Ramirez, Mateusz Chwastyk, Rodrigo A Moreira, Joseph L Baker, Siewert J Marrink, and Adolfo B Poma\n    Nanoscale\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    OLIVES: A Go-like Model for Stabilizing Protein Structure via Hydrogen Bonding Native Contacts in the Martini 3 Coarse-Grained Force Field\n    Kasper B Pedersen, Luís Borges-Araújo, Amanda D Stange, Paulo CT Souza, Siewert-Jan Marrink, and Birgit Schiøtt\n    Journal of Chemical Theory and Computation\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n  \n\n  \n    Oxygen partitioning into biomolecular condensates is governed by excluded volume\n    Ankush Garg, Christopher Brasnett, Siewert J Marrink, Klaus Koren, and Magnus Kjaergaard\n    bioRxiv\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n  \n\n  \n    Probing the stability and interdomain interactions in the ABC transporter OpuA, using single-molecule optical tweezers\n    Lyan van der Sleen, Jan Stevens, Siewert J Marrink, Bert Poolman, and Katarzyna Tych\n    Cell Reports\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Shocker-a molecular dynamics protocol and tool for accelerating and analyzing the effects of osmotic shocks\n    Marco PA van Tilburg, Siewert J Marrink, Melanie König, and Fabian Grünewald\n    Journal of Chemical Theory and Computation\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    The Martini 3 Lipidome: Expanded and Refined Parameters Improve Lipid Phase Behavior\n    Kasper B Pedersen, Helgi I Ingólfsson, Daniel P Ramirez-Echemendia, Luís Borges-Araújo, Mikkel D Andreasen, Charly Empereur-mot, Josef Melcr, Tugba N Ozturk, Drew WF Bennett, Lisbeth R Kjølbye, Christopher Brasnett, Valentina Corradi, Hanif M Khan, Elio A Cino, Jackson Crowley, Hyuntae Kim, Balázs Fábián, Ana C Borges-Araújo, Giovanni M Pavan, Fabio Lolicato, Tsjerk A Wassenaar, Manuel N Melo, Sebastian Thallmair, Timothy S Carpenter, Luca Monticelli, D Peter Tieleman, Birgit Schiøtt, Paulo CT Souza, and Siewert J Marrink\n    chemRxiv\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    There and back again: bridging meso- and nano-scales to understand lipid vesicle patterning\n    Julie Cornet, Nelly Coulonges, Weria Pezeshkian, Maël Penissat-Mahaut, Siewert-Jan Marrink, Nicolas Destainville, Matthieu Chavent, and Manoel Manghi\n    Soft Matter\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Validation of a Coarse-Grained Martini 3 Model for Molecular Oxygen\n    Samaneh Davoudi, Petteri A Vainikka, Siewert J Marrink, and An Ghysels\n    Journal of Chemical Theory and Computation\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Vesicle protrusion induced by antimicrobial peptides suggests common carpet mechanism for short antimicrobial peptides\n    Peter Park, Danilo Kiyoshi Matsubara, Domenico R Barzotto, Filipe S Lima, Hernan Chaimovich, Siewert Jan Marrink, and Iolanda M Cuccovia\n    Scientific Reports\n    (2024)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    A Guide to Titratable Martini Simulations\n    Selim Sami, Fabian Grünewald, Paulo C. T. Souza and Siewert J. Marrink\n    A Practical Guide to Recent Advances in Multiscale Modeling and Simulation of Biomolecules\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    A Practical Introduction to Martini 3 and its Application to Protein-Ligand Binding Simulations\n    Riccardo Alessandri, Sebastian Thallmair, Cristina Gil Herrero, Raúl Mera-Adasmem, Siewert J. Marrink and Paulo C. T. Souza\n    A Practical Guide to Recent Advances in Multiscale Modeling and Simulation of Biomolecules\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Automatic Optimization of Lipid Models in the Martini Force Field Using SwarmCG\n    Charly Empereur-mot, Kasper B. Pedersen, Riccardo Capelli, Martina Crippa, Cristina Caruso, Mattia Perrone, Paulo C. T. Souza, Siewert J. Marrink and Giovanni M. Pavan\n    Journal of chemical information and modeling\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    CRAFTing Delivery of Membrane Proteins into Protocells using Nanodiscs\n    Piotr Stępień, Sylwia Świątek, Manuel Yamil Yusef Robles, Joanna Markiewicz-Mizera, Dhanasekaran Balakrishnan, Satomi Inaba-Inoue, Alex H De Vries, Konstantinos Beis, Siewert J Marrink, and Jonathan G Heddle\n    ACS Applied Materials & Interfaces\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Curvature-induced lipid sorting beyond the critical packing parameter\n    Melanie Konig, Reinier de Vries, Fabian Grunewald, Siewert-Jan Marrink, and Weria Pezeshkian\n    bioRxiv\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n  \n\n  \n    Dynamics of chromosome organization in a minimal bacterial cell\n    Benjamin R. Gilbert, Zane R. Thornburg, Troy A. Brier, Jan A. Stevens, Fabian Grünewald, John E. Stone, Siewert J. Marrink and Zaida Luthey-Schulten\n    Frontiers in Cell and Developmental Biology\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Expulsion mechanism of the substrate-translocating subunit in ECF transporters\n    Chancievan Thangaratnarajah, Mark Nijland, Luís Borges-Araújo, Aike Jeucken, Jan Rheinberger, Siewert J. Marrink, Paulo C. T. Souza, Cristina Paulino & Dirk J. Slotboom\n    Nature Communications\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Facilitating CG Simulations with MAD: The MArtini Database Server\n    Cécile Hilpert, Louis Beranger, Paulo C. T. Souza, Petteri A. Vainikka, Vincent Nieto, Siewert J. Marrink, Luca Monticelli and Guillaume Launay\n    Journal of chemical information and modeling\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Identification of inhibitors targeting the energy-coupling factor (ECF) transporters\n    Eleonora Diamanti, Paulo C. T. Souza, Inda Setyawati, Spyridon Bousis, Leticia Monjas, Lotteke J.Y.M. Swier, Atanaz Shams, Aleksei Tsarenko, Weronika K. Stanek, Manuel Jäger, Siewert J. Marrink, Dirk J. Slotboom & Anna K. H. Hirsch\n    Communications biology\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Lateral membrane organization as target of an antimicrobial peptidomimetic compound\n    Adéla Melcrová, Sourav Maity, Josef Melcr, Niels A. W. de Kok, Mariella Gabler, Jonne van der Eyden, Wenche Stensen, John S. M. Svendsen, Arnold J. M. Driessen, Siewert J. Marrink & Wouter H. Roos\n    Nature Communications\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3 Coarse-Grained Force Field for Cholesterol\n    Luís Borges-Araújo, Ana C. Borges-Araújo, Tugba Nur Ozturk, Daniel P. Ramirez-Echemendia, Balázs Fábián, Timothy S. Carpenter, Sebastian Thallmair, Jonathan Barnoud, Helgi I. Ingólfsson, Gerhard Hummer, D. Peter Tieleman, Siewert J. Marrink, Paulo C. T. Souza, and Manuel N. Melo\n    Journal of Chemical Theory and Computation\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3 Coarse-Grained Model for Second-Generation Unidirectional Molecular Motors and Switches\n    Petteri Vainikka and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martinize2 and Vermouth: Unified Framework for Topology Generation\n    Peter C. Kroon, Fabian Grünewald, Jonathan Barnoud, Marco van Tilburg, Paulo C. T. Souza, Tsjerk A. Wassenaar, Siewert-Jan Marrink\n    eLife\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Membrane manipulation by free fatty acids improves microbial plant polyphenol synthesis\n    Apilaasha Tharmasothirajan, Josef Melcr, John Linney, Thomas Gensch, Karin Krumbach, Karla Marlen Ernst, Christopher Brasnett, Paola Poggi, Andrew R. Pitt, Alan D. Goddard, Alexandros Chatgilialoglu, Siewert J. Marrink & Jan Marienhagen\n    Nature Communications\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular architecture and dynamics of SARS-CoV-2 envelope by integrative modeling\n    Weria Pezeshkian, Fabian Grünewald, Oleksandr Narykov, Senbao Lu, Valeria Arkhipova, Alexey Solodovnikov, Tsjerk A. Wassenaar, Siewert J. Marrink and Dmitry Korkin\n    Structure\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular basis of PIP2-dependent conformational switching of phosphorylated CD44 in binding FERM\n    Meina Ren, Lina Zhao, Ziyi Ma, Hailong An, Siewert Jan Marrink and Fude Sun\n    Biophysical Journal\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular dynamics simulation of an entire cell\n    Jan A. Stevens, Fabian Grünewald, P. A. Marco van Tilburg, Melanie König, Benjamin R. Gilbert, Troy A. Brier, Zane R. Thornburg, Zaida Luthey-Schulten and Siewert J. Marrink\n    Frontiers in Chemistry\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Molecular insights into the effects of focused ultrasound mechanotherapy on lipid bilayers: Unlocking the keys to design effective treatment\n    Alexandre Blanco-González, Siewert J. Marrink, Ángel Piñeiro, Rebeca García-Fandiño\n    Journal of Colloid and Interface Science\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Multiscale simulations reveal TDP-43 molecularlevel interactions driving condensation\n    Helgi I. Ingólfsson, Azamat Rizuan, Xikun Liu, Priyesh Mohanty, Paulo C.T. Souza, Siewert J. Marrink, Michael T. Bowers, Jeetain Mittal, Joel Berry\n    Biophysical Journal\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Potential binding modes of the gut bacterial metabolite, 5-hydroxyindole, to the intestinal L-type calcium channels and its impact on the microbiota in rats\n    Barbora Waclawiková, Paulo Cesar Telles de Souza, Markus Schwalbe, Constantinos G. Neochoritis, Warner Hoornenborg, Sieger A. Nelemans, Siewert J. Marrink & Sahar El Aidy\n    Gut microbes\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Pragmatic Coarse-Graining of Proteins: Models and Applications\n    Luís Borges-Araújo, Ilias Patmanidis, Akhil P. Singh, Lucianna H. S. Santos, Adam K. Sieradzan, Stefano Vanni, Cezary Czaplewski, Sergio Pantano, Wataru Shinoda, Luca Monticelli, Adam Liwo, Siewert J. Marrink, and Paulo C. T. Souza\n    Journal of Chemical Theory and Computation\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Reactive Martini: Chemical Reactions in Coarse-Grained Molecular Dynamics Simulations\n    Selim Sami and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Synthetic Membrane Shaper for Controlled Liposome Deformation\n    Nicola De Franceschi, Weria Pezeshkian, Alessio Fragasso, Bart M. H. Bruininks, Sean Tsai, Siewert J. Marrink, and Cees Dekker\n    ACS nano\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Two decades of Martini: Better beads, broader scope\n    Siewert J. Marrink, Luca Monticelli, Manuel N. Melo, Riccardo Alessandri, D. Peter Tieleman and Paulo C. T. Souza\n    Wiley Interdisciplinary Reviews: Computational Molecular Science\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Watching Molecular Nanotubes Self-Assemble in Real Time\n    Marìck Manrho, Sundar Raj Krishnaswamy, Björn Kriete, Ilias Patmanidis, Alex H. de Vries, Siewert J. Marrink, Thomas L. C. Jansen, Jasper Knoester, and Maxim S. Pshenichnikov\n    Journal of the American Chemical Society\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    pH-Dependent Conformational Switch Impacts Stability of the PsbS Dimer\n    Maria Gabriella Chiariello, Fabian Grünewald, Rubi Zarmiento-Garcia, and Siewert J. Marrink\n    The Journal of Physical Chemistry Letters\n    (2023)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Complex nanoemulsion for vitamin delivery: droplet organization and interaction with skin membranes\n    Neila Machado, Bart M. H. Bruininks, Priyanka Singh, Laurita dos Santos, Carine Dal Pizzol, Gustavo de C. Dieamant, Odivania Kruger, Airton A. Martin, Siewert J. Marrink, Paulo C. T. Souza and Priscila P. Favero\n    Nanoscale\n    (2022)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3 Coarse-Grained Force Field for Carbohydrates\n    Fabian Grünewald, Mats H. Punt, Elizabeth E. Jefferys, Petteri A. Vainikka, Melanie König, Valtteri Virtanen, Travis A. Meyer, Weria Pezeshkian, Adam J. Gormley, Maarit Karonen, Mark S. P. Sansom, Paulo C. T. Souza and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2022)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3 Coarse-Grained Force Field: Small Molecules\n    Riccardo Alessandri, Jonathan Barnoud, Anders S. Gertsen, Ilias Patmanidis, Alex H. deVries, Paulo C. T. Souza, and Siewert J. Marrink\n    Advanced Theory and Simulations\n    (2022)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Membrane thickness, lipid phase and sterol type are determining factors in the permeability of membranes to small solutes\n    Jacopo Frallicciardi, Josef Melcr, Pareskevi Siginou, Siewert J. Marrink & Bert Poolman\n    Nature communications\n    (2022)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Modelling structural properties of cyanine dye nanotubes at coarse-grained level\n    Ilias Patmanidis, Paulo C. T. Souza, Selim Sami, Remco W. A. Havenith, Alex H. de Vries and Siewert J. Marrink\n    Nanoscale advances\n    (2022)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Polyply; a python suite for facilitating simulations of macromolecules and nanomaterials\n    Fabian Grünewald, Riccardo Alessandri, Peter C. Kroon, Luca Monticelli, Paulo C. T. Souza & Siewert J. Marrink\n    Nature communications\n    (2022)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Protein dynamics and lipid affinity of monomeric, zeaxanthin-binding LHCII in thylakoid membranes\n    Fatemeh Azadi-Chegeni, Sebastian Thallmair, Meaghan E. Ward, Giorgio Perin, Siewert J. Marrink, Marc Baldus, Tomas Morosinotto, Anjali Pandit\n    Biophysical journal\n    (2022)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Two cooperative binding sites sensitize PI(4,5)P2 recognition by the tubby domain\n    Veronika Thallmair, Lea Schultz, Wencai Zhao, Siewert J. Marrink, Dominik Oliver and Sebastian Thallmair\n    Science advances\n    (2022)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Asymmetric CorA gating mechanism as observed by molecular dynamics simulations\n    Mariia Nemchinova, Josef Melcr, Tsjerk A. Wassenaar, Siewert J. Marrink, and Albert Guskov\n    Journal of chemical information and modeling\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Bottom-up fabrication of a proteasome–nanopore that unravels and processes single proteins\n    Shengli Zhang, Gang Huang, Roderick Corstiaan Abraham Versloot, Bart Marlon Herwig Bruininks, Paulo Cesar Telles de Souza, Siewert-Jan Marrink & Giovanni Maglia\n    Nature chemistry\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Capturing Membrane Phase Separation by Dual Resolution Molecular Dynamics Simulations\n    Yang Liu, Alex H. de Vries, Weria Pezeshkian, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Coacervate formation studied by explicit solvent coarse-grain molecular dynamics with the Martini model\n    Maria Tsanai, Pim WJM Frederix, Carsten FE Schroer, Paulo CT Souza, Siewert J Marrink\n    Chemical Science\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Coarse-Grained Parameterization of Nucleotide Cofactors and Metabolites: Protonation Constants, Partition Coefficients, and Model Topologies\n    Filipe M Sousa, Luís MP Lima, Clément Arnarez, Manuela M Pereira, Manuel N Melo\n    Journal of Chemical Information and Modeling\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Development of Martini 2.2 parameters for N-glycans: A case study of the HIV-1 Env glycoprotein dynamics\n    Srirupa Chakraborty, Kshitij Wagh, S Gnanakaran, Cesar A López\n    Glycobiology\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Improved Parameterization of Phosphatidylinositide Lipid Headgroups for the Martini 3 Coarse-Grain Force Field\n    Luís Borges-Araújo, Paulo C. T. Souza, Fábio Fernandes, and Manuel N. Melo\n    Journal of Chemical Theory and Computation\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3 Coarse-Grained Model for Type III Deep Eutectic Solvents: Thermodynamic, Structural, and Extraction Properties\n    Petteri Vainikka, Sebastian Thallmair, Paulo Cesar Telles Souza, Siewert J Marrink\n    ACS Sustainable Chemistry & Engineering\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini 3: a general purpose force field for coarse-grained molecular dynamics\n    Paulo CT Souza, Riccardo Alessandri, Jonathan Barnoud, Sebastian Thallmair, Ignacio Faustino, Fabian Grünewald, Ilias Patmanidis, Haleh Abdizadeh, Bart MH Bruininks, Tsjerk A Wassenaar, Peter C Kroon, Josef Melcr, Vincent Nieto, Valentina Corradi, Hanif M Khan, Jan Domański, Matti Javanainen, Hector Martinez-Seara, Nathalie Reuter, Robert B Best, Ilpo Vattulainen, Luca Monticelli, Xavier Periole, D Peter Tieleman, Alex H de Vries, Siewert J Marrink\n    Nature Methods\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Nonconverged Constraints Cause Artificial Temperature Gradients in Lipid Bilayer Simulations\n    Sebastian Thallmair, Matti Javanainen, Balázs Fábián, Hector Martinez-Seara, and Siewert J. Marrink\n    The Journal of Physical Chemistry B\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Perspectives on high-throughput ligand/protein docking with martini MD simulations\n    Paulo C. T. Souza, Vittorio Limongelli, Sangwook Wu, Siewert J. Marrink and Luca Monticelli\n    Frontiers in Molecular Biosciences\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Protocol for Simulations of PEGylated Proteins with Martini 3\n    Fabian Grünewald, Peter C Kroon, Paulo CT Souza, Siewert J Marrink\n    Structural Genomics: Methods in Molecular Biology\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Sequential Voxel-Based Leaflet Segmentation of Complex Lipid Morphologies\n    Bart M. H. Bruininks*, Albert S. Thie, Paulo C. T. Souza, Tsjerk A. Wassenaar, Shirin Faraji, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Simulating realistic membrane shapes\n    Weria Pezeshkian and Siewert J. Marrink\n    Current opinion in cell biology\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Structure of the human signal peptidase complex reveals the determinants for signal peptide cleavage\n    A. Manuel Liaci, Barbara Steigenberger, Paulo Cesar Telles de Souza, Sem Tamara, Mariska Gröllers-Mulderij, Patrick Ogrissek, Siewert J. Marrink, Richard A. Scheltema and Friedrich Förster\n    Molecular cell\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    The Martini model in materials science\n    Riccardo Alessandri, Fabian Grünewald, Siewert J Marrink\n    Advanced Materials\n    (2021)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    A molecular view on the escape of lipoplexed DNA from the endosome\n    Bart MH Bruininks, Paulo CT Souza, Helgi Ingolfsson and Siewert J Marrink\n    Elife\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Backmapping triangulated surfaces to coarse-grained membrane models\n    Weria Pezeshkian, Melanie König, Tsjerk A Wassenaar, Siewert J Marrink\n    Nature communications\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Capturing Choline–Aromatics Cation− π Interactions in the MARTINI Force Field\n    Hanif M Khan, Paulo CT Souza, Sebastian Thallmair, Jonathan Barnoud, Alex H De Vries, Siewert J Marrink, Nathalie Reuter\n    Journal of Chemical Theory and Computation\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Caught in the Act: Mechanistic Insight into Supramolecular Polymerization-Driven Self-Replication from Real-Time Visualization\n    Sourav Maity, Jim Ottelé, Guillermo Monreal Santiago, Pim W. J. M. Frederix, Peter Kroon, Omer Markovitch, Marc C. A. Stuart, Siewert J. Marrink, Sijbren Otto, and Wouter H. Roos\n    Journal of the American Chemical Society\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Charge-dependent interactions of monomeric and filamentous actin with lipid bilayers\n    Carsten F. E. Schroer, Lucia Baldauf, Lennard van Buren, Tsjerk A. Wassenaar, Manuel N. Melo, Gijsje H. Koenderink, and Siewert J. Marrink\n    Proceedings of the National Academy of Sciences\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Coupling Coarse-Grained to Fine-Grained Models via Hamiltonian Replica Exchange\n    Yang Liu, Weria Pezeshkian, Jonathan Barnoud, Alex H de Vries, Siewert J Marrink\n    Journal of chemical theory and computation\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Dual Resolution Membrane Simulations Using Virtual Sites\n    Yang Liu, Alex H De Vries, Jonathan Barnoud, Weria Pezeshkian, Josef Melcr, Siewert J Marrink\n    The Journal of Physical Chemistry B\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Localization Preference of Antimicrobial Peptides on Liquid-Disordered Membrane Domains\n    Juanjuan Su, Siewert J. Marrink and Manuel N. Melo\n    Frontiers in cell and developmental biology\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Martini coarse-grained models of imidazolium-based ionic liquids: from nanostructural organization to liquid-liquid extraction\n    Luis Itza Vazquez-Salazar, Michele Selle, Alex H De Vries, Siewert-Jan Marrink, Paulo CT Souza\n    Green Chemistry\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Membrane mediated toppling mechanism of the folate energy coupling factor transporter\n    Ignacio Faustino, Haleh Abdizadeh, Paulo C. T. Souza, Aike Jeucken, Weronika K. Stanek, Albert Guskov, Dirk J. Slotboom & Siewert J. Marrink\n    Nature Communications\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular dynamics simulations in photosynthesis\n    Nicoletta Liguori, Roberta Croce, Siewert J. Marrink and Sebastian Thallmair\n    Photosynthesis research\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Molecular mechanism for bidirectional regulation of CD44 for lipid raft affiliation by palmitoylations and PIP2\n    Fude Sun, Carsten F. E. Schroer, Carlos R. Palacios, Lida Xu, Shi-Zhong Luo and Siewert J. Marrink\n    PLoS Computational Biology\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Piezo1 Forms Specific, Functionally Important Interactions with Phosphoinositides and Cholesterol\n    Amanda Buyan, Charles D. Cox, Jonathan Barnoud, Jinyuan Li, Hannah S.M. Chan, Boris Martinac, Siewert J. Marrink, Ben Corry\n    Biophysical journal\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Protein–ligand binding with the coarse-grained Martini model\n    Paulo CT Souza, Sebastian Thallmair, Paolo Conflitti, Carlos Ramírez-Palacios, Riccardo Alessandri, Stefano Raniolo, Vittorio Limongelli, Siewert J Marrink\n    Nature communications\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Resolving Donor–Acceptor Interfaces and Charge Carrier Energy Levels of Organic Semiconductors with Polar Side Chains\n    Riccardo Alessandri, Selim Sami, Jonathan Barnoud, Alex H. de Vries, Siewert J. Marrink and Remco W. A. Havenith\n    Advanced Functional Materials\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n       Preprint\n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Titratable Martini model for constant pH simulations\n    Fabian Grünewald, Paulo CT Souza, Haleh Abdizadeh, Jonathan Barnoud, Alex H de Vries, Siewert J Marrink\n    The Journal of Chemical Physics\n    (2020)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    A Multi-Scale Approach to Membrane Remodeling Processes\n    Weria Pezeshkian, Melanie König, Siewert J. Marrink and John H. Ipsen\n    Frontiers in molecular biosciences\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    A Practical View of the MARTINI Force Field\n    Bart MH Bruininks, Paulo CT Souza, Siewert J Marrink\n    Biomolecular Simulations\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    An Allosteric Pathway in Copper, Zinc Superoxide Dismutase Unravels the Molecular Mechanism of the G93A Amyotrophic Lateral Sclerosis-Linked Mutation\n    Paulo C. T. Souza, Sebastian Thallmair, Siewert J. Marrink, and Raúl Mera-Adasme\n    The journal of physical chemistry letters\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Ceramides bind VDAC2 to trigger mitochondrial apoptosis\n    Shashank Dadsena, Svenja Bockelmann, John G. M. Mina, Dina G. Hassan, Sergei Korneev, Guilherme Razzera, Helene Jahn, Patrick Niekamp, Dagmar Müller, Markus Schneider, Fikadu G. Tafesse, Siewert J. Marrink, Manuel N. Melo & Joost C. M. Holthuis\n    Nature Communications\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Computational Modeling of Realistic Cell Membranes\n    Siewert J. Marrink, Valentina Corradi, Paulo C.T. Souza, Helgi I. Ingólfsson, D. Peter Tieleman, and Mark S.P. Sansom\n    Chemical Reviews\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Emerging Diversity in Lipid–Protein Interactions\n    Valentina Corradi, Besian I. Sejdiu, Haydee Mesa-Galloso, Haleh Abdizadeh, Sergei Yu. Noskov, Siewert J. Marrink, and D. Peter Tieleman\n    Chemical reviews\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Gangliosides Destabilize Lipid Phase Separation in Multicomponent Membranes\n    Yang Liu, Jonathan Barnoud, and Siewert J. Marrink\n    Biophysical Journal\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Lipid Fingerprints and Cofactor Dynamics of Light Harvesting Complex II in Different Membranes\n    Sebastian Thallmair, Petteri A. Vainikka, and Siewert J. Marrink\n    Biophysical journal\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Nucleation Mechanisms of Self-Assembled Physisorbed Monolayers on Graphite\n    Tomasz K. Piskorz, Cristian Gobbo, Siewert J. Marrink, Steven De Feyter, Alex H. de Vries, and Jan H. van Esch\n    The Journal of Physical Chemistry C\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Pitfalls of the MARTINI Model\n    Riccardo Alessandri, Paulo Cesar Telles de Souza, Sebastian Thallmair, Manuel N Melo, Alex H De Vries, Siewert J Marrink\n    Journal of Chemical Theory and Computation\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    SWINGER: a clustering algorithm for concurrent coupling of atomistic and supramolecular liquids\n    Julija Zavadlav, Siewert J Marrink, Matej Praprotnik\n    Interface focus\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Serine Phosphorylation of L-Selectin Regulates ERM Binding, Clustering, and Monocyte Protrusion in Transendothelial Migration\n    Abigail Newe, Karolina Rzeniewicz, Melanie König, Carsten F. E. Schroer, Justin Joachim, Angela Rey-Gallardo, Siewert J. Marrink, Jürgen Deka, Maddy Parsons and Aleksandar Ivetic\n    \n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Two distinct anionic phospholipid-dependent events involved in SecA-mediated protein translocation\n    Sabrina Koch, Marten Exterkate, Cesar A. López, Megha Patro, Siewert J. Marrink and Arnold J.M. Driessen\n    Biochimica et Biophysica Acta (BBA)-Biomembranes\n    (2019)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Cholesterol Flip-Flop Impacts Domain Registration in Plasma Membrane Models\n    Sebastian Thallmair, Helgi I. Ingólfsson, and Siewert J. Marrink\n    The journal of physical chemistry letters\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Curvature-Induced Sorting of Lipids in Plasma Membrane Tethers\n    Svetlana Baoukina, Helgi I. Ingólfsson, Siewert J. Marrink and D. Peter Tieleman\n    Advanced Theory and Simulations\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Enhancing Molecular n-Type Doping of Donor–Acceptor Copolymers by Tailoring Side Chains\n    Jian Liu, Li Qiu, Riccardo Alessandri, Xinkai Qiu, Giuseppe Portale, JingJin Dong, Wytse Talsma, Gang Ye, Aprizal Akbar Sengrian, Paulo C. T. Souza, Maria Antonietta Loi, Ryan C. Chiechi, Siewert J. Marrink, Jan C. Hummelen, and L. Jan Anton Koster\n    Advanced Materials\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Lipid–Protein Interactions Are Unique Fingerprints for Membrane Proteins\n    Valentina Corradi, Eduardo Mendez-Villuendas, Helgi I. Ingólfsson, Ruo-Xu Gu, Iwona Siuda, Manuel N. Melo, Anastassiia Moussatova, Lucien J. DeGagné, Besian I. Sejdiu, Gurpreet Singh, Tsjerk A. Wassenaar, Karelia Delgado Magnero, Siewert J. Marrink, and D. Peter Tieleman\n    ACS Central Science\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular Dynamics of the Association of L-Selectin and FERM Regulated by PIP2\n    Fude Sun, Carsten F.E. Schroer, Lida Xu, Huiwei Yin, Siewert J. Marrink, and Shi-Zhong Luo\n    Biophysical journal\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular Mechanism of Lipid Nanodisk Formation by Styrene-Maleic Acid Copolymers\n    Minmin Xue, Lisheng Cheng, Ignacio Faustino, Wanlin Guo, and Siewert J. Marrink\n    Biophysical journal\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular simulations of self-assembling bio-inspired supramolecular systems and their connection to experiments\n    Pim W. J. M. Frederix, Ilias Patmanidis and Siewert J. Marrink\n    Chemical Society Reviews\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Role of Charge and Hydrophobicity in Liprotide Formation: A Molecular Dynamics Study with Experimental Constraints\n    Jannik Nedergaard Pedersen, Pim Wilhelmus Johannes Maria Frederix, Jan Skov Pedersen, Siewert Jan Marrink, and Daniel E. Otzen\n    ChemBioChem\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The N-terminal amphipathic helix of Pex11p self-interacts to induce membrane remodelling during peroxisome fission\n    Juanjuan Su, Ann S. Thomas, Tanja Grabietz, Christiane Landgraf, Rudolf Volkmer, Siewert J. Marrink, Chris Williams, and Manuel N. Melo\n    Biochimica et Biophysica Acta (BBA)-Biomembranes\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Transferable MARTINI Model of Poly (ethylene Oxide)\n    Fabian Grunewald, Giulia Rossi, Alex H de Vries, Siewert J Marrink, Luca Monticelli\n    The Journal of Physical Chemistry B\n    (2018)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Alcohol Interactions with Lipid Bilayers\n    Tomáš Kondela, Jana Gallová, Thomas Hauß, Jonathan Barnoud, Siewert-J. Marrink and Norbert Kučerka\n    Molecules\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Bulk Heterojunction Morphologies with Atomistic Resolution from Coarse-Grain Solvent Evaporation Simulations\n    Riccardo Alessandri, Jaakko J. Uusitalo, Alex H. de Vries, Remco W. A. Havenith, and Siewert J. Marrink\n    Journal of the American Chemical Society\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    CHARMM‐GUI MARTINI Maker for modeling and simulation of complex bacterial membranes with lipopolysaccharides\n    Pin‐Chia Hsu, Bart MH Bruininks, Damien Jefferies, Paulo Cesar Telles de Souza, Jumin Lee, Dhilon S Patel, Siewert J Marrink, Yifei Qi, Syma Khalid, Wonpil Im\n    Journal of Computational Chemistry\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Computational Lipidomics of the Neuronal Plasma Membrane\n    Helgi I. Ingólfsson, Timothy S. Carpenter, Harsh Bhatia, Peer-Timo Bremer, Siewert J. Marrink, and Felice C. Lightstone\n    Biophysical journal\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Design and Properties of Genetically Encoded Probes for Sensing Macromolecular Crowding\n    Boqun Liu, Christoffer Åberg, Floris J. van Eerden, Siewert J. Marrink, Bert Poolman, and Arnold J. Boersma\n    Biophysical journal\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Enhancing doping efficiency by improving host-dopant miscibility for fullerene-based n-type thermoelectrics\n    Li Qiu, Jian Liu, Riccardo Alessandri, Xinkai Qiu, Marten Koopmans, Remco W. A. Havenith, Siewert J. Marrink, Ryan C. Chiechi, L. Jan Anton Koster and  Jan C. Hummelen\n    Journal of materials chemistry A\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Exchange pathways of plastoquinone and plastoquinol in the photosystem II complex\n    Floris J. Van Eerden, Manuel N. Melo, Pim W. J. M. Frederix, Xavier Periole & Siewert J. Marrink\n    Nature Communications\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Ganglioside-Lipid and Ganglioside-Protein Interactions Revealed by Coarse-Grained and Atomistic Molecular Dynamics Simulations\n    Ruo-Xu Gu, Helgi I. Ingólfsson, Alex H. de Vries, Siewert J. Marrink, and D. Peter Tieleman\n    The Journal of Physical Chemistry B\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Lipid and Peptide Diffusion in Bilayers: The Saffman–Delbrück Model and Periodic Boundary Conditions\n    Richard M. Venable, Helgi I. Ingólfsson, Michael G. Lerner, B. Scott Perrin, Jr., Brian A. Camley, Siewert J. Marrink, Frank L. H. Brown, and Richard W. Pastor\n    The Journal of Physical Chemistry B\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    MARTINI coarse-grained force field: extension to RNA\n    Jaakko J Uusitalo, Helgi I Ingólfsson, Siewert J Marrink, Ignacio Faustino\n    Biophysical journal\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular Dynamics of Photosystem II Embedded in the Thylakoid Membrane\n    Floris J. van Eerden, Tom van den Berg, Pim W. J. M. Frederix, Djurre H. de Jong, Xavier Periole, and Siewert J. Marrink\n    The Journal of Physical Chemistry B\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Parameterization of palmitoylated cysteine, farnesylated cysteine, geranylgeranylated cysteine, and myristoylated glycine for the martini force field\n    Yoav Atsmon-Raz, D Peter Tieleman\n    The Journal of Physical Chemistry B\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Prediction of Thylakoid Lipid Binding Sites on Photosystem II\n    Floris J. Van Eerden, Manuel N. Melo, Pim W.J.M. Frederix, and Siewert J. Marrink\n    Biophysical journal\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Stability and dynamics of membrane-spanning DNA nanopores\n    Vishal Maingi, Jonathan R. Burns, Jaakko J. Uusitalo, Stefan Howorka, Siewert J. Marrink & Mark S. P. Sansom\n    Nature Communications\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    cgHeliParm: analysis of dsDNA helical parameters for coarse-grained MARTINI molecular dynamics simulations\n    Ignacio Faustino, and S J Marrink\n    Bioinformatics\n    (2017)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Adaptive Resolution Simulation of Supramolecular Water: The Concurrent Making, Breaking, and Remaking of Water Bundles\n    Julija Zavadlav, Siewert J. Marrink, and Matej Praprotnik\n    Journal of chemical theory and computation\n    (2016)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Adaptive resolution simulation of an atomistic DNA molecule in MARTINI salt solution\n    J. Zavadlav, R. Podgornik, M.N. Melo, S.J. Marrink & M. Praprotnik\n    The European Physical Journal Special Topics\n    (2016)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Computational ‘microscopy’ of cellular membranes\n    Helgi I. Ingólfsson, Clément Arnarez, Xavier Periole, and Siewert J. Marrink\n    Journal of cell science\n    (2016)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    MARTINI straight: Boosting performance using a shorter cutoff and GPUs\n    Djurre H De Jong, Svetlana Baoukina, Helgi I Ingólfsson, Siewert J Marrink\n    Computer Physics Communications\n    (2016)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Molecular mechanism of cardiolipin-mediated assembly of respiratory chain supercomplexes\n    C. Arnarez, S. J. Marrink and X. Periole\n    Chemical Science\n    (2016)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Adaptive resolution simulation of polarizable supramolecular coarse-grained water models\n    Julija Zavadlav, Manuel N. Melo, Siewert J. Marrink, and Matej Praprotnik\n    The Journal of Chemical Physics\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Atomistic and Coarse Grain Topologies for the Cofactors Associated with the Photosystem II Core Complex\n    Djurre H. de Jong, Nicoletta Liguori, Tom van den Berg, Clement Arnarez, Xavier Periole, and Siewert J. Marrink\n    The Journal of Physical Chemistry B\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Benchmark of Schemes for Multiscale Molecular Dynamics Simulations\n    N. Goga, M. N. Melo, A. J. Rzepiela, A. H. de Vries†, A. Hadar, S. J. Marrink, and H. J. C. Berendsen\n    Journal of Chemical Theory and Computation\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    CHARMM-GUI Martini Maker for Coarse-Grained Simulations with the Martini Force Field\n    Yifei Qi, Helgi I. Ingólfsson, Xi Cheng, Jumin Lee, Siewert J. Marrink, and Wonpil Im\n    Journal of Chemical Theory and Computation\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Characterization of thylakoid lipid membranes from cyanobacteria and higher plants by molecular dynamics simulations\n    Floris J. van Eerden, Djurre H. de Jong, Alex H. de Vries, Tsjerk A. Wassenaar, and Siewert J. Marrink\n    Biochimica et Biophysica Acta (BBA)-Biomembranes\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Computational Lipidomics with insane: A Versatile Tool for Generating Custom Membranes for Molecular Simulations\n    Tsjerk A. Wassenaar, Helgi I. Ingólfsson, Rainer A. Böckmann, D. Peter Tieleman, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Dry Martini, a Coarse-Grained Force Field for Lipid Membrane Simulations with Implicit Solvent\n    Clément Arnarez, Jaakko J. Uusitalo, Marcelo F. Masman, Helgi I. Ingólfsson, Djurre H. de Jong, Manuel N. Melo, Xavier Periole, Alex H. de Vries, and Siewert J. Marrink\n    Journal of chemical theory and computation\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    High-Throughput Simulations of Dimer and Trimer Assembly of Membrane Proteins. The DAFT Approach\n    Tsjerk A. Wassenaar, Kristyna Pluhackova, Anastassiia Moussatova, Durba Sengupta, Siewert J. Marrink, D. Peter Tieleman, and Rainer A. Böckmann\n    Journal of Chemical Theory and Computation\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Martini Coarse-Grained Force Field: Extension to DNA\n    Jaakko J. Uusitalo, Helgi I. Ingólfsson, Parisa Akhshi, D. Peter Tieleman, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Parameters for MARTINI sterols and hopanoids based on a virtual-site description\n    MN Melo, HI Ingólfsson, SJ Marrink\n    The Journal of Chemical Physics\n    (2015)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Adaptive Resolution Simulation of MARTINI Solvents\n    Julija Zavadlav, Manuel N. Melo, Ana V. Cunha, Alex H. de Vries, Siewert J. Marrink, and Matej Praprotnik\n    Journal of Chemical Theory and Computation\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Adaptive resolution simulation of an atomistic protein in MARTINI water\n    Julija Zavadlav, Manuel Nuno Melo, Siewert J. Marrink, and Matej Praprotnik\n    The Journal of chemical physics\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Disaccharides Impact the Lateral Organization of Lipid Membranes\n    Gemma Moiset, Cesar A. López, Rianne Bartelds, Lukasz Syga, Egon Rijpkema, Abhishek Cukkemane, Marc Baldus, Bert Poolman, and Siewert J. Marrink\n    Journal of the American Chemical Society\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Global structural changes of an ion channel during its gating are followed by ion mobility mass spectrometry\n    Albert Konijnenberg, Duygu Yilmaz, Helgi I. Ingólfsson, Anna Dimitrova, Siewert J. Marrink, Zhuolun Li, Catherine Vénien-Bryan, Frank Sobott, and Armağan Koçer\n    Proceedings of the National Academy of Sciences\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Going Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models\n    Tsjerk A. Wassenaar, Kristyna Pluhackova, Rainer A. Böckmann, Siewert J. Marrink, and D. Peter Tieleman\n    Journal of Chemical Theory and Computation\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Helfrich model of membrane bending: From Gibbs theory of liquid interfaces to membranes as thick anisotropic elastic layers\n    Felix Campelo, Clement Arnarez, Siewert J. Marrink, and Michael M. Kozlov\n    Advances in colloid and interface science\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Hydrophobic Compounds Reshape Membrane Domains\n    Jonathan Barnoud, Giulia Rossi, Siewert J. Marrink, and Luca Monticelli\n    PLoS Computational Biology\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Lipid Organization of the Plasma Membrane\n    Helgi I. Ingólfsson, Manuel N. Melo, Floris J. van Eerden, Clément Arnarez, Cesar A. Lopez, Tsjerk A. Wassenaar, Xavier Periole, Alex H. de Vries, D. Peter Tieleman, and Siewert J. Marrink\n    Journal of the American Chemical Society\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    MARTINI Coarse-Grained Model for Crystalline Cellulose Microfibers\n    César A. López, Giovanni Bellesia, Antonio Redondo, Paul Langan, Shishir P. S. Chundawat, Bruce E. Dale, Siewert J. Marrink, and S. Gnanakaran\n    The Journal of Physical Chemistry B\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Phytochemicals Perturb Membranes and Promiscuously Alter Protein Function\n    Helgi I. Ingólfsson, Pratima Thakur, Karl F. Herold, E. Ashley Hobart, Nicole B. Ramsey, Xavier Periole, Djurre H. de Jong, Martijn Zwama, Duygu Yilmaz, Katherine Hall, Thorsten Maretzky, Hugh C. Hemmings, Jr., Carl Blobel, Siewert J. Marrink, Armağan Koçer, Jon T. Sack, and Olaf S. Andersen\n    ACS Chemical Biology\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Simulation of polyethylene glycol and calcium-mediated membrane fusion\n    Martina Pannuzzo, Djurre H. De Jong, Antonio Raudino, and Siewert J. Marrink\n    The Journal of Chemical Physics\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The activation mode of the mechanosensitive ion channel, MscL, by lysophosphatidylcholine differs from tension-induced gating\n    Nobina Mukherjee, Mac Donald Jose, Jan Peter Birkner, Martin Walko, Helgi I. Ingólfsson, Anna Dimitrova, Clément Arnarez, Siewert J. Marrink, and Armağan Koçer\n    The FASEB Journal\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The power of coarse graining in biomolecular simulations\n    Helgi I. Ingólfsson, Cesar A. Lopez, Jaakko J. Uusitalo, Djurre H. de Jong, Srinivasa M. Gopal, Xavier Periole, and Siewert J. Marrink\n    Wiley Interdisciplinary Reviews: Computational Molecular Science\n    (2014)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Anomalous viscosity effect in the early stages of the ion-assisted adhesion/fusion event between lipid bilayers: A theoretical and computational study\n    Antonio Raudino, Siewert J. Marrink, and Martina Pannuzzo\n    The Journal of Chemical Physics\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Coarse-grain modelling of protein–protein interactions\n    Marc Baaden, Siewert J Marrink\n    Current Opinion in Structural Biology\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Computational microscopy of cyclodextrin mediated cholesterol extraction from lipid model membranes\n    Cesar A. López, Alex H. de Vries & Siewert J. Marrink\n    Scientific reports\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Evidence for Cardiolipin Binding Sites on the Membrane-Exposed Surface of the Cytochrome bc1\n    Clement Arnarez, Jean-Pierre Mazat, Juan Elezgaray, Siewert-J Marrink, and Xavier Periole\n    Journal of the American Chemical Society\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Gaussian curvature elasticity determined from global shape transformations and local stress distributions: a comparative study using the MARTINI model\n    Mingyang Hu, Djurre H. de Jong, Siewert J. Marrink and Markus Deserno\n    Faraday Discussions\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Identification of cardiolipin binding sites on cytochrome c oxidase at the entrance of proton channels\n    Clement Arnarez, Siewert-J Marrink, and Xavier Periole\n    Scientific Reports\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Improved Angle Potentials for Coarse-Grained Molecular Dynamics Simulations\n    Monica Bulacu, Nicolae Goga, Wei Zhao, Giulia Rossi, Luca Monticelli, Xavier Periole, D. Peter Tieleman, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Improved Parameters for the Martini Coarse-Grained Protein Force Field\n    Djurre H. de Jong, Gurpreet Singh, W. F. Drew Bennett, Clement Arnarez, Tsjerk A. Wassenaar, Lars V. Schäfer, Xavier Periole, D. Peter Tieleman, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Interbilayer repulsion forces between tension-free lipid bilayers from simulation\n    Yuliya G. Smirnova, Sebastian Aeffner, Herre Jelger Risselada, Tim Salditt, Siewert-Jan Marrink, Marcus Müller, and Volker Knecht\n    Soft Matter\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    MARTINI Model for Physisorption of Organic Molecules on Graphite\n    Cristian Gobbo, Isabelle Beurroies, David de Ridder, Rienk Eelkema, Siewert J. Marrink, Steven De Feyter, Jan H. van Esch, and Alex H. de Vries\n    The Journal of Physical Chemistry C\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Martini Force Field Parameters for Glycolipids\n    César A. López, Zofie Sovova, Floris J. van Eerden, Alex H. de Vries, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Mixing MARTINI: Electrostatic Coupling in Hybrid Atomistic–Coarse-Grained Biomolecular Simulations\n    Tsjerk A. Wassenaar, Helgi I. Ingólfsson, Marten Prieß, Siewert J. Marrink, and Lars V. Schäfer\n    The Journal of Physical Chemistry B\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Molecular view on protein sorting into liquid-ordered membrane domains mediated by gangliosides and lipid anchors\n    Djurre H. de Jong, Cesar A. Lopez and Siewert J. Marrink\n    Faraday Discussions\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Perspective on the Martini model\n    Siewert J. Marrink and D. Peter Tieleman\n    Chemical Society Reviews\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The Martini Coarse-Grained Force Field\n    Xavier Periole & Siewert-Jan Marrink\n    Biomolecular simulations: Methods and protocols\n    (2013)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Dimerization of Amino Acid Side Chains: Lessons from the Comparison of Different Force Fields\n    Djurre H. de Jong, Xavier Periole, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2012)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    In Silico Design of Robust Bolalipid Membranes\n    Monica Bulacu, Xavier Périole, and Siewert J. Marrink\n    Biomacromolecules\n    (2012)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Line-Tension Controlled Mechanism for Influenza Fusion\n    Herre Jelger Risselada, Giovanni Marelli, Marc Fuhrmans, Yuliya G. Smirnova, Helmut Grubmüller, Siewert Jan Marrink, and Marcus Müller\n    PLoS One\n    (2012)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Molecular Structure of Membrane Tethers\n    Svetlana Baoukina, Siewert J. Marrink, and D. Peter Tieleman\n    Biophysical journal\n    (2012)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Molecular View of the Role of Fusion Peptides in Promoting Positive Membrane Curvature\n    Marc Fuhrmans and Siewert J. Marrink\n    Journal of the American Chemical Society\n    (2012)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Structural Determinants of the Supramolecular Organization of G Protein-Coupled Receptors in Bilayers\n    Xavier Periole, Adam M. Knepp, Thomas P. Sakmar, Siewert J. Marrink, and Thomas Huber\n    Journal of the American Chemical Society\n    (2012)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Structural Investigation of MscL Gating Using Experimental Data and Coarse Grained MD Simulations\n    Evelyne Deplazes, Martti Louhivuori, Dylan Jayatilaka, Siewert J. Marrink, and Ben Corry\n    PLoS Computational Biology\n    (2012)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Transmembrane helices can induce domain formation in crowded model membranes\n    Jan Domański, Siewert J. Marrink, and Lars V. Schäfer\n    Biochimica et Biophysica Acta (BBA)-Biomembranes\n    (2012)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Curvature-Dependent Elastic Properties of Liquid-Ordered Domains Result in Inverted Domain Sorting on Uniaxially Compressed Vesicles\n    H. Jelger Risselada, Siewert Jan Marrink, and Marcus Müller\n    Physical review letters\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n    \n       Materials\n    \n    \n  \n\n  \n    Hybrid simulations: combining atomistic and coarse-grained force fields using virtual sites\n    Andrzej J. Rzepiela, Martti Louhivuori, Christine Peter and Siewert J. Marrink\n    Physical Chemistry Chemical Physics\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Lipid Acrobatics in the Membrane Fusion Arena\n    Albert J. Markvoort, and Siewert J. Marrink\n    Current Topics in Membranes\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Lipid packing drives the segregation of transmembrane helices into disordered lipid domains in model membranes\n    Lars V. Schäfer, Djurre H. de Jong, Andrea Holt, Andrzej J. Rzepiela, Alex H. de Vries, Bert Poolman, J. Antoinette Killian, and Siewert J. Marrink\n    Proceedings of the National Academy of Sciences\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Low density lipoprotein: structure, dynamics, and interactions of apoB-100 with lipids\n    Teemu Murtola, Timo A. Vuorela, Marja T. Hyvönen, Siewert-Jan Marrink, Mikko Karttunenf and Ilpo Vattulainen\n    Soft Matter\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Protein Shape Change Has a Major Effect on the Gating Energy of a Mechanosensitive Channel\n    O.H. Samuli Ollila, Martti Louhivuori, Siewert J. Marrink, and Ilpo Vattulainen\n    Biophysical journal\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Protofibrillar Assembly Toward the Formation of Amyloid Fibrils\n    Jesper Sørensen, Xavier Periole, Katrine K. Skeby, Siewert-J. Marrink, and Birgit Schiøtt\n    The Journal of Physical Chemistry Letters\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Sphere-to-Rod Transitions of Nonionic Surfactant Micelles in Aqueous Solution Modeled by Molecular Dynamics Simulations\n    Maria Velinova, Durba Sengupta, Alia V. Tadjer, and Siewert-Jan Marrink\n    Langmuir\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The effect of aliphatic alcohols on fluid bilayers in unilamellar DOPC vesicles — A small-angle neutron scattering and molecular dynamics study\n    M. Klacsová, M. Bulacu, N. Kučerka, D. Uhríková, J. Teixeira, S.J. Marrink, and P. Balgavý\n    Biochimica et Biophysica Acta (BBA)-Biomembranes\n    (2011)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Antimicrobial Peptides Induce Growth of Phosphatidylglycerol Domains in a Model Bacterial Membrane\n    Anton A. Polyansky, Rajesh Ramaswamy, Pavel E. Volynsky, Ivo F. Sbalzarini, Siewert J. Marrink, and Roman G. Efremov\n    The Journal of Physical Chemistry Letters\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Cholesterol in Bilayers with PUFA Chains: Doping with DMPC or POPC Results in Sterol Reorientation and Membrane-Domain Formation\n    Norbert Kučerka, Drew Marquardt, Thad A. Harroun, Mu-Ping Nieh, Stephen R. Wassall, Djurre H. de Jong, Lars V. Schäfer, Siewert J. Marrink, and John Katsaras\n    Biochemistry\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Comment on “On using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models” by M. Winger, D. Trzesniak, R. Baron and W. F. van Gunsteren, Phys. Chem. Chem. Phys., 2009, 11, 1934\n    Siewert J. Marrink,a   Xavier Periole,a   D. Peter Tielemanb  and  Alex H. de Vriesa  \n    Physical Chemistry Chemical Physics\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Concerted diffusion of lipids in raft-like membranes\n    Touko Apajalahti, Perttu Niemelä, Praveen Nedumpully Govindan, Markus S. Miettinen, Emppu Salonen, Siewert-Jan Marrink and Ilpo Vattulainen\n    Faraday discussions\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Effects of bundling on the properties of the SPC water model\n    Marc Fuhrmans, Barbara P. Sanders, Siewert-Jan Marrink & Alex H. de Vries\n    Theoretical Chemistry Accounts\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Immobilization of the Plug Domain Inside the SecY Channel Allows Unrestricted Protein Translocation\n    Jelger A. Lycklama a Nijeholt, Monica Bulacu, Siewert Jan Marrink, and Arnold J.M. Driessen\n    Journal of biological chemistry\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Influence of Hydrophobic Mismatch and Amino Acid Composition on the Lateral Diffusion of Transmembrane Peptides\n    Sivaramakrishnan Ramadurai, Andrea Holt, Lars V. Schäfer, Victor V. Krasnikov, Dirk T.S. Rijkers, Siewert J. Marrink, J. Antoinette Killian, and Bert Poolman\n    Biophysical journal\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Lateral pressure profiles in lipid monolayers\n    Svetlana Baoukina, Siewert J. Marrink and D. Peter Tieleman\n    Faraday discussions\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Lipid-mediated interactions tune the association of glycophorin A helix and its disruptive mutants in membranes\n    Durba Sengupta and Siewert J. Marrink\n    Physical Chemistry Chemical Physics\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Membrane poration by antimicrobial peptides combining atomistic and coarse-grained descriptions\n    Andrzej J. Rzepiela, Durba Sengupta, Nicolae Goga and Siewert J. Marrink\n    Faraday discussions\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Partitioning of Lipids at Domain Boundaries in Model Membranes\n    Lars V. Schäfer and Siewert J. Marrink\n    Biophysical journal\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Polarizable Water Model for the Coarse-Grained MARTINI Force Field\n    Semen O. Yesylevskyy, Lars V. Schäfer, Durba Sengupta, and Siewert J. Marrink\n    PLoS computational biology\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Reconstruction of atomistic details from coarse-grained structures\n    Andrzej J. Rzepiela, Lars V. Schäfer, Nicolae Goga, H. Jelger Risselada, Alex H. De Vries, and Siewert J. Marrink\n    Journal of computational chemistry\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Release of content through mechano-sensitive gates in pressurized liposomes\n    Martti Louhivuori, H. Jelger Risselada, Erik van der Giessen, and Siewert J. Marrink\n    Proceedings of the National Academy of Sciences\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Role of Lipids in Spheroidal High Density Lipoproteins\n    Timo Vuorela, Andrea Catte, Perttu S. Niemelä, Anette Hall, Marja T. Hyvönen, Siewert-Jan Marrink, Mikko Karttunen, and Ilpo Vattulainen\n    PLoS Computational Biology\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Solvent-Exposed Tails as Prestalk Transition States for Membrane Fusion at Low Hydration\n    Yuliya G. Smirnova, Siewert-Jan Marrink, Reinhard Lipowsky, and Volker Knecht\n    Journal of the American Chemical Society\n    (2010)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    3D Pressure Field in Lipid Membranes and Membrane-Protein Complexes\n    O. H. Samuli Ollila, H. Jelger Risselada, Martti Louhivuori, Erik Lindahl, Ilpo Vattulainen, and Siewert J. Marrink\n    Physical review letters\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    A Coarse-Grained Model for Polyethylene Oxide and Polyethylene Glycol: Conformation and Hydrodynamics\n    Hwankyu Lee, Alex H. de Vries, Siewert-Jan Marrink, and Richard W. Pastor\n    The Journal of Physical Chemistry B\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    A Single Bicontinuous Cubic Phase Induced by Fusion Peptides\n    Marc Fuhrmans, Volker Knecht, and Siewert J. Marrink\n    Journal of the American Chemical Society\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Areas of Monounsaturated Diacylphosphatidylcholines\n    Norbert Kučerka, Jana Gallová, Daniela Uhríková, Pavol Balgavý, Monica Bulacu, Siewert-Jan Marrink, and John Katsaras\n    Biophysical Journal\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition\n    Xavier Periole, Marco Cavalli, Siewert-Jan Marrink, and Marco A. Ceruso\n    Journal of Chemical Theory and Computation\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Curvature effects on lipid packing and dynamics in liposomes revealed by coarse grained molecular dynamics simulations\n    H. Jelger Risselada and Siewert J. Marrink\n    Physical Chemistry Chemical Physics\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Location, Tilt, and Binding: A Molecular Dynamics Study of Voltage-Sensitive Dyes in Biomembranes\n    Marlon J. Hinner, Siewert-J. Marrink, and Alex H. de Vries\n    The Journal of Physical Chemistry B\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Martini Coarse-Grained Force Field: Extension to Carbohydrates\n    Cesar A. López, Andrzej J. Rzepiela, Alex H. de Vries, Lubbert Dijkhuizen, Philippe H. Hünenberger, and Siewert J. Marrink\n    Journal of Chemical Theory and Computation\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Molecular View of Cholesterol Flip-Flop and Chemical Potential in Different Membrane Environments\n    W. F. Drew Bennett, Justin L. MacCallum, Marlon J. Hinner, Siewert J. Marrink, and D. Peter Tieleman\n    Journal of the American Chemical Society\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Simulations of the c-subunit of ATP-synthase reveal helix rearrangements\n    Durba Sengupta, Aldo Rampioni & Siewert-Jan Marrink\n    Molecular Membrane Biology\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The freezing process of small lipid vesicles at molecular resolution\n    H. Jelger Risselada and Siewert J. Marrink\n    Soft Matter\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The structural basis for peptide selection by the transport receptor OppA\n    Ronnie P‐A Berntsson, Mark K Doeven, Fabrizia Fusetti, Ria H Duurkens, Durba Sengupta, Siewert‐Jan Marrink, Andy‐Mark W H Thunnissen, Bert Poolman, and Dirk‐Jan Slotboom\n    The EMBO Journal\n    (2009)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Application of Mean Field Boundary Potentials in Simulations of Lipid Vesicles\n    H. Jelger Risselada, Alan E. Mark, and Siewert J. Marrink\n    The Journal of Physical Chemistry B\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Cholesterol Shows Preference for the Interior of Polyunsaturated Lipid Membranes\n    Siewert J. Marrink, Alex H. de Vries, Thad. A. Harroun, John Katsaras, and Stephen R. Wassall\n    Journal of the American Chemical Society\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Gating Motions in Voltage-Gated Potassium Channels Revealed by Coarse-Grained Molecular Dynamics Simulations\n    Werner Treptow, Siewert-J Marrink, and Mounir Tarek\n    The Journal of Physical Chemistry B\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Mechanosensitive Membrane Channels in Action\n    Serge Yefimov, Erik van der Giessen, Patrick R. Onck, and Siewert J. Marrink\n    Biophysical Journal\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Structure of Spheroidal HDL Particles Revealed by Combined Atomistic and Coarse-Grained Simulations\n    Andrea Catte, James C. Patterson, Denys Bashtovyy, Martin K. Jones, Feifei Gu, Ling Li, Aldo Rampioni, Durba Sengupta, Timo Vuorela, Perttu Niemelä, Mikko Karttunen, Siewert Jan Marrink, Ilpo Vattulainen, and Jere P. Segrest\n    Biophysical journal\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The MARTINI Coarse-Grained Force Field: Extension to Proteins\n    Luca Monticelli, Senthil K. Kandasamy, Xavier Periole, Ronald G. Larson, D. Peter Tieleman, and Siewert-Jan Marrink\n    Journal of Chemical Theory and Computation\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The MARTINI force field\n    Siewert J. Marrink, Marc Fuhrmans, H. Jelger Risselada, and Xavier Periole\n    Coarse graining of condensed phase and biomolecular systems\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The molecular face of lipid rafts in model membranes\n    H. Jelger Risselada and Siewert J. Marrink\n    Proceedings of the National Academy of Sciences\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The molecular mechanism of lipid monolayer collapse\n    Svetlana Baoukina, Luca Monticelli, H. Jelger Risselada, Siewert J. Marrink, and D. Peter Tieleman\n    Proceedings of the National Academy of Sciences\n    (2008)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Comparison of Thermodynamic Properties of Coarse-Grained and Atomic-Level Simulation Models\n    Riccardo Baron, Daniel Trzesniak, Alex H. de Vries, Andreas Elsener, Siewert J. Marrink, and Wilfred F. van Gunsteren\n    ChemPhysChem\n    (2007)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    G Protein-Coupled Receptors Self-Assemble in Dynamics Simulations of Model Bilayers\n    Xavier Periole, Thomas Huber, Siewert-Jan Marrink, and Thomas P. Sakmar\n    Journal of the American Chemical Society\n    (2007)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Pressure−Area Isotherm of a Lipid Monolayer from Molecular Dynamics Simulations\n    Svetlana Baoukina, Luca Monticelli, Siewert J. Marrink, and D. Peter Tieleman\n    Langmuir\n    (2007)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The MARTINI Force Field: Coarse Grained Model for Biomolecular Simulations\n    Siewert J. Marrink, H. Jelger Risselada, Serge Yefimov, D. Peter Tieleman, and Alex H. de Vries\n    The Journal of Physical Chemistry B\n    (2007)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Comparison of Atomic-Level and Coarse-Grained Models for Liquid Hydrocarbons from Molecular Dynamics Configurational Entropy Estimates\n    Riccardo Baron, Alex H. de Vries, Philippe H. Hünenberger, and Wilfred F. van Gunsteren\n    The Journal of Physical Chemistry B\n    (2006)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Simulation of gel phase formation and melting in lipid bilayers using a coarse grained model\n    Siewert J. Marrink, Jelger Risselada, and Alan E. Mark\n    Chemistry and Physics of Lipids\n    (2005)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Coarse Grained Model for Semiquantitative Lipid Simulations\n    Siewert J. Marrink, Alex H. de Vries, and Alan E. Mark\n    The Journal of Physical Chemistry B\n    (2004)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Molecular View of Hexagonal Phase Formation in Phospholipid Membranes\n    Siewert-Jan Marrink and Alan E. Mark\n    Biophysical journal\n    (2004)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Simulation of Domain Formation in DLPC−DSPC Mixed Bilayers\n    Roland Faller and Siewert-Jan Marrink\n    Langmuir\n    (2004)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    Molecular Dynamics Simulation of the Formation, Structure, and Dynamics of Small Phospholipid Vesicles\n    Siewert J. Marrink and Alan E. Mark\n    Journal of the American Chemical Society\n    (2003)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n  \n    The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations\n    Siewert J. Marrink and Alan E. Mark\n    Journal of the American Chemical Society\n    (2003)\n    \n      Details\n    \n    \n    \n      DOI\n    \n    \n    \n    \n  \n\n\n\nNo matching items"
  },
  {
    "objectID": "docs/faq/index.html",
    "href": "docs/faq/index.html",
    "title": "Frequently Asked Questions\n",
    "section": "",
    "text": "No! Mixing Martini 2.x and Martini 3.x models are not compatible due to differences in their force fields and parametrization. The Martini 3.x force field represents a significant update from Martini 2.x, with changes in bead types, interaction parameters, and overall philosophy of modeling. These updates can lead to inconsistencies if you try to mix models from the two versions in the same simulation.\n\n\n\nNo, at the moment the secondary structure is an input parameter of the model, which implies that secondary structure elements remain fixed during the simulation. Tertiary structural changes, however, are allowed and in principle realistically described with Martini. This applies to both Martini 2 and Martini 3.\n\n\n\nMartini dynamics are faster than all-atom dynamics due to the smoother coarse-grained interactions, which lack the fine-grained degrees of freedom that cause effective friction in atomistic models. Based on comparisons of diffusion constants between the Martini model and atomistic models, the effective time sampled using Martini is 3-8 times larger. When interpreting simulation results with the Martini model, a standard conversion factor of 4 is typically used, representing the effective speed-up in diffusion dynamics of Martini water compared to real water. A similar acceleration is observed in other processes, such as the permeation rate of water across a membrane, the sampling of lipid configurational space, and the aggregation rate of lipids into bilayers or vesicles.\nHowever, the speed-up factor can vary in different systems or processes. For protein systems, extensive testing of the actual speed-up due to coarse-grained dynamics has not been performed, though simulations of rhodopsin have shown protein translational and rotational diffusion to be in good agreement with experimental data. Charged molecules have shown much larger speed-up factors. In general, the time scale of Martini simulations should be interpreted with caution.\n\n\n\nSeveral resolution conversion tools are available to go from CG to AA. Backward, cg2at, ezAlign, among others. Check these out as well as some of our tutorials.\n\n\n\nYes, it is implemented also in NAMD, GROMOS, and current efforts are porting it to CHARMM. A reduced version of Martini is also available through the Material Studio commercial software. Note that, for each of these software packages, the Martini implementation might differ - to an unknown extent - with that of the GROMACS implementation, so you should be careful when using Martini ‘abroad’."
  },
  {
    "objectID": "docs/faq/index.html#can-i-mix-martini-2.x-and-martini-3.x-models",
    "href": "docs/faq/index.html#can-i-mix-martini-2.x-and-martini-3.x-models",
    "title": "Frequently Asked Questions\n",
    "section": "",
    "text": "No! Mixing Martini 2.x and Martini 3.x models are not compatible due to differences in their force fields and parametrization. The Martini 3.x force field represents a significant update from Martini 2.x, with changes in bead types, interaction parameters, and overall philosophy of modeling. These updates can lead to inconsistencies if you try to mix models from the two versions in the same simulation."
  },
  {
    "objectID": "docs/faq/index.html#can-i-use-martini-to-study-protein-folding",
    "href": "docs/faq/index.html#can-i-use-martini-to-study-protein-folding",
    "title": "Frequently Asked Questions\n",
    "section": "",
    "text": "No, at the moment the secondary structure is an input parameter of the model, which implies that secondary structure elements remain fixed during the simulation. Tertiary structural changes, however, are allowed and in principle realistically described with Martini. This applies to both Martini 2 and Martini 3."
  },
  {
    "objectID": "docs/faq/index.html#how-should-i-interpret-the-time-scale",
    "href": "docs/faq/index.html#how-should-i-interpret-the-time-scale",
    "title": "Frequently Asked Questions\n",
    "section": "",
    "text": "Martini dynamics are faster than all-atom dynamics due to the smoother coarse-grained interactions, which lack the fine-grained degrees of freedom that cause effective friction in atomistic models. Based on comparisons of diffusion constants between the Martini model and atomistic models, the effective time sampled using Martini is 3-8 times larger. When interpreting simulation results with the Martini model, a standard conversion factor of 4 is typically used, representing the effective speed-up in diffusion dynamics of Martini water compared to real water. A similar acceleration is observed in other processes, such as the permeation rate of water across a membrane, the sampling of lipid configurational space, and the aggregation rate of lipids into bilayers or vesicles.\nHowever, the speed-up factor can vary in different systems or processes. For protein systems, extensive testing of the actual speed-up due to coarse-grained dynamics has not been performed, though simulations of rhodopsin have shown protein translational and rotational diffusion to be in good agreement with experimental data. Charged molecules have shown much larger speed-up factors. In general, the time scale of Martini simulations should be interpreted with caution."
  },
  {
    "objectID": "docs/faq/index.html#how-to-reintroduce-atomistic-detail-into-martini",
    "href": "docs/faq/index.html#how-to-reintroduce-atomistic-detail-into-martini",
    "title": "Frequently Asked Questions\n",
    "section": "",
    "text": "Several resolution conversion tools are available to go from CG to AA. Backward, cg2at, ezAlign, among others. Check these out as well as some of our tutorials."
  },
  {
    "objectID": "docs/faq/index.html#is-martini-supported-by-other-sofware-packages-apart-from-gromacs",
    "href": "docs/faq/index.html#is-martini-supported-by-other-sofware-packages-apart-from-gromacs",
    "title": "Frequently Asked Questions\n",
    "section": "",
    "text": "Yes, it is implemented also in NAMD, GROMOS, and current efforts are porting it to CHARMM. A reduced version of Martini is also available through the Material Studio commercial software. Note that, for each of these software packages, the Martini implementation might differ - to an unknown extent - with that of the GROMACS implementation, so you should be careful when using Martini ‘abroad’."
  },
  {
    "objectID": "docs/faq/index.html#which-mdp-options-should-i-use",
    "href": "docs/faq/index.html#which-mdp-options-should-i-use",
    "title": "Frequently Asked Questions\n",
    "section": "Which mdp options should I use?",
    "text": "Which mdp options should I use?\nWe provide recommended GROMACS mdp parameter files for both Martini 2 and Martini 3."
  },
  {
    "objectID": "docs/faq/index.html#how-large-can-the-time-step-be",
    "href": "docs/faq/index.html#how-large-can-the-time-step-be",
    "title": "Frequently Asked Questions\n",
    "section": "How large can the time step be?",
    "text": "How large can the time step be?\nMartini has been parameterized using time steps in the range of 20-40 fs. Whether you can use 40 fs or have to settle for a somewhat smaller time step depends on your system, and on your attitude toward coarse-grained modeling, as explained below. Most users stick to 20 fs.\nFirst, it’s important to understand that the Martini force field is not an atomistically detailed force field. It is based on several assumptions, the most significant being the neglect of certain atomistic degrees of freedom. Consequently, the interactions between particles are effective rather than detailed, resulting in a highly simplified energy landscape. This simplification allows for much faster sampling, albeit at the cost of some detail. The strength of coarse-grained models lies in their ability to sample the energy landscape efficiently rather than accurately. This contrasts with traditional all-atom models, where a more realistic energy landscape necessitates precise integration schemes. The inherent “fuzziness” of the Martini model makes small artificial energy sinks or sources less problematic compared to atomistic simulations.\nSecond, and most importantly, structural properties are quite robust with respect to the time step used in simulations. For instance, using a time step of 40 fs does not noticeably affect the structural properties of the systems investigated. Thermodynamic properties, such as the free energy of solvation, also appear insensitive to time step size. Therefore, if the goal is to generate representative ensembles quickly, larger time steps seem acceptable.\nBased on these points, we conclude that time steps exceeding 10 fs can be used with the Martini force field. While one might debate the first point (i.e., the “idealist” versus “pragmatic” view of CG simulations), the second point (i.e., the insensitivity of structural and thermodynamic properties to time step size) suggests that reducing the time step to 10 fs or below is unnecessary and wastes computational resources. However, time steps of 40 fs or more may push the limits for certain systems. We recommend a time step of 20-30 fs.\nAs always, it’s essential to verify that your results are not biased by the choices you make. Since the greatest simplifications occur at the level of interaction potentials, this is best done by comparing your results with those obtained using more detailed models.\n[1] M.Winger, D. Trzesniak, R. Baron, W.F. van Gunsteren. On using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models, Phys. Chem. Chem. Phys., 2009, 11, 1934-1941. [2] S.J. Marrink, X. Periole, D.P. Tieleman, A.H. de Vries. Comment on using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models. Phys. Chem. Chem. Phys., 12:2254-2256, 2010."
  },
  {
    "objectID": "docs/faq/index.html#can-i-do-free-energy-calculations-with-martini",
    "href": "docs/faq/index.html#can-i-do-free-energy-calculations-with-martini",
    "title": "Frequently Asked Questions\n",
    "section": "Can I do free energy calculations with Martini?",
    "text": "Can I do free energy calculations with Martini?\nYes you can! Some examples can be found in our tutorials."
  },
  {
    "objectID": "docs/faq/index.html#how-do-i-create-a-topology-for-a-new-molecule",
    "href": "docs/faq/index.html#how-do-i-create-a-topology-for-a-new-molecule",
    "title": "Frequently Asked Questions\n",
    "section": "How do I create a topology for a new molecule?",
    "text": "How do I create a topology for a new molecule?\nYou can find in-depth step-by-step guides on how to parameterize new molecules in our tutorial sections. Available for both Martini 2 and Martini 3."
  },
  {
    "objectID": "docs/faq/index.html#how-to-set-up-a-protein-simulation",
    "href": "docs/faq/index.html#how-to-set-up-a-protein-simulation",
    "title": "Frequently Asked Questions\n",
    "section": "How to set-up a protein simulation?",
    "text": "How to set-up a protein simulation?\nSetting up a CG protein simulation consists basically of two steps: 1) converting an atomistic protein structure into a CG model and 2) generating a suitable Martini topology. These steps are described in detail in our tutorial section."
  },
  {
    "objectID": "docs/faq/index.html#are-nucleotides-available-in-martini-3",
    "href": "docs/faq/index.html#are-nucleotides-available-in-martini-3",
    "title": "Frequently Asked Questions\n",
    "section": "Are nucleotides available in Martini 3?",
    "text": "Are nucleotides available in Martini 3?\nNot yet! We are in the process to develop an extension of Martini 3 toward nucleotides. Check out the available model for Martini 2."
  },
  {
    "objectID": "docs/faq/index.html#is-polarizable-water-available-in-martini-3",
    "href": "docs/faq/index.html#is-polarizable-water-available-in-martini-3",
    "title": "Frequently Asked Questions\n",
    "section": "Is polarizable water available in Martini 3?",
    "text": "Is polarizable water available in Martini 3?\nNot yet! We are in the process of developing polarizable water for Martini 3. Check out the available model for Martini 2."
  },
  {
    "objectID": "docs/faq/index.html#how-do-i-use-the-martini-2-polarizable-water-model-and-when-should-i-use-it",
    "href": "docs/faq/index.html#how-do-i-use-the-martini-2-polarizable-water-model-and-when-should-i-use-it",
    "title": "Frequently Asked Questions\n",
    "section": "How do I use the Martini 2 polarizable water model and when should I use it?",
    "text": "How do I use the Martini 2 polarizable water model and when should I use it?\nHow? Easy, use the special martini_v2.P.itp file in which the polarizable water model is defined - it also contains the full interaction matrix with all other particles. You can combine it with any other topology file, either 2.0 or 2.1. Only in the latter case please note that particle types AC1 and AC2, used for certain apolar amino acids, are obsolete and should be replaced by norma C1 and C2 particle types. Furthermore, don’t forget to set the relative dielectric screening to eps=2.5 instead of eps=15 in standard Martini. See the example mdp file, have a look at the example applications featuring a box of pure polarizable water, and check out the script to convert standard water into polarizable water. And last, please have a look at the paper describing the polarizable model:\n[1] S.O. Yesylevskyy, L.V. Schafer, D. Sengupta, S.J. Marrink. Polarizable water model for the coarse-grained Martini force field. PLoS Comp. Biol, 6:e1000810, 2010. open access.\nWhen? We first note that the polarizable Martini water model is not meant to replace the standard Martini water model, but should be viewed as an alternative with improved properties in some, but similar behaviour at reduced efficiency in other applications. It is 2 to 3 times more expensive than standard Martini because the polarizable water bead has three particles. In combination with PME, which you can do with the polairzable model, it is even slower. However, for systems or processes in which charges or polar particles are present in a low-dielectric medium (e.g., inside a bilayer, or protein), the polarizable water model is much more realistic as it captures the dielectric inhomogeneity of the system. Furthermore, the effect of electrostatic fields (both external and internal) is modeled more realistically. In fact you may even simulate cool phenomena like electroporation."
  },
  {
    "objectID": "docs/faq/index.html#my-simulation-keeps-crashing-what-can-i-do",
    "href": "docs/faq/index.html#my-simulation-keeps-crashing-what-can-i-do",
    "title": "Frequently Asked Questions\n",
    "section": "My simulation keeps crashing, what can I do?",
    "text": "My simulation keeps crashing, what can I do?\nThe following is a list of suggestions that might help you stabilize your system: - Reduce the time step somewhat, some applications require 20 fs rather than 30-40 fs. If you need to go below 20 fs something else is likely to be wrong. - Increase the neighbourlist update frequency and/or neighborlist cutoff size. - Replace contraints by (stiff) bonds, recommended during minimization - Replace stiff bonds by constraints, this will increase stability and allow larger time steps. Stiff bonds are bonds with a force constant exceeding ~ 10000 kJ mol-1 nm-2. - For beta-strands, you might try using distance constraints, available as option in the itp-generating script. If proteins keep crashing in general, try adding an elastic network to your protein, using ELNEDYN. - Play with your topology, you might have conflicting bonded potentials. Also make sure you have the appropriate exclusions (nearest neighbours should alway be excluded, but sometimes 2nd or 3rd nearest neighbours as well. - When using dihedral potentials (i,j,k,l) make sure you have the i,j,k and j,k,l angle potentials defined, and that both are far away from 180 and/or 0 degrees."
  },
  {
    "objectID": "docs/faq/index.html#my-water-is-freezing-help",
    "href": "docs/faq/index.html#my-water-is-freezing-help",
    "title": "Frequently Asked Questions\n",
    "section": "My water is freezing, help!",
    "text": "My water is freezing, help!\nUnwanted freezing of water is a known problem in Martini 2. It has already been observed and discussed in our previous work [1,2,3]. Please note the following points:\n\nalthough the LJ parameters for water (ε=5.0 kJ mol-1, σ=0.47 nm) bring it into the solid state region of the LJ phase diagram, the use of a shift potential reduces the long-range attractive part. Consequently, the CG water is more fluid compared to the standard LJ particle.\nWe have previously [2] determined the freezing temperature of the CG water as 290 +/- 5K. While this is admittedly higher than it should be, in most applications freezing is not observed as long as no nucleation site is formed. Apart from simulations performed at lower temperatures, rapid freezing is therefore a potential problem in systems where a nucleation site is already present (a solid surface, but also an ordered bilayer surface may act as one) or when periodicity enhances the long range ordering (e.g., for small volumes of water).\nIn those cases in which the freezing poses a problem, a simple pragmatic solution has been presented in the form of antifreeze particles. This works in some cases, but has apparently given problems in combination with solid supports. Therefore, be careful to check that your antifreeze particles do not cluster. You may also switch to the polarizable water model which has a lower melting temperature [4].\n\nIn Martini 3 this issue is not as common anymore. However, it can still happen, especially when using very high ion concentrations (&gt; 1M range).\n[1] S.J. Marrink, H.J. Risselada, S. Yefimov, D.P. Tieleman and A.H. de Vries. The MARTINI force field: Coarse grained model for biomolecular simulations. J. Phys. Chem. B, 2007, 111, 7812-7824. [2] S.J. Marrink, A.H. de Vries and A.E. Mark, Coarse grained model for semiquantitative lipid simulations, J. Phys. Chem. B, 2004, 108, 750–760. [3] S.J. Marrink, X. Periole, D.P. Tieleman, A.H. de Vries. Comment on using a too large integration time step in molecular dynamics simulations of coarse-grained molecular models. Phys. Chem. Chem. Phys., 12:2254-2256, 2010. abstract [4] S.O. Yesylevskyy, L.V. Schafer, D. Sengupta, S.J. Marrink. Polarizable water model for the coarse-grained Martini force field. PLoS Comp. Biol, 6:e1000810, 2010. open access."
  },
  {
    "objectID": "docs/faq/index.html#my-protein-starts-deforming-help",
    "href": "docs/faq/index.html#my-protein-starts-deforming-help",
    "title": "Frequently Asked Questions\n",
    "section": "My protein starts deforming, help!",
    "text": "My protein starts deforming, help!\nTime to use an elastic network or Go Model in combination with your Martini protein. See our Tutorials page."
  },
  {
    "objectID": "docs/faq/index.html#who-can-i-contact-with-further-questions",
    "href": "docs/faq/index.html#who-can-i-contact-with-further-questions",
    "title": "Frequently Asked Questions\n",
    "section": "Who can I contact with further questions?",
    "text": "Who can I contact with further questions?\nCheck our contact us page!"
  },
  {
    "objectID": "docs/downloads/tools/visualization.html",
    "href": "docs/downloads/tools/visualization.html",
    "title": "Visualization",
    "section": "",
    "text": "Rendering CG bonds & constraints with VMD\n\nWe modified and re-wrote (check this page) a small Tcl script to read and draw Martini bonds and constraints in VMD. The bonds of the elastic networks can be drawn as well. In some cases, the script needs to read the gromacs .tpr file. For this reason, there is a latest version for use with gromacs 5 (and later) .tpr files.\nThe script for use with gromacs 5 can be found here: cg_bonds-v5.tcl.\nThe script can be found here: cg_bonds.tcl (previous version: cg_bonds.tcl.old).\n\n Usage \nThe script is invoked from the VMD command line - after sourcing it (source /path/to/cg_bonds.tcl, or /path/to/cg_bonds-v5.tcl, simply type cg_bonds (options and default values listed below). You can summon an “how to” at any moment by calling the cg_bonds_usage command.\nThis script uses the gmxdump executable compiled with gromacs. By default, it looks for it in the /usr/bin directory; you can specify another path with a specific option (see below). The script can now parse .top and .itp files, via the -top option.\n\n\n cg_bonds \nOptions and default values (slightly different from the previous version!):\n\n\n\n\n\n\n\n\n-molid\n“top”\nVMD-defined ID of the molecule to process\n\n\n-gmx\n/usr/bin/gmxdump\nabsolute path to gmxdump executable (for version 5, this should point to the gmx executable, default /usr/bin/gmx)\n\n\n-tpr\ntopol.tpr\nabsolute path to the simulation file (.tpr)\n\n\n-top\ntopol.top\nabsolute path to the system topology files (.top linking to .itp)\n\n\n-topoltype\n“martini”\nprotein topology type: “martini”, “elastic” or “elnedyn”\n\n\n-net\n“martini”\nnetwork to draw: “martini”, “elastic” or “both”\n\n\n-bndrcnstr\n“both”\ndraw bonds AND/OR constraints “bonds”, “constraints” or “both”\n\n\n-cutoff\n7.0\ncutoff for bonds (angstroms)\n\n\n-color\n“red”\ncolor (color name or VMD-defined ID) of elastic bonds\n\n\n-mat\n“Opaque”\nmaterial for elnedyn bonds\n\n\n-rad\n0.2\nradius of elastic bonds\n\n\n-res\n6\nresolution of elastic bonds\n\n\n\nIn most of the cases, if a “classical” cut-off is used for the elastic network (0.9nm), more than 12 bonds per atom are defined and VMD refuses to draw them. BUT this script replaces bonds by cylinders, and is able to draw the entire elastic network. Note that you have to modify the default cutoff value to see all the links defined by the elastic network.\nThen you can remove Martini bonds with the cg_delete_martini_bonds; and the cylinders with the cg_delete_elastic_bonds. The only option for the previous three commands is the VMD-defined ID of the molecule to process (via -molid, default is “top”).\n\n\n Known issues \n\nUsing tpr files from version 5 and higher is not possible. Script for use with version 5 and higher is now available!. \nThe cg_bonds_infos command is useless (and going to be removed in next versions probably). Removed!\nBonds drawn for the elastic network don’t follow the dynamic of the protein; the 12-bonds-limitation of VMD obliges to draw them using cylinders, not regular bonds. Please drop a mail if you have a solution to fix that…\nWe need a compiled version of gromacs around and the gmxdump executable to extract bonds/constraints (which takes time); wait for the next version! It will certainly read .top and .itp files. Added! The previous method (gmxdump) is still working; and watch out, flags have slightly changed.\nThe table given in output (and the script in general) is not totally reliable in some cases; hand written topologies for examples…Removed.\nVersion of VMD should be superior to 1.8.5 (excluded) to run this script properly. The current version of VMD is 1.9 (august 2011).\nNot really an issue but: cg_bonds draws ALL bonds/constraints of the system; what if we want toRender the secondary structureand draw them only for some residues?Well… Use the good representation.\nTcl needs an empty line at the end of the files it reads (.top and .itp)!\nOn the same level, Tcl seems to understand differently the simple and double quotes… Please check that before shouting.\nScript doesn’t extract (yet!) harmonic bonds of “regular” elastic networks built with the martinize.py script for instance (elastic bonds defined as type 6; this comment is not valid for ElNeDyn, which defines elastic bonds as type 1).Fixed!\n\n\n\n Example \nuser@machine $ vmd protein.gro\nvmd &gt; source /home/user/scripts/cg_bonds.tcl\nvmd &gt; cg_bonds -top system.top -topoltype \"elastic\"\nvmd &gt; cg_bonds -gmx /home/user/bin/gmx-4.5.4/bin/gmxdump -tpr dyn.tpr -net \"elastic\" -cutoff 12.0 -color \"orange\" -mat \"AOChalky\" -res 12 -rad 0.1 -topoltype \"elastic\"\nvmd &gt; cg_delete_elastic_bonds\nThe few lines above will:\n\nload the protein.gro structure,\nsource the cg_bonds.tcl script,\ndraw the martini bonds (using the .top file specified in the command line) extracted from a .top containingelastic network bonds,\ndraw the elastic network with the options (cutoff, color, material, resolution and radius) specified by extracting the bonds from the .tpr file,\ndelete the elastic network bonds previously drawn.\n\nAll these line will be applied to the molecule with the VMD-defined ID 0 (or “top”).\nFor feedback or problems contact c.arnarez@rug.nl or post to the platform.\n\n\n\nRendering CG helices & sheets with VMD\n\nWe gathered and extended the set of small Tcl scripts available in our group to draw protein secondary structure in VMD-like fashion.\nThe script can be found here: cg_secondary_structure.tcl\n\n Usage \nAfter sourcing the script in VMD (source /path/to/cg_secondary_structure.tcl), two routines are available from the command line: cg_helix and cg_sheet. The options and default values are listed below. You can summon an “how to” at any moment by calling the cg_secondary_structure_usage command.\nThis script needs the La package, a linear algebra package written by Hume Integration Software, used here to compute principal axes of helices/sheets; the package is freely available at http://www.hume.com/la/. After downloading it, extract and source the la.tcl file in VMD.\nYou can give an output of do_dssp as an input for this script; it will be parsed and this script will try to draw each helix/sheet. If you use this option (-ssdump), you can leave the first list empty (see examples).\n\n cg_helix \nUsage:\nvmd &gt; cg_helix {{start1 end1} {start2 end2} ...} [OPTIONS]\nWhere start and end are respectively the first and last residues composing an helix; you can provide more than one helix, as shown in the command line. The “{” and “}” characters are mandatory for Tcl to understand it as a list!\nOptions and default values:\n\n\n\n\n\n\n\n\n-molid\n“top”\nVMD-defined ID of the molecule to process\n\n\n-ssdump\n“ssdump.dat”\nread topology from a do_dssp-formated file\n\n\n-bbbname\n“B.*”\nbackbone bead name\n\n\n-hlxmethod\n“idealhelix”\nmethod to draw sheets “idealhelix”, “realhelix” or “cylinder”\n\n\n-hlxcolor\n“red”\ncolor of helices\n\n\n-hlxmat\n“Opaque”\nmaterial\n\n\n-hlxres\n12\nresolution\n\n\n-hlxrad\n2.0\nradius of cylinders\n\n\n-hlxsides\n“round”\narrow sides “round” or “sharp”\n\n\n-hlxfilled\n“yes”\ncylinders filled or not “yes” or “no”\n\n\n-hlxstep\n1.0\nangle step size\n\n\n-hlxthick\n0.2\nthickness of helix\n\n\n-hlxwidth\n2.0\nwidth of helix\n\n\n-hlxdirect\n“no”\ndraw the director vector of the helix (or not)\n\n\n-hlxdirrad\n0.1\nradius of the cylinder (director)\n\n\n-hlxdirclen\n0.3\nlength of the cone (showing direction of the director)\n\n\n-hlxdircrad\n0.2\ncone radius\n\n\n-hlxsecbprop\n0.5\nproportion of the preceding/following bond used as length for starting/ending flat cones\n\n\n\nExample:\nvmd &gt; cg_helix {{5 48} {120 146}} -hlxmethod \"cylinder\" -hlxcolor \"lime\" -hlxrad 2.5\n\n\n cg_helix \nUsage:\nvmd &gt; cg_sheet {{start1 end1} {start2 end2} ...} [OPTIONS]\nWhere start and end are respectively the first and last residues composing a sheet; you can provide more than one sheet, as shown in the command line. The “{” and “}” characters are mandatory for Tcl to understand it as a list!\nOptions and default values:\n\n\n\n\n\n\n\n\n-molid\n“top”\nVMD-defined ID of the molecule to process\n\n\n-ssdump\n“ssdump.dat”\nread topology from a do_dssp-formated file\n\n\n-bbbname\n“B.*”\nbackbone bead name\n\n\n-shtmethod\n“flatarrow”\nmethod to draw sheets “cylindarrow”, “flatarrow”, “bendedarrow” or “triangle”\n\n\n-shtcolor\n“green”\ncolor of sheets\n\n\n-shtmat\n“Opaque”\nmaterial\n\n\n-shtres\n12\nresolution\n\n\n-shtsides\n“round”\nsheet sides “round” or “sharp”\n\n\n-shtrad\n0.4\nradius of cylinders\n\n\n-shtconrad\n0.8\nradius of arrow cones\n\n\n-shtlencone\n1.5\nlength of arrow cones\n\n\n-shtfilled\n“yes”\ncylinder filled or not “yes” or “no”\n\n\n-shtarrwidth\n2.0\nwidth of arrows\n\n\n-shtheadsize\n4.0\nsize of the arrow heads\n\n\n-shtarrthick\n1.0\nthickness of arrows\n\n\n-shtstep\n0.1\ndistance step size\n\n\n-shtthick\n0.2\nthickness of sheet\n\n\n-shtwidth\n2.0\nwidth of sheet\n\n\n-shtdirect\n“no”\ndraw the director vector of the sheet (or not)\n\n\n-shtdirrad\n0.1\nradius of the cylinder (director)\n\n\n-shtdirclen\n0.3\nlength of the cone (showing direction of the director)\n\n\n-shtdircrad\n0.2\ncone radius\n\n\n-shtsecbprop\n0.5\nproportion of the preceding/following bond used as length for starting/ending flat cones\n\n\n\nExample:\nvmd &gt; cg_sheet {} -shtfilled \"no\" -ssdump protein.dat -shtarrowthick 0.4\n\n\n\n Known issues \nThere is still a bunch of small graphical issues (thanks to drop a mail to the contact at the bottom of this page whenever you find something… unexpected); sheets are particularly ugly. It’s not the priority right now, it will be fixed when we will have time… keep checking this page and your version of the script updated! We are writing this tool for personal purpose, and we didn’t retroactively test all the graphical options and the result when mixing them together. Thanks to do that for us!\n\nDrawings do not follow the protein dyamic along a trajectory; you need to redraw everything at each step (no ways to change this behavior so far).\nThe “bendedarrow” (sheet style), which would be the closest to VMD atomistic drawings, doesn’t work so well so far. Still working on it!\nIf an helix is too bended, VMD will not be able to draw it using the “idealhelix” or “realhelix” method (the script will output an error message with the termini of the helix).\nNot able to draw helices smaller than 3 residues (!). Fixed.  Avoided.\nTcl needs an empty line at the end of the files it reads!\nOn the same level, Tcl seems to understand differently simple and double quotes… Please check that before shouting.\n\nFor feedback or problems contact c.arnarez@rug.nl or post to the platform.",
    "crumbs": [
      "Home",
      "⚒️ Tools",
      "Visualization"
    ]
  },
  {
    "objectID": "docs/downloads/tools/other-tools.html",
    "href": "docs/downloads/tools/other-tools.html",
    "title": "Other tools",
    "section": "",
    "text": "Simulated evaporation and scattering\n\nHere an archive containing the necessary files to run a P3HT:PCBM evaporation (solvent is chlorobenzene) and to produce simulated scattering curves as described in:\n\nR. Alessandri, J. J. Uusitalo, A. H. de Vries, R. W. A. Havenith, and S. J. Marrink. Bulk Heterojunction Morphologies with Atomistic Resolution from Coarse-Grain Solvent Evaporation Simulations. JACS, 2017, 139, 3697-3705. open access\n\nPlease check the README files in the respective folders for an explanation on how to submit an evaporation and how to produce the scattering curves from the morphologies.\nHere you can find atomistic force fields.\nFor another example, here an archive containing the necessary files to run a PTEG-1:N-DMBI evaporations (the solvent is now chloroform) as described in:\n\nL. Qiu, J. Liu, R. Alessandri, X. Qiu, M. Koopmans, R.W.A. Havenith, S.J. Marrink, R.C. Chiechi, L.J.A. Koster, J.C. Hummelen. Enhancing doping efficiency by improving host-dopant miscibility for fullerene-based n-type thermoelectrics. Journal of Material Chemistry A, 5:21234-2124, 2017. online\n\nPlease check the README file. Atomistic force fields are available from both the Supporting Information and on figshare.\nFor further questions, please contact Riccardo Alessandri: r.alessandri@rug.nl\n\n\nImproved angle potentials\n\nThe restricted bending potential is now available in standard GROMACS. It is angle type number 10, see also the manual. This makes the special code referred to below unnecessary. The description of the potential is still valid.\nHere you find a customized version of Gromacs with our improved angle potentials for CG simulations, together with example input files: TORSION-WEB.zip\nPlease consult the readme-file for a detailed explanation on using these potentials, and the following manuscript in which the methods have been introduced:\n\nM. Bulacu, N. Goga, W. Zhao, G. Rossi, L. Monticelli, X. Periole, D.P. Tieleman, S.J. Marrink. Improved angle potentials for coarse-grained molecular dynamics simulations. JCTC, in press, 2013. DOI:10.1021/ct400219n. abstract\n\nFor further questions, please contace Monica Bulacu: m.i.bulacu@gmail.com\n\n\ndo-order\n\nA python script that calculates the order parameter for Martini lipids using version 5 and higher; after 5, gromacs continues with version 2016. Please note that this script has not been tested on many different simulations and might need manual editing.\n\ndo-order-gmx5.py\n\nA python script that calculates the order parameter for Martini lipids. Please note that this script has not been tested on many different simulations and might need manual editing.\n\ndo-order-multi.py\n\n\n\nMartini lipid .itp generator\n\nA python script to help creates customized Martini lipid topologies based on the Martini 2.0 building blocks and rules. Warning, it is very easy to create unrealistic topologies so only use if you know what you are doing and with careful testing.\n\nlipid-martini-itp-v05.py\nlipid-martini-itp-v06.py\n\n\n\nCross sectional area calculation\n\n\n Usage \nWe propose here a gromacs tool that can be used to calculate the cross sectional area of membrane protein (or similar inclusion) in membrane. Schematically illustrated in the next figure:\n\nFor more details, see paper (please cite it if you use this code):\nOllila et al. Protein Shape Change Has a Major Effect on the Gating Energy of a Mechanosensitive Channel Biophys. J, 1651-1659, 2011\nCompile it as any tool done with gromacs template. Then just run it normally:\ng_density3Darea -f traj.trr -s topol.tpr\nTwo groups are required in this calculation (2 is the answer to the “How many groups?” question): the first one involves all non-protein beads, the second the protein beads. With -sl you can change the 3D density grid size. You need to have the electrons.dat in your directory even thought it is not used (this is stupid and should be fixed!).\nThe area profile is obtained in area.xvg (three columns have the same number for historical reasons, this should be fixed as well). It can be visualized in 3D by opening the proteinformDENS.dat with rasmol, choosing Colors &gt; Temperature and Slab mode.\nIf you want to calculate the mechanical energy change of a bilayer due to the inclusion, as done in the publication, you need to calculate the pressure profile outside inclusion. This can be done by using script similar to this:\npaste proteinformDENS.dat 3Dpp.dat | awk '{if($10&gt;0){pp[$13]+= $14+$18)/2; \nsum[$13]++;}}END{for(i=0;i0){print i\" \"pp[i]/sum[i]} else{print i\" 0\"}}}' &gt; test.dat\nThe line above calculates the average lateral pressure profile outside the protein (this idea should be described in the publication).\nproteinformDENS.dat and 3Dpp.dat (3D pressure field, ascii format) should be the output from g_density3Darea. Grid spacing must be exactly the same.\nFor more information contact Samuli Ollila (oollila@cc.hut.fi).\n\n\n Remark \nThe code DOES NOT remove rotation or translation and the protein should be whole inside the box in all frames. This can be done by the following way (to be adapted to each system of course):\ntrjconv -pbc nojump\ntrjconv -fit transxy\ntrjconv -pbc mol\ntrjconv -fit rotxy+transxy\n\n\n\nMorphological Image Analysis\n\nMorphological Image Analysis Tool\nWhen analyzing computer simulations of mixtures of lipids and water, the questions to be answered are often of a morphological nature. They can deal with global properties, like the kind of phase that is adopted or the presence or absence of certain key features like a pore or stalk, or with local properties, like the local curvature present at a particular part of the lipid/water interface. While in principle all of the information relating to the global and local morphological properties of a system can be obtained from the set of atomic coordinates generated by a computer simulation, the extraction of this information is a tedious task that usually involves using a visualization program and performing the analysis by eye. Here we present a tool that employs the technique of morphological image analysis (MIA) to automatically extract the global morphology—as given by Minkowski functionals—from a set of atomic coordinates, and creates an image of the system onto which the local curvatures are mapped as a color code. The implementation is intended for the analysis of mixtures of lipids and water obtained from molecular dynamics simulations, but is also in principle applicable to all kinds of coordinates that describe binary mixtures, and is independent of the model and the method used to generate the coordinates.\n\nDetails of the method are published in:\n\nM. Fuhrmans, S.J. Marrink, A tool for the morphological analysis of mixtures of lipids and water in computer simulations, J. Mol. Mod. 17:1755-1766, 2011. open access\n\nThe required c programs can be downloaded here: MIA-source\nA description how to use the package: MIA.pdf\nFor questions please contact Marc Fuhrmans (m.fuhrmans@gmail.com)\n\n\n3D pressure field\n\nA customised version of Gromacs for the calculation of local pressure fields is available here. It is not meant for actual simulation, but rather for post-simulation trajectory analysis using the -rerun option of mdrun. Currently, it is not parallelised so you have to run it on only one CPU.\nIf you use the code, please cite:\n\nOllila et al. (2009) 3D Pressure Field in Lipid Membranes and Membrane-Protein Complexes. Phys. Rev. Lett. 102: 078101 [DOI: 10.1103/PhysRevLett.102.078101]\n\nHere are some useful tools for the analysis of the resulting local pressure field grid:\n\npressure-tools.tar.gz\n\nIf you have further question, you can contact either Samuli Ollila (oollila@cc.hut.fi) or Martti Louhivuori.\n\n\nMean-field boundaries\n\nImplicit, mean-field force approximation (MFFA) boundary potentials offer a computationally efficient method to simulate e.g. large vesicular systems in spherical liquid droplets. For further information about the method see\n\nRisselada et al. (2008) Application of mean field boundary potentials in simulations of lipid vesicles. J Phys Chem B 112:7438-7447\n\nIn order to use the method you need Gromacs/MFFA, which is a custom version of Gromacs that supports MFFA potentials. Simple instructions and an example system also available.",
    "crumbs": [
      "Home",
      "⚒️ Tools",
      "Other tools"
    ]
  },
  {
    "objectID": "docs/downloads/example-input-files/general-topology.html",
    "href": "docs/downloads/example-input-files/general-topology.html",
    "title": "General topology",
    "section": "",
    "text": "This is an example of a general topology file for a Martini simulation. Depending on the system, one or several of the individual molecular topology files (.itp) should be included.\n\nmartini_vX.Y_example.top",
    "crumbs": [
      "Home",
      "🗄 Example input files",
      "General topology"
    ]
  },
  {
    "objectID": "docs/downloads/example-applications/lipid-vesicles.html",
    "href": "docs/downloads/example-applications/lipid-vesicles.html",
    "title": "Lipid vesicles",
    "section": "",
    "text": "Solvated DOPC and POPE vesicles\n\nEquilibrated at T=325K, P=1 bar. System size: lipids 877, water 61552\n(the POPE vesicle is in a cubix box, the DPPC vesicle in an octahedral box)\n\ndppc_vesicle.gro\ndppc_vesicle.mdp\ndppc_vesicle.top\npope_vesicle.gro\npope_vesicle.mdp\npope_vesicle.top",
    "crumbs": [
      "Home",
      "🧑‍💻️ Example applications",
      "Lipid vesicles"
    ]
  },
  {
    "objectID": "docs/downloads/example-applications/micelles.html",
    "href": "docs/downloads/example-applications/micelles.html",
    "title": "Micelles",
    "section": "",
    "text": "DPC micelle\n\nEquilibrated at T=300K, P=1 bar. System composition: surfactants 54, water 6400.\n\ndpc.gro\ndpc.mdp\ndpc.top",
    "crumbs": [
      "Home",
      "🧑‍💻️ Example applications",
      "Micelles"
    ]
  },
  {
    "objectID": "docs/downloads/example-applications/lipid-membranes.html",
    "href": "docs/downloads/example-applications/lipid-membranes.html",
    "title": "Lipid membranes",
    "section": "",
    "text": "Epithelial plasma membrane\n\nThanks to Stephen Fairweather, and the excellent work of O’Mara and coworkers, we are happy to share newly parameterized Martini models of lipids such as plasmalogens, hyrdoxylated sphingholipids, and Forssman lipids. For more information, check out the publication: https://doi.org/10.1063/5.0040887\nYou can download the topologies and other data from here!\n\n\nBrain plasma membrane\n\nAn idealized brain plasma membrane composed of 58 different lipid types.\nFor simulation files and parameters, see bbs.llnl.gov/neuronal-membrane-data.html\n\nH.I. Ingólfsson, T.S. Carpenter, H. Bhatia, P.T. Bremer, S.J. Marrink, F.C. Lightstone. Computational Lipidomics of the Neuronal Plasma Membrane. Biophys. J. 113:2271–2280, 2017. open access\n\n\n\n\nDIY Thylakoid simulation kit\n\nEverything you need in order to simulate your own thylakoid membrane.\nThis package contains both coarse grained and fine grained parameter files for the simulation of the thylakoid membranes of cyanobacteria (Thermosynechococcus vulcanus) and plants (spinach, Spinacia oleracea)\n\nF.J. van Eerden, D.H. de Jong, A.H. de Vries, T. A. Wassenaar, S.J. Marrink. Characterization of thylakoid lipid membranes from cyanobacteria and higher plants by molecular dynamics simulations. BBA-Biomembranes, 1848:1319–1330, 2015. DOI:10.1016/j.bbamem.2015.02.025\n\n\n\nPlasma membrane\n\nAn idealized mammalian plasma membrane composed of 63 different lipid types.\n\nH.I. Ingólfsson, M.N. Melo, F.J. van Eerden, C. Arnarez, C.A. López, T.A. Wassenaar, X. Periole, A.H. De Vries, D.P. Tieleman, and S.J. Marrink. Lipid organization of the plasma membrane. JACS, online. DOI: 10.1021/ja507832e\n\nForce field parameters are provided for all the lipids used as well as setup and coordinate files for the large plasma membrane simulation (~20.000 lipids) at 0, 20 and 40 microseconds.\n\nplasma_membrane.zip\n\nAnd for a smaller (~6.600 lipids) simulation after 10 microseconds.\n\nplasma_membrane_small.zip\n\n\n\n\nGlycolipid membranes\n\nParameter files for various membranes composed of glycolipids (MGDG, DGDG, SQDG, PI, PIP2, GCER, GM1)\n\nglycolipids.zip\n\n\n\nBi-lamellar DOPE system\n\nNon-equilibrated, expected to form an inverted hexagonal phase at T &gt; 330K. System composition: lipids 1024, water 800.\n\ndope_2bilayer_lowhydration.gro\ndope_2bilayer_lowhydration.mdp\ndope_2bilayer_lowhydration.top\n\n\n\nModel raft bilayer\n\nEquilibrated at T=295K, zero surface tension. System composition: DPPC 828, Di-C18:2-PC 540, cholesterol 576 (0.42:0.28:0.3 ratio), water 12600.\n\nraft.gro\nraft.mpd\nraft.top\n\n\n\nBolalipid membranes\n\nSystems of pure cyclic and acyclic bolalipid bilayers:\n\n128 cyclic di-dPPC (all trans) at T = 363\n\nbola-cyclic-128trans.gro\nbola-cyclic.mdp\nbola-cyclic.top\n\n126 cyclic di-DPPC (122 trans - 4 loop) at T = 363\n\nbola-cyclic-122trans-4loop.gro\nbola-cyclic.mdp\nbola-cyclic.top\n\n128 acyclic di-DPPC (all trans) at T = 323\n\nbola-acyclic-128trans.gro\nbola-acyclic.mdp\nbola-acyclic.top\n\n128 acyclic di-DPPC (112 trans 16 loop) at T = 323\n\nbola-acyclic-112trans-16loop.gro\nbola-acyclic.mdp\nbola-acyclic.top\n\n26 cyclic di-DPPC (trans) + 204 DPPC at T = 323\n\nbola-cyclic+dppc.gro\nbola-cyclic+dppc.mdp\nbola-cyclic+dppc.top\n\n\n\n\nPoly-unsaturated lipid/cholesterol bilayer\n\nEquilibrated at T=298K, zero surface tension. System composition: DAPC 38, cholesterol 4 (0.1 mole fraction), water 142.\n\ndapc_chol.gro\ndapc_chol.mdp\ndapc_chol.top\n\n\n\nDPPC/cholesterol bilayer\n\nEquilibrated at T=300K, zero surface tension. System composition: DPPC 38, cholesterol 16 (0.3 mole fraction), water 350.\n\ndppc_chol.gro\ndppc_chol.mdp\ndppc_chol.top\n\n\n\nDOPC and POPE membranes\n\nEquilibrated at T=300K, zero surface tension. System size: lipids 128, water 1500. Warning these bilayers were constructed using self-assembly and can therefore be slightly asymmetrical, for guaranteed symmetrical bilayers we advise using a bilayer building tool, such as insane.\n\ndopc_bilayer.gro\ndopc_bilayer.mdp\ndopc_bilayer.top\npope_bilayer.gro\npope_bilayer.mdp\npope_bilayer.top\n\n\n\nDPPC bilayer\n\nEquilibrated at T=325K, zero surface tension. System size: lipids 128, water 2000.\n\ndppc_bilayer.gro\ndppc_bilayer.mdp\ndppc_bilayer.top\n\n\n\nTriton TX-100 in a DPPC bilayer\n\n(provided by Antonio De Nicola, www.smms.unisa.it)\nParameter file for Triton TX-100, a .gro and .top files of a DPPC bilayer with TX-100 inserted and a simulation parameter file.\n\ntriton_dppc.tgz\n\nThe corresponding article can be cited as:\n\nMARTINI Coarse‑Grained Model of Triton TX‑100 in Pure DPPC Monolayer and Bilayer Interfaces. Antonio Pizzirusso, Antonio De Nicola, and Giuseppe Milano. The Journal of Physical Chemistry B, Just Accepted Manuscript. DOI:http://dx.doi.org/10.1021/acs.jpcb.6b00646\n\n\n\nPeroxidized lipids\n\n(provided by Fabrice Thalmann, http://www.ics-cnrs.unistra.fr/Mcube)\nParameter file for peroxidized POPC and DOPC and a 512 (256 per leaflet) small lipid bilayer and a 8192 (4096 per leaflet) large lipid bilayer.\n\nperoxidized-martini-lipids.zip\n\nThe corresponding article can be cited as\nPeroxidised phospholipid bilayers: insight from coarse-grained molecular dynamics simulations. Y. Guo, V.A. Baulin, F. Thalmann. Soft Matter, 12, 263–271. 2015. doi.org/10.1039/C5SM01350J",
    "crumbs": [
      "Home",
      "🧑‍💻️ Example applications",
      "Lipid membranes"
    ]
  },
  {
    "objectID": "docs/downloads/example-applications/other-systems.html",
    "href": "docs/downloads/example-applications/other-systems.html",
    "title": "Other systems",
    "section": "",
    "text": "Phytochemicals\n\nPhytochemicals Initial structures for the five phytochemicals: capsaicin (cap), curucmin (cur), epigallocatechin gallate (EGCG), genistein (gen), and resveratrol (res); and those five phytochemicals in a POPC bilayer (512 POPC lipids, 6000 CG waters, and 48 phytochemicals each) simulated for 2 μs.\n\ncap-CG.gro\ncur-CG.gro\nEGCG-CG.gro\ngen-CG.gro\nres-CG.gro\nPOPC-cap-2us.gro\nPOPC-cur-2us.gro\nPOPC-EGCG-2us.gro\nPOPC-gen-2us.gro\nPOPC-res-2us.gro\n\nAnd the phytochemicals parameter file:\n\nmartini_v2.0_phytochemicals.itp\n\n\n\nDocosane physisorption on graphite from heptane\n\nSystem for simulation of preferred physisorption of long-chain alkane (6 beads, representing docosane) from short-chain alkane (2-bead, representing heptane).\n\nsams.top\nsams.mdp REQUIRES special parameter files!\nmartini_v2.g.itp\nmartini_v2.0_solvents.itp\nmartini_v2.g_graphite.itp\nadsorbant_docosane.itp\n\nStarting conformation contains 18,000 graphite surface particles (5 layers) GRAP, and in total 600 docosane molecules (DOCO) and 16,200 heptane molecules (OCT).\n\nstart.gro\n\n\n\nDNA strand\n\nDouble stranded DNA, 12 base pair\n(provided by Syma Khalid)\n\ndna.mdp\ndna.top\ndna.itp\ndna.pdb\ndna.vmd (to view the elastic network)\n\n\n\nVoltage sensitive dyes\n\nVoltage sensitive dye Di-4-ASPBS bound to a POPC membrane System size: 1 dye, lipids 128, water 1489\n\ndye1.gro\ndye1.mdp\ndye1.top\ndye1.ndx\n\nA charged voltage sensitive dye Di-12P-ASPBS bound to a POPC membrane System size: 1 dye, 2 sodium counterions, lipids 128, water 1481\n\ndye4.gro\ndye4.mdp\ndye4.top\ndye4.ndx\n\n\n\nFullerenes\n\nEquilibrated at T=310K, constant pressure P=1 bar. System size: 64 fullerenes, 1152 octane molecules\n(provided by Luca Monticelli)\n\nfullerene.itp\nfullerene.top\nfullerenes_in_octane.gro\nfullerene.mdp\nmartini_v2.1_CNP.itp",
    "crumbs": [
      "Home",
      "🧑‍💻️ Example applications",
      "Other systems"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/ions.html",
    "href": "docs/downloads/force-field-parameters/martini2/ions.html",
    "title": " Ions",
    "section": "",
    "text": "Martini 2 parameters for sodium, chloride, calcium and more.\n\nmartini_v2.0_ions.itp",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-atom\"></i> Ions"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/nucleic_acids.html",
    "href": "docs/downloads/force-field-parameters/martini2/nucleic_acids.html",
    "title": " Nucleic Acids",
    "section": "",
    "text": "Deoxyribonucleic acid (DNA)\n\nMartini 2 DNA parameters are available below including a martinize-dna script to generate Martini topology files for DNA molecules. In addition, an example of an all atomistic 24 bp dsDNA in .pdb format, together with its course grained mapping and bonded parameters, using the stiff elastic network settings is provided here. For further background reading on the Martini 2 DNA parameters, see:\n\nJ.J. Uusitalo, H.I. Ingólfsson, P. Akhshi, D.P. Tieleman, S.J. Marrink. Martini coarse-grained force field: extension to DNA. JCTC, (doi: 10.1021/acs.jctc.5b00286)\n\n\nReferences to these works can be found in the headers of the corresponding .itp files.\n\n\n\nVersion\nDescription\n\n\n\n\nmartini-dna-150909.tar\nmartini_v2.1P-dna.itp: Fixed missing T-bead - S-bead interactions.\n\n\nmartini-dna-150817.tar\ndna_backmapping_files: Fixed a bug in CHARMM36 thymine files.\n\n\nmartini-dna-150814.tar\nmartinize-dna.py: Changed the default cut-off for separating chains to 4 Angstroms.\n\n\nmartini-dna-150722.tar\nOriginal release\n\n\n\n\n\nRibonucleic acid (RNA)\n\nThe Martini 2 RNA parameters are available as a package with a martinize script to generate the Martini 2 topology files for RNA molecules. It also includes a backmapping file to convert the coarse RNA resolution into atomistic RNA (AMBER and CHARMM) using the backmapping procedure described here. In addition, a tutorial to start running your first Martini 2 RNA system is available here. For further background reading on the Martini 2 DNA parameters, see:\n\nJ.J. Uusitalo, H.I. Ingólfsson, S.J. Marrink, I. Faustino. Martini Coarse-Grained Force Field: Extension to RNA. Biophys. J., (doi: 10.1016/j.bpj.2017.05.043)\n\nReferences to these works can be found in the headers of the corresponding .itp files.\n\n\n\nVersion\nDescription\n\n\n\n\nna-tutorials_20170815.tar\nOriginal release",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-dna\"></i> Nucleic Acids"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/aminoacids.html",
    "href": "docs/downloads/force-field-parameters/martini2/aminoacids.html",
    "title": " Amino Acids",
    "section": "",
    "text": "Martini 2 parameters for all twenty standard amino acids (See figure below.).\nReferences to these works can be found in the headers of the corresponding .itp files.\n\n\nmartini_v2.2P_aminoacids.itp | (last modified: 05-12-2012)\nmartini_v2.2_aminoacids.itp | (last modified: 05-12-2012)\nmartini_v2.1_aminoacids.itp | (last modified: 16-06-2008)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-spider\"></i> Amino Acids"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/lipidome.html",
    "href": "docs/downloads/force-field-parameters/martini2/lipidome.html",
    "title": " Lipidome",
    "section": "",
    "text": "Martini 2 lipid parameters are listed below according to their major categories. For explanation of the lipid naming schema and the Martini 2 lipid parameterization philosophy please see the Martini 2 lipid details page. For further background reading on the Martini 2 lipidome, see:\n\nT.A. Wassenaar, H.I. Ingólfsson, R.A. Böckmann, D.P. Tieleman, S.J. Marrink. Computational lipidomics with insane: a versatile tool for generating custom membranes for molecular simulations. JCTC, 11:2144–2155, 2015. abstract\n\nReferences to these works can be found in the headers of the corresponding .itp files.\n\n\nPhosphatidylcholine (PC)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C08:0-C10:0 PC (DTPC)\nDTPC-em.gro\n[itp]\nNot available\n\n\ndi-C12:0-C14:0 PC (DLPC)\nDLPC-em.gro\n[itp]\nCHARMM: [map]  GROMOS: [map]\n\n\ndi-C16:0-C18:0 PC (DPPC)\nDPPC-em.gro\n[itp]  Alt optimal: [itp]  Alt extensible: [itp]\nCHARMM: [map]  GROMOS: [map]  AMBER: [map]\n\n\ndi-C20:0-C22:0 PC (DBPC)\nDBPC-em.gro\n[itp]\nGROMOS: [map]\n\n\ndi-C12:1-C14:1 PC (DYPC)\nDYPC-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PC (DVPC)\nDVPC-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PC (DOPC)\nDOPC-em.gro\n[itp]  Alt optimal: [itp]  Alt extensible: [itp]\nCHARMM: [map]\n\n\ndi-C16:2-C18:2 PC (DIPC)\nDIPC-em.gro\n[itp]\nNot available\n\n\ndi-C16:3-C18:3 PC (DFPC)\nDFPC-em.gro\n[itp]\nNot available\n\n\ndi-C20:1-C22:1 PC (DGPC)\nDGPC-em.gro\n[itp]\nNot available\n\n\ndi-C20:4-C22:5 PC (DAPC)\nDAPC-em.gro\n[itp]\nNot available\n\n\ndi-C24:6-C26:6 PC (DRPC)\nDRPC-em.gro\n[itp]\nNot available\n\n\ndi-C24:1-C26:1 PC (DNPC)\nDNPC-em.gro\n[itp]\nNot available\n\n\nC12:0/16:0 PC (LPPC)\nLPPC-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PC (POPC)\nPOPC-em.gro\n[itp]\nCHARMM: [map]  GROMOS: [map]\n\n\nC16:0/20:1 PC (PGPC)\nPGPC-em.gro\n[itp]\nNot available\n\n\nC16:0/20:2 PC (PEPC)\nPEPC-em.gro\n[itp]\nNot available\n\n\nC16:0/18:2 PC (PIPC)\nPIPC-em.gro\n[itp]\nNot available\n\n\nC16:0/20:4 PC (PAPC)\nPAPC-em.gro\n[itp]\nNot available\n\n\nC16:0/22:6 PC (PUPC)\nPUPC-em.gro\n[itp]\nNot available\n\n\nC16:0/24:6 PC (PRPC)\nPRPC-em.gro\n[itp]\nNot available\n\n\n\n\n\nPhosphatidylethanolamine (PE)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C08:0-C10:0 PE (DTPE)\nDTPE-em.gro\n[itp]\nNot available\n\n\ndi-C12:0-C14:0 PE (DLPE)\nDLPE-em.gro\n[itp]\nNot available\n\n\ndi-C16:0-C18:0 PE (DPPE)\nDPPE-em.gro\n[itp]\nNot available\n\n\ndi-C20:0-C22:0 PE (DBPE)\nDBPE-em.gro\n[itp]\nNot available\n\n\ndi-C24:0-C26:0 PE (DXPE)\nDXPE-em.gro\n[itp]\nNot available\n\n\ndi-C12:1-C14:1 PE (DYPE)\nDYPE-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PE (DVPE)\nDVPE-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PE (DOPE)\nDOPE-em.gro\n[itp]\nNot available\n\n\ndi-C16:2-C18:2 PE (DIPE)\nDIPE-em.gro\n[itp]\nNot available\n\n\ndi-C16:3-C18:3 PE (DFPE)\nDFPE-em.gro\n[itp]\nNot available\n\n\ndi-C20:1-C22:1 PE (DGPE)\nDGPE-em.gro\n[itp]\nNot available\n\n\ndi-C20:4-C22:5 PE (DAPE)\nDAPE-em.gro\n[itp]\nNot available\n\n\ndi-C20:5-C22:6 PE (DUPE)\nDUPE-em.gro\n[itp]\nNot available\n\n\ndi-C24:6-C26:6 PE (DRPE)\nDRPE-em.gro\n[itp]\nNot available\n\n\ndi-C24:1-C26:1 PE (DNPE)\nDNPE-em.gro\n[itp]\nNot available\n\n\nC12:0/16:0 PE (LPPE)\nLPPE-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PE (POPE)\nPOPE-em.gro\n[itp]\nNot available\n\n\nC16:0/20:1 PE (PGPE)\nPGPE-em.gro\n[itp]\nNot available\n\n\nC16:0/20:3 PE (PQPE)\nPQPE-em.gro\n[itp]\nNot available\n\n\nC16:0/18:2 PE (PIPE)\nPIPE-em.gro\n[itp]\nNot available\n\n\nC16:0/20:4 PE (PAPE)\nPAPE-em.gro\n[itp]\nNot available\n\n\nC16:0/22:6 PE (PUPE)\nPUPE-em.gro\n[itp]\nNot available\n\n\nC16:0/24:6 PE (PRPE)\nPRPE-em.gro\n[itp]\nNot available\n\n\n\n\n\nPhosphatidylserine (PS)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C08:0-C10:0 PS (DTPS)\nDTPS-em.gro\n[itp]\nNot available\n\n\ndi-C12:0-C14:0 PS (DLPS)\nDLPS-em.gro\n[itp]\nNot available\n\n\ndi-C16:0-C18:0 PS (DPPS)\nDPPS-em.gro\n[itp]\nNot available\n\n\ndi-C20:0-C22:0 PS (DBPS)\nDBPS-em.gro\n[itp]\nNot available\n\n\ndi-C24:0-C26:0 PS (DXPS)\nDXPS-em.gro\n[itp]\nNot available\n\n\ndi-C12:1-C14:1 PS (DYPS)\nDYPS-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PS (DVPS)\nDVPS-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PS (DOPS)\nDOPS-em.gro\n[itp]\nNot available\n\n\ndi-C16:2-C18:2 PS (DIPS)\nDIPS-em.gro\n[itp]\nNot available\n\n\ndi-C16:3-C18:3 PS (DFPS)\nDFPS-em.gro\n[itp]\nNot available\n\n\ndi-C20:1-C22:1 PS (DGPS)\nDGPS-em.gro\n[itp]\nNot available\n\n\ndi-C20:4-C22:5 PS (DAPS)\nDAPS-em.gro\n[itp]\nNot available\n\n\ndi-C20:5-C22:6 PS (DUPS)\nDUPS-em.gro\n[itp]\nNot available\n\n\ndi-C24:6-C26:6 PS (DRPS)\nDRPS-em.gro\n[itp]\nNot available\n\n\ndi-C24:1-C26:1 PS (DNPS)\nDNPS-em.gro\n[itp]\nNot available\n\n\nC12:0/16:0 PS (LPPS)\nLPPS-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PS (POPS)\nPOPS-em.gro\n[itp]\nNot available\n\n\nC16:0/20:1 PS (PGPS)\nPGPS-em.gro\n[itp]\nNot available\n\n\nC16:0/20:3 PS (PQPS)\nPQPS-em.gro\n[itp]\nNot available\n\n\nC16:0/18:2 PS (PIPS)\nPIPS-em.gro\n[itp]\nNot available\n\n\nC16:0/20:4 PS (PAPS)\nPAPS-em.gro\n[itp]\nNot available\n\n\nC16:0/22:6 PS (PUPS)\nPUPS-em.gro\n[itp]\nNot available\n\n\nC16:0/24:6 PS (PRPS)\nPRPS-em.gro\n[itp]\nNot available\n\n\n\n\n\nPhosphatidylglycerol (PG)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C08:0-C10:0 PG (DTPG)\nDTPG-em.gro\n[itp]\nNot available\n\n\ndi-C12:0-C14:0 PG (DLPG)\nDLPG-em.gro\n[itp]\nNot available\n\n\ndi-C16:0-C18:0 PG (DPPG)\nDPPG-em.gro\n[itp]\nCHARMM: [map]\n\n\ndi-C20:0-C22:0 PG (DBPG)\nDBPG-em.gro\n[itp]\nNot available\n\n\ndi-C24:0-C26:0 PG (DXPG)\nDXPG-em.gro\n[itp]\nNot available\n\n\ndi-C12:1-C14:1 PG (DYPG)\nDYPG-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PG (DVPG)\nDVPG-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PG (DOPG)\nDOPG-em.gro\n[itp]\nNot available\n\n\ndi-C16:2-C18:2 PG (DIPG)\nDIPG-em.gro\n[itp]\nNot available\n\n\ndi-C16:3-C18:3 PG (DFPG)\nDFPG-em.gro\n[itp]\nNot available\n\n\ndi-C20:1-C22:1 PG (DGPG)\nDGPG-em.gro\n[itp]\nNot available\n\n\ndi-C20:4-C22:5 PG (DAPG)\nDAPG-em.gro\n[itp]\nNot available\n\n\ndi-C24:6-C26:6 PG (DRPG)\nDRPG-em.gro\n[itp]\nNot available\n\n\ndi-C24:1-C26:1 PG (DNPG)\nDNPG-em.gro\n[itp]\nNot available\n\n\nC12:0/16:0 PG (LPPG)\nLPPG-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PG (POPG)\nPOPG-em.gro\n[itp]\nNot available\n\n\nC16:0/20:1 PG (PGPG)\nPGPG-em.gro\n[itp]\nNot available\n\n\nC16:0/18:2 PG (PIPG)\nPIPG-em.gro\n[itp]\nNot available\n\n\nC16:0/20:4 PG (PAPG)\nPAPG-em.gro\n[itp]\nNot available\n\n\nC16:0/24:6 PG (PRPG)\nPRPG-em.gro\n[itp]\nNot available\n\n\nC18:1/16:0 PG (OPPG)\nOPPG-em.gro\n[itp]\nNot available\n\n\nC16:1(3t)/16:0 PG (JPPG)\nJPPG-em.gro\n[itp]\nNot available\n\n\nC16:1(3t)/18:3 PG (JFPG)\nJFPG-em.gro\n[itp]\nNot available\n\n\n\n\n\nPhosphatidic acid (PA)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C08:0-C10:0 PA (DTPA)\nDTPA-em.gro\n[itp]\nNot available\n\n\ndi-C12:0-C14:0 PA (DLPA)\nDLPA-em.gro\n[itp]\nNot available\n\n\ndi-C16:0-C18:0 PA (DPPA)\nDPPA-em.gro\n[itp]\nNot available\n\n\ndi-C20:0-C22:0 PA (DBPA)\nDBPA-em.gro\n[itp]\nNot available\n\n\ndi-C24:0-C26:0 PA (DXPA)\nDXPA-em.gro\n[itp]\nNot available\n\n\ndi-C12:1-C14:1 PA (DYPA)\nDYPA-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PA (DVPA)\nDVPA-em.gro\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 PA (DOPA)\nDOPA-em.gro\n[itp]\nNot available\n\n\ndi-C16:2-C18:2 PA (DIPA)\nDIPA-em.gro\n[itp]\nNot available\n\n\ndi-C16:3-C18:3 PA (DFPA)\nDFPA-em.gro\n[itp]\nNot available\n\n\ndi-C20:1-C22:1 PA (DGPA)\nDGPA-em.gro\n[itp]\nNot available\n\n\ndi-C20:4-C22:5 PA (DAPA)\nDAPA-em.gro\n[itp]\nNot available\n\n\ndi-C24:6-C26:6 PA (DRPA)\nDRPA-em.gro\n[itp]\nNot available\n\n\ndi-C24:1-C26:1 PA (DNPA)\nDNPA-em.gro\n[itp]\nNot available\n\n\nC12:0/16:0 PA (LPPA)\nLPPA-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PA (POPA)\nPOPA-em.gro\n[itp]\nNot available\n\n\nC16:0/20:1 PA (PGPA)\nPGPA-em.gro\n[itp]\nNot available\n\n\nC16:0/18:2 PA (PIPA)\nPIPA-em.gro\n[itp]\nNot available\n\n\nC16:0/20:4 PA (PAPA)\nPAPA-em.gro\n[itp]\nNot available\n\n\nC16:0/22:6 PA (PUPA)\nPUPA-em.gro\n[itp]\nNot available\n\n\nC16:0/24:6 PA (PRPA)\nPRPA-em.gro\n[itp]\nNot available\n\n\n\n\n\nPhosphatidylinositols\n\n\n\nPhosphatidylinositol (PI)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C16:0-C18:0 PI (DPPI)\nDPPI-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 (PVPI)\nPVPI-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PI (POPI)\nPOPI-em.gro\n[itp]\nNot available\n\n\nC16:0/18:2 PI (PIPI)\nPIPI-em.gro\n[itp]\nNot available\n\n\nC16:0/20:4 PI (PAPI)\nPAPI-em.gro\n[itp]\nNot available\n\n\nC16:0/22:6 PI (PUPI)\nPUPI-em.gro\n[itp]\nNot available\n\n\n\n\n\nPhosphatidylinositol phosphate (PIP1)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C16:0-C18:0 PIP (DPP1)\nDPP1-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PIP (PVP1)\nPVP1-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PIP (POP1)\nPOP1-em.gro\n[itp]\nNot available\n\n\n\n\n\nPhosphatidylinositol bisphosphate (PIP2)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C16:0-C18:0 PIP2 (DPP2)\nDPP2-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PIP2 (PVP2)\nPVP2-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PIP2 (POP2)\nPOP2-em.gro\n[itp]\nNot available\n\n\n\n\n\nPhosphatidylinositol trisphosphate (PIP3)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nC16:0/18:1 PIP3 (PVP3)\nPVP3-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 PIP3 (POP3)\nPOP3-em.gro\n[itp]\nNot available\n\n\n\n\n\nGlycerols\n\n\n\nDiacylglycerol (DAG)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nC16:0/18:1 DAG (PVDG)\nPVDG-em.gro\n[itp]\nNot available\n\n\nC16:0/18:1 DAG (PODG)\nPODG-em.gro\n[itp]\nNot available\n\n\nC16:0/18:2 DAG (PIDG)\nPIDG-em.gro\n[itp]\nNot available\n\n\nC16:0/20:4 DAG (PADG)\nPADG-em.gro\n[itp]\nNot available\n\n\nC16:0/22:6 DAG (PUDG)\nPUDG-em.gro\n[itp]\nNot available\n\n\n\n\n\nTriacylglycerol (TAG)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nGlyceryl-trioleate\nNot available\n[itp]\nNot available\n\n\n\n\n\nLysophosphatidylcholine (LPC)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nC04:0-C06:0 LPC (CPC)\nCPC-em.gro\n[itp]\nNot available\n\n\nC08:0-C10:0 LPC (TPC)\nTPC-em.gro\n[itp]\nNot available\n\n\nC12:0-C14:0 LPC (LPC)\nLPC-em.gro\n[itp]\nNot available\n\n\nC16:0-C18:0 LPC (PPC)\nPPC-em.gro\n[itp]\nNot available\n\n\nC16:1-C18:1 LPC (VPC)\nVPC-em.gro\n[itp]\nNot available\n\n\nC16:1-C18:1 LPC (OPC)\nOPC-em.gro\n[itp]\nNot available\n\n\nC16:2-C18:2 LPC (IPC)\nIPC-em.gro\n[itp]\nNot available\n\n\nC20:4-C22:5 LPC (APC)\nAPC-em.gro\n[itp]\nNot available\n\n\nC20:5-C22:6 LPC (UPC)\nUPC-em.gro\n[itp]\nNot available\n\n\n\n\n\nSphingomyelin (SM)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nC(d18:1/18:0) SM (DPSM)\nDPSM-em.gro\n[itp]\nNot available\n\n\nC(d20:1/20:0) SM (DBSM)\nDBSM-em.gro\n[itp]\nNot available\n\n\nC(d24:1/24:0) SM (DXSM)\nDXSM-em.gro\n[itp]\nNot available\n\n\nC(d18:1/18:1) SM (PVSM)\nPVSM-em.gro\n[itp]\nNot available\n\n\nC(d18:1/18:1) SM (POSM)\nPOSM-em.gro\n[itp]\nNot available\n\n\nC(d18:1/22:1) SM (PGSM)\nPGSM-em.gro\n[itp]\nNot available\n\n\nC(d18:1/24:1) SM (PNSM)\nPNSM-em.gro\n[itp]\nNot available\n\n\nC(d20:1/24:1) SM (BNSM)\nBNSM-em.gro\n[itp]\nNot available\n\n\nC(d24:1/24:1) SM (XNSM)\nXNSM-em.gro\n[itp]\nNot available\n\n\n\n\n\nCeramide (CER)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nC(d18:1/18:0) CER (DPCE)\nDPCE-em.gro\n[itp]\nNot available\n\n\nC(d24:1/24:0) CER (DXCE)\nDXCE-em.gro\n[itp]\nNot available\n\n\nC(d18:1/24:1) CER (PNCE)\nPNCE-em.gro\n[itp]\nNot available\n\n\nC(d24:1/24:1) CER (XNCE)\nXNCE-em.gro\n[itp]\nNot available\n\n\n\n\n\nGlycosphingolipids\n\n\n\nGlucosylceramide (GS)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nC(d16:1/16:0) GS (DPGS)\nDPGS-em.gro\n[itp]\nNot available\n\n\n\n\n\nMonosialotetrahexosylganglioside (GM1)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nC(d18:1/18:0) GM1 (DPG1)\nDPG1-em.gro\n[itp]\nGROMOS: [map]\n\n\nC(d20:1/20:0) GM1 (DBG1)\nDBG1-em.gro\n[itp]\nNot available\n\n\nC(d24:1/24:0) GM1 (DXG1)\nDXG1-em.gro\n[itp]\nNot available\n\n\nC(d18:1/24:1) GM1 (PNG1)\nPNG1-em.gro\n[itp]\nNot available\n\n\nC(d24:1/24:1) GM1 (XNG1)\nXNG1-em.gro\n[itp]\nNot available\n\n\n\n\n\nMonosialodihexosylganglioside (GM3)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nC(d18:1/18:0) GM3 (DPG3)\nDPG3-em.gro\n[itp]\nGROMOS: [map]\n\n\nC(d20:1/20:0) GM3 (DBG3)\nDBG3-em.gro\n[itp]\nNot available\n\n\nC(d24:1/24:0) GM3 (DXG3)\nDXG3-em.gro\n[itp]\nNot available\n\n\nC(d18:1/24:1) GM3 (PNG3)\nPNG3-em.gro\n[itp]\nNot available\n\n\nC(d24:1/24:1) GM3 (XNG3)\nXNG3-em.gro\n[itp]\nNot available\n\n\n\n\n\nGlycoglycerolipids\n\n\n\nMonogalactosyl and/or monoglucosyl diacylglycerol (MGDG)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C16:0-C18:0 MGDG (DPMG)\nNot available\n[itp]\nNot available\n\n\nC18:1/16:0 MGDG (OPMG)\nOPMG.gro\n[itp]\nNot available\n\n\ndi-C18:3 MGDG (DFMG)\nDFMG.gro\n[itp]\nNot available\n\n\nC18:3/16:0 MGDG (FPMG)\nFPMG.gro\n[itp]\nNot available\n\n\n\n\n\nSulfoquinovosyl diacylglycerol (SQDG)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C16:0-C18:0 SQDG (DPSG)\nDPSG.gro\n[itp]\nNot available\n\n\nC18:1/16:0 SQDG (OPSG)\nOPSG.gro\n[itp]\nNot available\n\n\nC18:3/16:0 SQDG (FPSG)\nFPSG.gro\n[itp]\nNot available\n\n\n\n\n\nDigalactosyl diacylglycerol (DGDG)\n\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ndi-C16:0-C18:0 DGDG (DPGG)\nNot available\n[itp]\nNot available\n\n\nC18:1/16:0 DGDG (OPGG)\nOPGG.gro\n[itp]\nNot available\n\n\ndi-C18:3 DGDG (DFGG)\nDFGG.gro\n[itp]\nNot available\n\n\nC18:3/16:0 DGDG (FPGG)\nFPGG.gro\n[itp]\nNot available\n\n\n\n\n\nSterols\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ncholesterol (CHOL)\nNot available\n[itp]\nCHARMM: [map]  GROMOS: [map]  AMBER: [map]\n\n\ncholate (CHOA)\nNot available\n[itp]\nNot available\n\n\ncholesteryl oleate (CHYO)\nNot available\n[itp]\nNot available\n\n\nergosterol (ERGO)\nNot available\n[itp]\nNot available\n\n\nbacteriohopanetetrol (HBHT)\nNot available\n[itp]\nNot available\n\n\ndiploptene (HDPT)\nNot available\n[itp]\nNot available\n\n\nhopane (HHOP)\nNot available\n[itp]\nNot available\n\n\nhopanoid polycyclic group (HOPR)\nNot available\n[itp]\nNot available\n\n\n\n\n\nSurfactants\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nbeta-octylglucoside (BOG)\nNot available\n[itp]\nNot available\n\n\nalkyl-PEG (C12E2)\nmartini_v2.0_C12E2.gro\n[itp]\nNot available\n\n\nalkyl-PEG (C12E4)\nmartini_v2.0_C12E4.gro\n[itp]\nNot available\n\n\nalkyl-PEG (C12E6)\nmartini_v2.0_C12E6.gro\n[itp]\nNot available\n\n\ndodecylmaltoside (DDM)\nNot available\n[itp]\nNot available\n\n\ndodecylphosphocholine (DPC)\nNot available\n[itp]\nNot available\n\n\nsodium dodecyl sulfate (SDS)\nNot available\n[itp]\nNot available\n\n\n\n\n\nFatty acids (FA)\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\nlauric (C12:0) / myristic (C14:0) acid (LCA)\nNot available\nCharged: [itp]  Uncharged: [itp]\nNot available\n\n\npalmitic (C16:0) / stearic (C18:0) acid (PCA)\nNot available\nCharged: [itp]  Uncharged: [itp]\nNot available\n\n\narachidic (C20:0) / behenic (C22:0) acid (BCA)\nNot available\nCharged: [itp]  Uncharged: [itp]\nNot available\n\n\nlignoceroyl (C24:0) / hexacosanoic (C26:0) acid (XCA)\nNot available\nCharged: [itp]  Uncharged: [itp]\nNot available\n\n\narachidonic (C20:4) / docosapentaenoic (C22:5) acid (ACA)\nNot available\nCharged: [itp]  Uncharged: [itp]\nNot available\n\n\ndocosahexaenoic (C22:6) acid (DHA)\nNot available\nCharged: [itp]  Uncharged: [itp]\nNot available\n\n\n\n\n\nOthers\n\n\n\n\nLipid\nCoordinates\nTopology\nMapping\n\n\n\n\ncyclic di-DPPC Bolalipid (BOLA)\nNot available\n[itp]\nNot available\n\n\nacyclic di-DPPC Bolalipid (BOLB)\nNot available\n[itp]\nNot available\n\n\ncardiolipin (CL) 0- (CDL0)\nCDL0.gro\n[itp]\nNot available\n\n\ncardiolipin (CL) 1- (CDL1)\nCDL1.gro\n[itp]\nNot available\n\n\ncardiolipin (CL) 2- (CDL2)\nCDL2.gro\n[itp]\nNot available\n\n\nlipopolysaccharide (LPS)\nLPS_cg.gro\n[itp]\nNot available\n\n\nlipid A - Bacteroides fragilis (BFRA)\nBfragilis.gro\n[itp]\nNot available\n\n\nlipid A - Bordetella pertussis (BPER)\nBpertussis.gro\n[itp]\nNot available\n\n\nlipid A - Campylobacter jejuni (CJEJ)\nCjejuni.gro\n[itp]\nNot available\n\n\nlipid A - Chlamydia trachomatis (CTRA)\nCtrachomatis.gro\n[itp]\nNot available\n\n\nlipid A - Helicobacter pylori (HPYL)\nHpylori.gro\n[itp]\nNot available\n\n\nlipid A - Neisseria meningitidis (NMEN)\nNmeningitidis.gro\n[itp]\nNot available\n\n\nlipid A - Porphyromonas gingivalis (PGIN)\nPgingivalis.gro\n[itp]\nNot available\n\n\nlipid A - Pseudomonas aeruginosa (PARU)\nPaeruginosa_LPA.gro\n[itp]\nNot available\n\n\nlipid A+core - Pseudomonas aeruginosa (PARC)\nPaeruginosa_LPC.gro\n[itp]\nNot available\n\n\nlipid A - Salmonella minnesota (SMIN)\nSminnesota.gro\n[itp]\nNot available\n\n\ndi-C16:0-C18:0 TAP (DPTAP)\nNot available\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 TAP (DOTAP)\nNot available\n[itp]\nNot available\n\n\ndi-C16:1-C18:1 TAP (DITAP)\nNot available\n[itp]\nNot available",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-cheese\"></i> Lipidome"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/dry-martini.html",
    "href": "docs/downloads/force-field-parameters/martini2/dry-martini.html",
    "title": " Dry Martini",
    "section": "",
    "text": "In this version of Martini 2, water beads were completely removed from our simulation boxes. Interactions between beads are adapted by slightly tweaking the interaction levels and tuning some bonded parameter to reproduce the properties observed with the standard Martini 2 force field. The new force field developed has been shown to nicely reproduce bilayer properties for a large variety of lipids.\nDry Martini is so far available only for lipids. A couple of small membrane proteins have been shown to perform equivalently compared to the regular Martini 2 model. Pleaase file the parameter files below and run your first Martini simulations without aqueous solvent! For further background reading on Dry Martini, see:\n\nC. Arnarez, J.J. Uusitalo, M.F. Masman, H.I. Ingólfsson, D.H. de Jong, M.N. Melo, X. Periole, A.H. de Vries, S.J. Marrink. Dry Martini: coarse grained implicit water force field for (bio)molecular simulations. JCTC, (doi: 10.1021/ct500477k)\n\nReferences to these works can be found in the headers of the corresponding .itp files.\n\nDry_Martini_v2.1 | (last modified: 23-05-2016)  [All “O”-lipids now use the 4 bead oleyl tail parameters and PO tails are in correct order.]\nDry_Martini_v2.1 | (original release)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-wine-glass-empty\"></i> Dry Martini"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/carbohydrates.html",
    "href": "docs/downloads/force-field-parameters/martini2/carbohydrates.html",
    "title": " Carbohydrates",
    "section": "",
    "text": "Martini 2 parameters for some carbohydrates developed by the Martini community over the years are listed below with some usage clarifications and references for further description of these works.\n\nMartini 2.2 N-Glycans\n\nTopologies for Martini 2.2 glycans are available for download here, courtesy of César López Bautista and co-workers. For further background reading, please see:\n\nS. Chakraborty, K. Wagh, S. Gnanakaran, C. A. López. Development of Martini 2.2 parameters for N-glycans: a case study of the HIV-1 Env glycoprotein dynamics. Glycobiology, (doi: 10.1093/glycob/cwab017)\n\n\n\nCommon mono-/di-saccharides, and amylose.\n\nTopologies for Martini 2 mono-/di-saccharides and amylose are available for download here. For further background reading, please see:\n\nC.A. Lopez, A. Rzepiela, A.H. de Vries, L. Dijkhuizen, P.H. Hunenberger, S.J. Marrink. The MARTINI coarse-grained force field: Extension to carbohydrates JCTC, (doi: 10.1021/ct900313w)\n\n\n\nBeta-cyclodextrin, Dimethyl-cyclodextrin and Hydroxypropyl-cyclodextrin\n\nTopologies for Martini 2 beta-cyclodextrin, dimethyl-cyclodextrin and hydroxypropyl-cyclodextrin are available for download here. A new bead type must be incorporated for beta cyclodextrin, which is included in the martini_v2.1_pc.itp file. Beta cyclodextrin is represented as a dimer, since it is the prevalent type in solution. However it can be easily transformed into a monomer if necessary. For further background reading, please see:\n\nLópez, C. A., de Vries, A. H., & Marrink, S. J. Computational microscopy of cyclodextrin mediated cholesterol extraction from lipid model membranes. Scientific Reports, (doi: 10.1038/srep02071)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-ice-cream\"></i> Carbohydrates"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/polymers.html",
    "href": "docs/downloads/force-field-parameters/martini3/polymers.html",
    "title": " Polymers",
    "section": "",
    "text": "Martini 3 polymer topologies can be obtained using PolyPly. A helpful tutorial on how to use PolyPly to generate polymer topologies can be found here.\n\nGrünewald F., et. al.. Polyply; a python suite for facilitating simulations of macromolecules and nanomaterials. Nature Communications, 2022. (doi: 10.1038/s41467-021-27627-4)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-brands fa-mixer\"></i> Polymers"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/nucleic_acids.html",
    "href": "docs/downloads/force-field-parameters/martini3/nucleic_acids.html",
    "title": " Nucleic Acids",
    "section": "",
    "text": "Martini 3 parameters for all nucleobases in deoxyribonucleic acid (DNA) and ribonucleic acid (RNA) molecules are available below.\nReferences to these works can be found in the headers of the corresponding .itp files.\n\n\nmartini_v3.0.0_nucleobases_v1.itp | (original release)\n\n\n\nNote: An optimized version of the Martini 3 parameters for nucleic acids is currently under development. Please check back soon for updates.",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-solid fa-dna\"></i> Nucleic Acids"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/aminoacids.html",
    "href": "docs/downloads/force-field-parameters/martini3/aminoacids.html",
    "title": " Amino Acids",
    "section": "",
    "text": "The folder below contains particles definitions and Martini 3 parameters for all twenty standard amino acids.\nPlease read and cite the associated publication when using it: PCT Souza, et al., Nat. Methods, 2021. And enjoy Martini 3 responsibly!\n\n\nmartini_v300_proteins.zip | (original release)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-solid fa-spider\"></i> Amino Acids"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/lipidome.html",
    "href": "docs/downloads/force-field-parameters/martini3/lipidome.html",
    "title": " Lipidome",
    "section": "",
    "text": "Martini 3 lipid parameters are listed below according to their major categories.\nReferences to these works can be found in the headers of the corresponding .itp files.\n\n\nmartini_v3.0.0_phospholipids_v1.itp | (original release)\n\n\n\nNote: An optimized Martini 3 lipidome is currently under development. Please check back soon for updates.",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-solid fa-cheese\"></i> Lipidome"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/carbohydrates.html",
    "href": "docs/downloads/force-field-parameters/martini3/carbohydrates.html",
    "title": " Carbohydrates",
    "section": "",
    "text": "Martini 3 parameters for carbohydrates. For further background reading on the optimized Martini 3 carbohydrates, see:\n\nGrünewald F., et. al.. Martini 3 Coarse-Grained Force Field for Carbohydrates. JCTC, 2022. (doi: 10.1021/acs.jctc.2c00757)\n\nReference to these works can be found in the header of the corresponding .itp file.\n\n\nmartini_v3.0.0_sugars_v2.itp | (optimized parameters: 10-07-22)\nmartini_v3.0.0_sugars_v1.itp | (original release)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-solid fa-ice-cream\"></i> Carbohydrates"
    ]
  },
  {
    "objectID": "docs/contact/contact.html",
    "href": "docs/contact/contact.html",
    "title": "Contact the Martini Force Field Initiative",
    "section": "",
    "text": "Team Leader: Prof. Dr. Siewert-Jan Marrink\nAffiliation:\nGroningen Biomolecular Sciences and Biotechnology Institute and  Zernike Institute for Advanced Materials  University of Groningen, The Netherlands\nGroup homepage: [visit here]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActive member: Prof. Dr. Peter Tieleman\nAffiliation:\nCentre for Molecular Simulation and  Department of Biological Sciences  University of Calgary, Canada\nGroup homepage: [visit here]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActive member: Prof. Dr. Manel Nuno Melo\nAffiliation:\nITQB NOVA and MOSTMICRO Unit  University of Lisbon, Portugal\nGroup homepage: [visit here]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActive member: Prof. Dr. Paulo Cesar Tellez de Souza\nAffiliation:\nLaboratory of Biology and Modelling of the Cell and CBPsmn  Ecole Normale Supérieure de Lyon, France\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActive member: Prof. Dr. Luca Monticelli\nAffiliation:\nNational Centre for Scientific Research  University of Lyon, France\nGroup homepage: [visit here]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActive member: Dr. Helgi Ingolfur Ingolfsson\nAffiliation:\nBiochemical and Biophysical Systems Group and  Lawrence Livermore National Laboratory  California, United States\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActive member: Dr. Sebastian Thallmair\nAffiliation:\nFrankfurt Institute for Advanced Studies  Frankfurt, Germany\nGroup homepage: [visit here]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActive member: Prof. Dr. Riccardo Alessandri\nAffiliation:\nDepartment of Chemical Engineering  KU Leuven, Belgium\nGroup homepage: [visit here]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActive member: Dr. Fabian Grunewald\nAffiliation:\nIndependent PostDoc Fellow  Heidelberg Institute for Theoretical Studies, Germany\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo contact our team, please fill out the following form:\n\n\n\n\n\nYour Name:  Email Address:  Current Institution:  Subject:  Message:"
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/solvents.html",
    "href": "docs/downloads/force-field-parameters/martini3/solvents.html",
    "title": " Solvents",
    "section": "",
    "text": "Available Martini 3 solvent topologies are listed below.\nReference to these works can be found in the header of the corresponding .itp file.\n\n\nmartini_v3.0.0_solvents_v1.itp | (original release)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-solid fa-droplet\"></i> Solvents"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/particle-definitions.html",
    "href": "docs/downloads/force-field-parameters/martini3/particle-definitions.html",
    "title": " Particle definitions",
    "section": "",
    "text": "The particle definition file is required for all simulations and specifies the coarse-grained particle types and interaction matrix in Martini 3. In the file below you will find the particle definitions in Martini 3, as well as the topology of proteins, solvents, ions, lipids, nucleobases, carbohydrates, and small molecules, as defined in its original release. Here’s a table (in continuous expansion) to help with understanding Martini 3’s bead types.\n\n\nmartini_v300.zip\n\n\nIn addition to this centralized folder, individual .itp files will be provided in the respective sections for each molecule type, including further extensions and refinements.\nPlease read and cite the associated publication when using it: PCT Souza, et al., Nat. Methods, 2021. And enjoy Martini 3 responsibly!",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-solid fa-dice-d20\"></i> Particle definitions"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/others.html",
    "href": "docs/downloads/force-field-parameters/martini3/others.html",
    "title": " Others",
    "section": "",
    "text": "Artificial light harvesting dye (C8S3) for Martini 3\n\nThe parameters are for an artificial light harvesting dye (C8S3) which self-assembles into hollow nanotubes. Included are a gro and an itp for C8S3, a unit cell of the brickwork and herringbone formation, the script to make the cylinders, one nanotube and a bundle.\n\nc8s3_files.zip\n\nDetails can be found in the publication: - Patmanidis et al., Nanoscale Advances, 2022, in press.\nAn extended collection of Martini 3 models for small molecules is now available here (R. Alessandri, et al., Adv. Theory Simul., 2022)."
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/small_molecules.html",
    "href": "docs/downloads/force-field-parameters/martini3/small_molecules.html",
    "title": " Small Molecules",
    "section": "",
    "text": "An extensive collection of Martini 3 topologies for small molecules is available below. For more information regarding these models, the parametrization strategy and the recommended best practices for using them, please refer to the GitHub repository [here].\n\nAlessandri R., et. al.. Martini 3 Coarse-Grained Force Field: Small Molecules. Adv. Theory Simul., 2022. (doi: 10.1002/adts.202100391)\n\n\n\nmartini_v3.0.0_small_molecules_v1.itp | (original release)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-solid fa-shapes\"></i> Small Molecules"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini3/ions.html",
    "href": "docs/downloads/force-field-parameters/martini3/ions.html",
    "title": " Ions",
    "section": "",
    "text": "Martini 3 parameters for commonly used ions.\nReference to these works can be found in the header of the corresponding .itp file.\n\n\nmartini_v3.0.0_ions_v1.itp | (original release)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-three\"></i> Martini 3",
      "<i class=\"fa-solid fa-atom\"></i> Ions"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/solvents.html",
    "href": "docs/downloads/force-field-parameters/martini2/solvents.html",
    "title": " Solvents",
    "section": "",
    "text": "Martini 2 parameters for various saturated and unsaturated alkanes, alcohols, triglycerides, and many small organic solvents.\n\nmartini_v2.0_solvents.itp | (last modified: 07-06-2017)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-droplet\"></i> Solvents"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/martini_lipids_details.html",
    "href": "docs/downloads/force-field-parameters/martini2/martini_lipids_details.html",
    "title": "Martini lipids details",
    "section": "",
    "text": "Martini lipids follow the general Martini philosophy. Each coarse-grained (CG) bead represents ~4 heavy atoms and based on its underlying atoms and associated overall polarity, hydrophobicity, and charge it is assigned to one of Martini’s predefined bead types (e.g. P1, P2, C1, C2, Qa, Qd, ..). The bead type determines the non-bonded levels of interactions, while bonded interactions (bonds, angles, dihedrals) between beads in the same molecule are normally tuned based on reference atomistic simulations. For more information on Martini philosophy and parameterization see:\n\nS.J. Marrink, H.J. Risselada, S. Yefimov, D.P. Tieleman, A.H. de Vries. The MARTINI forcefield: coarse grained model for biomolecular simulations. JPC-B, 111:7812-7824, 2007. abstract\nS.J. Marrink, A.H. de Vries, A.E. Mark. Coarse grained model for semi-quantitative lipid simulations. JPC-B, 108:750-760, 2004. abstract\n\nThis general building block strategy aims to increase flexibility and transferability of the force field but not to exactly match the atomistic behavior of a given molecule/lipid. This means that each CG lipid can represent a range of atomistic lipids. For Martini lipids mapping and naming schema, see Table 1.\n\nTable 1 | Lipid fatty acid nomenclature.\n\n\n\n\n\nOne letter names\n\n\nBead assignment\n\n\nCorresponding to atomistic tails\n\n\nExamples of corresponding fatty acid names\n\n\n\n\nC\n\n\nC\n\n\nC04:0-C06:0\n\n\nC04:0 butyryl - C06:0 hexanoyl\n\n\n\n\nT\n\n\nCC\n\n\nC08:0-C10:0\n\n\nC08:0 octanoyl - C10:0 decanoyl\n\n\n\n\nL\n\n\nCCC\n\n\nC12:0-C14:0\n\n\nC12:0 lauric acid - C14:0 myristoyl\n\n\n\n\nP\n\n\nCCCC\n\n\nC16:0-C18:0\n\n\nC16:0 palmitic acid - C18:0 stearoyl\n\n\n\n\nB\n\n\nCCCCC\n\n\nC20:0-C22:0\n\n\nC20:0 arachidoyl - C22:0 behenoyl\n\n\n\n\nX\n\n\nCCCCCC\n\n\nC24:0-C26:0\n\n\nC24:0 lignoceroyl - C26:0 hexacosanoyl\n\n\n\n\nY\n\n\nCDC\n\n\nC12:1-C14:1(9c)\n\n\nC14:1(9c) myristoleoyl\n\n\n\n\nO\n\n\nCDCC\n\n\nC16:1-C18:1(9c)\n\n\nC16:1(9c) palmitoleic acid, C18:1(9c) oleic acid\n\n\n\n\nV\n\n\nCCDC\n\n\nC16:1-C18:1(11c)\n\n\nC16:1(11c), C18:1(11c) cis-vaccenic acid, C18:1(12c)\n\n\n\n\nG\n\n\nCCDCC\n\n\nC20:1-C22:1(11c)\n\n\nC20:1(11c) gondoic acid, C22:1(11c), C22:1(13c) erucoyl\n\n\n\n\nN\n\n\nCCCDCC\n\n\nC24:1-C26:1(9c)\n\n\nC24:1(9c) nervonic acid, C26:1(9c)\n\n\n\n\nI\n\n\nCDDC\n\n\nC16:2-C18:2(9-12c)\n\n\nC18:2(9c,12c) linoleic acid\n\n\n\n\nF\n\n\nCDDD\n\n\nC16:3-C18:3(9-15c)\n\n\nC18:3(9c,12c,15c) octadecatrienoyl\n\n\n\n\nE\n\n\nCCDDC\n\n\nC20:2-C22:2(11-16c)\n\n\nC20:2(11c,14c) eicosadienoic acid, C22:2(13c,16c) docosadienoic acid\n\n\n\n\nQ\n\n\nCDDDC\n\n\nC20:3-C22:3(5-14c)\n\n\nC20:3(5c,8c,11c) mead acid, C20:3(8c,11c,14c) dihomo-gamma-linolenic acid\n\n\n\n\nA\n\n\nDDDDC\n\n\nC20:4-C22:5(4-16c)\n\n\nC20:4(5c,8c,11c,14c) arachidonic acid, C22:5(4c,7c,10c,13c,16c) docosapentaenoic acid\n\n\n\n\nU\n\n\nDDDDD\n\n\nC20:5-C22:6(4-19c)\n\n\nC22:6(4c,7c,10c,13c,16c,19c) docosahexaenoic acid\n\n\n\n\nR\n\n\nDDDDDD\n\n\nC24:6-C26:6(6-21c)\n\n\nC24:6(6c,9c,12c,15c,18c,21c) nisinic acid\n\n\n\n\nJ\n\n\nTCCC\n\n\nC16:1-C18:1(3t)\n\n\nC16:1(3t) trans-3-hexadecanoic acid\n\n\n\n\nPa\n\n\nTCC\n\n\nC(d16:1)-C(d18:1)\n\n\nSphingosine C16 palmitic acid - C18 stearoyl with a trans double bond\n\n\n\n\nBa\n\n\nTCCC\n\n\nC(d20:1)-C(d22:1)\n\n\nSphingosine C20 arachidoyl - C22 behenoyl with a trans double bond\n\n\n\n\nXa\n\n\nTCCCC\n\n\nC(d24:1)-C(d26:1)\n\n\nSphingosine C24 lignoceroyl - C26 hexacosanoyl with a trans double bond\n\n\n\n\nEach CG bead represents ~4 carbon atoms, therefore, the underlying atomistic mapping is not unique ranges and a few examples are given for each case. The C beads represent a saturated carbon chain, the D beads have 1-2 cis double bounds, and the T beads have a trans double bound. D stands for Di and is used for lipids tails with two of the same fatty acids, e.g. DPPC has two P tails and DOPC has two O tails. aThese tails are for sphingosine lipids and have one C bead less as a few of the first fatty acid carbons are part of the AM1 linker bead.\n\nA large number of lipids have been parameterized for Martini and their description and examples of use can be found in their respective publication, such as:\n\nT.A. Wassenaar, H.I. Ingólfsson, R.A. Böckmann, D.P. Tieleman, S.J. Marrink. Computational lipidomics with insane: a versatile tool for generating custom membranes for molecular simulations. JCTC, 11:2144–2155, 2015. abstract\nH.I. Ingólfsson, M.N. Melo, F.J. van Eerden, C. Arnarez, C.A. López, T.A. Wassenaar, X. Periole, A.H. De Vries, D.P. Tieleman, S.J. Marrink. Lipid organization of the plasma membrane. JACS, 136:14554-14559, 2014. open access\nF.J. van Eerden, D.H. de Jong, A.H de Vries, T.A. Wassenaar, S.J. Marrink. Characterization of thylakoid lipid membranes from cyanobacteria and higher plants by molecular dynamics simulations. BBA Biomembranes, 1848:1319–1330, 2015. abstract\nC.A. Lopez, Z. Sovova, F.J. van Eerden, A.H. de Vries, S.J. Marrink. Martini force field parameters for glycolipids. JCTC, 9:1694–1708, 2013. abstract\nH.J. Risselada, S.J. Marrink. The molecular face of lipid rafts in model membranes. PNAS, 105:17367-17372, 2008. open access\nS.J. Marrink, A.H. de Vries, T.A. Harroun, J. Katsaras, S.R. Wassall. Cholesterol shows preference for the interior of polyunsaturated lipid membranes. JACS, 130:10-11, 2008. abstract\nS. Baoukina, L. Monticelli, H.J. Risselada, S.J. Marrink, D.P. Tieleman. The molecular mechanism of lipid monolayer collapse. PNAS, 105:10803-10808, 2008. open access\n\nAdditionally, for each lipid a description, a short parameterization section, and relevant references are provided on each lipid’s webpage and in their topology file. For most of the available Martini lipid topologies an initial coordinate file is provided as well as an image for quick reference; these images try to follow the color schema shown in Figure 1.\n\n\n \n\n\n\n\n\nFigure 1 | Martini lipid layout and figure colors."
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/particle-definitions.html",
    "href": "docs/downloads/force-field-parameters/martini2/particle-definitions.html",
    "title": " Particle definitions",
    "section": "",
    "text": "The particle definition file is required for all simulations and specifies the coarse-grained particle types and interaction matrix in Martini 2. It also contains the topology of water particles. Version 2.1 or 2.2 are required for peptides and proteins, while versions 2.P, 2.2P and 2.2refP (RF, PME) are for use in combination with the polarizable water model.\nReferences to these works can be found in the headers of the corresponding .itp files.\n\n\nmartini_v2.2.itp | (last modified: 04-12-2012)\nmartini_v2.1.itp | (last modified: 26-01-2011)\nmartini_v2.0.itp | (last modified: 22-02-2011)\n\n\n\nmartini_v2.3P.itp (last modified: 09-03-2020)\nmartini_v2.2polIon.tar.gz (last modified: 06-08-2018)  [Contains martini_v2.2refP.itp + NaCl parameters]\nmartini_v2.2refP.itp (last modified: 06-02-2017)\nmartini_v2.2P.itp (last modified: 05-12-2012)\nmartini_v2.P.itp | (last modified: 14-04-2010)",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-dice-d20\"></i> Particle definitions"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/others.html",
    "href": "docs/downloads/force-field-parameters/martini2/others.html",
    "title": " Others",
    "section": "",
    "text": "Martini 2 topologies for molecules not fitting in other categories are listed below.\n\nVoltage-sensitive dyes\n\n\nmartini_v2.0_other.itp\n\n\n\nCommonly used phytochemicals\n\n\nmartini_v2.0_phytochemicals.itp\n\n\n\nOptimal Martini 2 Cholesterol with LINCS\n\nOptimized cholesterol model for Martini 2 to overcome the constraint convergence issues using LINCS. For further background reading, please see:\n\nB. Fábián, S. Thallmair, and Gerhard Hummer. Optimal bond constraint topology for molecular dynamics simulations of cholesterol. J. Chem. Theory Comput., 2023. DOI: 10.1021/acs.jctc.2c01032\nmartini_v2.0_CHOL_02-optLINCS.itp\n\n\n\nNucleotide Cofactors for Martini 2\n\nThanks to the great work of Filipe Sousa and the Melo team, we can present to you nucleotide cofactors for Martini 2. This work includes topologies for key metabolites and cofactors, such as FAD, FMN, riboflavin, NAD, NADP, ATP, ADP, AMP, and thiamine pyrophosphate, in different oxidation and protonation states as well as smaller molecules derived from them (among others, nicotinamide, adenosine, adenine, ribose, thiamine, and lumiflavin), summing up a total of 79 different molecules.\n\nnucleotides.itp\n\n\n\nPSII cofactors\n\nTopologies for the cofactors associated with the Photosystem II. The ZIP-archives contain CG Martini topologies as well as united atom Gromos topologies for: Plastoquinone, Plastoquinol, Ubiquinone, Ubiquinol, *Beta-carotene, Heme b, Chlorophyll A and Pheophytin. Details on the parameterization and behavior of the topologies can be found in:\n\nDjurre H. de Jong, Nicoletta Liguori, Tom van den Berg, Clement Arnarez, Xavier Periole, and Siewert J. Marrink. Atomistic and Coarse Grain Topologies for the Cofactors Associated with the PhotoSystem II Core Complex. , J. Phys. Chem. B, 2015, 119 (25), pp 7791–7803.\ntopologies.zip\n\n\nThe file describing the tabulated angle of Betacarotene does not have the right format. Although it does produce the right distribution, the dynamics are off. The tabulated potential and the ITP file below do have the right format, produce the right distribution and give better dynamics as compared to the atomistic simulations. Thanks to Floris van Eerden for pointing this out and providing us with the correct files.\n\n\nBCR_correct.zip\n\n\n\nDIM (Phthiocerol dimycocerosate) lipids\n\n(provided by Matthieu Chavent - Matthieu.Chavent@ipbs.fr)\nThe coordinates and topological files for the DIM lipids for AMBER and MARTINI as well as tcl (VMD) scripts and jupyter notebooks used to perform analysis can be accessed via the link:\n\nhttps://github.com/MChavent/DIM_data/tree/master/MD_simulations\n\nThe associated paper is available on Biorxiv preprint:\n\nhttps://www.biorxiv.org/content/10.1101/649541v1",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-solid fa-section\"></i> Others"
    ]
  },
  {
    "objectID": "docs/downloads/force-field-parameters/martini2/polymers.html",
    "href": "docs/downloads/force-field-parameters/martini2/polymers.html",
    "title": " Polymers",
    "section": "",
    "text": "Available Martini 2 polymer topologies are listed below according to their major category. In addition, you can use Martini_PolyPly to generate GROMACS .itp files of polymers from a monomer .itp-file and generate coordinates of polymer molecules from a complete topology file.\nReferences to these works can be found in the headers of the corresponding .itp files.\n\nBranched polymers\n\n\n\n\nMolecule\nCoordinates\nTopology\nMapping\n\n\n\n\nPoly(amidoamine) dendimer (PAMAM)\nmartini_v2.0_PAMAM_G5.gro\n[itp]\nNot available\n\n\n\n\n\nLinear polymers\n\n\n\n\nMolecule\nCoordinates\nTopology\nMapping\n\n\n\n\nPoly(ethylene glycol) (PEG)\nmartini_v2.0_PEO_27.gro\n[itp]  For polarizable water: [itp]\nNot available\n\n\nPoly(styrene) (PS)\nSingle chain: martini_v2.0_PS_100.gro  100mer in Benzene martini_v2.0_PS_in_BENZ.gro\n[itp]\nNot available\n\n\nPoly(3-hexylthiophene-2,5-diyl) (P3HT)\nmartini_v2.0_P3HT_48.gro\n[itp]\nNot available\n\n\nPoly (styrene sulfonate) (PSS)\nmartini_v2.2P_PSS_30.gro\n[itp]\nNot available\n\n\nPoly(diallyl dimethyl ammonium) (PDADMA)\nmartini_v2.2P_PDADMA_30.gro\n[itp]\nNot available\n\n\nPolypropylene (PP)\nmartini_v2.0_PP_100.gro\n[itp]\nNot available\n\n\nPolyethylene (PE)\nmartini_v2.0_PE_80.gro\n[itp]\nNot available\n\n\n\n\n\nOthers\n\nA list of everything which does not really fit in any of the above.\n\n\n\nMolecule\nCoordinates\nTopology\nMapping\n\n\n\n\nPoly(styrene)-b-poly(ethylene oxide) (PS-b-PEO)\nmartini_v2.0_PSbPEO_10_23.gro\n[itp]\nNot available\n\n\nPEGylated-DPPC (PEL-DPPC)\nmartini_v2.0_PEL_45.gro  martini_v2.0_PEL_45_brush.gro  martini_v2.0_PEL_45_mushroom.gro\n[itp]\nNot available\n\n\n\n\n\nCollections\n\nThis is an legacy collection of the polymer related parameters. PEG and PEO, a PEGylated lipid, a G5 PAMAM dendrimer, polystyrene, and P3HT\n\nmartini_v2.0_polymers.itp",
    "crumbs": [
      "Home",
      "🫧 Force field parameters",
      "<i class=\"fa-solid fa-dice-two\"></i> Martini 2",
      "<i class=\"fa-brands fa-mixer\"></i> Polymers"
    ]
  },
  {
    "objectID": "docs/downloads/example-applications/solvent-systems.html",
    "href": "docs/downloads/example-applications/solvent-systems.html",
    "title": "Solvent systems",
    "section": "",
    "text": "Martini solvent boxes\n\nThanks to the contribution of Sebastian Franco Ulloa, we can now provide our users with a small library of pre-equilibrated solvent boxes, ranging from acetamide to trans-octadecane.\nFiles can be downloaded here.\n\n\nSalt solution\n\nEquilibrated at T=300K, P=1 bar. System size: sodium 8, chloride 8, water 388.\n\nnacl+wat.gro\nnacl+wat.mdp\nnacl+wat.top\n\n\n\nHexadecane slab in water\n\nEquilibrated at T=300K, constant area and perpendicular Pz=1 bar. System size: hexadecane 100, water 400.\n\nhexadecane_slab.gro\nhexadecane_slab.mdp\nhexadecane_slab.top\n\n\n\nPure water solvent\n\nEquilibrated at T=300K, P=1 bar. System size: water 2000 (corresponding to 8000 real water molecules).\n\nwater.gro\nwater.mdp\nwater.top\n\nA box with 1824 polarizable waters, equilibrated at T=300K, P = 1 bar.\n\npolarize-water.gro\npolarize-water.mdp\npolarize-water.top",
    "crumbs": [
      "Home",
      "🧑‍💻️ Example applications",
      "Solvent systems"
    ]
  },
  {
    "objectID": "docs/downloads/example-applications/peptides.html",
    "href": "docs/downloads/example-applications/peptides.html",
    "title": "Peptides",
    "section": "",
    "text": "Bacterial cell wall peptidoglycan\n\nA Martini model of bacterial cell wall peptidoglycan is now available, thanks to the nice work of Vaiwala et al. Download the files here! Any queries regarding the model should be addressed to the authors (see below).\nThe zip-archive contains the forcefield parameters (.itp) files and the structure (.gro) files of the single, 7, and 21 chains conformer for the peptidoglycan layer of the bacterial cell envelope, along with the README file. The details for the parameterization can be found in:\nRakesh Vaiwala, Pradyumn Sharma, Mrinalini Puranik, K. Ganapathy Ayappa. Developing a Coarse-Grained Model for Bacterial Cell Walls: Evaluating Mechanical Properties and Free Energy Barriers, J. Chem. Theory Comput. 2020, 16, 8, 5369–5384\n\n\nKALP in a DPPC bilayer\n\nKALP (23 residue) in a DPPC bilayer\n\nkalp_DPPC.mdp\nkalp_DPPC.top\nkalp.itp\nkalp_DPPC.gro\n\n\n\nCollagen Triple Helix\n\nCollagen triple helix in vacuum\n(provided by Markus Buehler)\nNote: the required ``collagen.itp’’ file can be generated using the martinize script\n\ncollagen.mdp\ncollagen.top\ncollagen.gro\n\n\n\nHA fusion peptides\n\nHemagglutinin (HA) fusion peptides at lipid interface\nTopologies for the wildtype at pH 5.0 and pH 7.4, and mutants W14A and G1V, and coordinate files for a system of 256 DOPE lipids with 4 WT peptides either in a randomized solution or in a stalk-phase\n\nWT_pH5.0.itp\nWT_pH7.4.itp\nW14A.itp\nG1V.itp\nmixed_4WTpH5.0.top\nmixed_4WTpH5.0.gro\nstalkphase_4WTpH5.0.top\nstalkphase_4WTpH5.0.gro\n\n\n\nActin with ADP and ATP\n\nInterested in using Martini for ADP or ATP with actin?\nThe attached .zip -file contains topologies for ADP, ATP as well as ADP-actin and ATP-actin systems. PDB files are provided for ADP- and ATP-actin, as well as the F-actin strand. As an added bonus, there’s a short bash script which allows the user to build fibers of arbitrary lengths from one of the PDB files (2zwh.pdb).\nDownload the files here!\n\n\nGlycophorin in DPPC membrane\n\nGlycophorin A monomer in a DPPC bilayer. These simulations have been ran with an older, unpublished version of the MARTINI forcefield. Use with the greatest care.\n\ngly_A_monomer_DPPC.mdp\ngly_A_monomer_DPPC.top\ngly_A_monomer.itp\ngly_A_monomer_DPPC.gro\n\n\n\nMscL in a bilayer\n\nMscL channel embedded in a DOPC bilayer\n(both an open and closed state are provided)\n\nmscl.mdp\nmscl.top\nmscl.itp\nmscl.ndx\nmscl-closed.gro\nmscl-open.gro\n\n\n\nToy peptide\n\nThe toy peptide contains all amino acids. Half of the peptide is helical, the other half beta strand. Equilibrated at T=300K, P=1 bar. System composition: 1 peptide, water 1538.\n\ntoypeptide.gro\ntoypeptide.mdp\ntoypeptide.top\ntoypeptide.itp\n\n\n\nAmyloid Fibrils\n\nEquilibrated at T=300K, constant pressure P=1 bar. System size: 27 hiAPP (human islet amyloid polypeptide) fibrils, 59271 waters\n\nfibril.gro\nfibril.mdp\nfibril.top\nfibril.itp",
    "crumbs": [
      "Home",
      "🧑‍💻️ Example applications",
      "Peptides"
    ]
  },
  {
    "objectID": "docs/downloads/example-applications/multiscaling.html",
    "href": "docs/downloads/example-applications/multiscaling.html",
    "title": "Multiscaling",
    "section": "",
    "text": "AdResS simulation of MARTINI solvents\n\nThese are the systems simulated in Zavadlav, J., Melo, M. N., Vicente Cunha, A., De Vries, A. H., Marrink, S. J., & Praprotnik, M. (2014). Adaptive resolution simulation of MARTINI solvents. Journal of Chemical Theory and Computation, using GROMACS.\n\nMartini water + bundled SPC: this simulation requires modifications to GROMACS 4.6.5, included in this patch. See the supporting information in the paper for details on the modifications.\nButane: can be simulated using the standard version of GROMACS (4.6.4 was used in the paper). If the modified GROMACS version is used instead, adress_ex_forcecap should be set to the capping distance (try something between 0.1 and 0.2) instead of the capping magnitude.\n\nThe archive for each system contains the respective pre-converged thermodynamic force table.",
    "crumbs": [
      "Home",
      "🧑‍💻️ Example applications",
      "Multiscaling"
    ]
  },
  {
    "objectID": "docs/downloads/example-applications/polymers.html",
    "href": "docs/downloads/example-applications/polymers.html",
    "title": "Polymers",
    "section": "",
    "text": "PEO polymers in water\n\nEquilibrated at T=300K, constant pressure P=1 bar. System size: 56 peo polymers (of 36 monomers), water 13312.\n\npeo36.gro\npeo36.mdp\npeo36.top\n\n\n\nPSS and PDADMA polyelectrolytes\n\n(provided by Jens Smiatek, smiatek@icp.uni-stuttgart.de)\nParameter files for PSS, poly(styrene sulfonate), and PDADMA, poly(diallyldimethylammonium), with 30 monomers. Also includes the Martini 2.2P parameter file including polystyrene beads (martini_v2.2P_PS.itp)\n\nparameters-polyelectrolytes.tar.gz\n\nAn example application to simulate an equilibrated PSS/PDADMA mixture including ions and water with all necessary parameter files.\n\nexample-polyelectrolyte-mixture.tar.gz\n\nFurthermore, a free program to generate topology files for arbitrarily long PSS or PDADMA chains can be found at: https://github.com/martinvoegele/martini-polyelectrolytes\nThe corresponding article can be cited as:\n\nCoarse-grained simulations of polyelectrolyte complexes: MARTINI models for poly(styrene sulfonate) and poly(diallyldimethylammonium). Vögele, Martin and Holm, Christian and Smiatek, Jens. The Journal of Chemical Physics, 143, 243151 (2015), DOI:http://dx.doi.org/10.1063/1.4937805\n\n\n\nPolystyrene\n\n(provided by Luca Monticelli)\nSystem composition: 1 polystyrene chain (of 100 monomers), 2652 benzenes.\n\npolystyrene_benz.gro\npolystyrene_benz.mdp\npolystyrene_benz.top\nmartini_v2.1_SP.itp\n\n\n\nPEGylated lipids\n\n(provided by Hwankyu Lee)\nEquilibrated at T=296K, constant pressure P=1 bar. System size: 10269 DPPC lipids, 231 DPPE-PEG45 lipids, 394844 waters, 231 Na+ ions\n\npegylatedlipid.gro\npegylatedlipid.mdp\npegylatedlipid.top",
    "crumbs": [
      "Home",
      "🧑‍💻️ Example applications",
      "Polymers"
    ]
  },
  {
    "objectID": "docs/downloads/index.html",
    "href": "docs/downloads/index.html",
    "title": "Downloads",
    "section": "",
    "text": "One of the strong assets of the Martini force field is its easy availability. Here, we provide resources including parameter files, example run parameters, and example topology files, all in  format, making it straightforward to set up and run your simulations. Additionally, Martini has been implemented in other molecular dynamics software packages (such as  and ), broadening its accessibility.\nTo further support your research, we offer starting structures derived from published example applications. These resources enable users to replicate and build upon established studies with ease. Moreover, we have curated a collection of scripts and programs developed by the Martini community over the years. These tools are designed to simplify the setup and analysis of Martini systems.",
    "crumbs": [
      "Home",
      "<b>Summary</b><hr>"
    ]
  },
  {
    "objectID": "docs/downloads/example-input-files/md-parameters.html",
    "href": "docs/downloads/example-input-files/md-parameters.html",
    "title": "MD parameters",
    "section": "",
    "text": "These are some example of a general input parameter files for molecular dynamics simulations with . For further background reading on comparison of the different .mdp options, plese see:\n\nD.H. de Jong, S. Baoukina, H.I. Ingólfsson, Marrink S.J. Martini straight: boosting performance using a shorter cutoff and GPUs. Comput. Phys. Commun., 199:1-7, 2016. doi:10.1016/j.cpc.2015.09.014\n\n\nMartini 3\n\n\nmartini_v3.x_example.mdp\n\n\n\nMartini 2\n\nBased on the extensive testing, we recommend the new-rf.mdp parameters for most cases. However not all systems have been tested and we recommend you do your own tests. In addition, for consistency within a project the same .mdp options should always be used.\n\nmartini_v2.x_new-rf.mdp\nmartini_v2.x_new.mdp\nmartini_v2.x_forcemod.mdp\nmartini_v2.x_common.mdp\n\nExample of a general input parameter files (Gromacs 4). Explanations on the various options and which options to change for the use with polarizable water are given inside the file.\n\nmartini_v2.x_example.mdp\n\nOlder mdp-files (gromacs 3) for reference purpose only. Version 2.x. is for version 2.0, 2.1 and 2.2, 2.P is for use with polarizable water (2.P and 2.2P).\n\nmartini_v2.x_example.mdp\nmartini_v2.P_example.mdp",
    "crumbs": [
      "Home",
      "🗄 Example input files",
      "MD parameters"
    ]
  },
  {
    "objectID": "docs/downloads/tools/resolution-transformation.html",
    "href": "docs/downloads/tools/resolution-transformation.html",
    "title": "Resolution transformation",
    "section": "",
    "text": "TS2CG: Triangulated Surfaces to Coarse Grain\n\nTS2CG is an algorithm to backmap a triangulated surface to a corresponding coarse-grained model.\nThe software can be downloaded from this link, or by visiting https://github.com/marrink-lab/TS2CG.\n\n\nBackward\n\nBackward is a tool to convert a coarse-grained system to united-atom or all-atom resolution. The mapping is done using a library of mapping definitions, which encode the geometric reconstruction.\nIn most cases, the backmapping is performed using the wrapper initram.sh, which calls backward.py and subsequently relaxes the resulting structure through energy minimization and molecular dynamics based relaxation.\nWhen using this method, please cite:\nGoing Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models Tsjerk A. Wassenaar, Kristyna Pluhackova, Rainer A. Böckmann, Siewert J. Marrink, and D. Peter Tieleman J. Chem. Theory Comput., 10:676-690, 2014. DOI: 10.1021/ct400617g\nMore extensive information and a tutorial can be found [here].\nThe scripts and mapping definitions for gromacs versions 4 and 5-bead oleoyl lipid chains are combined into a single zip file, which can be downloaded here.\nThe initram.sh script for version 5 can be downloaded here.\nThe script for gromacs versions 5 and higher and the mapping files for the amino acid residues and nucleobases are combined into a single zip file, which can be downloaded here.\n\n\nConvert Martini water to polarizable water\n\n\ntriple-w.py\n\nScript to convert the water in CG Martini system to polarizable water. For an example how to use this script, click here.\n\n\nResolution transformation\n\nCustom version of Gromacs to reintroduce atomistic details to CG structures gmx_rev.tar.gz.\nIf you use the code, please cite:\n\nRzepiela et al. Reconstruction of atomistic details from coarse grained structures J. Comp. Chem, 31-1333-1343, 2010.\n\nWe recommend you use Backward instead of this tool. For details about this tool please contact Andrzej Rzepiela (Andrzej.Rzepiela@physik.uni-freiburg.de)\nYou may also try an automized resolution transformation provided by Angel Pineiro, see http://smmb.usc.es/sugarpie/sugarpie.php.",
    "crumbs": [
      "Home",
      "⚒️ Tools",
      "Resolution transformation"
    ]
  },
  {
    "objectID": "docs/downloads/tools/proteins-and-bilayers.html",
    "href": "docs/downloads/tools/proteins-and-bilayers.html",
    "title": "Proteins and bilayers",
    "section": "",
    "text": "ProLint\n\nThe Tieleman group has developed a new webserver coined ProLint, a user-friendly framework for the automated analysis and interactive visualization of Protein-Lipid interactions, supporting the Martini forcefield. The webportal can be accessed at https://www.prolint.ca/, and details are described in this paper.\nFor questions, please contact Peter Tieleman (tieleman@ucalgary.ca)\n\n\nPCALipids Tool\n\nPrincipal components analysis is a standard approach to study conformational changes in biological molecules, in particular when the free energy lanscape has only one global minima. PCAlipids is a Python-based software that performs complete quantitative analysis of conformations and dynamics of lipids or other small molecules. The information about the approach can be found in the following papers:\n\nPrincipal Component Analysis of Lipid Molecule Conformational Changes in Molecular Dynamics Simulations, Buslaev et al., JCTC 2016\nEffects of Coarse Graining and Saturation of Hydrocarbon Chains on Structure and Dynamics of Simulated Lipid Molecules, Buslaev & Gushchin, Sci. Rep. 2017\n\nPCALipids can be downloaded here: https://github.com/membrane-systems/PCAlipids\nA brief tutorial: https://github.com/membrane-systems/PCAlipids/blob/master/tutorial/tutorial.md\n\nFor questions please contact Khalid Mustafin (khalid.mustafin@phystech.edu), Pavel Buslaev (pbuslaev@phystech.edu) or Ivan Gushchin (ivan.gushchin@phystech.edu).\n\n\nMDVoxelSegmentation\n\nWhen working with large systems containing multiple bilayers or other dynamic macroscopic objects, it tends to come more natural to give these aggregates an identity of their own. This is exactly what MDAVoxelSegmentation does for amphipathic Martini systems. It not only detects bilayers/leaflets or other aggregates using a voxel based architecture, but it also keeps track of such entities over time. For more information take a look at the github or contact the developers! As an appetizer we added a rendered movie and graph describing how the transfection of dsDNA from a lipid-DNA complex occurs over a membrane (doi: 10.7554/eLife.52012).\n\n\n\nNanodisc builder\n\nNanodisc technology is increasingly being applied for structural and biophysical studies of membrane proteins. Here you can find a general protocol for constructing nanodiscs for molecular dynamics simulations. The protocol is written in python and based on geometric equations, making it fast and easy to modify, enabling automation and customization of nanodiscs in silico. The tool allows one to efficiently construct any membrane scaffold protein (MSP) variant given only an input sequence.\n\nThe tool, developed by Lisbeth Kjølbye in the group of Birgit Schiøtt, can be found here: https://github.com/LHRK/Nanodisc-Builder\nA paper describing the tool and showing examples of its validation is published in JCIM: https://pubs.acs.org/doi/10.1021/acs.jcim.1c00157\n\n\nLeaflet identification and analysis\n\nWlison et al. introduce a collection of membrane analysis tools suitable for Martini, built upon the MDAnalysis package. The first and most fundamental is a method for identifying leaflets in a membrane based on spectral clustering (LeafletFinder). Once leaflets are identified, there are several leaflet-based analysis classes: the LipidEnrichment class for calculating the depletion-enrichment index of lipid groups, LipidFlipFlop class for calculating flip-flop, and the AreaPerLipid class for lateral area per lipid. For more information please visit https://github.com/OMaraLab/SLC6_lipid_fingerprints.\nSee also the associated paper: https://www.sciencedirect.com/science/article/pii/S2667160321000090\n\n\nGo-Martini\n\nFor ongoing development of Go-Martini, see the webpage of Adolfo Poma: http://pomalab.ippt.pan.pl/web/index.html\n\n\nAnalyze lipid fingerprints\n\nThe following script, based on work of Corradi et al. [1], is provided for all your lipid fingerprint analysis needs. Special thanks to Amanda Buyan and Helgi Ingólfsson!\nDownload the script here. Please note that Python 2.7 (or equivalent) is required. For help on how to use it, simply type “python lipid-PM-counter-fix-v3.0.py -h”\n[1] V. Corradi, E. Mendez-Villuendas, H.I. Ingólfsson, R.X. Gu, I. Siuda, M.N. Melo, A. Moussatova, L.J. DeGagné, B.I. Sejdiu, G. Singh, T.A. Wassenaar, K. Delgado Magnero, S.J. Marrink, D.P. Tieleman. Lipid–Protein Interactions Are Unique Fingerprints for Membrane Proteins. ACS Central Science 4:709–717, 2018\n\n\nmartinize\n\nMartinize is a python script to generate Martini protein topology and structure files based on an atomistic structure file. It replaces the old seq2itp, atom2cg and ElNeDyn scripts. The produced topology and structure files are in a format suitable for Gromacs.\nThe current version (2.x) has been used rather extensively, however it might still contain errors or bugs. Any feedback is more than welcome! The script is “concatenated”: all the different classes, modules and forcefields are in one file. If you want to make changes yourself or add a forcefield we have a modular version available. If you would like to use this, send us an e-mail.\nYou can now also download the latest martinize from GitHub. The major updates are always added also here below:\n\nmartinize.py and python 3 version martinize.py (version 2.6, May 12 2016)\n\nThe option for the elastic bond lower cutoff (-el) is now correctly recognized.\nCys bonds in gro-files and pdb-files without chain identifier are now correctly identified.\nMany, many code clean-ups and restructuring.\n\nmartinize.py (version 2.5, August 11 2015)\n\nRemoved warnings about beta status of Martini 2.2.\nBug fix: Fixed cases where Cys-Cys constraints were not recognized as such.\n\nmartinize.py (version 2.4, August 18 2013)\n\nInverted “define NO_RUBBER_BANDS” behavior.\nChanged protein backbone constraints to bonds.\nChanged HIS BB-SC constraint to bonds.\nBug fix: Cys-bond length and force constant.\nBug fix: Position restraints are correctly written out when multiple chains are merged.\n\nmartinize.py (version 2.3, February 13 2013)\n\nBug fix: Correctly call dssp.\nBug fix: Correct error message when atoms are missing.\nBug fix: Correctly merge topologies of multiple change in case of Martini 2.2P.\n\nmartinize.py (version 2.2, November 27 2012)\n\nAdded charged His to all forcefields and options to choose the His-charge state.\nBug fix: correctly handle .gro files.\nBug fix: Correctly handle .pdb files containing hydrogens.\nBug fix: bead types correctly set in helix starting at first residue.\nFixed small inconsistencies in elnedyn forcefields.\nCleaned up and added help text and warning messages.\n\nmartinize.py (version 2.0, July 25 2012)\n\nMajor clean-up and restructuring of the code.\nChanged forcefield selection. Forcefield now available: Martini 2.1, Martini 2.1P, Martini 2.2, Martini 2.2P, Elnedyn, Elnedyn 2.2 and Elnedyn 2.2P.\nAdded function to handle new polar and charged residues in Martini 2.2P.\nSeveral small bug fixes.\n\nmartinize-1.2.py (version 1.2, May 22th 2012)\n\nFixed bug with counter in multi chain topologies.\nCorrected wrong collagen parameters.\nFixed bug involving BBBB dihedrals in extended regions.\nFixed bug when giving secondary structure as string.\nA test set is now available.\n\nmartinize-1.1.py (version 1.1)\n\nFixed bug in pdb read-in.\nClean up of code.\n\nmartinize-1.0.py (version 1.0)\n\n\n\nInsane\n\nThe most up to date version of insane https://github.com/Tsjerk/Insane\nAn older version, still all in one file insane.py\nInsane (INSert membrANE) is a python tool to setup Martini bilayer systems. It handles a broad range of different lipid types, is very flexible with respect to box types and can insert a (CG) protein structure in the bilayer if one is given. Help text and options are obtained by typing: insane.py -h\nRead much more about insane from the insane paper: DOI: 10.1021/acs.jctc.5b00209\n2015.06.25 – insane was updated adding a few features, fixing a few bug and the lipid templates now use the new lipid-naming schema, the old templates are still available with a .o after the name e.g. “DHPC.o”.\n2024 – several updates have been made to insane, including python3 and Martini3 lipid support, see https://github.com/Tsjerk/Insane, and updated Martini 3 membrane tutorials DOI 10.1016/bs.mie.2024.03.010.\n\n\nElNeDyn\n\nElNeDyn stands for Elastic Network in Dynamics. In this approach an elastic network (EN; a set of springs or harmonic bonds between interacting sites) is used as a structural scaffold to describe and control the overall shape of a molecule. The EN is then combined with a coarse-grained molecular force field to describe the intra- and inter-molecular interactions.\n\nThe current version of ElNeDyn focusses on modeling proteins and has been developed in conjunction with the Martini CG force field (2.0, 2.1) but can in principle be mixed with any CG model for any type of molecule. The Martini FF presents the great advantage to include a large body of biomolecules and solvents making simulations of biomolecular systems actually possible.\nThe rationale for the use of EN is to control the conformation of the protein while keeping its internal dynamics. This has been possible by parametrizing the EN against atomistic model simulations. By tuning the force constant of the springs and the extend of the network, backbone deformations, fluctuations and large amplitude domain motions observed in atomistic simulations of proteins have been matched. For more detail refer to X. Periole et al. 2009 JCTC 5:2531-43.\nOne notable detail is that the description of the bonded terms defined in original Martini for proteins has been slightly modified to accommodate for the placement of the backbone bead on the Calpha instead on the center-of-mass of the backbone atoms. The non-bonded terms were used as in the original force field.\nIn the following you’ll find a tar.gz file containing the scripts and programs (listed below) that will allow you to build the topology of protein from a pdb file.\nDownload: ElNeDyn-2.1.tar.gz\nFiles and short description: - AA.dat : contains the definition of the amino acids. - cg-2.1.dat : contains the definition of the bonded terms. - cg-2.1.dat.comments : description of the content of cg-2.1.dat. - pdb2CGpdb-2.1.f : fortran code reading a pdb file of a protein and giving a CG version of it. - topol-CG-2.1.f : fortran code reading the CG coordinates and building the ElNeDyn topology. - HowTo-ElNeDyn.pdf : a step-by-step description of the procedure to get from the pdb file to an MD run. - a set of mdp files to minimize, relax and simulate your ElNeDyn model.\nFor more information contact Xavier Periole (x.periole@rug.nl).\nThe development of ElNeDyn is done in close collaboration with Prof. M. A. Ceruso at the CCNY-CUNY in New York City, USA.\n\n\nDAFT - Docking Assay For Transmembrane Components\n\n\ndaft.tar\n\nDAFT is a method for investigating protein-protein and protein-lipid interactions by running many association simulations. These allow identifying the binding hotspots and alternative binding sites.\nDAFT is a bundle of programs and supporting files, and comprises martinize, martinate, insane, and several MARTINI interaction table generating Python scripts, toghether with the standard lipid, ion and solvent topologies. The user interface is formed by the bash script daft.sh (see daft.sh -h for more information).\nMore background on this DAFT approach can be read in the DAFT paper: DOI: 10.1021/ct5010092\n\n\nFlux calculator\n\n\nfluxer.py\n\nThis tool calculates fluxes across either a whole bilayer or through a defined channel. The trajectory must have been treated with -pbc nojump and, if analyzing the flux through a channel, care must be taken to ensure the channel is kept whole in the trajectory (use -pbc cluster).\nPlease cite J. Am. Chem. Soc., 2017, 139 (7), pp 2664–2671 whenever using results generated by fluxer.py.\nCheck the script’s project page for more information on usage and to submit bugs.\n\n\nseq2itp\n\nA perl script to build your own peptide/protein topology (.itp). Use the -h option to see what it can do. As input it requires the amino acid sequence (.seq) and the secondary structure information (.ssd).\n\nseq2itp.pl (version 1.1.5)\nmartini_v2.1_example.seq\nmartini_v2.1_example.ssd\n\n\n\natom2cg\n\nA simple awk script that converts an atomistic PDB file to a coarse grained PDB file.\n\natom2cg_v2.1.awk\n\n\n\nmolmaker.py: Create molecule coordinates from their .itps\n\n\nmolmaker.py\n\nThis tool creates a .gro from an .itp file. It works by randomly scattering coordinates along a linear stretch and then performing an evil minimization as VdW and charges are faded in (using the free energy code). As you already guess, it’s totally useless for proteins unless you want a linear segment (in which case it works pretty well!).\nAdditionally, molmaker.py will likely not preserve your chiral centers unless you protect them in your topology using some sort of dihedral potential/restraint. Alternatively you might want to hand-correct each center using other tools and then energy-minimizing.\nCheck the -h flag for more details. Please report bugs in the GitHub project.",
    "crumbs": [
      "Home",
      "⚒️ Tools",
      "Proteins and bilayers"
    ]
  },
  {
    "objectID": "docs/publications/entry_template.html",
    "href": "docs/publications/entry_template.html",
    "title": "Martini Force Field Initiative",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entry_template.html#citation-apa-7",
    "href": "docs/publications/entry_template.html#citation-apa-7",
    "title": "Martini Force Field Initiative",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entry_template.html#abstract",
    "href": "docs/publications/entry_template.html#abstract",
    "title": "Martini Force Field Initiative",
    "section": "Abstract",
    "text": "Abstract\nWe describe molecular dynamics simulations elucidating the molecular details of the process of fusion for small lipid vesicles. The simulations are based on a coarse grained (CG) lipid model that accurately represents the lamellar state of a variety of phospholipids and enables us to observe intermediate stages during fusion at near atomic detail. Simulations were conducted on a variety of systems containing common phospholipids such as phosphatidylcholine (PC), phosphatidylethanolamine (PE), lysoPC, and mixtures of the above. The fusion intermediates found are in general agreement with the stalk−pore mechanism. Transient pores sometimes form adjacent to the stalk, however, resulting in the mixing of lipids from the outer and inner monolayers. The speed of stalk formation and the opening of the fusion pore can be modulated by altering the lipid composition in qualitative agreement with experimental observations."
  },
  {
    "objectID": "docs/publications/entries/2024/Brasnett2024_ReactionCondensates.html",
    "href": "docs/publications/entries/2024/Brasnett2024_ReactionCondensates.html",
    "title": "Capturing chemical reactions inside biomolecular condensates with reactive Martini simulations",
    "section": "",
    "text": "Brasnett, C., Kiani, A., Sami, S. & Marrink, S. J. (2024). Capturing chemical reactions inside biomolecular condensates with reactive Martini simulations. Commun Chem 7, 151."
  },
  {
    "objectID": "docs/publications/entries/2024/Brasnett2024_ReactionCondensates.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Brasnett2024_ReactionCondensates.html#citation-apa-7",
    "title": "Capturing chemical reactions inside biomolecular condensates with reactive Martini simulations",
    "section": "",
    "text": "Brasnett, C., Kiani, A., Sami, S. & Marrink, S. J. (2024). Capturing chemical reactions inside biomolecular condensates with reactive Martini simulations. Commun Chem 7, 151."
  },
  {
    "objectID": "docs/publications/entries/2024/Brasnett2024_ReactionCondensates.html#abstract",
    "href": "docs/publications/entries/2024/Brasnett2024_ReactionCondensates.html#abstract",
    "title": "Capturing chemical reactions inside biomolecular condensates with reactive Martini simulations",
    "section": "Abstract",
    "text": "Abstract\nBiomolecular condensates are phase separated systems that play an important role in the spatio-temporal organisation of cells. Their distinct physico-chemical nature offers a unique environment for chemical reactions to occur. The compartmentalisation of chemical reactions is also believed to be central to the development of early life. To demonstrate how molecular dynamics may be used to capture chemical reactions in condensates, here we perform reactive molecular dynamics simulations using the coarse-grained Martini forcefield. We focus on the formation of rings of benzene-1,3-dithiol inside a synthetic peptide-based condensate, and find that the ring size distribution shifts to larger macrocycles compared to when the reaction takes place in an aqueous environment. Moreover, reaction rates are noticeably increased when the peptides simultaneously undergo phase separation, hinting that condensates may act as chaperones in recruiting molecules to reaction hubs."
  },
  {
    "objectID": "docs/publications/entries/2024/Park2024_VesicleAntimicrobialPeptides.html",
    "href": "docs/publications/entries/2024/Park2024_VesicleAntimicrobialPeptides.html",
    "title": "Vesicle protrusion induced by antimicrobial peptides suggests common carpet mechanism for short antimicrobial peptides",
    "section": "",
    "text": "Park, P., Matsubara, D. K., Barzotto, D. R., Lima, F. S., Chaimovich, H., Marrink, S. J., & Cuccovia, I. M. (2024). Vesicle protrusion induced by antimicrobial peptides suggests common carpet mechanism for short antimicrobial peptides. Scientific Reports, 14(1), 9701."
  },
  {
    "objectID": "docs/publications/entries/2024/Park2024_VesicleAntimicrobialPeptides.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Park2024_VesicleAntimicrobialPeptides.html#citation-apa-7",
    "title": "Vesicle protrusion induced by antimicrobial peptides suggests common carpet mechanism for short antimicrobial peptides",
    "section": "",
    "text": "Park, P., Matsubara, D. K., Barzotto, D. R., Lima, F. S., Chaimovich, H., Marrink, S. J., & Cuccovia, I. M. (2024). Vesicle protrusion induced by antimicrobial peptides suggests common carpet mechanism for short antimicrobial peptides. Scientific Reports, 14(1), 9701."
  },
  {
    "objectID": "docs/publications/entries/2024/Park2024_VesicleAntimicrobialPeptides.html#abstract",
    "href": "docs/publications/entries/2024/Park2024_VesicleAntimicrobialPeptides.html#abstract",
    "title": "Vesicle protrusion induced by antimicrobial peptides suggests common carpet mechanism for short antimicrobial peptides",
    "section": "Abstract",
    "text": "Abstract\nShort-cationic alpha-helical antimicrobial peptides (SCHAMPs) are promising candidates to combat the growing global threat of antimicrobial resistance. They are short-sequenced, selective against bacteria, and have rapid action by destroying membranes. A full understanding of their mechanism of action will provide key information to design more potent and selective SCHAMPs. Molecular Dynamics (MD) simulations are invaluable tools that provide detailed insights into the peptide-membrane interaction at the atomic- and meso-scale level. We use atomistic and coarse-grained MD to look into the exact steps that four promising SCHAMPs—BP100, Decoralin, Neurokinin-1, and Temporin L—take when they interact with membranes. Following experimental set-ups, we explored the effects of SCHAMPs on anionic membranes and vesicles at multiple peptide concentrations. Our results showed all four peptides shared similar binding steps, initially binding to the membrane through electrostatic interactions and then flipping on their axes, dehydrating, and inserting their hydrophobic moieties into the membrane core. At higher concentrations, fully alpha-helical peptides induced membrane budding and protrusions. Our results suggest the carpet mode of action is fit for the description of SCHAMPs lysis activity and discuss the importance of large hydrophobic residues in SCHAMPs design and activity."
  },
  {
    "objectID": "docs/publications/entries/2024/Garg2024_OxygenPartitioning.html",
    "href": "docs/publications/entries/2024/Garg2024_OxygenPartitioning.html",
    "title": "Oxygen partitioning into biomolecular condensates is governed by excluded volume",
    "section": "",
    "text": "Garg, A., Brasnett, C., Marrink, S. J., Koren, K., & Kjaergaard, M. (2024). Oxygen partitioning into biomolecular condensates is governed by excluded volume. bioRxiv, 2024-05."
  },
  {
    "objectID": "docs/publications/entries/2024/Garg2024_OxygenPartitioning.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Garg2024_OxygenPartitioning.html#citation-apa-7",
    "title": "Oxygen partitioning into biomolecular condensates is governed by excluded volume",
    "section": "",
    "text": "Garg, A., Brasnett, C., Marrink, S. J., Koren, K., & Kjaergaard, M. (2024). Oxygen partitioning into biomolecular condensates is governed by excluded volume. bioRxiv, 2024-05."
  },
  {
    "objectID": "docs/publications/entries/2024/Garg2024_OxygenPartitioning.html#abstract",
    "href": "docs/publications/entries/2024/Garg2024_OxygenPartitioning.html#abstract",
    "title": "Oxygen partitioning into biomolecular condensates is governed by excluded volume",
    "section": "Abstract",
    "text": "Abstract\nBiomolecular condensates form through the self-assembly of proteins and nucleic acids to create dynamic compartments in cells. By concentrating specific molecules, condensates establish distinct microenvironments that regulate biochemical reactions in time and space. Macromolecules and metabolites partition into condensates depending on their interactions with the macromolecular constituents, however, the partitioning of gases has not been explored. We investigated oxygen partitioning into condensates formed by intrinsically disordered repeat proteins with systematic sequence variations using phosphorescence lifetime imaging microscopy (PLIM). Unlike other hydrophobic metabolites, oxygen is partially excluded from the condensate with partitioning constants more strongly modulated by changes in protein length than hydrophobicity. For repeat proteins, the dense phase protein concentration drops with chain length resulting in a looser condensate with less excluded volume. We found that oxygen partitioning is anti-correlated with dense phase protein concentration, suggesting that oxygen concentration is mainly determined by the solvent accessible volume. This suggests that oxygen partitioning is determined by the physical organization of the condensates rather than the chemical properties of the scaffold. Molecular dynamics simulations suggest that oxygen does not form strong and specific interactions with the scaffold and is dynamic on the nanosecond timescale. Biomolecular condensates thus result in variation of oxygen concentrations on nanometer length-scales, which can tune the oxygen concentration available for biochemical reactions within the cell."
  },
  {
    "objectID": "docs/publications/entries/2024/Brown2024_MembranesInSitu.html",
    "href": "docs/publications/entries/2024/Brown2024_MembranesInSitu.html",
    "title": "Modeling membranes in situ",
    "section": "",
    "text": "Brown, C. M., & Marrink, S. J. (2024). Modeling membranes in situ. Current Opinion in Structural Biology, 87, 102837."
  },
  {
    "objectID": "docs/publications/entries/2024/Brown2024_MembranesInSitu.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Brown2024_MembranesInSitu.html#citation-apa-7",
    "title": "Modeling membranes in situ",
    "section": "",
    "text": "Brown, C. M., & Marrink, S. J. (2024). Modeling membranes in situ. Current Opinion in Structural Biology, 87, 102837."
  },
  {
    "objectID": "docs/publications/entries/2024/Brown2024_MembranesInSitu.html#abstract",
    "href": "docs/publications/entries/2024/Brown2024_MembranesInSitu.html#abstract",
    "title": "Modeling membranes in situ",
    "section": "Abstract",
    "text": "Abstract\nMolecular dynamics simulations of cellular membranes have come a long way—from simple model lipid bilayers to multicomponent systems capturing the crowded and complex nature of real cell membranes. In this opinionated minireview, we discuss the current challenge to simulate the dynamics of membranes in their native environment, in situ, with the prospect of reaching the level of whole cells and cell organelles using an integrative modeling framework."
  },
  {
    "objectID": "docs/publications/entries/2024/Shrestha2024_Nanomaterials.html",
    "href": "docs/publications/entries/2024/Shrestha2024_Nanomaterials.html",
    "title": "Martini 3 coarse-grained models for carbon nanomaterials",
    "section": "",
    "text": "Shrestha, R., Alessandri, R., Vögele, M., Souza, P., Marrink, S. J., & Monticelli, L. (2024). Martini 3 coarse-grained models for carbon nanomaterials."
  },
  {
    "objectID": "docs/publications/entries/2024/Shrestha2024_Nanomaterials.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Shrestha2024_Nanomaterials.html#citation-apa-7",
    "title": "Martini 3 coarse-grained models for carbon nanomaterials",
    "section": "",
    "text": "Shrestha, R., Alessandri, R., Vögele, M., Souza, P., Marrink, S. J., & Monticelli, L. (2024). Martini 3 coarse-grained models for carbon nanomaterials."
  },
  {
    "objectID": "docs/publications/entries/2024/Shrestha2024_Nanomaterials.html#abstract",
    "href": "docs/publications/entries/2024/Shrestha2024_Nanomaterials.html#abstract",
    "title": "Martini 3 coarse-grained models for carbon nanomaterials",
    "section": "Abstract",
    "text": "Abstract\nThe Martini model is a coarse-grained force field allowing simulations of biomolecular systems as well as a range of materials, including different types of nanomaterials of technological interest. Recently, a new version of the force field (version 3) has been released, that includes new parameters for lipids, proteins, carbohydrates, and a number of small molecules, but not yet carbon nanomaterials. Here, we present new Martini models for three major types of carbon nanomaterials: fullerene, carbon nanotubes, and graphene. The new models were parameterized within the Martini 3 framework, and reproduce semi-quantitatively a range of properties for each material. In particular, the model of fullerene yields excellent solid-state properties and good properties in solution, including correct trends in partitioning between different solvents and realistic translocation across lipid membranes. The models of carbon nanotubes reproduce the atomistic behavior of nanotube porins spanning lipid bilayers. The model of graphene reproduces structural and elastic properties, as well as trends in experimental adsorption enthalpies of organic molecules. All new models can be used in large-scale simulations to study the interaction with the wide variety of molecules already available in the Martini 3 force field, including biomolecular and synthetic systems."
  },
  {
    "objectID": "docs/publications/entries/2024/Chiariello2024_CofactorsPhotosynthesis.html",
    "href": "docs/publications/entries/2024/Chiariello2024_CofactorsPhotosynthesis.html",
    "title": "Martini 3 Coarse-Grained Model for the Cofactors Involved in Photosynthesis",
    "section": "",
    "text": "Chiariello, M. G., Zarmiento-Garcia, R., & Marrink, S. J. (2024). Martini 3 Coarse-Grained Model for the Cofactors Involved in Photosynthesis. International Journal of Molecular Sciences, 25(14), 7947."
  },
  {
    "objectID": "docs/publications/entries/2024/Chiariello2024_CofactorsPhotosynthesis.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Chiariello2024_CofactorsPhotosynthesis.html#citation-apa-7",
    "title": "Martini 3 Coarse-Grained Model for the Cofactors Involved in Photosynthesis",
    "section": "",
    "text": "Chiariello, M. G., Zarmiento-Garcia, R., & Marrink, S. J. (2024). Martini 3 Coarse-Grained Model for the Cofactors Involved in Photosynthesis. International Journal of Molecular Sciences, 25(14), 7947."
  },
  {
    "objectID": "docs/publications/entries/2024/Chiariello2024_CofactorsPhotosynthesis.html#abstract",
    "href": "docs/publications/entries/2024/Chiariello2024_CofactorsPhotosynthesis.html#abstract",
    "title": "Martini 3 Coarse-Grained Model for the Cofactors Involved in Photosynthesis",
    "section": "Abstract",
    "text": "Abstract\nAs a critical step in advancing the simulation of photosynthetic complexes, we present the Martini 3 coarse-grained (CG) models of key cofactors associated with light harvesting (LHCII) proteins and the photosystem II (PSII) core complex. Our work focuses on the parametrization of beta-carotene, plastoquinone/quinol, violaxanthin, lutein, neoxanthin, chlorophyll A, chlorophyll B, and heme. We derived the CG parameters to match the all-atom reference simulations, while structural and thermodynamic properties of the cofactors were compared to experimental values when available. To further assess the reliability of the parameterization, we tested the behavior of these cofactors within their physiological environments, specifically in a lipid bilayer and bound to photosynthetic complexes. The results demonstrate that our CG models maintain the essential features required for realistic simulations. This work lays the groundwork for detailed simulations of the PSII-LHCII super-complex, providing a robust parameter set for future studies."
  },
  {
    "objectID": "docs/publications/entries/2024/Souza2024_GoMartini.html",
    "href": "docs/publications/entries/2024/Souza2024_GoMartini.html",
    "title": "GōMartini 3: From large conformational changes in proteins to environmental bias corrections",
    "section": "",
    "text": "Souza, P. C., Borges Araujo, L. P., Brasnett, C., Moreira, R. A., Grunewald, F., Park, P., … & Thallmair, S. (2024). GōMartini 3: From large conformational changes in proteins to environmental bias corrections. BioRxiv, 2024-04."
  },
  {
    "objectID": "docs/publications/entries/2024/Souza2024_GoMartini.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Souza2024_GoMartini.html#citation-apa-7",
    "title": "GōMartini 3: From large conformational changes in proteins to environmental bias corrections",
    "section": "",
    "text": "Souza, P. C., Borges Araujo, L. P., Brasnett, C., Moreira, R. A., Grunewald, F., Park, P., … & Thallmair, S. (2024). GōMartini 3: From large conformational changes in proteins to environmental bias corrections. BioRxiv, 2024-04."
  },
  {
    "objectID": "docs/publications/entries/2024/Souza2024_GoMartini.html#abstract",
    "href": "docs/publications/entries/2024/Souza2024_GoMartini.html#abstract",
    "title": "GōMartini 3: From large conformational changes in proteins to environmental bias corrections",
    "section": "Abstract",
    "text": "Abstract\nCoarse-grained modeling has become an important tool to supplement experimental measurements, allowing access to spatio-temporal scales beyond all-atom based approaches. The GōMartini model combines structure- and physics-based coarse-grained approaches, balancing computational efficiency and accurate representation of protein dynamics with the capabilities of studying proteins in different biological environments. This paper introduces an enhanced GōMartini model, which combines a virtual-site implementation of Gō models with Martini 3. The implementation has been extensively tested by the community since the release of the new version of Martini. This work demonstrates the capabilities of the model in diverse case studies, ranging from protein-membrane binding to protein-ligand interactions and AFM force profile calculations. The model is also versatile, as it can address recent inaccuracies reported in the Martini protein model. Lastly, the paper discusses the advantages, limitations, and future perspectives of the Martini 3 protein model and its combination with Gō models."
  },
  {
    "objectID": "docs/publications/entries/2024/Brown2024_Cristae.html",
    "href": "docs/publications/entries/2024/Brown2024_Cristae.html",
    "title": "An integrative modelling approach to the mitochondrial cristae",
    "section": "",
    "text": "Brown, C. M., Westendorp, M. S., Zarmiento-Garcia, R., Stevens, J. A., Rouse, S. L., Marrink, S. J., & Wassenaar, T. A. (2024). An integrative modelling approach to the mitochondrial cristae. BioRxiv, 2024-09."
  },
  {
    "objectID": "docs/publications/entries/2024/Brown2024_Cristae.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Brown2024_Cristae.html#citation-apa-7",
    "title": "An integrative modelling approach to the mitochondrial cristae",
    "section": "",
    "text": "Brown, C. M., Westendorp, M. S., Zarmiento-Garcia, R., Stevens, J. A., Rouse, S. L., Marrink, S. J., & Wassenaar, T. A. (2024). An integrative modelling approach to the mitochondrial cristae. BioRxiv, 2024-09."
  },
  {
    "objectID": "docs/publications/entries/2024/Brown2024_Cristae.html#abstract",
    "href": "docs/publications/entries/2024/Brown2024_Cristae.html#abstract",
    "title": "An integrative modelling approach to the mitochondrial cristae",
    "section": "Abstract",
    "text": "Abstract\nMitochondria are implicated in many cellular functions such as energy production and apoptosis but also disease pathogenesis. To effectively perform these roles, the mitochondrial inner membrane has invaginations known as cristae that dramatically increase the surface area. This works to provide more space for membrane proteins that are essential to the roles of mitochondria. While separate components of this have been studied computationally, it remains a challenge to combine elements into an overall model. Here we present a workflow to create a comprehensive model of a crista junction from a human mitochondrion. Our coarse-grained representation of a crista shows how various experimentally determined features of organelles can be combined with molecular modelling to give insights into the interactions and dynamics of complicated biological systems. This work is presented as an initial ‘living’ model for this system, intended to be built upon and improved as our understanding, methodology and resources develop."
  },
  {
    "objectID": "docs/publications/entries/2024/Mandal2024_TunnelEnzyme.html",
    "href": "docs/publications/entries/2024/Mandal2024_TunnelEnzyme.html",
    "title": "Benchmarking coarse-grained simulation methods for investigation of transport tunnels in enzymes",
    "section": "",
    "text": "Mandal, N., Stevens, J. A., Poma, A. B., Surpeta, B., Sequeiros-Borja, C., Thirunavukarasu, A. S., … & Brezovsky, J. (2024). Benchmarking coarse-grained simulation methods for investigation of transport tunnels in enzymes. bioRxiv, 2024-09."
  },
  {
    "objectID": "docs/publications/entries/2024/Mandal2024_TunnelEnzyme.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Mandal2024_TunnelEnzyme.html#citation-apa-7",
    "title": "Benchmarking coarse-grained simulation methods for investigation of transport tunnels in enzymes",
    "section": "",
    "text": "Mandal, N., Stevens, J. A., Poma, A. B., Surpeta, B., Sequeiros-Borja, C., Thirunavukarasu, A. S., … & Brezovsky, J. (2024). Benchmarking coarse-grained simulation methods for investigation of transport tunnels in enzymes. bioRxiv, 2024-09."
  },
  {
    "objectID": "docs/publications/entries/2024/Mandal2024_TunnelEnzyme.html#abstract",
    "href": "docs/publications/entries/2024/Mandal2024_TunnelEnzyme.html#abstract",
    "title": "Benchmarking coarse-grained simulation methods for investigation of transport tunnels in enzymes",
    "section": "Abstract",
    "text": "Abstract\nEnzymes are pivotal to numerous biological processes, often featuring buried active sites linked to the surrounding solvent through intricate and dynamic tunnels. These tunnels are vital for facilitating substrate access, enabling product release, and regulating solvent exchange, which collectively influence enzymatic function and efficiency. Consequently, knowledge of tunnels is key for a holistic understanding of the effect of mutations as well as predicting drug residence times. Unfortunately, most transport tunnels are transient, i.e., equipped by molecular gates, rendering their opening a rare event that is often notoriously hard to study with conventional molecular dynamics simulations. To overcome the sampling limitation of such simulations, this study investigated the efficacy of three different coarse-grained (CG) molecular dynamics simulation methods for inferring enzyme tunnel structure and dynamics. Here, we covered the Martini and SIRAH models with different restraint protocols providing stability to CG proteins while to some extent biasing the sampling towards a reference structure. By contrasting CG results with all-atom simulations, we benchmarked the ability of CG methods to replicate ensemble characteristics of complex tunnel networks in haloalkane dehalogenase LinB and two of its mutants with engineered tunnel networks. The assessed tunnel parameters are essential for prioritizing functionally relevant tunnels and delineating the effect of mutations on transport tunnels. Our findings reveal that while CG methods significantly enhance the efficiency of tunnel analyses, some of them, like Martini with Elastic network restraints, were limited in recapitulating all-atom tunnel dynamics due to the structural bias applied. In contrast, the Martini Gō model even captured the intricate details of mutation perturbing tunnel dynamics. All studied CG methods performed well in capturing the geometry of tunnel ensembles in line with all-atom simulations. Additionally, the wider applicability of CG methods was verified by analyzing tunnel networks of nine enzymes from different combinations of structural and functional classes, demonstrating their potential to uncover new tunnel phenomena and validate their utility in broader biological and functional contexts. This comprehensive evaluation underscores the strengths and constraints of CG simulations in capturing enzyme tunnels and benefiting from their computational speed for studying huge datasets of enzymes. These insights are valuable for enzyme engineering, drug design, and understanding enzyme function while benefitting from the efficiency of coarse-grained models."
  },
  {
    "objectID": "docs/publications/entries/2024/Cornet2024_MesoNanoVesicle.html",
    "href": "docs/publications/entries/2024/Cornet2024_MesoNanoVesicle.html",
    "title": "There and back again: bridging meso- and nano-scales to understand lipid vesicle patterning",
    "section": "",
    "text": "Cornet, J., Coulonges, N., Pezeshkian, W., Penissat-Mahaut, M., Desgrez-Dautet, H., Marrink, S. J., … & Manghi, M. (2024). There and back again: bridging meso-and nanoscales to understand lipid vesicle patterning. Soft Matter."
  },
  {
    "objectID": "docs/publications/entries/2024/Cornet2024_MesoNanoVesicle.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Cornet2024_MesoNanoVesicle.html#citation-apa-7",
    "title": "There and back again: bridging meso- and nano-scales to understand lipid vesicle patterning",
    "section": "",
    "text": "Cornet, J., Coulonges, N., Pezeshkian, W., Penissat-Mahaut, M., Desgrez-Dautet, H., Marrink, S. J., … & Manghi, M. (2024). There and back again: bridging meso-and nanoscales to understand lipid vesicle patterning. Soft Matter."
  },
  {
    "objectID": "docs/publications/entries/2024/Cornet2024_MesoNanoVesicle.html#abstract",
    "href": "docs/publications/entries/2024/Cornet2024_MesoNanoVesicle.html#abstract",
    "title": "There and back again: bridging meso- and nano-scales to understand lipid vesicle patterning",
    "section": "Abstract",
    "text": "Abstract\nWe describe a complete methodology to bridge the scales between nanoscale molecular dynamics and (micrometer) mesoscale Monte Carlo simulations in lipid membranes and vesicles undergoing phase separation, in which curving molecular species are furthermore embedded. To go from the molecular to the mesoscale, we notably appeal to physical renormalization arguments enabling us to rigorously infer the mesoscale interaction parameters from its molecular counterpart. We also explain how to deal with the physical timescales at stake at the mesoscale. Simulating the as-obtained mesoscale system enables us to equilibrate the long wavelengths of the vesicles of interest, up to the vesicle size. Conversely, we then backmap from the meso- to the nano-scale, which enables us to equilibrate in turn the short wavelengths down to the molecular length-scales. By applying our approach to the specific situation of patterning a vesicle membrane, we show that macroscopic membranes can thus be equilibrated at all length-scales in achievable computational time offering an original strategy to address the fundamental challenge of timescale in simulations of large bio-membrane systems."
  },
  {
    "objectID": "docs/publications/entries/2024/Ozturk2024_ComplexMembranes.html",
    "href": "docs/publications/entries/2024/Ozturk2024_ComplexMembranes.html",
    "title": "Building complex membranes with Martini 3",
    "section": "",
    "text": "Ozturk, T. N., König, M., Carpenter, T. S., Pedersen, K. B., Wassenaar, T. A., Ingólfsson, H. I., & Marrink, S. J. (2024). Building complex membranes with Martini 3. Methods in Enzymology."
  },
  {
    "objectID": "docs/publications/entries/2024/Ozturk2024_ComplexMembranes.html#citation-apa-7",
    "href": "docs/publications/entries/2024/Ozturk2024_ComplexMembranes.html#citation-apa-7",
    "title": "Building complex membranes with Martini 3",
    "section": "",
    "text": "Ozturk, T. N., König, M., Carpenter, T. S., Pedersen, K. B., Wassenaar, T. A., Ingólfsson, H. I., & Marrink, S. J. (2024). Building complex membranes with Martini 3. Methods in Enzymology."
  },
  {
    "objectID": "docs/publications/entries/2024/Ozturk2024_ComplexMembranes.html#abstract",
    "href": "docs/publications/entries/2024/Ozturk2024_ComplexMembranes.html#abstract",
    "title": "Building complex membranes with Martini 3",
    "section": "Abstract",
    "text": "Abstract\nThe Martini model is a popular force field for coarse-grained simulations. Membranes have always been at the center of its development, with the latest version, Martini 3, showing great promise in capturing more and more realistic behavior. In this chapter we provide a step-by-step tutorial on how to construct starting configurations, run initial simulations and perform dedicated analysis for membrane-based systems of increasing complexity, including leaflet asymmetry, curvature gradients and embedding of membrane proteins."
  },
  {
    "objectID": "docs/publications/entries/2008/Catte2008_HDL.html",
    "href": "docs/publications/entries/2008/Catte2008_HDL.html",
    "title": "Structure of Spheroidal HDL Particles Revealed by Combined Atomistic and Coarse-Grained Simulations",
    "section": "",
    "text": "Catte, A., Patterson, J. C., Bashtovyy, D., Jones, M. K., Gu, F., Li, L., … & Segrest, J. P. (2008). Structure of spheroidal HDL particles revealed by combined atomistic and coarse-grained simulations. Biophysical journal, 94(6), 2306-2319."
  },
  {
    "objectID": "docs/publications/entries/2008/Catte2008_HDL.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Catte2008_HDL.html#citation-apa-7",
    "title": "Structure of Spheroidal HDL Particles Revealed by Combined Atomistic and Coarse-Grained Simulations",
    "section": "",
    "text": "Catte, A., Patterson, J. C., Bashtovyy, D., Jones, M. K., Gu, F., Li, L., … & Segrest, J. P. (2008). Structure of spheroidal HDL particles revealed by combined atomistic and coarse-grained simulations. Biophysical journal, 94(6), 2306-2319."
  },
  {
    "objectID": "docs/publications/entries/2008/Catte2008_HDL.html#abstract",
    "href": "docs/publications/entries/2008/Catte2008_HDL.html#abstract",
    "title": "Structure of Spheroidal HDL Particles Revealed by Combined Atomistic and Coarse-Grained Simulations",
    "section": "Abstract",
    "text": "Abstract\nSpheroidal high-density lipoprotein (HDL) particles circulating in the blood are formed through an enzymatic process activated by apoA-I, leading to the esterification of cholesterol, which creates a hydrophobic core of cholesteryl ester molecules in the middle of the discoidal phospholipid bilayer. In this study, we investigated the conformation of apoA-I in model spheroidal HDL (ms-HDL) particles using both atomistic and coarse-grained molecular dynamics simulations, which are found to provide consistent results for all HDL properties we studied. The observed small contribution of cholesteryl oleate molecules to the solvent-accessible surface area of the entire ms-HDL particle indicates that palmitoyloleoylphosphatidylcholines and apoA-I molecules cover the hydrophobic core comprised of cholesteryl esters particularly well. The ms-HDL particles are found to form a prolate ellipsoidal shape, with sizes consistent with experimental results. Large rigid domains and low mobility of the protein are seen in all the simulations. Additionally, the average number of contacts of cholesteryl ester molecules with apoA-I residues indicates that cholesteryl esters interact with protein residues mainly through their cholesterol moiety. We propose that the interaction of annular cholesteryl oleate molecules contributes to apoA-I rigidity stabilizing and regulating the structure and function of the ms-HDL particle."
  },
  {
    "objectID": "docs/publications/entries/2008/Monticelli2008_Proteins.html",
    "href": "docs/publications/entries/2008/Monticelli2008_Proteins.html",
    "title": "The MARTINI Coarse-Grained Force Field: Extension to Proteins",
    "section": "",
    "text": "Monticelli, L., Kandasamy, S. K., Periole, X., Larson, R. G., Tieleman, D. P., & Marrink, S. J. (2008). The MARTINI coarse-grained force field: extension to proteins. Journal of chemical theory and computation, 4(5), 819-834."
  },
  {
    "objectID": "docs/publications/entries/2008/Monticelli2008_Proteins.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Monticelli2008_Proteins.html#citation-apa-7",
    "title": "The MARTINI Coarse-Grained Force Field: Extension to Proteins",
    "section": "",
    "text": "Monticelli, L., Kandasamy, S. K., Periole, X., Larson, R. G., Tieleman, D. P., & Marrink, S. J. (2008). The MARTINI coarse-grained force field: extension to proteins. Journal of chemical theory and computation, 4(5), 819-834."
  },
  {
    "objectID": "docs/publications/entries/2008/Monticelli2008_Proteins.html#abstract",
    "href": "docs/publications/entries/2008/Monticelli2008_Proteins.html#abstract",
    "title": "The MARTINI Coarse-Grained Force Field: Extension to Proteins",
    "section": "Abstract",
    "text": "Abstract\nMany biologically interesting phenomena occur on a time scale that is too long to be studied by atomistic simulations. These phenomena include the dynamics of large proteins and self-assembly of biological materials. Coarse-grained (CG) molecular modeling allows computer simulations to be run on length and time scales that are 2–3 orders of magnitude larger compared to atomistic simulations, providing a bridge between the atomistic and the mesoscopic scale. We developed a new CG model for proteins as an extension of the MARTINI force field. Here, we validate the model for its use in peptide-bilayer systems. In order to validate the model, we calculated the potential of mean force for each amino acid as a function of its distance from the center of a dioleoylphosphatidylcholine (DOPC) lipid bilayer. We then compared amino acid association constants, the partitioning of a series of model pentapeptides, the partitioning and orientation of WALP23 in DOPC lipid bilayers and a series of KALP peptides in dimyristoylphosphatidylcholine and dipalmitoylphosphatidylcholine (DPPC) bilayers. A comparison with results obtained from atomistic models shows good agreement in all of the tests performed. We also performed a systematic investigation of the partitioning of five series of polyalanine−leucine peptides (with different lengths and compositions) in DPPC bilayers. As expected, the fraction of peptides partitioned at the interface increased with decreasing peptide length and decreasing leucine content, demonstrating that the CG model is capable of discriminating partitioning behavior arising from subtle differences in the amino acid composition. Finally, we simulated the concentration-dependent formation of transmembrane pores by magainin, an antimicrobial peptide. In line with atomistic simulation studies, disordered toroidal pores are formed. In conclusion, the model is computationally efficient and effectively reproduces peptide−lipid interactions and the partitioning of amino acids and peptides in lipid bilayers."
  },
  {
    "objectID": "docs/publications/entries/2008/Marrink2008_Cholesterol.html",
    "href": "docs/publications/entries/2008/Marrink2008_Cholesterol.html",
    "title": "Cholesterol Shows Preference for the Interior of Polyunsaturated Lipid Membranes",
    "section": "",
    "text": "Marrink, S. J., de Vries, A. H., Harroun, T. A., Katsaras, J., & Wassall, S. R. (2008). Cholesterol shows preference for the interior of polyunsaturated lipid membranes. Journal of the American chemical society, 130(1), 10-11."
  },
  {
    "objectID": "docs/publications/entries/2008/Marrink2008_Cholesterol.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Marrink2008_Cholesterol.html#citation-apa-7",
    "title": "Cholesterol Shows Preference for the Interior of Polyunsaturated Lipid Membranes",
    "section": "",
    "text": "Marrink, S. J., de Vries, A. H., Harroun, T. A., Katsaras, J., & Wassall, S. R. (2008). Cholesterol shows preference for the interior of polyunsaturated lipid membranes. Journal of the American chemical society, 130(1), 10-11."
  },
  {
    "objectID": "docs/publications/entries/2008/Marrink2008_Cholesterol.html#abstract",
    "href": "docs/publications/entries/2008/Marrink2008_Cholesterol.html#abstract",
    "title": "Cholesterol Shows Preference for the Interior of Polyunsaturated Lipid Membranes",
    "section": "Abstract",
    "text": "Abstract\nRecent neutron scattering experiments showed a striking manifestation of the aversion between polyunsaturated fatty acid (PUFA)-containing lipids and cholesterol. Selectively deuterated cholesterol/ 1,2-diarachidonylphosphatidylcholine (DAPC) samples revealed that the hydroxyl of the sterol resides at the center of the bilayer. Here we use a recently parametrized coarse grain simulation model to shed light on these puzzling experimental observations. Using a simulation setup in close correspondence to the experimental conditions, we reproduce the experimental neutron scattering profiles to a large extent. The simulations allow us to analyze the behavior of cholesterol in detail; we show that the interaction of cholesterol with the PUFA chains of DAPC leads to a fast flip-flop rate for the sterol and an increased preference of the sterol for the unusual location embedded between the monolayer leaflets."
  },
  {
    "objectID": "docs/publications/entries/2008/Risselada2008_BoundaryPotentials.html",
    "href": "docs/publications/entries/2008/Risselada2008_BoundaryPotentials.html",
    "title": "Application of Mean Field Boundary Potentials in Simulations of Lipid Vesicles",
    "section": "",
    "text": "Risselada, H. J., Mark, A. E., & Marrink, S. J. (2008). Application of mean field boundary potentials in simulations of lipid vesicles. The Journal of Physical Chemistry B, 112(25), 7438-7447."
  },
  {
    "objectID": "docs/publications/entries/2008/Risselada2008_BoundaryPotentials.html#citation-apa-7",
    "href": "docs/publications/entries/2008/Risselada2008_BoundaryPotentials.html#citation-apa-7",
    "title": "Application of Mean Field Boundary Potentials in Simulations of Lipid Vesicles",
    "section": "",
    "text": "Risselada, H. J., Mark, A. E., & Marrink, S. J. (2008). Application of mean field boundary potentials in simulations of lipid vesicles. The Journal of Physical Chemistry B, 112(25), 7438-7447."
  },
  {
    "objectID": "docs/publications/entries/2008/Risselada2008_BoundaryPotentials.html#abstract",
    "href": "docs/publications/entries/2008/Risselada2008_BoundaryPotentials.html#abstract",
    "title": "Application of Mean Field Boundary Potentials in Simulations of Lipid Vesicles",
    "section": "Abstract",
    "text": "Abstract\nA method is presented to enhance the efficiency of simulations of lipid vesicles. The method increases computational speed by eliminating water molecules that either surround the vesicle or reside in the interior of the vesicle, without altering the properties of the water at the membrane interface. Specifically, mean field force approximation (MFFA) boundary potentials are used to replace both the internal and external excess bulk solvent. In addition to reducing the cost of simulating preformed vesicles, the molding effect of the boundary potentials also enhances the formation and equilibration of vesicles from random solutions of lipid in water. Vesicles with diameters in the range from 20 to 60 nm were obtained on a nanosecond time scale, without any noticeable effect of the boundary potentials on their structure."
  },
  {
    "objectID": "docs/publications/entries/2020/Pezeshkian2020_TS2CG.html",
    "href": "docs/publications/entries/2020/Pezeshkian2020_TS2CG.html",
    "title": "Backmapping triangulated surfaces to coarse-grained membrane models",
    "section": "",
    "text": "Pezeshkian, W., König, M., Wassenaar, T. A., & Marrink, S. J. (2020). Backmapping triangulated surfaces to coarse-grained membrane models. Nature communications, 11(1), 2296."
  },
  {
    "objectID": "docs/publications/entries/2020/Pezeshkian2020_TS2CG.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Pezeshkian2020_TS2CG.html#citation-apa-7",
    "title": "Backmapping triangulated surfaces to coarse-grained membrane models",
    "section": "",
    "text": "Pezeshkian, W., König, M., Wassenaar, T. A., & Marrink, S. J. (2020). Backmapping triangulated surfaces to coarse-grained membrane models. Nature communications, 11(1), 2296."
  },
  {
    "objectID": "docs/publications/entries/2020/Pezeshkian2020_TS2CG.html#abstract",
    "href": "docs/publications/entries/2020/Pezeshkian2020_TS2CG.html#abstract",
    "title": "Backmapping triangulated surfaces to coarse-grained membrane models",
    "section": "Abstract",
    "text": "Abstract\nMany biological processes involve large-scale changes in membrane shape. Computer simulations of these processes are challenging since they occur across a wide range of spatiotemporal scales that cannot be investigated in full by any single current simulation technique. A potential solution is to combine different levels of resolution through a multiscale scheme. Here, we present a multiscale algorithm that backmaps a continuum membrane model represented as a dynamically triangulated surface (DTS) to its corresponding molecular model based on the coarse-grained (CG) Martini force field. Thus, we can use DTS simulations to equilibrate slow large-scale membrane conformational changes and then explore the local properties at CG resolution. We demonstrate the power of our method by backmapping a vesicular bud induced by binding of Shiga toxin and by transforming the membranes of an entire mitochondrion to near-atomic resolution. Our approach opens the way to whole cell simulations at molecular detail."
  },
  {
    "objectID": "docs/publications/entries/2020/Grünewald2020_Titratable.html",
    "href": "docs/publications/entries/2020/Grünewald2020_Titratable.html",
    "title": "Titratable Martini model for constant pH simulations",
    "section": "",
    "text": "Grünewald, F., Souza, P. C., Abdizadeh, H., Barnoud, J., de Vries, A. H., & Marrink, S. J. (2020). Titratable Martini model for constant pH simulations. The Journal of chemical physics, 153(2)."
  },
  {
    "objectID": "docs/publications/entries/2020/Grünewald2020_Titratable.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Grünewald2020_Titratable.html#citation-apa-7",
    "title": "Titratable Martini model for constant pH simulations",
    "section": "",
    "text": "Grünewald, F., Souza, P. C., Abdizadeh, H., Barnoud, J., de Vries, A. H., & Marrink, S. J. (2020). Titratable Martini model for constant pH simulations. The Journal of chemical physics, 153(2)."
  },
  {
    "objectID": "docs/publications/entries/2020/Grünewald2020_Titratable.html#abstract",
    "href": "docs/publications/entries/2020/Grünewald2020_Titratable.html#abstract",
    "title": "Titratable Martini model for constant pH simulations",
    "section": "Abstract",
    "text": "Abstract\nIn this work, we deliver a proof of concept for a fast method that introduces pH effects into classical coarse-grained (CG) molecular dynamics simulations. Our approach is based upon the latest version of the popular Martini CG model to which explicit proton mimicking particles are added. We verify our approach against experimental data involving several different molecules and different environmental conditions. In particular, we compute titration curves, pH dependent free energies of transfer, and lipid bilayer membrane affinities as a function of pH. Using oleic acid as an example compound, we further illustrate that our method can be used to study passive translocation in lipid bilayers via protonation. Finally, our model reproduces qualitatively the expansion of the macromolecule dendrimer poly(propylene imine) as well as the associated pKa shift of its different generations. This example demonstrates that our model is able to pick up collective interactions between titratable sites in large molecules comprising many titratable functional groups."
  },
  {
    "objectID": "docs/publications/entries/2020/Vazquez-Salazar2020_IonicLiquids.html",
    "href": "docs/publications/entries/2020/Vazquez-Salazar2020_IonicLiquids.html",
    "title": "Martini coarse-grained models of imidazolium-based ionic liquids: from nanostructural organization to liquid-liquid extraction",
    "section": "",
    "text": "Vazquez-Salazar, L. I., Selle, M., De Vries, A. H., Marrink, S. J., & Souza, P. C. (2020). Martini coarse-grained models of imidazolium-based ionic liquids: from nanostructural organization to liquid–liquid extraction. Green Chemistry, 22(21), 7376-7386."
  },
  {
    "objectID": "docs/publications/entries/2020/Vazquez-Salazar2020_IonicLiquids.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Vazquez-Salazar2020_IonicLiquids.html#citation-apa-7",
    "title": "Martini coarse-grained models of imidazolium-based ionic liquids: from nanostructural organization to liquid-liquid extraction",
    "section": "",
    "text": "Vazquez-Salazar, L. I., Selle, M., De Vries, A. H., Marrink, S. J., & Souza, P. C. (2020). Martini coarse-grained models of imidazolium-based ionic liquids: from nanostructural organization to liquid–liquid extraction. Green Chemistry, 22(21), 7376-7386."
  },
  {
    "objectID": "docs/publications/entries/2020/Vazquez-Salazar2020_IonicLiquids.html#abstract",
    "href": "docs/publications/entries/2020/Vazquez-Salazar2020_IonicLiquids.html#abstract",
    "title": "Martini coarse-grained models of imidazolium-based ionic liquids: from nanostructural organization to liquid-liquid extraction",
    "section": "Abstract",
    "text": "Abstract\nIonic liquids (ILs) are remarkable green solvents, which find applications in many areas of nano- and biotechnology including extraction and purification of value-added compounds or fine chemicals. These liquid salts possess versatile solvation properties that can be tuned by modifications in the cation or anion structure. So far, in contrast to the great success of theoretical and computational methodologies applied to other fields, only a few IL models have been able to bring insights towards the rational design of such solvents. In this work, we develop coarse-grained (CG) models for imidazolium-based ILs using a new version of the Martini force field. The model is able to reproduce the main structural properties of pure ILs, including spatial heterogeneity and global densities over a wide range of temperatures. More importantly, given the high intermolecular compatibility of the Martini force field, this new IL CG model opens the possibility of large-scale simulations of liquid–liquid extraction experiments. As examples, we show two applications, namely the extraction of aromatic molecules from a petroleum oil model and the extraction of omega-3 polyunsaturated fatty acids from a fish oil model. In semi-quantitative agreement with the experiments, we show how the extraction capacity and selectivity of the IL could be affected by the cation chain length or addition of co-solvents."
  },
  {
    "objectID": "docs/publications/entries/2020/Souza2020_ProteinLigand.html",
    "href": "docs/publications/entries/2020/Souza2020_ProteinLigand.html",
    "title": "Protein–ligand binding with the coarse-grained Martini model",
    "section": "",
    "text": "Souza, P. C., Thallmair, S., Conflitti, P., Ramírez-Palacios, C., Alessandri, R., Raniolo, S., … & Marrink, S. J. (2020). Protein–ligand binding with the coarse-grained Martini model. Nature communications, 11(1), 3714."
  },
  {
    "objectID": "docs/publications/entries/2020/Souza2020_ProteinLigand.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Souza2020_ProteinLigand.html#citation-apa-7",
    "title": "Protein–ligand binding with the coarse-grained Martini model",
    "section": "",
    "text": "Souza, P. C., Thallmair, S., Conflitti, P., Ramírez-Palacios, C., Alessandri, R., Raniolo, S., … & Marrink, S. J. (2020). Protein–ligand binding with the coarse-grained Martini model. Nature communications, 11(1), 3714."
  },
  {
    "objectID": "docs/publications/entries/2020/Souza2020_ProteinLigand.html#abstract",
    "href": "docs/publications/entries/2020/Souza2020_ProteinLigand.html#abstract",
    "title": "Protein–ligand binding with the coarse-grained Martini model",
    "section": "Abstract",
    "text": "Abstract\nThe detailed understanding of the binding of small molecules to proteins is the key for the development of novel drugs or to increase the acceptance of substrates by enzymes. Nowadays, computer-aided design of protein–ligand binding is an important tool to accomplish this task. Current approaches typically rely on high-throughput docking essays or computationally expensive atomistic molecular dynamics simulations. Here, we present an approach to use the recently re-parametrized coarse-grained Martini model to perform unbiased millisecond sampling of protein–ligand interactions of small drug-like molecules. Remarkably, we achieve high accuracy without the need of any a priori knowledge of binding pockets or pathways. Our approach is applied to a range of systems from the well-characterized T4 lysozyme over members of the GPCR family and nuclear receptors to a variety of enzymes. The presented results open the way to high-throughput screening of ligand libraries or protein mutations using the coarse-grained Martini model."
  },
  {
    "objectID": "docs/publications/entries/2020/Liu2020_DualResolution.html",
    "href": "docs/publications/entries/2020/Liu2020_DualResolution.html",
    "title": "Dual Resolution Membrane Simulations Using Virtual Sites",
    "section": "",
    "text": "Liu, Y., De Vries, A. H., Barnoud, J., Pezeshkian, W., Melcr, J., & Marrink, S. J. (2020). Dual resolution membrane simulations using virtual sites. The Journal of Physical Chemistry B, 124(19), 3944-3953."
  },
  {
    "objectID": "docs/publications/entries/2020/Liu2020_DualResolution.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Liu2020_DualResolution.html#citation-apa-7",
    "title": "Dual Resolution Membrane Simulations Using Virtual Sites",
    "section": "",
    "text": "Liu, Y., De Vries, A. H., Barnoud, J., Pezeshkian, W., Melcr, J., & Marrink, S. J. (2020). Dual resolution membrane simulations using virtual sites. The Journal of Physical Chemistry B, 124(19), 3944-3953."
  },
  {
    "objectID": "docs/publications/entries/2020/Liu2020_DualResolution.html#abstract",
    "href": "docs/publications/entries/2020/Liu2020_DualResolution.html#abstract",
    "title": "Dual Resolution Membrane Simulations Using Virtual Sites",
    "section": "Abstract",
    "text": "Abstract\nAll-atomistic (AA) and coarse-grain (CG) simulations have been successfully applied to investigate a broad range of biomolecular processes. However, the accessible time and length scales of AA simulation are limited and the specific molecular details of CG simulation are simplified. Here, we propose a virtual site (VS) based hybrid scheme that can concurrently couple AA and CG resolutions in a single membrane simulation, mitigating the shortcomings of either representation. With some adjustments to make the AA and CG force fields compatible, we demonstrate that lipid bilayer properties are well kept in our hybrid approach. Our VS hybrid method was also applied to simulate a small lipid vesicle, with the inner leaflet and interior solvent represented in AA, and the outer leaflet together with exterior solvent at the CG level. Our multiscale method opens the way to investigate biomembrane properties at increased computational efficiency, in particular applications involving large solvent filled regions."
  },
  {
    "objectID": "docs/publications/entries/2020/Faustino2020_ECF.html",
    "href": "docs/publications/entries/2020/Faustino2020_ECF.html",
    "title": "Membrane mediated toppling mechanism of the folate energy coupling factor transporter",
    "section": "",
    "text": "Faustino, I., Abdizadeh, H., Souza, P. C., Jeucken, A., Stanek, W. K., Guskov, A., … & Marrink, S. J. (2020). Membrane mediated toppling mechanism of the folate energy coupling factor transporter. Nature Communications, 11(1), 1763."
  },
  {
    "objectID": "docs/publications/entries/2020/Faustino2020_ECF.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Faustino2020_ECF.html#citation-apa-7",
    "title": "Membrane mediated toppling mechanism of the folate energy coupling factor transporter",
    "section": "",
    "text": "Faustino, I., Abdizadeh, H., Souza, P. C., Jeucken, A., Stanek, W. K., Guskov, A., … & Marrink, S. J. (2020). Membrane mediated toppling mechanism of the folate energy coupling factor transporter. Nature Communications, 11(1), 1763."
  },
  {
    "objectID": "docs/publications/entries/2020/Faustino2020_ECF.html#abstract",
    "href": "docs/publications/entries/2020/Faustino2020_ECF.html#abstract",
    "title": "Membrane mediated toppling mechanism of the folate energy coupling factor transporter",
    "section": "Abstract",
    "text": "Abstract\nEnergy coupling factor (ECF) transporters are responsible for the uptake of micronutrients in bacteria and archaea. They consist of an integral membrane unit, the S-component, and a tripartite ECF module. It has been proposed that the S-component mediates the substrate transport by toppling over in the membrane when docking onto an ECF module. Here, we present multi-scale molecular dynamics simulations and in vitro experiments to study the molecular toppling mechanism of the S-component of a folate-specific ECF transporter. Simulations reveal a strong bending of the membrane around the ECF module that provides a driving force for toppling of the S-component. The stability of the toppled state depends on the presence of non-bilayer forming lipids, as confirmed by folate transport activity measurements. Together, our data provide evidence for a lipid-dependent toppling-based mechanism for the folate-specific ECF transporter, a mechanism that might apply to other ECF transporters."
  },
  {
    "objectID": "docs/publications/entries/2020/Buyan2020_Piezo1.html",
    "href": "docs/publications/entries/2020/Buyan2020_Piezo1.html",
    "title": "Piezo1 Forms Specific, Functionally Important Interactions with Phosphoinositides and Cholesterol",
    "section": "",
    "text": "Buyan, A., Cox, C. D., Barnoud, J., Li, J., Chan, H. S., Martinac, B., … & Corry, B. (2020). Piezo1 forms specific, functionally important interactions with phosphoinositides and cholesterol. Biophysical journal, 119(8), 1683-1697."
  },
  {
    "objectID": "docs/publications/entries/2020/Buyan2020_Piezo1.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Buyan2020_Piezo1.html#citation-apa-7",
    "title": "Piezo1 Forms Specific, Functionally Important Interactions with Phosphoinositides and Cholesterol",
    "section": "",
    "text": "Buyan, A., Cox, C. D., Barnoud, J., Li, J., Chan, H. S., Martinac, B., … & Corry, B. (2020). Piezo1 forms specific, functionally important interactions with phosphoinositides and cholesterol. Biophysical journal, 119(8), 1683-1697."
  },
  {
    "objectID": "docs/publications/entries/2020/Buyan2020_Piezo1.html#abstract",
    "href": "docs/publications/entries/2020/Buyan2020_Piezo1.html#abstract",
    "title": "Piezo1 Forms Specific, Functionally Important Interactions with Phosphoinositides and Cholesterol",
    "section": "Abstract",
    "text": "Abstract\nTouch, hearing, and blood pressure regulation require mechanically gated ion channels that convert mechanical stimuli into electrical currents. One such channel is Piezo1, which plays a key role in the transduction of mechanical stimuli in humans and is implicated in diseases, such as xerocytosis and lymphatic dysplasia. There is building evidence that suggests Piezo1 can be regulated by the membrane environment, with the activity of the channel determined by the local concentration of lipids, such as cholesterol and phosphoinositides. To better understand the interaction of Piezo1 with its environment, we conduct simulations of the protein in a complex mammalian bilayer containing more than 60 different lipid types together with electrophysiology and mutagenesis experiments. We find that the protein alters its local membrane composition, enriching specific lipids and forming essential binding sites for phosphoinositides and cholesterol that are functionally relevant and often related to Piezo1-mediated pathologies. We also identify a number of key structural connections between the propeller and pore domains located close to lipid-binding sites."
  },
  {
    "objectID": "docs/publications/entries/2020/Khan2020_CationPi.html",
    "href": "docs/publications/entries/2020/Khan2020_CationPi.html",
    "title": "Capturing Choline–Aromatics Cation− π Interactions in the MARTINI Force Field",
    "section": "",
    "text": "Khan, H. M., Souza, P. C., Thallmair, S., Barnoud, J., De Vries, A. H., Marrink, S. J., & Reuter, N. (2020). Capturing choline–aromatics cation− π interactions in the MARTINI force field. Journal of chemical theory and computation, 16(4), 2550-2560."
  },
  {
    "objectID": "docs/publications/entries/2020/Khan2020_CationPi.html#citation-apa-7",
    "href": "docs/publications/entries/2020/Khan2020_CationPi.html#citation-apa-7",
    "title": "Capturing Choline–Aromatics Cation− π Interactions in the MARTINI Force Field",
    "section": "",
    "text": "Khan, H. M., Souza, P. C., Thallmair, S., Barnoud, J., De Vries, A. H., Marrink, S. J., & Reuter, N. (2020). Capturing choline–aromatics cation− π interactions in the MARTINI force field. Journal of chemical theory and computation, 16(4), 2550-2560."
  },
  {
    "objectID": "docs/publications/entries/2020/Khan2020_CationPi.html#abstract",
    "href": "docs/publications/entries/2020/Khan2020_CationPi.html#abstract",
    "title": "Capturing Choline–Aromatics Cation− π Interactions in the MARTINI Force Field",
    "section": "Abstract",
    "text": "Abstract\nCation−π interactions play an important role in biomolecular recognition, including interactions between membrane phosphatidylcholine lipids and aromatic amino acids of peripheral proteins. While molecular mechanics coarse grain (CG) force fields are particularly well suited to simulate membrane proteins in general, they are not parameterized to explicitly reproduce cation−π interactions. We here propose a modification of the polarizable MARTINI coarse grain (CG) model enabling it to model membrane binding events of peripheral proteins whose aromatic amino acid interactions with choline headgroups are crucial for their membrane binding. For this purpose, we first collected and curated a dataset of eight peripheral proteins from different families. We find that the MARTINI CG model expectedly underestimates aromatics–choline interactions and is unable to reproduce membrane binding of the peripheral proteins in our dataset. Adjustments of the relevant interactions in the polarizable MARTINI force field yield significant improvements in the observed binding events. The orientation of each membrane-bound protein is comparable to reference data from all-atom simulations and experimental binding data. We also use negative controls to ensure that choline–aromatics interactions are not overestimated. We finally check that membrane properties, transmembrane proteins, and membrane translocation potential of mean force (PMF) of aromatic amino acid side-chain analogues are not affected by the new parameter set. This new version “MARTINI 2.3P” is a significant improvement over its predecessors and is suitable for modeling membrane proteins including peripheral membrane binding of peptides and proteins."
  },
  {
    "objectID": "docs/publications/entries/2022/Patmanidis2022_Nanotubes.html",
    "href": "docs/publications/entries/2022/Patmanidis2022_Nanotubes.html",
    "title": "Modelling structural properties of cyanine dye nanotubes at coarse-grained level",
    "section": "",
    "text": "Patmanidis, I., Souza, P. C., Sami, S., Havenith, R. W., de Vries, A. H., & Marrink, S. J. (2022). Modelling structural properties of cyanine dye nanotubes at coarse-grained level. Nanoscale advances, 4(14), 3033-3042."
  },
  {
    "objectID": "docs/publications/entries/2022/Patmanidis2022_Nanotubes.html#citation-apa-7",
    "href": "docs/publications/entries/2022/Patmanidis2022_Nanotubes.html#citation-apa-7",
    "title": "Modelling structural properties of cyanine dye nanotubes at coarse-grained level",
    "section": "",
    "text": "Patmanidis, I., Souza, P. C., Sami, S., Havenith, R. W., de Vries, A. H., & Marrink, S. J. (2022). Modelling structural properties of cyanine dye nanotubes at coarse-grained level. Nanoscale advances, 4(14), 3033-3042."
  },
  {
    "objectID": "docs/publications/entries/2022/Patmanidis2022_Nanotubes.html#abstract",
    "href": "docs/publications/entries/2022/Patmanidis2022_Nanotubes.html#abstract",
    "title": "Modelling structural properties of cyanine dye nanotubes at coarse-grained level",
    "section": "Abstract",
    "text": "Abstract\nSelf-assembly is a ubiquitous process spanning from biomolecular aggregates to nanomaterials. Even though the resulting aggregates can be studied through experimental techniques, the dynamic pathways of the process and the molecular details of the final structures are not necessarily easy to resolve. Consequently, rational design of self-assembling aggregates and their properties remains extremely challenging. At the same time, modelling the self-assembly with computational methods is not trivial, because its spatio-temporal scales are usually beyond the limits of all-atom based simulations. The use of coarse-grained (CG) models can alleviate this limitation, but usually suffers from the lack of optimised parameters for the molecular constituents. In this work, we describe the procedure of parametrizing a CG Martini model for a cyanine dye (C8S3) that self-assembles into hollow double-walled nanotubes. First, we optimised the model based on quantum mechanics calculations and all-atom reference simulations, in combination with available experimental data. Then, we conducted random self-assembly simulations, and the performance of our model was tested on preformed assemblies. Our simulations provide information on the time-dependent local arrangement of this cyanine dye, when aggregates are being formed. Furthermore, we provide guidelines for designing and optimising parameters for similar self-assembling nanomaterials."
  },
  {
    "objectID": "docs/publications/entries/2022/Thallmair2022_PIPBinding.html",
    "href": "docs/publications/entries/2022/Thallmair2022_PIPBinding.html",
    "title": "Two cooperative binding sites sensitize PI(4,5)P2 recognition by the tubby domain",
    "section": "",
    "text": "Thallmair, V., Schultz, L., Zhao, W., Marrink, S. J., Oliver, D., & Thallmair, S. (2022). Two cooperative binding sites sensitize PI (4, 5) P2 recognition by the tubby domain. Science advances, 8(36), eabp9471."
  },
  {
    "objectID": "docs/publications/entries/2022/Thallmair2022_PIPBinding.html#citation-apa-7",
    "href": "docs/publications/entries/2022/Thallmair2022_PIPBinding.html#citation-apa-7",
    "title": "Two cooperative binding sites sensitize PI(4,5)P2 recognition by the tubby domain",
    "section": "",
    "text": "Thallmair, V., Schultz, L., Zhao, W., Marrink, S. J., Oliver, D., & Thallmair, S. (2022). Two cooperative binding sites sensitize PI (4, 5) P2 recognition by the tubby domain. Science advances, 8(36), eabp9471."
  },
  {
    "objectID": "docs/publications/entries/2022/Thallmair2022_PIPBinding.html#abstract",
    "href": "docs/publications/entries/2022/Thallmair2022_PIPBinding.html#abstract",
    "title": "Two cooperative binding sites sensitize PI(4,5)P2 recognition by the tubby domain",
    "section": "Abstract",
    "text": "Abstract\nPhosphoinositides (PIs) are lipid signaling molecules that operate by recruiting proteins to cellular membranes via PI recognition domains. The dominant PI of the plasma membrane is phosphatidylinositol 4,5-bisphosphate [PI(4,5)P2]. One of only two PI(4,5)P2 recognition domains characterized in detail is the tubby domain. It is essential for targeting proteins into cilia involving reversible membrane association. However, the PI(4,5)P2 binding properties of tubby domains have remained enigmatic. Here, we used coarse-grained molecular dynamics simulations to explore PI(4,5)P2 binding by the prototypic tubby domain. The comparatively low PI(4,5)P2 affinity of the previously described canonical binding site is underpinned in a cooperative manner by a previously unknown, adjacent second binding site. Mutations in the previously unknown site impaired PI(4,5)P2-dependent plasma membrane localization in living cells and PI(4,5)P2 interaction in silico, emphasizing its importance for PI(4,5)P2 affinity. The two-ligand binding mode may serve to sharpen the membrane association-dissociation cycle of tubby-like proteins that underlies delivery of ciliary cargo."
  },
  {
    "objectID": "docs/publications/entries/2022/Grünewald2022_Carbohydrates.html",
    "href": "docs/publications/entries/2022/Grünewald2022_Carbohydrates.html",
    "title": "Martini 3 Coarse-Grained Force Field for Carbohydrates",
    "section": "",
    "text": "Grünewald, F., Punt, M. H., Jefferys, E. E., Vainikka, P. A., König, M., Virtanen, V., … & Marrink, S. J. (2022). Martini 3 coarse-grained force field for carbohydrates. Journal of Chemical Theory and Computation, 18(12), 7555-7569."
  },
  {
    "objectID": "docs/publications/entries/2022/Grünewald2022_Carbohydrates.html#citation-apa-7",
    "href": "docs/publications/entries/2022/Grünewald2022_Carbohydrates.html#citation-apa-7",
    "title": "Martini 3 Coarse-Grained Force Field for Carbohydrates",
    "section": "",
    "text": "Grünewald, F., Punt, M. H., Jefferys, E. E., Vainikka, P. A., König, M., Virtanen, V., … & Marrink, S. J. (2022). Martini 3 coarse-grained force field for carbohydrates. Journal of Chemical Theory and Computation, 18(12), 7555-7569."
  },
  {
    "objectID": "docs/publications/entries/2022/Grünewald2022_Carbohydrates.html#abstract",
    "href": "docs/publications/entries/2022/Grünewald2022_Carbohydrates.html#abstract",
    "title": "Martini 3 Coarse-Grained Force Field for Carbohydrates",
    "section": "Abstract",
    "text": "Abstract\nThe Martini 3 force field is a full reparametrization of the Martini coarse-grained model for biomolecular simulations. Due to the improved interaction balance, it allows for a more accurate description of condensed phase systems. In the present work, we develop a consistent strategy to parametrize carbohydrate molecules accurately within the framework of Martini 3. In particular, we develop a canonical mapping scheme which decomposes arbitrarily large carbohydrates into a limited number of fragments. Bead types for these fragments have been assigned by matching physicochemical properties of mono- and disaccharides. In addition, guidelines for assigning bonds, angles, and dihedrals were developed. These guidelines enable a more accurate description of carbohydrate conformations than in the Martini 2 force field. We show that models obtained with this approach are able to accurately reproduce osmotic pressures of carbohydrate water solutions. Furthermore, we provide evidence that the model differentiates correctly the solubility of the polyglucoses dextran (water-soluble) and cellulose (water insoluble but soluble in ionic liquids). Finally, we demonstrate that the new building blocks can be applied to glycolipids. We show they are able to reproduce membrane properties and induce binding of peripheral membrane proteins. These test cases demonstrate the validity and transferability of our approach."
  },
  {
    "objectID": "docs/publications/entries/2022/Alessandri2022_SmallMolecules.html",
    "href": "docs/publications/entries/2022/Alessandri2022_SmallMolecules.html",
    "title": "Martini 3 Coarse-Grained Force Field: Small Molecules",
    "section": "",
    "text": "Alessandri, R., Barnoud, J., Gertsen, A. S., Patmanidis, I., de Vries, A. H., Souza, P. C., & Marrink, S. J. (2022). Martini 3 coarse‐grained force field: small molecules. Advanced Theory and Simulations, 5(1), 2100391."
  },
  {
    "objectID": "docs/publications/entries/2022/Alessandri2022_SmallMolecules.html#citation-apa-7",
    "href": "docs/publications/entries/2022/Alessandri2022_SmallMolecules.html#citation-apa-7",
    "title": "Martini 3 Coarse-Grained Force Field: Small Molecules",
    "section": "",
    "text": "Alessandri, R., Barnoud, J., Gertsen, A. S., Patmanidis, I., de Vries, A. H., Souza, P. C., & Marrink, S. J. (2022). Martini 3 coarse‐grained force field: small molecules. Advanced Theory and Simulations, 5(1), 2100391."
  },
  {
    "objectID": "docs/publications/entries/2022/Alessandri2022_SmallMolecules.html#abstract",
    "href": "docs/publications/entries/2022/Alessandri2022_SmallMolecules.html#abstract",
    "title": "Martini 3 Coarse-Grained Force Field: Small Molecules",
    "section": "Abstract",
    "text": "Abstract\nThe recent re-parametrization of the Martini coarse-grained force field, Martini 3, improved the accuracy of the model in predicting molecular packing and interactions in molecular dynamics simulations. Here, we describe how small molecules can be accurately parametrized within the Martini 3 framework and present a database of validated small molecule models. We pay particular attention to the description of aliphatic and aromatic ring-like structures, which are ubiquitous in small molecules such as solvents and drugs or in building blocks constituting macromolecules such as proteins and synthetic polymers. In Martini 3, ring-like structures are described by models that use higher resolution coarse-grained particles (small and tiny particles). As such, the present database constitutes one of the cornerstones of the calibration of the new Martini 3 small and tiny particle sizes. The models show excellent partitioning behavior and solvent properties. Miscibility trends between different bulk phases are also captured, completing the set of thermodynamic properties considered during the parametrization. We also show how the new bead sizes allow for a good representation of molecular volume, which translates into better structural properties such as stacking distances. We further present design strategies to build Martini 3 models for small molecules of increased complexity."
  },
  {
    "objectID": "docs/publications/entries/2013/López2013_Glycolipids.html",
    "href": "docs/publications/entries/2013/López2013_Glycolipids.html",
    "title": "Martini Force Field Parameters for Glycolipids",
    "section": "",
    "text": "López, C. A., Sovova, Z., van Eerden, F. J., de Vries, A. H., & Marrink, S. J. (2013). Martini force field parameters for glycolipids. Journal of chemical theory and computation, 9(3), 1694-1708."
  },
  {
    "objectID": "docs/publications/entries/2013/López2013_Glycolipids.html#citation-apa-7",
    "href": "docs/publications/entries/2013/López2013_Glycolipids.html#citation-apa-7",
    "title": "Martini Force Field Parameters for Glycolipids",
    "section": "",
    "text": "López, C. A., Sovova, Z., van Eerden, F. J., de Vries, A. H., & Marrink, S. J. (2013). Martini force field parameters for glycolipids. Journal of chemical theory and computation, 9(3), 1694-1708."
  },
  {
    "objectID": "docs/publications/entries/2013/López2013_Glycolipids.html#abstract",
    "href": "docs/publications/entries/2013/López2013_Glycolipids.html#abstract",
    "title": "Martini Force Field Parameters for Glycolipids",
    "section": "Abstract",
    "text": "Abstract\nWe present an extension of the Martini coarse-grained force field to glycolipids. The glycolipids considered here are the glycoglycerolipids monogalactosyldiacylglycerol (MGDG), sulfoquinovosyldiacylglycerol (SQDG), digalactosyldiacylglycerol (DGDG), and phosphatidylinositol (PI) and its phosphorylated forms (PIP, PIP2), as well as the glycosphingolipids galactosylceramide (GCER) and monosialotetrahexosylganglioside (GM1). The parametrization follows the same philosophy as was used previously for lipids, proteins, and carbohydrates focusing on the reproduction of partitioning free energies of small compounds between polar and nonpolar solvents. Bonded parameters are optimized by comparison to lipid conformations sampled with an atomistic force field, in particular with respect to the representation of the most populated states around the glycosidic linkage. Simulations of coarse-grained glycolipid model membranes show good agreement with atomistic simulations as well as experimental data available, especially concerning structural properties such as electron densities, area per lipid, and membrane thickness. Our coarse-grained model opens the way to large scale simulations of biological processes in which glycolipids are important, including recognition, sorting, and clustering of both external and membrane bound proteins."
  },
  {
    "objectID": "docs/publications/entries/2013/Baaden2013_ProteinProteinInteractions.html",
    "href": "docs/publications/entries/2013/Baaden2013_ProteinProteinInteractions.html",
    "title": "Coarse-grain modelling of protein–protein interactions",
    "section": "",
    "text": "Baaden, M., & Marrink, S. J. (2013). Coarse-grain modelling of protein–protein interactions. Current opinion in structural biology, 23(6), 878-886."
  },
  {
    "objectID": "docs/publications/entries/2013/Baaden2013_ProteinProteinInteractions.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Baaden2013_ProteinProteinInteractions.html#citation-apa-7",
    "title": "Coarse-grain modelling of protein–protein interactions",
    "section": "",
    "text": "Baaden, M., & Marrink, S. J. (2013). Coarse-grain modelling of protein–protein interactions. Current opinion in structural biology, 23(6), 878-886."
  },
  {
    "objectID": "docs/publications/entries/2013/Baaden2013_ProteinProteinInteractions.html#abstract",
    "href": "docs/publications/entries/2013/Baaden2013_ProteinProteinInteractions.html#abstract",
    "title": "Coarse-grain modelling of protein–protein interactions",
    "section": "Abstract",
    "text": "Abstract\nHere, we review recent advances towards the modelling of protein–protein interactions (PPI) at the coarse-grained (CG) level, a technique that is now widely used to understand protein affinity, aggregation and self-assembly behaviour. PPI models of soluble proteins and membrane proteins are separately described, but we note the parallel development that is present in both research fields with three important themes: firstly, combining CG modelling with knowledge-based approaches to predict and refine protein–protein complexes; secondly, using physics-based CG models for de novo prediction of protein–protein complexes; and thirdly modelling of large scale protein aggregates."
  },
  {
    "objectID": "docs/publications/entries/2013/Raudino2013_Adhesion.html",
    "href": "docs/publications/entries/2013/Raudino2013_Adhesion.html",
    "title": "Anomalous viscosity effect in the early stages of the ion-assisted adhesion/fusion event between lipid bilayers: A theoretical and computational study",
    "section": "",
    "text": "Raudino, A., Marrink, S. J., & Pannuzzo, M. (2013). Anomalous viscosity effect in the early stages of the ion-assisted adhesion/fusion event between lipid bilayers: A theoretical and computational study. The Journal of Chemical Physics, 138(23)."
  },
  {
    "objectID": "docs/publications/entries/2013/Raudino2013_Adhesion.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Raudino2013_Adhesion.html#citation-apa-7",
    "title": "Anomalous viscosity effect in the early stages of the ion-assisted adhesion/fusion event between lipid bilayers: A theoretical and computational study",
    "section": "",
    "text": "Raudino, A., Marrink, S. J., & Pannuzzo, M. (2013). Anomalous viscosity effect in the early stages of the ion-assisted adhesion/fusion event between lipid bilayers: A theoretical and computational study. The Journal of Chemical Physics, 138(23)."
  },
  {
    "objectID": "docs/publications/entries/2013/Raudino2013_Adhesion.html#abstract",
    "href": "docs/publications/entries/2013/Raudino2013_Adhesion.html#abstract",
    "title": "Anomalous viscosity effect in the early stages of the ion-assisted adhesion/fusion event between lipid bilayers: A theoretical and computational study",
    "section": "Abstract",
    "text": "Abstract\nThe effect of viscosity on the encounter rate of two interacting membranes was investigated by combining a non-equilibrium Fokker-Planck model together with extensive Molecular Dynamics (MD) calculations. The encounter probability and stabilization of transient contact points represent the preliminary steps toward short-range adhesion and fusion of lipid leaflets. To strengthen our analytical model, we used a Coarse Grained MD method to follow the behavior of two charged palmitoyl oleoyl phosphatidylglycerol membranes embedded in a electrolyte-containing box at different viscosity regimes. Solvent friction was modulated by varying the concentration of a neutral, water-soluble polymer, polyethylene glycol, while contact points were stabilized by divalent ions that form bridges among juxtaposed membranes. While a naïve picture foresees a monotonous decrease of the membranes encounter rate with solvent viscosity, both the analytical model and MD simulations show a complex behavior. Under particular conditions, the encounter rate could exhibit a maximum at a critical viscosity value or for a critical concentration of bridging ions. These results seem to be confirmed by experimental observations taken from the literature."
  },
  {
    "objectID": "docs/publications/entries/2013/Gobbo2013_Graphite.html",
    "href": "docs/publications/entries/2013/Gobbo2013_Graphite.html",
    "title": "MARTINI Model for Physisorption of Organic Molecules on Graphite",
    "section": "",
    "text": "Gobbo, C., Beurroies, I., de Ridder, D., Eelkema, R., Marrink, S. J., De Feyter, S., … & de Vries, A. H. (2013). MARTINI model for physisorption of organic molecules on graphite. The Journal of Physical Chemistry C, 117(30), 15623-15631."
  },
  {
    "objectID": "docs/publications/entries/2013/Gobbo2013_Graphite.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Gobbo2013_Graphite.html#citation-apa-7",
    "title": "MARTINI Model for Physisorption of Organic Molecules on Graphite",
    "section": "",
    "text": "Gobbo, C., Beurroies, I., de Ridder, D., Eelkema, R., Marrink, S. J., De Feyter, S., … & de Vries, A. H. (2013). MARTINI model for physisorption of organic molecules on graphite. The Journal of Physical Chemistry C, 117(30), 15623-15631."
  },
  {
    "objectID": "docs/publications/entries/2013/Gobbo2013_Graphite.html#abstract",
    "href": "docs/publications/entries/2013/Gobbo2013_Graphite.html#abstract",
    "title": "MARTINI Model for Physisorption of Organic Molecules on Graphite",
    "section": "Abstract",
    "text": "Abstract\nAn extension to the MARTINI coarse-grained model is presented to describe the adsorption of organic molecules on graphite surfaces. The model allows the study of the dynamics of the preferential adsorption of long-chain organic molecules from solvent and the formation of ordered structures on the surface through self-assembly on the microsecond time scale. It was found that the MARTINI model, developed for self-assembling biomolecular systems in solution, could be extended to include two-dimensional self-assembly on a solid surface using a single recipe to determine the interactions of the existing bead-types with the new representation of graphite. The model was parametrized on adsorption enthalpies of small molecules from the gas phase and on wetting enthalpies of pure compounds. Three wetting enthalpies were determined experimentally to extend the range of chemical functionalities parametrized against. The model reproduces order–disorder transitions of hexadecane and hexadecanol and preferential adsorption of long-chain organic compounds from organic solvents, including the formation of lamellar arrangements on the surface."
  },
  {
    "objectID": "docs/publications/entries/2013/Periole2013_Martini.html",
    "href": "docs/publications/entries/2013/Periole2013_Martini.html",
    "title": "The Martini Coarse-Grained Force Field",
    "section": "",
    "text": "Periole, X., & Marrink, S. J. (2013). The Martini coarse-grained force field. Biomolecular simulations: Methods and protocols, 533-565."
  },
  {
    "objectID": "docs/publications/entries/2013/Periole2013_Martini.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Periole2013_Martini.html#citation-apa-7",
    "title": "The Martini Coarse-Grained Force Field",
    "section": "",
    "text": "Periole, X., & Marrink, S. J. (2013). The Martini coarse-grained force field. Biomolecular simulations: Methods and protocols, 533-565."
  },
  {
    "objectID": "docs/publications/entries/2013/Periole2013_Martini.html#abstract",
    "href": "docs/publications/entries/2013/Periole2013_Martini.html#abstract",
    "title": "The Martini Coarse-Grained Force Field",
    "section": "Abstract",
    "text": "Abstract\nThe Martini force field is a coarse-grained force field suited for molecular dynamics simulations of biomolecular systems. The force field has been parameterized in a systematic way, based on the reproduction of partitioning free energies between polar and apolar phases of a large number of chemical compounds. In this chapter the methodology underlying the force field is presented together with details of its parameterization and limitations. Then currently available topologies are described with a short overview of the key elements of their parameterization. These include the new polarizable Martini water model. A set of three selected ongoing studies using the Martini force field is presented. Finally the latest lines of development are discussed."
  },
  {
    "objectID": "docs/publications/entries/2013/Bulacu2013_AnglePotentials.html",
    "href": "docs/publications/entries/2013/Bulacu2013_AnglePotentials.html",
    "title": "Improved Angle Potentials for Coarse-Grained Molecular Dynamics Simulations",
    "section": "",
    "text": "Bulacu, M., Goga, N., Zhao, W., Rossi, G., Monticelli, L., Periole, X., … & Marrink, S. J. (2013). Improved angle potentials for coarse-grained molecular dynamics simulations. Journal of chemical theory and computation, 9(8), 3282-3292."
  },
  {
    "objectID": "docs/publications/entries/2013/Bulacu2013_AnglePotentials.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Bulacu2013_AnglePotentials.html#citation-apa-7",
    "title": "Improved Angle Potentials for Coarse-Grained Molecular Dynamics Simulations",
    "section": "",
    "text": "Bulacu, M., Goga, N., Zhao, W., Rossi, G., Monticelli, L., Periole, X., … & Marrink, S. J. (2013). Improved angle potentials for coarse-grained molecular dynamics simulations. Journal of chemical theory and computation, 9(8), 3282-3292."
  },
  {
    "objectID": "docs/publications/entries/2013/Bulacu2013_AnglePotentials.html#abstract",
    "href": "docs/publications/entries/2013/Bulacu2013_AnglePotentials.html#abstract",
    "title": "Improved Angle Potentials for Coarse-Grained Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nPotentials routinely used in atomistic molecular dynamics simulations are not always suitable for modeling systems at coarse-grained resolution. For example, in the calculation of traditional torsion angle potentials, numerical instability is often encountered in the case of very flexible molecules. To improve the stability and accuracy of coarse-grained molecular dynamics simulations, we propose two approaches. The first makes use of improved forms for the angle potentials: the restricted bending (ReB) potential prevents torsion angles from visiting unstable or unphysical configurations and the combined bending-torsion (CBT) potential smoothly flattens the interactions when such configurations are sampled. In the second approach, dummy-assisted dihedral (DAD), the torsion potential is applied differently: instead of acting directly on the beads, it acts on virtual beads, bound to the real ones. For simple geometrical reasons, the unstable region is excluded from the accessible conformational space. The benefits of the new approaches are demonstrated in simulations of polyethylene glycol (PEG), polystyrene (PS), and polypeptide molecules described by the MARTINI coarse-grained force field. The new potentials are implemented in an in-house version of the Gromacs package, publicly available."
  },
  {
    "objectID": "docs/publications/entries/2013/Arnarez2013_CardiolipinCytochromebc1.html",
    "href": "docs/publications/entries/2013/Arnarez2013_CardiolipinCytochromebc1.html",
    "title": "Evidence for Cardiolipin Binding Sites on the Membrane-Exposed Surface of the Cytochrome bc1",
    "section": "",
    "text": "Arnarez, C., Mazat, J. P., Elezgaray, J., Marrink, S. J., & Periole, X. (2013). Evidence for cardiolipin binding sites on the membrane-exposed surface of the cytochrome bc 1. Journal of the American Chemical Society, 135(8), 3112-3120."
  },
  {
    "objectID": "docs/publications/entries/2013/Arnarez2013_CardiolipinCytochromebc1.html#citation-apa-7",
    "href": "docs/publications/entries/2013/Arnarez2013_CardiolipinCytochromebc1.html#citation-apa-7",
    "title": "Evidence for Cardiolipin Binding Sites on the Membrane-Exposed Surface of the Cytochrome bc1",
    "section": "",
    "text": "Arnarez, C., Mazat, J. P., Elezgaray, J., Marrink, S. J., & Periole, X. (2013). Evidence for cardiolipin binding sites on the membrane-exposed surface of the cytochrome bc 1. Journal of the American Chemical Society, 135(8), 3112-3120."
  },
  {
    "objectID": "docs/publications/entries/2013/Arnarez2013_CardiolipinCytochromebc1.html#abstract",
    "href": "docs/publications/entries/2013/Arnarez2013_CardiolipinCytochromebc1.html#abstract",
    "title": "Evidence for Cardiolipin Binding Sites on the Membrane-Exposed Surface of the Cytochrome bc1",
    "section": "Abstract",
    "text": "Abstract\nThe respiratory chain is located in the inner membrane of mitochondria and produces the major part of the ATP used by a cell. Cardiolipin (CL), a double charged phospholipid composing ∼10–20% of the mitochondrial membrane, plays an important role in the function and supramolecular organization of the respiratory chain complexes. We present an extensive set of coarse-grain molecular dynamics (CGMD) simulations aiming at the determination of the preferential interfaces of CLs on the respiratory chain complex III (cytochrome bc1, CIII). Six CL binding sites are identified, including the CL binding sites known from earlier structural studies and buried into protein cavities. The simulations revealed the importance of two subunits of CIII (G and K in bovine heart) for the structural integrity of these internal CL binding sites. In addition, new binding sites are found on the membrane-exposed protein surface. The reproducibility of these binding sites over two species (bovine heart and yeast mitochondria) points to an important role for the function of the respiratory chain. Interestingly the membrane-exposed CL binding sites are located on the matrix side of CIII in the inner membrane and thus may provide localized sources of proton ready for uptake by CIII. Furthermore, we found that CLs bound to those membrane-exposed sites bridge the proteins during their assembly into supercomplexes by sharing the binding sites."
  },
  {
    "objectID": "docs/publications/entries/2013/López2013_Cyclodextrins.html",
    "href": "docs/publications/entries/2013/López2013_Cyclodextrins.html",
    "title": "Computational microscopy of cyclodextrin mediated cholesterol extraction from lipid model membranes",
    "section": "",
    "text": "López, C. A., de Vries, A. H., & Marrink, S. J. (2013). Computational microscopy of cyclodextrin mediated cholesterol extraction from lipid model membranes. Scientific reports, 3(1), 2071."
  },
  {
    "objectID": "docs/publications/entries/2013/López2013_Cyclodextrins.html#citation-apa-7",
    "href": "docs/publications/entries/2013/López2013_Cyclodextrins.html#citation-apa-7",
    "title": "Computational microscopy of cyclodextrin mediated cholesterol extraction from lipid model membranes",
    "section": "",
    "text": "López, C. A., de Vries, A. H., & Marrink, S. J. (2013). Computational microscopy of cyclodextrin mediated cholesterol extraction from lipid model membranes. Scientific reports, 3(1), 2071."
  },
  {
    "objectID": "docs/publications/entries/2013/López2013_Cyclodextrins.html#abstract",
    "href": "docs/publications/entries/2013/López2013_Cyclodextrins.html#abstract",
    "title": "Computational microscopy of cyclodextrin mediated cholesterol extraction from lipid model membranes",
    "section": "Abstract",
    "text": "Abstract\nBeta-cyclodextrins (β-CDs) can form inclusion complexes with cholesterol and are commonly used to manipulate cholesterol levels of biomembranes. In this work, we have used multiscale molecular dynamics simulations to provide a detailed view on the interaction between β-CDs and lipid model membranes. We show that cholesterol can be extracted efficiently upon adsorption of β-CD dimers at the membrane/water interface. However, extraction is only observed to occur spontaneously in membranes with high cholesterol levels. Free energy calculations reveal the presence of a kinetic barrier for cholesterol extraction in the case of low cholesterol content. Cholesterol uptake is facilitated in case of (poly)unsaturated lipid membranes, which increases the free energy of the membrane bound state of cholesterol. Comparing lipid/cholesterol compositions typical of liquid-disordered (Ld) and liquid-order (Lo) domains, we furthermore show that cholesterol is preferentially extracted from the disordered regions, in line with recent experimental data."
  },
  {
    "objectID": "docs/publications/entries/2012/Risselada2012_InfluenzaFusion.html",
    "href": "docs/publications/entries/2012/Risselada2012_InfluenzaFusion.html",
    "title": "Line-Tension Controlled Mechanism for Influenza Fusion",
    "section": "",
    "text": "Risselada, H. J., Marelli, G., Fuhrmans, M., Smirnova, Y. G., Grubmüller, H., Marrink, S. J., & Müller, M. (2012). Line-tension controlled mechanism for influenza fusion. PLoS One, 7(6), e38302."
  },
  {
    "objectID": "docs/publications/entries/2012/Risselada2012_InfluenzaFusion.html#citation-apa-7",
    "href": "docs/publications/entries/2012/Risselada2012_InfluenzaFusion.html#citation-apa-7",
    "title": "Line-Tension Controlled Mechanism for Influenza Fusion",
    "section": "",
    "text": "Risselada, H. J., Marelli, G., Fuhrmans, M., Smirnova, Y. G., Grubmüller, H., Marrink, S. J., & Müller, M. (2012). Line-tension controlled mechanism for influenza fusion. PLoS One, 7(6), e38302."
  },
  {
    "objectID": "docs/publications/entries/2012/Risselada2012_InfluenzaFusion.html#abstract",
    "href": "docs/publications/entries/2012/Risselada2012_InfluenzaFusion.html#abstract",
    "title": "Line-Tension Controlled Mechanism for Influenza Fusion",
    "section": "Abstract",
    "text": "Abstract\nOur molecular simulations reveal that wild-type influenza fusion peptides are able to stabilize a highly fusogenic pre-fusion structure, i.e. a peptide bundle formed by four or more trans-membrane arranged fusion peptides. We rationalize that the lipid rim around such bundle has a non-vanishing rim energy (line-tension), which is essential to (i) stabilize the initial contact point between the fusing bilayers, i.e. the stalk, and (ii) drive its subsequent evolution. Such line-tension controlled fusion event does not proceed along the hypothesized standard stalk-hemifusion pathway. In modeled influenza fusion, single point mutations in the influenza fusion peptide either completely inhibit fusion (mutants G1V and W14A) or, intriguingly, specifically arrest fusion at a hemifusion state (mutant G1S). Our simulations demonstrate that, within a line-tension controlled fusion mechanism, these known point mutations either completely inhibit fusion by impairing the peptide’s ability to stabilize the required peptide bundle (G1V and W14A) or stabilize a persistent bundle that leads to a kinetically trapped hemifusion state (G1S). In addition, our results further suggest that the recently discovered leaky fusion mutant G13A, which is known to facilitate a pronounced leakage of the target membrane prior to lipid mixing, reduces the membrane integrity by forming a ‘super’ bundle. Our simulations offer a new interpretation for a number of experimentally observed features of the fusion reaction mediated by the prototypical fusion protein, influenza hemagglutinin, and might bring new insights into mechanisms of other viral fusion reactions."
  },
  {
    "objectID": "docs/publications/entries/2012/Deplazes2012_MscL.html",
    "href": "docs/publications/entries/2012/Deplazes2012_MscL.html",
    "title": "Structural Investigation of MscL Gating Using Experimental Data and Coarse Grained MD Simulations",
    "section": "",
    "text": "Deplazes, E., Louhivuori, M., Jayatilaka, D., Marrink, S. J., & Corry, B. (2012). Structural investigation of MscL gating using experimental data and coarse grained MD simulations."
  },
  {
    "objectID": "docs/publications/entries/2012/Deplazes2012_MscL.html#citation-apa-7",
    "href": "docs/publications/entries/2012/Deplazes2012_MscL.html#citation-apa-7",
    "title": "Structural Investigation of MscL Gating Using Experimental Data and Coarse Grained MD Simulations",
    "section": "",
    "text": "Deplazes, E., Louhivuori, M., Jayatilaka, D., Marrink, S. J., & Corry, B. (2012). Structural investigation of MscL gating using experimental data and coarse grained MD simulations."
  },
  {
    "objectID": "docs/publications/entries/2012/Deplazes2012_MscL.html#abstract",
    "href": "docs/publications/entries/2012/Deplazes2012_MscL.html#abstract",
    "title": "Structural Investigation of MscL Gating Using Experimental Data and Coarse Grained MD Simulations",
    "section": "Abstract",
    "text": "Abstract\nThe mechanosensitive channel of large conductance (MscL) has become a model system in which to understand mechanosensation, a process involved in osmoregulation and many other physiological functions. While a high resolution closed state structure is available, details of the open structure and the gating mechanism remain unknown. In this study we combine coarse grained simulations with restraints from EPR and FRET experiments to study the structural changes involved in gating with much greater level of conformational sampling than has previously been possible. We generated a set of plausible open pore structures that agree well with existing open pore structures and gating models. Most interestingly, we found that membrane thinning induces a kink in the upper part of TM1 that causes an outward motion of the periplasmic loop away from the pore centre. This previously unobserved structural change might present a new mechanism of tension sensing and might be related to a functional role in osmoregulation."
  },
  {
    "objectID": "docs/publications/entries/2012/Fuhrmans2012_FusionProteins.html",
    "href": "docs/publications/entries/2012/Fuhrmans2012_FusionProteins.html",
    "title": "Molecular View of the Role of Fusion Peptides in Promoting Positive Membrane Curvature",
    "section": "",
    "text": "Fuhrmans, M., & Marrink, S. J. (2012). Molecular view of the role of fusion peptides in promoting positive membrane curvature. Journal of the American Chemical Society, 134(3), 1543-1552."
  },
  {
    "objectID": "docs/publications/entries/2012/Fuhrmans2012_FusionProteins.html#citation-apa-7",
    "href": "docs/publications/entries/2012/Fuhrmans2012_FusionProteins.html#citation-apa-7",
    "title": "Molecular View of the Role of Fusion Peptides in Promoting Positive Membrane Curvature",
    "section": "",
    "text": "Fuhrmans, M., & Marrink, S. J. (2012). Molecular view of the role of fusion peptides in promoting positive membrane curvature. Journal of the American Chemical Society, 134(3), 1543-1552."
  },
  {
    "objectID": "docs/publications/entries/2012/Fuhrmans2012_FusionProteins.html#abstract",
    "href": "docs/publications/entries/2012/Fuhrmans2012_FusionProteins.html#abstract",
    "title": "Molecular View of the Role of Fusion Peptides in Promoting Positive Membrane Curvature",
    "section": "Abstract",
    "text": "Abstract\nFusion peptides are moderately hydrophobic segments of viral and nonviral membrane fusion proteins that enable these proteins to fuse two closely apposed biological membranes. In vitro assays furthermore show that even isolated fusion peptides alone can support membrane fusion in model systems. In addition, the fusion peptides have a distinct effect on the phase diagram of lipid mixtures. Here, we present molecular dynamics simulations investigating the effect of a particular fusion peptide, the influenza hemagglutinin fusion peptide and some of its mutants, on the lipid phase diagram. We detect a systematic shift toward phases with more positive mean curvature in the presence of the peptides, as well as an occurrence of bicontinuous cubic phases, which indicates a stabilization of Gaussian curvature. The wild-type fusion peptide has a stronger effect on the phase behavior as compared to the mutants, which we relate to its boomerang shape. Our results point to a different role of fusion peptides than hitherto assumed, the stabilization of pores rather than stalks along the fusion pathway."
  },
  {
    "objectID": "docs/publications/entries/2012/Periole2012_GPCR.html",
    "href": "docs/publications/entries/2012/Periole2012_GPCR.html",
    "title": "Structural Determinants of the Supramolecular Organization of G Protein-Coupled Receptors in Bilayers",
    "section": "",
    "text": "Periole, X., Knepp, A. M., Sakmar, T. P., Marrink, S. J., & Huber, T. (2012). Structural determinants of the supramolecular organization of G protein-coupled receptors in bilayers. Journal of the American Chemical Society, 134(26), 10959-10965."
  },
  {
    "objectID": "docs/publications/entries/2012/Periole2012_GPCR.html#citation-apa-7",
    "href": "docs/publications/entries/2012/Periole2012_GPCR.html#citation-apa-7",
    "title": "Structural Determinants of the Supramolecular Organization of G Protein-Coupled Receptors in Bilayers",
    "section": "",
    "text": "Periole, X., Knepp, A. M., Sakmar, T. P., Marrink, S. J., & Huber, T. (2012). Structural determinants of the supramolecular organization of G protein-coupled receptors in bilayers. Journal of the American Chemical Society, 134(26), 10959-10965."
  },
  {
    "objectID": "docs/publications/entries/2012/Periole2012_GPCR.html#abstract",
    "href": "docs/publications/entries/2012/Periole2012_GPCR.html#abstract",
    "title": "Structural Determinants of the Supramolecular Organization of G Protein-Coupled Receptors in Bilayers",
    "section": "Abstract",
    "text": "Abstract\nThe G protein-coupled receptor (GPCR) rhodopsin self-assembles into supramolecular structures in native bilayers, but the structural determinants of receptor oligomerization are not known. We carried out multiple self-assembly coarse-grained molecular dynamics (CGMD) simulations of model membranes containing up to 64 molecules of the visual receptor rhodopsin over time scales reaching 100 μs. The simulations show strong preferential interaction modes between receptors. Two primary modes of receptor–receptor interactions are consistent with umbrella sampling/potential of mean force (PMF) calculations as a function of the distance between a pair of receptors. The preferential interfaces, involving helices (H) 1/8, 4/5 and 5, present no energy barrier to forming a very stable receptor dimer. Most notably, the PMFs show that the preferred rhodopsin dimer exists in a tail-to-tail conformation, with the interface comprising transmembrane H1/H2 and amphipathic H8 at the extracellular and cytoplasmic surfaces, respectively. This dimer orientation is in line with earlier electron microscopy, X-ray, and cross-linking experiments of rhodopsin and other GPCRs. Less stable interfaces, involving H4 and H6, have a free energy barrier for desolvation (delipidation) of the interfaces and appear to be designed to stabilize “lubricated” (i.e., lipid-coated) dimers. The overall CGMD strategy used here is general and can be applied to study the homo- and heterodimerization of GPCRs and other transmembrane proteins. Systematic extension of the work will deepen our understanding of the forces involved in the membrane organization of integral membrane proteins."
  },
  {
    "objectID": "docs/publications/entries/2015/De-Jong2015_PhotosystemII.html",
    "href": "docs/publications/entries/2015/De-Jong2015_PhotosystemII.html",
    "title": "Atomistic and Coarse Grain Topologies for the Cofactors Associated with the Photosystem II Core Complex",
    "section": "",
    "text": "De Jong, D. H., Liguori, N., Van Den Berg, T., Arnarez, C., Periole, X., & Marrink, S. J. (2015). Atomistic and coarse grain topologies for the cofactors associated with the photosystem II core complex. The Journal of Physical Chemistry B, 119(25), 7791-7803."
  },
  {
    "objectID": "docs/publications/entries/2015/De-Jong2015_PhotosystemII.html#citation-apa-7",
    "href": "docs/publications/entries/2015/De-Jong2015_PhotosystemII.html#citation-apa-7",
    "title": "Atomistic and Coarse Grain Topologies for the Cofactors Associated with the Photosystem II Core Complex",
    "section": "",
    "text": "De Jong, D. H., Liguori, N., Van Den Berg, T., Arnarez, C., Periole, X., & Marrink, S. J. (2015). Atomistic and coarse grain topologies for the cofactors associated with the photosystem II core complex. The Journal of Physical Chemistry B, 119(25), 7791-7803."
  },
  {
    "objectID": "docs/publications/entries/2015/De-Jong2015_PhotosystemII.html#abstract",
    "href": "docs/publications/entries/2015/De-Jong2015_PhotosystemII.html#abstract",
    "title": "Atomistic and Coarse Grain Topologies for the Cofactors Associated with the Photosystem II Core Complex",
    "section": "Abstract",
    "text": "Abstract\nElectron transfers within and between protein complexes are core processes of the electron transport chains occurring in thylakoid (chloroplast), mitochondrial, and bacterial membranes. These electron transfers involve a number of cofactors. Here we describe the derivation of molecular mechanics parameters for the cofactors associated with the function of the photosystem II core complex: plastoquinone, plastoquinol, heme b, chlorophyll A, pheophytin, and β-carotene. Parameters were also obtained for ubiquinol and ubiquinone, related cofactors involved in the respiratory chain. Parameters were derived at both atomistic and coarse grain (CG) resolutions, compatible with the building blocks of the GROMOS united-atom and Martini CG force fields, respectively. Structural and thermodynamic properties of the cofactors were compared to experimental values when available. The topologies were further tested in molecular dynamics simulations of the cofactors in their physiological environment, e.g., either in a lipid membrane environment or in complex with the heme binding protein bacterioferritin."
  },
  {
    "objectID": "docs/publications/entries/2015/Melo2015_sterols.html",
    "href": "docs/publications/entries/2015/Melo2015_sterols.html",
    "title": "Parameters for MARTINI sterols and hopanoids based on a virtual-site description",
    "section": "",
    "text": "Melo, M. N., Ingólfsson, H. I., & Marrink, S. J. (2015). Parameters for Martini sterols and hopanoids based on a virtual-site description. The Journal of chemical physics, 143(24)."
  },
  {
    "objectID": "docs/publications/entries/2015/Melo2015_sterols.html#citation-apa-7",
    "href": "docs/publications/entries/2015/Melo2015_sterols.html#citation-apa-7",
    "title": "Parameters for MARTINI sterols and hopanoids based on a virtual-site description",
    "section": "",
    "text": "Melo, M. N., Ingólfsson, H. I., & Marrink, S. J. (2015). Parameters for Martini sterols and hopanoids based on a virtual-site description. The Journal of chemical physics, 143(24)."
  },
  {
    "objectID": "docs/publications/entries/2015/Melo2015_sterols.html#abstract",
    "href": "docs/publications/entries/2015/Melo2015_sterols.html#abstract",
    "title": "Parameters for MARTINI sterols and hopanoids based on a virtual-site description",
    "section": "Abstract",
    "text": "Abstract\nSterols play an essential role in modulating bilayer structure and dynamics. Coarse-grained molecular dynamics parameters for cholesterol and related molecules are available for the Martini force field and have been successfully used in multiple lipid bilayer studies. In this work, we focus on the use of virtual sites as a means of increasing the stability of cholesterol and cholesterol-like structures. We improve and extend the Martini parameterization of sterols in four different ways: 1—the cholesterol parameters were adapted to make use of virtual interaction sites, which markedly improves numerical stability; 2—cholesterol parameters were also modified to address reported shortcomings in reproducing correct lipid phase behavior in mixed membranes; 3—parameters for ergosterol were created and adapted from cholesterols; and 4—parameters for the hopanoid class of bacterial polycyclic molecules were created, namely, for hopane, diploptene, bacteriohopanetetrol, and for their polycyclic base structure."
  },
  {
    "objectID": "docs/publications/entries/2015/Goga2015_Multiscale.html",
    "href": "docs/publications/entries/2015/Goga2015_Multiscale.html",
    "title": "Benchmark of Schemes for Multiscale Molecular Dynamics Simulations",
    "section": "",
    "text": "Goga, N., Melo, M. N., Rzepiela, A. J., De Vries, A. H., Hadar, A., Marrink, S. J., & Berendsen, H. J. C. (2015). Benchmark of schemes for multiscale molecular dynamics simulations. Journal of Chemical Theory and Computation, 11(4), 1389-1398."
  },
  {
    "objectID": "docs/publications/entries/2015/Goga2015_Multiscale.html#citation-apa-7",
    "href": "docs/publications/entries/2015/Goga2015_Multiscale.html#citation-apa-7",
    "title": "Benchmark of Schemes for Multiscale Molecular Dynamics Simulations",
    "section": "",
    "text": "Goga, N., Melo, M. N., Rzepiela, A. J., De Vries, A. H., Hadar, A., Marrink, S. J., & Berendsen, H. J. C. (2015). Benchmark of schemes for multiscale molecular dynamics simulations. Journal of Chemical Theory and Computation, 11(4), 1389-1398."
  },
  {
    "objectID": "docs/publications/entries/2015/Goga2015_Multiscale.html#abstract",
    "href": "docs/publications/entries/2015/Goga2015_Multiscale.html#abstract",
    "title": "Benchmark of Schemes for Multiscale Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nIn multiscale molecular dynamics simulations the accuracy of detailed models is combined with the efficiency of a reduced representation. For several applications — namely those of sampling enhancement — it is desirable to combine fine-grained (FG) and coarse-grained (CG) approaches into a single hybrid approach with an adjustable mixing parameter. We present a benchmark of three algorithms that use a mixing of the two representation layers using a Lagrangian formalism. The three algorithms use three different approaches for keeping the particles at the FG level of representation together: 1) addition of forces, 2) mass scaling, and 3) temperature scaling. The benchmark is applied to liquid hexadecane and includes an evaluation of the average configurational entropy of the FG and CG subsystems. The temperature-scaling scheme achieved a 3-fold sampling speedup with little deviation of FG properties. The addition-of-forces scheme kept FG properties the best but provided little sampling speedup. The mass-scaling scheme yielded a 5-fold speedup but deviated the most from FG properties."
  },
  {
    "objectID": "docs/publications/entries/2015/Wassenaar2015_Insane.html",
    "href": "docs/publications/entries/2015/Wassenaar2015_Insane.html",
    "title": "Computational Lipidomics with insane: A Versatile Tool for Generating Custom Membranes for Molecular Simulations",
    "section": "",
    "text": "Wassenaar, T. A., Ingólfsson, H. I., Bockmann, R. A., Tieleman, D. P., & Marrink, S. J. (2015). Computational lipidomics with insane: a versatile tool for generating custom membranes for molecular simulations. Journal of chemical theory and computation, 11(5), 2144-2155."
  },
  {
    "objectID": "docs/publications/entries/2015/Wassenaar2015_Insane.html#citation-apa-7",
    "href": "docs/publications/entries/2015/Wassenaar2015_Insane.html#citation-apa-7",
    "title": "Computational Lipidomics with insane: A Versatile Tool for Generating Custom Membranes for Molecular Simulations",
    "section": "",
    "text": "Wassenaar, T. A., Ingólfsson, H. I., Bockmann, R. A., Tieleman, D. P., & Marrink, S. J. (2015). Computational lipidomics with insane: a versatile tool for generating custom membranes for molecular simulations. Journal of chemical theory and computation, 11(5), 2144-2155."
  },
  {
    "objectID": "docs/publications/entries/2015/Wassenaar2015_Insane.html#abstract",
    "href": "docs/publications/entries/2015/Wassenaar2015_Insane.html#abstract",
    "title": "Computational Lipidomics with insane: A Versatile Tool for Generating Custom Membranes for Molecular Simulations",
    "section": "Abstract",
    "text": "Abstract\nFor simulations of membranes and membrane proteins, the generation of the lipid bilayer is a critical step in the setup of the system. Membranes comprising multiple components pose a particular challenge, because the relative abundances need to be controlled and the equilibration of the system may take several microseconds. Here we present a comprehensive method for building membrane containing systems, characterized by simplicity and versatility. The program uses preset, coarse-grain lipid templates to build the membrane, and also allows on-the-fly generation of simple lipid types by specifying the headgroup, linker, and lipid tails on the command line. The resulting models can be equilibrated, after which a relaxed atomistic model can be obtained by reverse transformation. For multicomponent membranes, this provides an efficient means for generating equilibrated atomistic models. The method is called insane, an acronym for INSert membrANE. The program has been made available, together with the complementary method for reverse transformation, at http://cgmartini.nl/. This work highlights the key features of insane and presents a survey of properties for a large range of lipids as a start of a computational lipidomics project."
  },
  {
    "objectID": "docs/publications/entries/2015/Zavadlav2015_WaterModels.html",
    "href": "docs/publications/entries/2015/Zavadlav2015_WaterModels.html",
    "title": "Adaptive resolution simulation of polarizable supramolecular coarse-grained water models",
    "section": "",
    "text": "Zavadlav, J., Melo, M. N., Marrink, S. J., & Praprotnik, M. (2015). Adaptive resolution simulation of polarizable supramolecular coarse-grained water models. The Journal of Chemical Physics, 142(24)."
  },
  {
    "objectID": "docs/publications/entries/2015/Zavadlav2015_WaterModels.html#citation-apa-7",
    "href": "docs/publications/entries/2015/Zavadlav2015_WaterModels.html#citation-apa-7",
    "title": "Adaptive resolution simulation of polarizable supramolecular coarse-grained water models",
    "section": "",
    "text": "Zavadlav, J., Melo, M. N., Marrink, S. J., & Praprotnik, M. (2015). Adaptive resolution simulation of polarizable supramolecular coarse-grained water models. The Journal of Chemical Physics, 142(24)."
  },
  {
    "objectID": "docs/publications/entries/2015/Zavadlav2015_WaterModels.html#abstract",
    "href": "docs/publications/entries/2015/Zavadlav2015_WaterModels.html#abstract",
    "title": "Adaptive resolution simulation of polarizable supramolecular coarse-grained water models",
    "section": "Abstract",
    "text": "Abstract\nMultiscale simulations methods, such as adaptive resolution scheme, are becoming increasingly popular due to their significant computational advantages with respect to conventional atomistic simulations. For these kind of simulations, it is essential to develop accurate multiscale water models that can be used to solvate biophysical systems of interest. Recently, a 4-to-1 mapping was used to couple the bundled-simple point charge water with the MARTINI model. Here, we extend the supramolecular mapping to coarse-grained models with explicit charges. In particular, the two tested models are the polarizable water and big multiple water models associated with the MARTINI force field. As corresponding coarse-grained representations consist of several interaction sites, we couple orientational degrees of freedom of the atomistic and coarse-grained representations via a harmonic energy penalty term. This additional energy term aligns the dipole moments of both representations. We test this coupling by studying the system under applied static external electric field. We show that our approach leads to the correct reproduction of the relevant structural and dynamical properties."
  },
  {
    "objectID": "docs/publications/entries/2019/Souza2019_SOD1.html",
    "href": "docs/publications/entries/2019/Souza2019_SOD1.html",
    "title": "An Allosteric Pathway in Copper, Zinc Superoxide Dismutase Unravels the Molecular Mechanism of the G93A Amyotrophic Lateral Sclerosis-Linked Mutation",
    "section": "",
    "text": "Souza, P. C., Thallmair, S., Marrink, S. J., & Mera-Adasme, R. (2019). An allosteric pathway in copper, zinc superoxide dismutase unravels the molecular mechanism of the G93A amyotrophic lateral sclerosis-linked mutation. The journal of physical chemistry letters, 10(24), 7740-7744."
  },
  {
    "objectID": "docs/publications/entries/2019/Souza2019_SOD1.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Souza2019_SOD1.html#citation-apa-7",
    "title": "An Allosteric Pathway in Copper, Zinc Superoxide Dismutase Unravels the Molecular Mechanism of the G93A Amyotrophic Lateral Sclerosis-Linked Mutation",
    "section": "",
    "text": "Souza, P. C., Thallmair, S., Marrink, S. J., & Mera-Adasme, R. (2019). An allosteric pathway in copper, zinc superoxide dismutase unravels the molecular mechanism of the G93A amyotrophic lateral sclerosis-linked mutation. The journal of physical chemistry letters, 10(24), 7740-7744."
  },
  {
    "objectID": "docs/publications/entries/2019/Souza2019_SOD1.html#abstract",
    "href": "docs/publications/entries/2019/Souza2019_SOD1.html#abstract",
    "title": "An Allosteric Pathway in Copper, Zinc Superoxide Dismutase Unravels the Molecular Mechanism of the G93A Amyotrophic Lateral Sclerosis-Linked Mutation",
    "section": "Abstract",
    "text": "Abstract\nSeveral different mutations of the protein copper, zinc superoxide dismutase (SOD1) produce the neurodegenerative disorder amyotrophic lateral sclerosis (ALS). The molecular mechanism by which the diverse mutations converge to a similar pathology is currently unknown. The electrostatic loop (EL) of SOD1 is known to be affected in all of the studied ALS-linked mutations of SOD1. In this work, we employ a multiscale simulation approach to show that this perturbation corresponds to an increased probability of the EL detaching from its native position, exposing the metal site of the protein to water. From extensive atomistic and coarse-grained molecular dynamics (MD) simulations, we identify an allosteric pathway that explains the action of the distant G93A mutation on the EL. Finally, we employ quantum mechanics/molecular mechanics MD simulations to show that the opening of the EL decreases the Zn(II) affinity of the protein. As the loss of Zn(II) is at the center of several proposed pathogenic mechanisms in SOD1-linked ALS, the structural effect identified here not only is in agreement with the experimental data but also places the opening of the electrostatic loop as the possible main pathogenic effect for a significant number of ALS-linked SOD1 mutations."
  },
  {
    "objectID": "docs/publications/entries/2019/Corradi2019_LipidProtein.html",
    "href": "docs/publications/entries/2019/Corradi2019_LipidProtein.html",
    "title": "Emerging Diversity in Lipid–Protein Interactions",
    "section": "",
    "text": "Corradi, V., Sejdiu, B. I., Mesa-Galloso, H., Abdizadeh, H., Noskov, S. Y., Marrink, S. J., & Tieleman, D. P. (2019). Emerging diversity in lipid–protein interactions. Chemical reviews, 119(9), 5775-5848."
  },
  {
    "objectID": "docs/publications/entries/2019/Corradi2019_LipidProtein.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Corradi2019_LipidProtein.html#citation-apa-7",
    "title": "Emerging Diversity in Lipid–Protein Interactions",
    "section": "",
    "text": "Corradi, V., Sejdiu, B. I., Mesa-Galloso, H., Abdizadeh, H., Noskov, S. Y., Marrink, S. J., & Tieleman, D. P. (2019). Emerging diversity in lipid–protein interactions. Chemical reviews, 119(9), 5775-5848."
  },
  {
    "objectID": "docs/publications/entries/2019/Corradi2019_LipidProtein.html#abstract",
    "href": "docs/publications/entries/2019/Corradi2019_LipidProtein.html#abstract",
    "title": "Emerging Diversity in Lipid–Protein Interactions",
    "section": "Abstract",
    "text": "Abstract\nMembrane lipids interact with proteins in a variety of ways, ranging from providing a stable membrane environment for proteins to being embedded in to detailed roles in complicated and well-regulated protein functions. Experimental and computational advances are converging in a rapidly expanding research area of lipid–protein interactions. Experimentally, the database of high-resolution membrane protein structures is growing, as are capabilities to identify the complex lipid composition of different membranes, to probe the challenging time and length scales of lipid–protein interactions, and to link lipid–protein interactions to protein function in a variety of proteins. Computationally, more accurate membrane models and more powerful computers now enable a detailed look at lipid–protein interactions and increasing overlap with experimental observations for validation and joint interpretation of simulation and experiment. Here we review papers that use computational approaches to study detailed lipid–protein interactions, together with brief experimental and physiological contexts, aiming at comprehensive coverage of simulation papers in the last five years. Overall, a complex picture of lipid–protein interactions emerges, through a range of mechanisms including modulation of the physical properties of the lipid environment, detailed chemical interactions between lipids and proteins, and key functional roles of very specific lipids binding to well-defined binding sites on proteins. Computationally, despite important limitations, molecular dynamics simulations with current computer power and theoretical models are now in an excellent position to answer detailed questions about lipid–protein interactions."
  },
  {
    "objectID": "docs/publications/entries/2019/Zavadlav2019_SWINGER.html",
    "href": "docs/publications/entries/2019/Zavadlav2019_SWINGER.html",
    "title": "SWINGER: a clustering algorithm for concurrent coupling of atomistic and supramolecular liquids",
    "section": "",
    "text": "Zavadlav, J., Marrink, S. J., & Praprotnik, M. (2019). SWINGER: a clustering algorithm for concurrent coupling of atomistic and supramolecular liquids. Interface Focus, 9(3), 20180075."
  },
  {
    "objectID": "docs/publications/entries/2019/Zavadlav2019_SWINGER.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Zavadlav2019_SWINGER.html#citation-apa-7",
    "title": "SWINGER: a clustering algorithm for concurrent coupling of atomistic and supramolecular liquids",
    "section": "",
    "text": "Zavadlav, J., Marrink, S. J., & Praprotnik, M. (2019). SWINGER: a clustering algorithm for concurrent coupling of atomistic and supramolecular liquids. Interface Focus, 9(3), 20180075."
  },
  {
    "objectID": "docs/publications/entries/2019/Zavadlav2019_SWINGER.html#abstract",
    "href": "docs/publications/entries/2019/Zavadlav2019_SWINGER.html#abstract",
    "title": "SWINGER: a clustering algorithm for concurrent coupling of atomistic and supramolecular liquids",
    "section": "Abstract",
    "text": "Abstract\nIn this contribution, we review recent developments and applications of a dynamic clustering algorithm SWINGER tailored for the multiscale molecular simulations of biomolecular systems. The algorithm on-the-fly redistributes solvent molecules among supramolecular clusters. In particular, we focus on its applications in combination with the adaptive resolution scheme, which concurrently couples atomistic and coarse-grained molecular representations. We showcase the versatility of our multiscale approach on a few applications to biomolecular systems coupling atomistic and supramolecular water models such as the well-established MARTINI and dissipative particle dynamics models and provide an outlook for future work."
  },
  {
    "objectID": "docs/publications/entries/2019/Bruininks2019_PracticalView.html",
    "href": "docs/publications/entries/2019/Bruininks2019_PracticalView.html",
    "title": "A Practical View of the MARTINI Force Field",
    "section": "",
    "text": "Bruininks, B. M., Souza, P. C., & Marrink, S. J. (2019). A practical view of the martini force field. Biomolecular Simulations: Methods and Protocols, 105-127."
  },
  {
    "objectID": "docs/publications/entries/2019/Bruininks2019_PracticalView.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Bruininks2019_PracticalView.html#citation-apa-7",
    "title": "A Practical View of the MARTINI Force Field",
    "section": "",
    "text": "Bruininks, B. M., Souza, P. C., & Marrink, S. J. (2019). A practical view of the martini force field. Biomolecular Simulations: Methods and Protocols, 105-127."
  },
  {
    "objectID": "docs/publications/entries/2019/Bruininks2019_PracticalView.html#abstract",
    "href": "docs/publications/entries/2019/Bruininks2019_PracticalView.html#abstract",
    "title": "A Practical View of the MARTINI Force Field",
    "section": "Abstract",
    "text": "Abstract\nMartini is a coarse-grained (CG) force field suitable for molecular dynamics (MD) simulations of (bio)molecular systems. It is based on mapping of two to four heavy atoms to one CG particle. The effective interactions between the CG particles are parametrized to reproduce partitioning free energies of small chemical compounds between polar and apolar phases. In this chapter, a summary of the key elements of this CG force field is presented, followed by an example of practical application: a lipoplex-membrane fusion experiment. Formulated as hands-on practice, this chapter contains guidelines to build CG models of important biological systems, such as asymmetric bilayers and double-stranded DNA. Finally, a series of notes containing useful information, limitations, and tips are described in the last section."
  },
  {
    "objectID": "docs/publications/entries/2019/Marrink2019_RealisticCellMembranes.html",
    "href": "docs/publications/entries/2019/Marrink2019_RealisticCellMembranes.html",
    "title": "Computational Modeling of Realistic Cell Membranes",
    "section": "",
    "text": "Marrink, S. J., Corradi, V., Souza, P. C., Ingolfsson, H. I., Tieleman, D. P., & Sansom, M. S. (2019). Computational modeling of realistic cell membranes. Chemical reviews, 119(9), 6184-6226."
  },
  {
    "objectID": "docs/publications/entries/2019/Marrink2019_RealisticCellMembranes.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Marrink2019_RealisticCellMembranes.html#citation-apa-7",
    "title": "Computational Modeling of Realistic Cell Membranes",
    "section": "",
    "text": "Marrink, S. J., Corradi, V., Souza, P. C., Ingolfsson, H. I., Tieleman, D. P., & Sansom, M. S. (2019). Computational modeling of realistic cell membranes. Chemical reviews, 119(9), 6184-6226."
  },
  {
    "objectID": "docs/publications/entries/2019/Marrink2019_RealisticCellMembranes.html#abstract",
    "href": "docs/publications/entries/2019/Marrink2019_RealisticCellMembranes.html#abstract",
    "title": "Computational Modeling of Realistic Cell Membranes",
    "section": "Abstract",
    "text": "Abstract\nCell membranes contain a large variety of lipid types and are crowded with proteins, endowing them with the plasticity needed to fulfill their key roles in cell functioning. The compositional complexity of cellular membranes gives rise to a heterogeneous lateral organization, which is still poorly understood. Computational models, in particular molecular dynamics simulations and related techniques, have provided important insight into the organizational principles of cell membranes over the past decades. Now, we are witnessing a transition from simulations of simpler membrane models to multicomponent systems, culminating in realistic models of an increasing variety of cell types and organelles. Here, we review the state of the art in the field of realistic membrane simulations and discuss the current limitations and challenges ahead."
  },
  {
    "objectID": "docs/publications/entries/2019/Thallmair2019_ComplexII.html",
    "href": "docs/publications/entries/2019/Thallmair2019_ComplexII.html",
    "title": "Lipid Fingerprints and Cofactor Dynamics of Light Harvesting Complex II in Different Membranes",
    "section": "",
    "text": "Thallmair, S., Vainikka, P. A., & Marrink, S. J. (2019). Lipid fingerprints and cofactor dynamics of light-harvesting complex II in different membranes. Biophysical journal, 116(8), 1446-1455."
  },
  {
    "objectID": "docs/publications/entries/2019/Thallmair2019_ComplexII.html#citation-apa-7",
    "href": "docs/publications/entries/2019/Thallmair2019_ComplexII.html#citation-apa-7",
    "title": "Lipid Fingerprints and Cofactor Dynamics of Light Harvesting Complex II in Different Membranes",
    "section": "",
    "text": "Thallmair, S., Vainikka, P. A., & Marrink, S. J. (2019). Lipid fingerprints and cofactor dynamics of light-harvesting complex II in different membranes. Biophysical journal, 116(8), 1446-1455."
  },
  {
    "objectID": "docs/publications/entries/2019/Thallmair2019_ComplexII.html#abstract",
    "href": "docs/publications/entries/2019/Thallmair2019_ComplexII.html#abstract",
    "title": "Lipid Fingerprints and Cofactor Dynamics of Light Harvesting Complex II in Different Membranes",
    "section": "Abstract",
    "text": "Abstract\nPlant light-harvesting complex II (LHCII) is the key antenna complex for plant photosynthesis. We present coarse-grained molecular dynamics simulations of monomeric and trimeric LHCII in a realistic thylakoid membrane environment based on the Martini force field. The coarse-grained protein model has been optimized with respect to atomistic reference simulations. Our simulations provide detailed insights in the thylakoid lipid fingerprint of LHCII which compares well with experimental data from membrane protein purification. Comparing the monomer and trimeric LHCII reveals a stabilizing effect of trimerization on the chromophores as well as the protein. Moreover, the average chromophore distance shortens in the trimer leading to stronger excitonic couplings. When changing the native thylakoid environment to a model membrane the protein flexibility remains constant, whereas the chromophore flexibility is reduced. Overall, the presented LHCII model lays the foundation to investigate the μs dynamics of this key antenna protein of plants."
  },
  {
    "objectID": "docs/publications/entries/2005/Marrink2005_GelFormation.html",
    "href": "docs/publications/entries/2005/Marrink2005_GelFormation.html",
    "title": "Simulation of gel phase formation and melting in lipid bilayers using a coarse grained model",
    "section": "",
    "text": "Marrink, S. J., Risselada, J., & Mark, A. E. (2005). Simulation of gel phase formation and melting in lipid bilayers using a coarse grained model. Chemistry and physics of lipids, 135(2), 223-244."
  },
  {
    "objectID": "docs/publications/entries/2005/Marrink2005_GelFormation.html#citation-apa-7",
    "href": "docs/publications/entries/2005/Marrink2005_GelFormation.html#citation-apa-7",
    "title": "Simulation of gel phase formation and melting in lipid bilayers using a coarse grained model",
    "section": "",
    "text": "Marrink, S. J., Risselada, J., & Mark, A. E. (2005). Simulation of gel phase formation and melting in lipid bilayers using a coarse grained model. Chemistry and physics of lipids, 135(2), 223-244."
  },
  {
    "objectID": "docs/publications/entries/2005/Marrink2005_GelFormation.html#abstract",
    "href": "docs/publications/entries/2005/Marrink2005_GelFormation.html#abstract",
    "title": "Simulation of gel phase formation and melting in lipid bilayers using a coarse grained model",
    "section": "Abstract",
    "text": "Abstract\nThe transformation between a gel and a fluid phase in dipalmitoyl-phosphatidylcholine (DPPC) bilayers has been simulated using a coarse grained (CG) model by cooling bilayer patches composed of up to 8000 lipids. The critical step in the transformation process is the nucleation of a gel cluster consisting of 20–80 lipids, spanning both monolayers. After the formation of the critical cluster, a fast growth regime is entered. Growth slows when multiple gel domains start interacting, forming a percolating network. Long-lived fluid domains remain trapped and can be metastable on a microsecond time scale. From the temperature dependence of the rate of cluster growth, the line tension of the fluid–gel interface was estimated to be  pN. The reverse process is observed when heating the gel phase. No evidence is found for a hexatic phase as an intermediate stage of melting. The hysteresis observed in the freezing and melting transformation is found to depend both on the system size and on the time scale of the simulation. Extrapolating to macroscopic length and time scales, the transition temperature for heating and cooling converges to  K, in semi-quantitative agreement with the experimental value for DPPC (315 K). The phase transformation is associated with a drop in lateral mobility of the lipids by two orders of magnitude, and an increase in the rotational correlation time of the same order of magnitude. The lipid headgroups, however, remain fluid. These observations are in agreement with experimental findings, and show that the nature of the ordered phase obtained with the CG model is indeed a gel rather than a crystalline phase. Simulations performed at different levels of hydration furthermore show that the gel phase is stabilized at low hydration. A simulation of a small DPPC vesicle reveals that curvature has the opposite effect."
  },
  {
    "objectID": "docs/publications/entries/2004/Faller2004_DomainFormation.html",
    "href": "docs/publications/entries/2004/Faller2004_DomainFormation.html",
    "title": "Simulation of Domain Formation in DLPC−DSPC Mixed Bilayers",
    "section": "",
    "text": "Faller, R., & Marrink, S. J. (2004). Simulation of domain formation in DLPC− DSPC mixed bilayers. Langmuir, 20(18), 7686-7693."
  },
  {
    "objectID": "docs/publications/entries/2004/Faller2004_DomainFormation.html#citation-apa-7",
    "href": "docs/publications/entries/2004/Faller2004_DomainFormation.html#citation-apa-7",
    "title": "Simulation of Domain Formation in DLPC−DSPC Mixed Bilayers",
    "section": "",
    "text": "Faller, R., & Marrink, S. J. (2004). Simulation of domain formation in DLPC− DSPC mixed bilayers. Langmuir, 20(18), 7686-7693."
  },
  {
    "objectID": "docs/publications/entries/2004/Faller2004_DomainFormation.html#abstract",
    "href": "docs/publications/entries/2004/Faller2004_DomainFormation.html#abstract",
    "title": "Simulation of Domain Formation in DLPC−DSPC Mixed Bilayers",
    "section": "Abstract",
    "text": "Abstract\nBinary mixtures of two phosphatidylcholines of different chain lengths are simulated in the bilayer state. We find a phase transition between a liquid state and a gel state at all concentrations. This phase transition is characterized by the area per lipid headgroup, the order parameter, and a change in dynamics. At concentrations with a majority of the longer lipid, we find phase separation into a gel and a liquid state in a small temperature window. This leads to a strong dynamic heterogeneity. Experimental phase transition temperatures are reproduced semiquantitatively. We see a clear shift in the phase transition to higher temperatures with increasing concentration of the longer lipid."
  },
  {
    "objectID": "docs/publications/entries/2003/mark2023_vesicles.html",
    "href": "docs/publications/entries/2003/mark2023_vesicles.html",
    "title": "Molecular Dynamics Simulation of the Formation, Structure, and Dynamics of Small Phospholipid Vesicles",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). Molecular Dynamics Simulation of the Formation, Structure, and Dynamics of Small Phospholipid Vesicles. Journal of the American Chemical Society, 125(49), 15233–15242. https://doi.org/10.1021/ja0352092"
  },
  {
    "objectID": "docs/publications/entries/2003/mark2023_vesicles.html#citation-apa-7",
    "href": "docs/publications/entries/2003/mark2023_vesicles.html#citation-apa-7",
    "title": "Molecular Dynamics Simulation of the Formation, Structure, and Dynamics of Small Phospholipid Vesicles",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). Molecular Dynamics Simulation of the Formation, Structure, and Dynamics of Small Phospholipid Vesicles. Journal of the American Chemical Society, 125(49), 15233–15242. https://doi.org/10.1021/ja0352092"
  },
  {
    "objectID": "docs/publications/entries/2003/mark2023_vesicles.html#abstract",
    "href": "docs/publications/entries/2003/mark2023_vesicles.html#abstract",
    "title": "Molecular Dynamics Simulation of the Formation, Structure, and Dynamics of Small Phospholipid Vesicles",
    "section": "Abstract",
    "text": "Abstract\nHere, we use coarse grained molecular dynamics (MD) simulations to study the spontaneous aggregation of dipalmitoylphosphatidylcholine (DPPC) lipids into small unilamellar vesicles. We show that the aggregation process occurs on a nanosecond time scale, with bicelles and cuplike vesicles formed at intermediate stages. Formation of hemifused vesicles is also observed at higher lipid concentration. With either 25% dipalmitoylphosphatidylethanolamine (DPPE) or lysoPC mixed into the system, the final stages of the aggregation process occur significantly faster. The structure of the spontaneously formed vesicles is analyzed in detail. Microsecond simulations of isolated vesicles reveal significant differences in the packing of the lipids between the inner and outer monolayers, and between PC, PE, and lysoPC. Due to the small size of the vesicles they remain almost perfectly spherical, undergoing very limited shape fluctuations or bilayer undulations. The lipid lateral diffusion rate is found to be faster in the outer than in the inner monolayer. The water permeability coefficient of the pure DPPC vesicles is of the order of 10-3 cm s-1, in agreement with experimental measurements."
  },
  {
    "objectID": "docs/publications/entries/2011/Velinova2011_Micelles.html",
    "href": "docs/publications/entries/2011/Velinova2011_Micelles.html",
    "title": "Sphere-to-Rod Transitions of Nonionic Surfactant Micelles in Aqueous Solution Modeled by Molecular Dynamics Simulations",
    "section": "",
    "text": "Velinova, M., Sengupta, D., Tadjer, A. V., & Marrink, S. J. (2011). Sphere-to-rod transitions of nonionic surfactant micelles in aqueous solution modeled by molecular dynamics simulations. Langmuir, 27(23), 14071-14077."
  },
  {
    "objectID": "docs/publications/entries/2011/Velinova2011_Micelles.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Velinova2011_Micelles.html#citation-apa-7",
    "title": "Sphere-to-Rod Transitions of Nonionic Surfactant Micelles in Aqueous Solution Modeled by Molecular Dynamics Simulations",
    "section": "",
    "text": "Velinova, M., Sengupta, D., Tadjer, A. V., & Marrink, S. J. (2011). Sphere-to-rod transitions of nonionic surfactant micelles in aqueous solution modeled by molecular dynamics simulations. Langmuir, 27(23), 14071-14077."
  },
  {
    "objectID": "docs/publications/entries/2011/Velinova2011_Micelles.html#abstract",
    "href": "docs/publications/entries/2011/Velinova2011_Micelles.html#abstract",
    "title": "Sphere-to-Rod Transitions of Nonionic Surfactant Micelles in Aqueous Solution Modeled by Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nControl of the size and agglomeration of micellar systems is important for pharmaceutical applications such as drug delivery. Although shape-related transitions in surfactant solutions are studied experimentally, their molecular mechanisms are still not well understood. In this study, we use coarse-grained molecular dynamics simulations to describe micellar assemblies of pentaethylene glycol monododecyl ether (C12E5) in aqueous solution at different concentrations. The obtained size and aggregation numbers of the aggregates formed are in very good agreement with the available experimental data. Importantly, increase of the concentration leads to a second critical micelle concentration where a transition to rod-like aggregates is observed. This transition is quantified in terms of shape anisotropy, together with a detailed structural analysis of the micelles as a function of aggregation number."
  },
  {
    "objectID": "docs/publications/entries/2011/Markvoort2011_MembraneFusion.html",
    "href": "docs/publications/entries/2011/Markvoort2011_MembraneFusion.html",
    "title": "Lipid Acrobatics in the Membrane Fusion Arena",
    "section": "",
    "text": "Markvoort, A. J., & Marrink, S. J. (2011). Lipid acrobatics in the membrane fusion arena. Current Topics in Membranes, 68, 259-294."
  },
  {
    "objectID": "docs/publications/entries/2011/Markvoort2011_MembraneFusion.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Markvoort2011_MembraneFusion.html#citation-apa-7",
    "title": "Lipid Acrobatics in the Membrane Fusion Arena",
    "section": "",
    "text": "Markvoort, A. J., & Marrink, S. J. (2011). Lipid acrobatics in the membrane fusion arena. Current Topics in Membranes, 68, 259-294."
  },
  {
    "objectID": "docs/publications/entries/2011/Markvoort2011_MembraneFusion.html#abstract",
    "href": "docs/publications/entries/2011/Markvoort2011_MembraneFusion.html#abstract",
    "title": "Lipid Acrobatics in the Membrane Fusion Arena",
    "section": "Abstract",
    "text": "Abstract\nThis chapter describes the recent contribution of computer simulation approaches to unravel the molecular details of membrane fusion. Over the past decade, fusion between apposed membranes and vesicles has been studied using a large variety of simulation methods and systems. Despite the variety in techniques, some generic fusion pathways emerge that predict a more complex picture beyond the traditional stalk–pore pathway. Indeed the traditional pathway is confirmed in particle-based simulations, but, in addition, alternative pathways are observed in which stalks expand linearly rather than radially, leading to inverted-micellar or asymmetric hemifusion intermediates. The fusion and fission of membranes is an essential process in cell biophysics, occurring during exo- and endocytosis, intracellular trafficking and enveloped virus infection. Membrane fusion is also important in a range of biomedical applications, such as in gene or drug delivery. A wide range of regulatory protein complexes exists in vivo. Because of the wide variety and complexity of fusion protein arrays, the molecular picture of protein-mediated fusion and fission is largely unclear."
  },
  {
    "objectID": "docs/publications/entries/2011/Risselada2011_ElasticProperties.html",
    "href": "docs/publications/entries/2011/Risselada2011_ElasticProperties.html",
    "title": "Curvature-Dependent Elastic Properties of Liquid-Ordered Domains Result in Inverted Domain Sorting on Uniaxially Compressed Vesicles",
    "section": "",
    "text": "Risselada, H. J., Marrink, S. J., & Müller, M. (2011). Curvature-dependent elastic properties of liquid-ordered domains result in inverted domain sorting on uniaxially compressed vesicles. Physical review letters, 106(14), 148102."
  },
  {
    "objectID": "docs/publications/entries/2011/Risselada2011_ElasticProperties.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Risselada2011_ElasticProperties.html#citation-apa-7",
    "title": "Curvature-Dependent Elastic Properties of Liquid-Ordered Domains Result in Inverted Domain Sorting on Uniaxially Compressed Vesicles",
    "section": "",
    "text": "Risselada, H. J., Marrink, S. J., & Müller, M. (2011). Curvature-dependent elastic properties of liquid-ordered domains result in inverted domain sorting on uniaxially compressed vesicles. Physical review letters, 106(14), 148102."
  },
  {
    "objectID": "docs/publications/entries/2011/Risselada2011_ElasticProperties.html#abstract",
    "href": "docs/publications/entries/2011/Risselada2011_ElasticProperties.html#abstract",
    "title": "Curvature-Dependent Elastic Properties of Liquid-Ordered Domains Result in Inverted Domain Sorting on Uniaxially Compressed Vesicles",
    "section": "Abstract",
    "text": "Abstract\nUsing a coarse-grained molecular model we study the spatial distribution of lipid domains on a 20-nm-sized vesicle. The lipid mixture laterally phase separates into a raftlike, liquid-ordered (𝑙𝑜) phase and a liquid-disordered phase. As we uniaxially compress the mixed vesicle keeping the enclosed volume constant, we impart tension onto the membrane. The vesicle adopts a barrel shape, which is composed of two flat contact zones and a curved edge. The 𝑙𝑜 domain, which exhibits a higher bending rigidity, segregates to the highly curved edge. This inverted domain sorting switches to normal domain sorting, where the 𝑙𝑜 domain prefers the flat contact zone, when we release the contents of the vesicle. We rationalize this domain sorting by a pronounced reduction of the bending rigidity and area compressibility of the 𝑙𝑜 phase upon bending."
  },
  {
    "objectID": "docs/publications/entries/2011/Ollila2011_Mechnosensitive.html",
    "href": "docs/publications/entries/2011/Ollila2011_Mechnosensitive.html",
    "title": "Protein Shape Change Has a Major Effect on the Gating Energy of a Mechanosensitive Channel",
    "section": "",
    "text": "Ollila, O. S., Louhivuori, M., Marrink, S. J., & Vattulainen, I. (2011). Protein shape change has a major effect on the gating energy of a mechanosensitive channel. Biophysical journal, 100(7), 1651-1659."
  },
  {
    "objectID": "docs/publications/entries/2011/Ollila2011_Mechnosensitive.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Ollila2011_Mechnosensitive.html#citation-apa-7",
    "title": "Protein Shape Change Has a Major Effect on the Gating Energy of a Mechanosensitive Channel",
    "section": "",
    "text": "Ollila, O. S., Louhivuori, M., Marrink, S. J., & Vattulainen, I. (2011). Protein shape change has a major effect on the gating energy of a mechanosensitive channel. Biophysical journal, 100(7), 1651-1659."
  },
  {
    "objectID": "docs/publications/entries/2011/Ollila2011_Mechnosensitive.html#abstract",
    "href": "docs/publications/entries/2011/Ollila2011_Mechnosensitive.html#abstract",
    "title": "Protein Shape Change Has a Major Effect on the Gating Energy of a Mechanosensitive Channel",
    "section": "Abstract",
    "text": "Abstract\nIncreasing experimental evidence has shown that membrane protein functionality depends on molecular composition of cell membranes. However, the origin of this dependence is not fully understood. It is reasonable to assume that specific lipid-protein interactions are important, yet more generic effects due to mechanical properties of lipid bilayers likely play a significant role too. Previously it has been demonstrated using models for elastic properties of membranes and lateral pressure profiles of lipid bilayers that the mechanical properties of a lipid bilayer can contribute as much as ∼10 kBT to the free energy difference associated with a change in protein conformational state. Here, we extend those previous approaches to a more realistic model for a large mechanosensitive channel (MscL). We use molecular dynamics together with the MARTINI model to simulate the open and closed states of MscL embedded in a DOPC bilayer. We introduce a procedure to calculate the mechanical energy change in the channel gating using a three-dimensional pressure distribution inside a membrane, computed from the molecular dynamics simulations. We decompose the mechanical energy to terms associated with area dilation and shape contribution. Our results highlight that the lateral pressure profile of a lipid bilayer together with the shape change in gating can induce a contribution of ∼30 kBT on the gating energy of MscL. This contribution arises largely from the interfacial tension between hydrophobic and hydrophilic regions in a lipid bilayer."
  },
  {
    "objectID": "docs/publications/entries/2011/Murtola2011_Lipoprotein.html",
    "href": "docs/publications/entries/2011/Murtola2011_Lipoprotein.html",
    "title": "Low density lipoprotein: structure, dynamics, and interactions of apoB-100 with lipids",
    "section": "",
    "text": "Murtola, T., Vuorela, T. A., Hyvönen, M. T., Marrink, S. J., Karttunen, M., & Vattulainen, I. (2011). Low density lipoprotein: structure, dynamics, and interactions of apoB-100 with lipids. Soft Matter, 7(18), 8135-8141."
  },
  {
    "objectID": "docs/publications/entries/2011/Murtola2011_Lipoprotein.html#citation-apa-7",
    "href": "docs/publications/entries/2011/Murtola2011_Lipoprotein.html#citation-apa-7",
    "title": "Low density lipoprotein: structure, dynamics, and interactions of apoB-100 with lipids",
    "section": "",
    "text": "Murtola, T., Vuorela, T. A., Hyvönen, M. T., Marrink, S. J., Karttunen, M., & Vattulainen, I. (2011). Low density lipoprotein: structure, dynamics, and interactions of apoB-100 with lipids. Soft Matter, 7(18), 8135-8141."
  },
  {
    "objectID": "docs/publications/entries/2011/Murtola2011_Lipoprotein.html#abstract",
    "href": "docs/publications/entries/2011/Murtola2011_Lipoprotein.html#abstract",
    "title": "Low density lipoprotein: structure, dynamics, and interactions of apoB-100 with lipids",
    "section": "Abstract",
    "text": "Abstract\nLow-density lipoprotein (LDL) transports cholesterol in the bloodstream and plays an important role in the development of cardiovascular diseases, in particular atherosclerosis. Despite its importance to health, the structure of LDL is not known in detail. This is worrying since the lack of LDL’s structural information makes it more difficult to understand its function. In this work, we have combined experimental and theoretical data to construct LDL models comprised of the apoB-100 protein wrapped around a lipid droplet of about 20 nm in size. The models are considered by near-atomistic multi-microsecond simulations to unravel structural as well as dynamical properties of LDL, with particular attention paid to lipids and their interactions with the protein. We find that the distribution and the ordering of the lipids in the LDL particle are rather complex. The previously proposed 2- and 3-layer models turn out to be inadequate to describe the properties of the lipid droplet. At the surface of LDL, apoB-100 is found to interact favorably with cholesterol and its esters. The interactions of apoB-100 with core molecules, in particular cholesteryl esters, are rather frequent and arise from hydrophobic amino acids interacting with the ring of cholesteryl esters, and also in part from the rather loose packing of lipids at the surface of the lipoparticle. The loose packing may foster the function of transfer proteins, which transport lipids between lipoproteins. Finally, the comparison of the several apoB-100 models in our study suggests that the properties of lipids in LDL are rather insensitive to the conformation of apoB-100. Altogether, the findings pave the way for further studies of LDL to better understand the central steps in the emergence of atherosclerosis."
  },
  {
    "objectID": "docs/publications/entries/2010/Baoukina2010_LateralPressure.html",
    "href": "docs/publications/entries/2010/Baoukina2010_LateralPressure.html",
    "title": "Lateral pressure profiles in lipid monolayers",
    "section": "",
    "text": "Baoukina, S., Marrink, S. J., & Tieleman, D. P. (2010). Lateral pressure profiles in lipid monolayers. Faraday discussions, 144, 393-409."
  },
  {
    "objectID": "docs/publications/entries/2010/Baoukina2010_LateralPressure.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Baoukina2010_LateralPressure.html#citation-apa-7",
    "title": "Lateral pressure profiles in lipid monolayers",
    "section": "",
    "text": "Baoukina, S., Marrink, S. J., & Tieleman, D. P. (2010). Lateral pressure profiles in lipid monolayers. Faraday discussions, 144, 393-409."
  },
  {
    "objectID": "docs/publications/entries/2010/Baoukina2010_LateralPressure.html#abstract",
    "href": "docs/publications/entries/2010/Baoukina2010_LateralPressure.html#abstract",
    "title": "Lateral pressure profiles in lipid monolayers",
    "section": "Abstract",
    "text": "Abstract\nWe have used molecular dynamics simulations with coarse-grained and atomistic models to study the lateral pressure profiles in lipid monolayers. We first consider simple oil/air and oil/water interfaces, and then proceed to lipid monolayers at air/water and oil/water interfaces. The results are qualitatively similar in both atomistic and coarse-grained models. The lateral pressure profile in a monolayer is characterized by a headgroup/water pressure-interfacial tension-chain pressure pattern. In contrast to lipid bilayers, the pressure decreases towards the chain free ends. An additional chain/air tension peak is present in monolayers at the air/water interface. Lateral pressure profiles are calculated for monolayers of different lipid composition under varying surface tension. Increasing the surface tension suppresses both pressure peaks and widens the interfacial tension in monolayers at the oil/water interface, and mainly suppresses the chain pressure in monolayers at the air/water interface. In monolayers in the liquid-condensed phase, the pressure peaks split due to ordering. Variation of lipid composition leads to noticeable changes in all regions of the pressure profile at a fixed surface tension."
  },
  {
    "objectID": "docs/publications/entries/2010/Nijeholt2010_SecY.html",
    "href": "docs/publications/entries/2010/Nijeholt2010_SecY.html",
    "title": "Immobilization of the Plug Domain Inside the SecY Channel Allows Unrestricted Protein Translocation",
    "section": "",
    "text": "a Nijeholt, J. A. L., Bulacu, M., Marrink, S. J., & Driessen, A. J. (2010). Immobilization of the plug domain inside the SecY channel allows unrestricted protein translocation. Journal of biological chemistry, 285(31), 23747-23754."
  },
  {
    "objectID": "docs/publications/entries/2010/Nijeholt2010_SecY.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Nijeholt2010_SecY.html#citation-apa-7",
    "title": "Immobilization of the Plug Domain Inside the SecY Channel Allows Unrestricted Protein Translocation",
    "section": "",
    "text": "a Nijeholt, J. A. L., Bulacu, M., Marrink, S. J., & Driessen, A. J. (2010). Immobilization of the plug domain inside the SecY channel allows unrestricted protein translocation. Journal of biological chemistry, 285(31), 23747-23754."
  },
  {
    "objectID": "docs/publications/entries/2010/Nijeholt2010_SecY.html#abstract",
    "href": "docs/publications/entries/2010/Nijeholt2010_SecY.html#abstract",
    "title": "Immobilization of the Plug Domain Inside the SecY Channel Allows Unrestricted Protein Translocation",
    "section": "Abstract",
    "text": "Abstract\nThe SecYEG complex forms a protein-conducting channel in the inner membrane of Escherichia coli to support the translocation of secretory proteins in their unfolded state. The SecY channel is closed at the periplasmic face of the membrane by a small re-entrance loop that connects transmembrane segment 1 with 2b. This helical domain 2a is termed the plug domain. By the introduction of pairs of cysteines and crosslinkers, the plug domain was immobilized inside the channel and connected to transmembrane segment 10. Translocation was inhibited to various degrees depending on the position and crosslinker spacer length. With one of the crosslinked mutants translocation occurred unrestricted. Biochemical characterization of this mutant as well as molecular dynamics simulations suggest that only a limited movement of the plug domain suffices for translocation."
  },
  {
    "objectID": "docs/publications/entries/2010/Kucerka2010_Cholesterol.html",
    "href": "docs/publications/entries/2010/Kucerka2010_Cholesterol.html",
    "title": "Cholesterol in Bilayers with PUFA Chains: Doping with DMPC or POPC Results in Sterol Reorientation and Membrane-Domain Formation",
    "section": "",
    "text": "Kucerka, N., Marquardt, D., Harroun, T. A., Nieh, M. P., Wassall, S. R., De Jong, D. H., … & Katsaras, J. (2010). Cholesterol in bilayers with PUFA chains: doping with DMPC or POPC results in sterol reorientation and membrane-domain formation. Biochemistry, 49(35), 7485-7493."
  },
  {
    "objectID": "docs/publications/entries/2010/Kucerka2010_Cholesterol.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Kucerka2010_Cholesterol.html#citation-apa-7",
    "title": "Cholesterol in Bilayers with PUFA Chains: Doping with DMPC or POPC Results in Sterol Reorientation and Membrane-Domain Formation",
    "section": "",
    "text": "Kucerka, N., Marquardt, D., Harroun, T. A., Nieh, M. P., Wassall, S. R., De Jong, D. H., … & Katsaras, J. (2010). Cholesterol in bilayers with PUFA chains: doping with DMPC or POPC results in sterol reorientation and membrane-domain formation. Biochemistry, 49(35), 7485-7493."
  },
  {
    "objectID": "docs/publications/entries/2010/Kucerka2010_Cholesterol.html#abstract",
    "href": "docs/publications/entries/2010/Kucerka2010_Cholesterol.html#abstract",
    "title": "Cholesterol in Bilayers with PUFA Chains: Doping with DMPC or POPC Results in Sterol Reorientation and Membrane-Domain Formation",
    "section": "Abstract",
    "text": "Abstract\nUsing neutron diffraction Harroun et al. [(2006) Biochemistry 45, 1227−1233; (2008) Biochemistry 47, 7090−7096] carried out studies that unequivocally demonstrated cholesterol preferentially sequestering in the middle of bilayers (i.e., flat orientation) made of lipids with polyunsaturated fatty acids (PUFA), in contrast to its “usual” position where its hydroxyl group locates near the lipid/water interface (i.e., upright orientation). Here we clearly show, using neutron diffraction, cholesterol’s orientational preference in different lipid bilayers. For example, although it requires 50 mol % POPC (16:0−18:1 PC) in DAPC (di20:4 PC) bilayers to cause cholesterol to revert to its upright orientation, only 5 mol % DMPC (di14:0 PC) is needed to achieve the same effect. This result demonstrates not only cholesterol’s affinity for saturated hydrocarbon chains, but also its aversion for PUFAs. Molecular dynamics (MD) simulations performed on similar systems show that in high PUFA content bilayers cholesterol is simultaneously capable of assuming different orientations within a bilayer. Although this result is known from previous MD studies by Marrink et al. [(2008) J. Am. Chem. Soc. 130, 10−11], it has yet to be confirmed experimentally. Importantly, MD simulations predict the formation of DMPC-rich domains, data corroborated by experiment (i.e., 10 mol % DMPC-doped DAPC bilayers), where cholesterol preferentially locates in its upright orientation, while in DMPC-depleted domains cholesterol is found mostly in the bilayer center (i.e., flat orientation). These results lend credence to DMPC’s aversion for PUFAs, supporting the notion that domain formation is primarily driven by lipids."
  },
  {
    "objectID": "docs/publications/entries/2010/Yesylevskyy2010_PolarizableWater.html",
    "href": "docs/publications/entries/2010/Yesylevskyy2010_PolarizableWater.html",
    "title": "Polarizable Water Model for the Coarse-Grained MARTINI Force Field",
    "section": "",
    "text": "Yesylevskyy, S. O., Schäfer, L. V., Sengupta, D., & Marrink, S. J. (2010). Polarizable water model for the coarse-grained MARTINI force field. PLoS computational biology, 6(6), e1000810."
  },
  {
    "objectID": "docs/publications/entries/2010/Yesylevskyy2010_PolarizableWater.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Yesylevskyy2010_PolarizableWater.html#citation-apa-7",
    "title": "Polarizable Water Model for the Coarse-Grained MARTINI Force Field",
    "section": "",
    "text": "Yesylevskyy, S. O., Schäfer, L. V., Sengupta, D., & Marrink, S. J. (2010). Polarizable water model for the coarse-grained MARTINI force field. PLoS computational biology, 6(6), e1000810."
  },
  {
    "objectID": "docs/publications/entries/2010/Yesylevskyy2010_PolarizableWater.html#abstract",
    "href": "docs/publications/entries/2010/Yesylevskyy2010_PolarizableWater.html#abstract",
    "title": "Polarizable Water Model for the Coarse-Grained MARTINI Force Field",
    "section": "Abstract",
    "text": "Abstract\nCoarse-grained (CG) simulations have become an essential tool to study a large variety of biomolecular processes, exploring temporal and spatial scales inaccessible to traditional models of atomistic resolution. One of the major simplifications of CG models is the representation of the solvent, which is either implicit or modeled explicitly as a van der Waals particle. The effect of polarization, and thus a proper screening of interactions depending on the local environment, is absent. Given the important role of water as a ubiquitous solvent in biological systems, its treatment is crucial to the properties derived from simulation studies. Here, we parameterize a polarizable coarse-grained water model to be used in combination with the CG MARTINI force field. Using a three-bead model to represent four water molecules, we show that the orientational polarizability of real water can be effectively accounted for. This has the consequence that the dielectric screening of bulk water is reproduced. At the same time, we parameterized our new water model such that bulk water density and oil/water partitioning data remain at the same level of accuracy as for the standard MARTINI force field. We apply the new model to two cases for which current CG force fields are inadequate. First, we address the transport of ions across a lipid membrane. The computed potential of mean force shows that the ions now naturally feel the change in dielectric medium when moving from the high dielectric aqueous phase toward the low dielectric membrane interior. In the second application we consider the electroporation process of both an oil slab and a lipid bilayer. The electrostatic field drives the formation of water filled pores in both cases, following a similar mechanism as seen with atomistically detailed models."
  },
  {
    "objectID": "docs/publications/entries/2010/Rzepiela2010_AntimicrobialPeptides.html",
    "href": "docs/publications/entries/2010/Rzepiela2010_AntimicrobialPeptides.html",
    "title": "Membrane poration by antimicrobial peptides combining atomistic and coarse-grained descriptions",
    "section": "",
    "text": "Rzepiela, A. J., Sengupta, D., Goga, N., & Marrink, S. J. (2010). Membrane poration by antimicrobial peptides combining atomistic and coarse-grained descriptions. Faraday discussions, 144, 431-443."
  },
  {
    "objectID": "docs/publications/entries/2010/Rzepiela2010_AntimicrobialPeptides.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Rzepiela2010_AntimicrobialPeptides.html#citation-apa-7",
    "title": "Membrane poration by antimicrobial peptides combining atomistic and coarse-grained descriptions",
    "section": "",
    "text": "Rzepiela, A. J., Sengupta, D., Goga, N., & Marrink, S. J. (2010). Membrane poration by antimicrobial peptides combining atomistic and coarse-grained descriptions. Faraday discussions, 144, 431-443."
  },
  {
    "objectID": "docs/publications/entries/2010/Rzepiela2010_AntimicrobialPeptides.html#abstract",
    "href": "docs/publications/entries/2010/Rzepiela2010_AntimicrobialPeptides.html#abstract",
    "title": "Membrane poration by antimicrobial peptides combining atomistic and coarse-grained descriptions",
    "section": "Abstract",
    "text": "Abstract\nAntimicrobial peptides (AMPs) comprise a large family of peptides that include small cationic peptides, such as magainins, which permeabilize lipid membranes. Previous atomistic level simulations of magainin-H2 peptides show that they act by forming toroidal transmembrane pores. However, due to the atomistic level of description, these simulations were necessarily limited to small system sizes and sub-microsecond time scales. Here, we study the long-time relaxation properties of these pores by evolving the systems using a coarse-grain (CG) description. The disordered nature and the topology of the atomistic pores are maintained at the CG level. The peptides sample different orientations but at any given time, only a few peptides insert into the pore. Key states observed at the CG level are subsequently back-transformed to the atomistic level using a resolution-transformation protocol. The configurations sampled at the CG level are stable in the atomistic simulation. The effect of helicity on pore stability is investigated at the CG level and we find that partial helicity is required to form stable pores. We also show that the current CG scheme can be used to study spontaneous poration by magainin-H2 peptides. Overall, our simulations provide a multi-scale view of a fundamental biophysical membrane process involving a complex interplay between peptides and lipids."
  },
  {
    "objectID": "docs/publications/entries/2010/Apajalahti2010_LipidDiffusion.html",
    "href": "docs/publications/entries/2010/Apajalahti2010_LipidDiffusion.html",
    "title": "Concerted diffusion of lipids in raft-like membranes",
    "section": "",
    "text": "Apajalahti, T., Niemelä, P., Govindan, P. N., Miettinen, M. S., Salonen, E., Marrink, S. J., & Vattulainen, I. (2010). Concerted diffusion of lipids in raft-like membranes. Faraday discussions, 144, 411-430."
  },
  {
    "objectID": "docs/publications/entries/2010/Apajalahti2010_LipidDiffusion.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Apajalahti2010_LipidDiffusion.html#citation-apa-7",
    "title": "Concerted diffusion of lipids in raft-like membranes",
    "section": "",
    "text": "Apajalahti, T., Niemelä, P., Govindan, P. N., Miettinen, M. S., Salonen, E., Marrink, S. J., & Vattulainen, I. (2010). Concerted diffusion of lipids in raft-like membranes. Faraday discussions, 144, 411-430."
  },
  {
    "objectID": "docs/publications/entries/2010/Apajalahti2010_LipidDiffusion.html#abstract",
    "href": "docs/publications/entries/2010/Apajalahti2010_LipidDiffusion.html#abstract",
    "title": "Concerted diffusion of lipids in raft-like membranes",
    "section": "Abstract",
    "text": "Abstract\nCurrently, there is no comprehensive model for the dynamics of cellular membranes. The understanding of even the basic dynamic processes, such as lateral diffusion of lipids, is still quite limited. Recent studies of one-component membrane systems have shown that instead of single-particle motions, the lateral diffusion is driven by a more complex, concerted mechanism for lipid diffusion (E. Falck et al., J. Am. Chem. Soc., 2008, 130, 44–45), where a lipid and its neighbors move in unison in terms of loosely defined clusters. In this work, we extend the previous study by considering the concerted lipid diffusion phenomena in many-component raft-like membranes. This nature of diffusion phenomena emerge in all the cases we have considered, including both atom-scale simulations of lateral diffusion within rafts and coarse-grained MARTINI simulations of diffusion in membranes characterized by coexistence of raft and non-raft domains. The data allows us to identify characteristic time scales for the concerted lipid motions, which turn out to range from hundreds of nanoseconds to several microseconds. Further, we characterize typical length scales associated with the correlated lipid diffusion patterns and find them to be about 10 nm, or even larger if weak correlations are taken into account. Finally, the concerted nature of lipid motions is also found in dissipative particle dynamics simulations of lipid membranes, clarifying the role of hydrodynamics (local momentum conservation) in membrane diffusion phenomena."
  },
  {
    "objectID": "docs/publications/entries/2010/Smirnova2010_MembraneFusion.html",
    "href": "docs/publications/entries/2010/Smirnova2010_MembraneFusion.html",
    "title": "Solvent-Exposed Tails as Prestalk Transition States for Membrane Fusion at Low Hydration",
    "section": "",
    "text": "Smirnova, Y. G., Marrink, S. J., Lipowsky, R., & Knecht, V. (2010). Solvent-exposed tails as prestalk transition states for membrane fusion at low hydration. Journal of the American Chemical Society, 132(19), 6710-6718."
  },
  {
    "objectID": "docs/publications/entries/2010/Smirnova2010_MembraneFusion.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Smirnova2010_MembraneFusion.html#citation-apa-7",
    "title": "Solvent-Exposed Tails as Prestalk Transition States for Membrane Fusion at Low Hydration",
    "section": "",
    "text": "Smirnova, Y. G., Marrink, S. J., Lipowsky, R., & Knecht, V. (2010). Solvent-exposed tails as prestalk transition states for membrane fusion at low hydration. Journal of the American Chemical Society, 132(19), 6710-6718."
  },
  {
    "objectID": "docs/publications/entries/2010/Smirnova2010_MembraneFusion.html#abstract",
    "href": "docs/publications/entries/2010/Smirnova2010_MembraneFusion.html#abstract",
    "title": "Solvent-Exposed Tails as Prestalk Transition States for Membrane Fusion at Low Hydration",
    "section": "Abstract",
    "text": "Abstract\nMembrane fusion is a key step in intracellular trafficking and viral infection. The underlying molecular mechanism is poorly understood. We have used molecular dynamics simulations in conjunction with a coarse grained model to study early metastable and transition states during the fusion of two planar palmitoyl-oleoyl-phosphatidylcholine (POPC) bilayers separated by five waters per lipid in the cis leaflets at zero tension. This system mimics the contact area between two vesicles with large diameters compared to the membrane thickness at conditions where fusion may start in the core of the contact area. At elevated temperatures, the two proximal leaflets become connected via multiple lipid molecules and form a stalklike structure. At room temperature, this structure has a free energy of 3kBT and is separated from the unconnected state by a significant free energy barrier of 20kBT. Stalk formation is initiated by the establishment of a localized hydrophobic contact between the bilayers. This contact is either formed by two partially splayed lipids or a single fully splayed one leading to the formation of a (metastable) splayed lipid bond intermediate. These findings indicate that, for low hydration, early membrane fusion kinetics is not determined by the stalk energy but by the energy of prestalk transition states involving solvent-exposed lipid tails."
  },
  {
    "objectID": "docs/publications/entries/2010/Rzepiela2010_Atomistic.html",
    "href": "docs/publications/entries/2010/Rzepiela2010_Atomistic.html",
    "title": "Reconstruction of atomistic details from coarse-grained structures",
    "section": "",
    "text": "Rzepiela, A. J., Schäfer, L. V., Goga, N., Risselada, H. J., De Vries, A. H., & Marrink, S. J. (2010). Reconstruction of atomistic details from coarse‐grained structures. Journal of computational chemistry, 31(6), 1333-1343."
  },
  {
    "objectID": "docs/publications/entries/2010/Rzepiela2010_Atomistic.html#citation-apa-7",
    "href": "docs/publications/entries/2010/Rzepiela2010_Atomistic.html#citation-apa-7",
    "title": "Reconstruction of atomistic details from coarse-grained structures",
    "section": "",
    "text": "Rzepiela, A. J., Schäfer, L. V., Goga, N., Risselada, H. J., De Vries, A. H., & Marrink, S. J. (2010). Reconstruction of atomistic details from coarse‐grained structures. Journal of computational chemistry, 31(6), 1333-1343."
  },
  {
    "objectID": "docs/publications/entries/2010/Rzepiela2010_Atomistic.html#abstract",
    "href": "docs/publications/entries/2010/Rzepiela2010_Atomistic.html#abstract",
    "title": "Reconstruction of atomistic details from coarse-grained structures",
    "section": "Abstract",
    "text": "Abstract\nWe present an algorithm to reconstruct atomistic structures from their corresponding coarse-grained (CG) representations and its implementation into the freely available molecular dynamics (MD) program package GROMACS. The central part of the algorithm is a simulated annealing MD simulation in which the CG and atomistic structures are coupled via restraints. A number of examples demonstrate the application of the reconstruction procedure to obtain low-energy atomistic structural ensembles from their CG counterparts. We reconstructed individual molecules in vacuo (NCQ tripeptide, dipalmitoylphosphatidylcholine, and cholesterol), bulk water, and a WALP transmembrane peptide embedded in a solvated lipid bilayer. The first examples serve to optimize the parameters for the reconstruction procedure, whereas the latter examples illustrate the applicability to condensed-phase biomolecular systems."
  },
  {
    "objectID": "docs/publications/entries/2009/Hinner2009_VoltageSensitiveDyes.html",
    "href": "docs/publications/entries/2009/Hinner2009_VoltageSensitiveDyes.html",
    "title": "Location, Tilt, and Binding: A Molecular Dynamics Study of Voltage-Sensitive Dyes in Biomembranes",
    "section": "",
    "text": "Hinner, M. J., Marrink, S. J., & de Vries, A. H. (2009). Location, tilt, and binding: a molecular dynamics study of voltage-sensitive dyes in biomembranes. The Journal of Physical Chemistry B, 113(48), 15807-15819."
  },
  {
    "objectID": "docs/publications/entries/2009/Hinner2009_VoltageSensitiveDyes.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Hinner2009_VoltageSensitiveDyes.html#citation-apa-7",
    "title": "Location, Tilt, and Binding: A Molecular Dynamics Study of Voltage-Sensitive Dyes in Biomembranes",
    "section": "",
    "text": "Hinner, M. J., Marrink, S. J., & de Vries, A. H. (2009). Location, tilt, and binding: a molecular dynamics study of voltage-sensitive dyes in biomembranes. The Journal of Physical Chemistry B, 113(48), 15807-15819."
  },
  {
    "objectID": "docs/publications/entries/2009/Hinner2009_VoltageSensitiveDyes.html#abstract",
    "href": "docs/publications/entries/2009/Hinner2009_VoltageSensitiveDyes.html#abstract",
    "title": "Location, Tilt, and Binding: A Molecular Dynamics Study of Voltage-Sensitive Dyes in Biomembranes",
    "section": "Abstract",
    "text": "Abstract\nWe present a molecular dynamics study on the interaction of styryl-type voltage-sensitive dyes with a lipid membrane. In this work, voltage-sensitive dyes are proposed as interesting model amphiphiles for biomolecular simulation, due to the wealth of biophysical and thermodynamical data available on their behavior and their binding to lipid membranes. Taking this data as a basis, we tested the recently developed MARTINI coarse-grained model (J. Phys. Chem. B2007, 111, 7812). The focus was on the fast computation of the free energy of membrane binding. As a first step, we investigated the tilt and location of a coarse-grained representation of the dye Di-4-ASPBS in a lipid membrane, and found good agreement with atomistic simulations and experimental data. Then, we performed umbrella sampling to obtain the theoretical binding free energy for a number of Di-4-ASPBS derivates. In most cases, simulation and experimental binding data were in good agreement regarding the impact of structural changes in the amphiphile on binding. The work yields a general molecular picture of how such structural variations lead to changes of the binding mode and binding strength of amphiphiles to lipid membranes. Further, it provides insights into the possibilities and current limitations of rapid free energy computation for membrane binding with the coarse-grained MARTINI model. The results suggest that the MARTINI model may be a generally useful tool for the study and optimization of molecules interacting with membranes, such as biophysical probes or pharmaceutical compounds."
  },
  {
    "objectID": "docs/publications/entries/2009/Kučerka2009_Diacylphospatidylcholine.html",
    "href": "docs/publications/entries/2009/Kučerka2009_Diacylphospatidylcholine.html",
    "title": "Areas of Monounsaturated Diacylphosphatidylcholines",
    "section": "",
    "text": "Kučerka, N., Gallová, J., Uhríková, D., Balgavý, P., Bulacu, M., Marrink, S. J., & Katsaras, J. (2009). Areas of monounsaturated diacylphosphatidylcholines. Biophysical Journal, 97(7), 1926-1932."
  },
  {
    "objectID": "docs/publications/entries/2009/Kučerka2009_Diacylphospatidylcholine.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Kučerka2009_Diacylphospatidylcholine.html#citation-apa-7",
    "title": "Areas of Monounsaturated Diacylphosphatidylcholines",
    "section": "",
    "text": "Kučerka, N., Gallová, J., Uhríková, D., Balgavý, P., Bulacu, M., Marrink, S. J., & Katsaras, J. (2009). Areas of monounsaturated diacylphosphatidylcholines. Biophysical Journal, 97(7), 1926-1932."
  },
  {
    "objectID": "docs/publications/entries/2009/Kučerka2009_Diacylphospatidylcholine.html#abstract",
    "href": "docs/publications/entries/2009/Kučerka2009_Diacylphospatidylcholine.html#abstract",
    "title": "Areas of Monounsaturated Diacylphosphatidylcholines",
    "section": "Abstract",
    "text": "Abstract\nWe have studied the structural properties of monounsaturated diacylphosphatidylcholine lipid bilayers (i.e., diCn:1PC, where n = 14, 16, 18, 20, 22, and 24 is the number of acyl chain carbons). High-resolution x-ray scattering data were analyzed in conjunction with contrast-varied neutron scattering data using a technique we recently developed. Analyses of the data show that the manner by which bilayer thickness increases with increasing n in monounsaturated diacylphosphatidylcholines is dependent on the double bond’s position. For commonly available monounsaturated diacylphosphatidylcholines, this results in the nonlinear behavior of both bilayer thickness and lipid area, whereas for diC18:1PC bilayers, lipid area assumes a maximum value. It is worthwhile to note that compared to previous data, our results indicate that lipid areas are smaller by ∼10%. This observation highlights the need to revisit lipid areas, as they are often used in comparisons with molecular dynamics simulations. Moreover, simulators are encouraged to compare their results not only to x-ray scattering data, but to neutron data as well."
  },
  {
    "objectID": "docs/publications/entries/2009/Risselada2009_Liposomes.html",
    "href": "docs/publications/entries/2009/Risselada2009_Liposomes.html",
    "title": "Curvature effects on lipid packing and dynamics in liposomes revealed by coarse grained molecular dynamics simulations",
    "section": "",
    "text": "Risselada, H. J., & Marrink, S. J. (2009). Curvature effects on lipid packing and dynamics in liposomes revealed by coarse grained molecular dynamics simulations. Physical Chemistry Chemical Physics, 11(12), 2056-2067."
  },
  {
    "objectID": "docs/publications/entries/2009/Risselada2009_Liposomes.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Risselada2009_Liposomes.html#citation-apa-7",
    "title": "Curvature effects on lipid packing and dynamics in liposomes revealed by coarse grained molecular dynamics simulations",
    "section": "",
    "text": "Risselada, H. J., & Marrink, S. J. (2009). Curvature effects on lipid packing and dynamics in liposomes revealed by coarse grained molecular dynamics simulations. Physical Chemistry Chemical Physics, 11(12), 2056-2067."
  },
  {
    "objectID": "docs/publications/entries/2009/Risselada2009_Liposomes.html#abstract",
    "href": "docs/publications/entries/2009/Risselada2009_Liposomes.html#abstract",
    "title": "Curvature effects on lipid packing and dynamics in liposomes revealed by coarse grained molecular dynamics simulations",
    "section": "Abstract",
    "text": "Abstract\nThe molecular packing details of lipids in planar bilayers are well characterized. For curved bilayers, however, little data is available. In this paper we study the effect of temperature and membrane composition on the structural and dynamical properties of a liposomal membrane in the limit of high curvature (liposomal diameter of 15–20 nm), using coarse grained molecular dynamics simulations. Both pure dipalmitoyl phosphatidylcholine (DPPC) liposomes and binary mixtures of DPPC and either dipalmitoylphosphatidylethanolamine (DPPE) or polyunsaturated dilinoleylphosphatidylcholine (DLiPC) lipids are modeled. We take special care in the equilibration of the liposomes requiring lipid flip-flopping, which can be facilitated by the temporary insertion of artificial pores. The equilibrated liposomes show some remarkable properties. Curvature induces membrane thinning and reduces the thermal expansivity of the membrane. In the inner monolayer the lipid head groups are very closely packed and dehydrated, and the lipids tails relatively disordered. The opposite packing effects are seen in the outer monolayer. In addition, we noticed an increased tendency of the lipid tails to backfold toward the interface in the outer monolayer. The distribution of lipids over the monolayers was found to be strongly temperature dependent. Higher temperatures favor more equally populated monolayers. Relaxation times of the lipid tails were found to increase with increasing curvature, with the lipid tails in the outer monolayer showing a significant slower dynamics compared to the lipid tails in the inner monolayer. In the binary systems there is a clear tendency toward partial transversal demixing of the two components, with especially DPPE enriched in the inner monolayer. This observation is in line with a static shape concept which dictates that inverted-cone shaped lipids such as DPPE and DLiPC would prefer the concave volume of the inner monolayer. However, our results for DLiPC show that another effect comes into play that is almost equally strong and provides a counter-acting driving force toward the outer, rather than the inner monolayer. This effect is the ability of the polyunsaturated tails of DLiPC to backfold, which is advantageous in the outer monolayer. We speculate that polyunsaturated lipids in biological membranes may play an important role in stabilizing both positive and negative regions of curvature."
  },
  {
    "objectID": "docs/publications/entries/2009/Berntsson2009_OppA.html",
    "href": "docs/publications/entries/2009/Berntsson2009_OppA.html",
    "title": "The structural basis for peptide selection by the transport receptor OppA",
    "section": "",
    "text": "Berntsson, R. P. A., Doeven, M. K., Fusetti, F., Duurkens, R. H., Sengupta, D., Marrink, S. J., … & Slotboom, D. J. (2009). The structural basis for peptide selection by the transport receptor OppA. The EMBO journal, 28(9), 1332-1340."
  },
  {
    "objectID": "docs/publications/entries/2009/Berntsson2009_OppA.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Berntsson2009_OppA.html#citation-apa-7",
    "title": "The structural basis for peptide selection by the transport receptor OppA",
    "section": "",
    "text": "Berntsson, R. P. A., Doeven, M. K., Fusetti, F., Duurkens, R. H., Sengupta, D., Marrink, S. J., … & Slotboom, D. J. (2009). The structural basis for peptide selection by the transport receptor OppA. The EMBO journal, 28(9), 1332-1340."
  },
  {
    "objectID": "docs/publications/entries/2009/Berntsson2009_OppA.html#abstract",
    "href": "docs/publications/entries/2009/Berntsson2009_OppA.html#abstract",
    "title": "The structural basis for peptide selection by the transport receptor OppA",
    "section": "Abstract",
    "text": "Abstract\nOligopeptide‐binding protein A (OppA) from Lactococcus lactis binds peptides of an exceptionally wide range of lengths (4–35 residues), with no apparent sequence preference. Here, we present the crystal structures of OppA in the open‐ and closed‐liganded conformations. The structures directly explain the protein’s phenomenal promiscuity. A huge cavity allows binding of very long peptides, and a lack of constraints for the position of the N and C termini of the ligand is compatible with binding of peptides with varying lengths. Unexpectedly, the peptide’s amino‐acid composition (but not the exact sequence) appears to have a function in selection, with a preference for proline‐rich peptides containing at least one isoleucine. These properties can be related to the physiology of the organism: L. lactis is auxotrophic for branched chain amino acids and favours proline‐rich caseins as a source of amino acids. We propose a new mechanism for peptide selection based on amino‐acid composition rather than sequence."
  },
  {
    "objectID": "docs/publications/entries/2009/Lee2009_Polymers.html",
    "href": "docs/publications/entries/2009/Lee2009_Polymers.html",
    "title": "A Coarse-Grained Model for Polyethylene Oxide and Polyethylene Glycol: Conformation and Hydrodynamics",
    "section": "",
    "text": "Lee, H., de Vries, A. H., Marrink, S. J., & Pastor, R. W. (2009). A coarse-grained model for polyethylene oxide and polyethylene glycol: conformation and hydrodynamics. The journal of physical chemistry B, 113(40), 13186-13194."
  },
  {
    "objectID": "docs/publications/entries/2009/Lee2009_Polymers.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Lee2009_Polymers.html#citation-apa-7",
    "title": "A Coarse-Grained Model for Polyethylene Oxide and Polyethylene Glycol: Conformation and Hydrodynamics",
    "section": "",
    "text": "Lee, H., de Vries, A. H., Marrink, S. J., & Pastor, R. W. (2009). A coarse-grained model for polyethylene oxide and polyethylene glycol: conformation and hydrodynamics. The journal of physical chemistry B, 113(40), 13186-13194."
  },
  {
    "objectID": "docs/publications/entries/2009/Lee2009_Polymers.html#abstract",
    "href": "docs/publications/entries/2009/Lee2009_Polymers.html#abstract",
    "title": "A Coarse-Grained Model for Polyethylene Oxide and Polyethylene Glycol: Conformation and Hydrodynamics",
    "section": "Abstract",
    "text": "Abstract\nA coarse-grained (CG) model for polyethylene oxide (PEO) and polyethylene glycol (PEG) developed within the framework of the MARTINI CG force field (FF) using the distributions of bonds, angles, and dihedrals from the CHARMM all-atom FF is presented. Densities of neat low molecular weight PEO agree with experiment, and the radius of gyration Rg = 19.1 Å ± 0.7 for 76-mers of PEO (Mw ≈ 3400), in excellent agreement with neutron scattering results for an equal sized PEG. Simulations of 9, 18, 27, 36, 44, 67, 76, 90, 112, 135, and 158-mers of the CG PEO (442 &lt; Mw &lt; 6998) at low concentration in water show the experimentally observed transition from ideal chain to real chain behavior at 1600 &lt; Mw &lt; 2000, in excellent agreement with the dependence of experimentally observed hydrodynamic radii of PEG. Hydrodynamic radii of PEO calculated from diffusion coefficients of the higher Mw PEO also agree well with experiment. Rg calculated from both all-atom and CG simulations of PEO76 at 21 and 148 mg/cm3 are found to be nearly equal. This lack of concentration dependence implies that apparent Rg from scattering experiments at high concentration should not be taken to be the chain dimension. Simulations of PEO grafted to a nonadsorbing surface yield a mushroom to brush transition that is well described by the Alexander−de Gennes formalism."
  },
  {
    "objectID": "docs/publications/entries/2009/Bennett2009_Cholesterol.html",
    "href": "docs/publications/entries/2009/Bennett2009_Cholesterol.html",
    "title": "Molecular View of Cholesterol Flip-Flop and Chemical Potential in Different Membrane Environments",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2009/Bennett2009_Cholesterol.html#citation-apa-7",
    "href": "docs/publications/entries/2009/Bennett2009_Cholesterol.html#citation-apa-7",
    "title": "Molecular View of Cholesterol Flip-Flop and Chemical Potential in Different Membrane Environments",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2009/Bennett2009_Cholesterol.html#abstract",
    "href": "docs/publications/entries/2009/Bennett2009_Cholesterol.html#abstract",
    "title": "Molecular View of Cholesterol Flip-Flop and Chemical Potential in Different Membrane Environments",
    "section": "Abstract",
    "text": "Abstract\nThe relative stability of cholesterol in cellular membranes and the thermodynamics of fluctuations from equilibrium have important consequences for sterol trafficking and lateral domain formation. We used molecular dynamics computer simulations to investigate the partitioning of cholesterol in a systematic set of lipid bilayers. In addition to atomistic simulations, we undertook a large set of coarse grained simulations, which allowed longer time and length scales to be sampled. Our results agree with recent experiments (Steck, T. L.; et al. Biophys. J.2002, 83, 2118−2125) that the rate of cholesterol flip-flop can be fast on physiological time scales, while extending our understanding of this process to a range of lipids. We predicted that the rate of flip-flop is strongly dependent on the composition of the bilayer. In polyunsaturated bilayers, cholesterol undergoes flip-flop on a submicrosecond time scale, while flip-flop occurs in the second range in saturated bilayers with high cholesterol content. We also calculated the free energy of cholesterol desorption, which can be equated to the excess chemical potential of cholesterol in the bilayer compared to water. The free energy of cholesterol desorption from a DPPC bilayer is 80 kJ/mol, compared to 67 kJ/mol for a DAPC bilayer. In general, cholesterol prefers more ordered and rigid bilayers and has the lowest affinity for bilayers with two polyunsaturated chains. Overall, the simulations provide a detailed molecular level thermodynamic description of cholesterol interactions with lipid bilayers, of fundamental importance to eukaryotic life."
  },
  {
    "objectID": "docs/publications/entries/2023/Borges-Araújo2023_protein.html",
    "href": "docs/publications/entries/2023/Borges-Araújo2023_protein.html",
    "title": "Pragmatic Coarse-Graining of Proteins: Models and Applications",
    "section": "",
    "text": "Borges-Araújo, L., Patmanidis, I., Singh, A. P., Santos, L. H., Sieradzan, A. K., Vanni, S., … & Souza, P. C. (2023). Pragmatic coarse-graining of proteins: models and applications. Journal of Chemical Theory and Computation, 19(20), 7112-7135."
  },
  {
    "objectID": "docs/publications/entries/2023/Borges-Araújo2023_protein.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Borges-Araújo2023_protein.html#citation-apa-7",
    "title": "Pragmatic Coarse-Graining of Proteins: Models and Applications",
    "section": "",
    "text": "Borges-Araújo, L., Patmanidis, I., Singh, A. P., Santos, L. H., Sieradzan, A. K., Vanni, S., … & Souza, P. C. (2023). Pragmatic coarse-graining of proteins: models and applications. Journal of Chemical Theory and Computation, 19(20), 7112-7135."
  },
  {
    "objectID": "docs/publications/entries/2023/Borges-Araújo2023_protein.html#abstract",
    "href": "docs/publications/entries/2023/Borges-Araújo2023_protein.html#abstract",
    "title": "Pragmatic Coarse-Graining of Proteins: Models and Applications",
    "section": "Abstract",
    "text": "Abstract\nThe molecular details involved in the folding, dynamics, organization, and interaction of proteins with other molecules are often difficult to assess by experimental techniques. Consequently, computational models play an ever-increasing role in the field. However, biological processes involving large-scale protein assemblies or long time scale dynamics are still computationally expensive to study in atomistic detail. For these applications, employing coarse-grained (CG) modeling approaches has become a key strategy. In this Review, we provide an overview of what we call pragmatic CG protein models, which are strategies combining, at least in part, a physics-based implementation and a top-down experimental approach to their parametrization. In particular, we focus on CG models in which most protein residues are represented by at least two beads, allowing these models to retain some degree of chemical specificity. A description of the main modern pragmatic protein CG models is provided, including a review of the most recent applications and an outlook on future perspectives in the field."
  },
  {
    "objectID": "docs/publications/entries/2023/Pezeshkian2023_SARCOV2.html",
    "href": "docs/publications/entries/2023/Pezeshkian2023_SARCOV2.html",
    "title": "Molecular architecture and dynamics of SARS-CoV-2 envelope by integrative modeling",
    "section": "",
    "text": "Pezeshkian, W., Grünewald, F., Narykov, O., Lu, S., Arkhipova, V., Solodovnikov, A., … & Korkin, D. (2023). Molecular architecture and dynamics of SARS-CoV-2 envelope by integrative modeling. Structure, 31(4), 492-503."
  },
  {
    "objectID": "docs/publications/entries/2023/Pezeshkian2023_SARCOV2.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Pezeshkian2023_SARCOV2.html#citation-apa-7",
    "title": "Molecular architecture and dynamics of SARS-CoV-2 envelope by integrative modeling",
    "section": "",
    "text": "Pezeshkian, W., Grünewald, F., Narykov, O., Lu, S., Arkhipova, V., Solodovnikov, A., … & Korkin, D. (2023). Molecular architecture and dynamics of SARS-CoV-2 envelope by integrative modeling. Structure, 31(4), 492-503."
  },
  {
    "objectID": "docs/publications/entries/2023/Pezeshkian2023_SARCOV2.html#abstract",
    "href": "docs/publications/entries/2023/Pezeshkian2023_SARCOV2.html#abstract",
    "title": "Molecular architecture and dynamics of SARS-CoV-2 envelope by integrative modeling",
    "section": "Abstract",
    "text": "Abstract\nDespite tremendous efforts, the exact structure of SARS-CoV-2 and related betacoronaviruses remains elusive. SARS-CoV-2 envelope is a key structural component of the virion that encapsulates viral RNA. It is composed of three structural proteins, spike, membrane (M), and envelope, which interact with each other and with the lipids acquired from the host membranes. Here, we developed and applied an integrative multi-scale computational approach to model the envelope structure of SARS-CoV-2 with near atomistic detail, focusing on studying the dynamic nature and molecular interactions of its most abundant, but largely understudied, M protein. The molecular dynamics simulations allowed us to test the envelope stability under different configurations and revealed that the M dimers agglomerated into large, filament-like, macromolecular assemblies with distinct molecular patterns. These results are in good agreement with current experimental data, demonstrating a generic and versatile approach to model the structure of a virus de novo."
  },
  {
    "objectID": "docs/publications/entries/2023/Ren2023_CD44.html",
    "href": "docs/publications/entries/2023/Ren2023_CD44.html",
    "title": "Molecular basis of PIP2-dependent conformational switching of phosphorylated CD44 in binding FERM",
    "section": "",
    "text": "Ren, M., Zhao, L., Ma, Z., An, H., Marrink, S. J., & Sun, F. (2023). Molecular basis of PIP2-dependent conformational switching of phosphorylated CD44 in binding FERM. Biophysical Journal, 122(13), 2675-2685."
  },
  {
    "objectID": "docs/publications/entries/2023/Ren2023_CD44.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Ren2023_CD44.html#citation-apa-7",
    "title": "Molecular basis of PIP2-dependent conformational switching of phosphorylated CD44 in binding FERM",
    "section": "",
    "text": "Ren, M., Zhao, L., Ma, Z., An, H., Marrink, S. J., & Sun, F. (2023). Molecular basis of PIP2-dependent conformational switching of phosphorylated CD44 in binding FERM. Biophysical Journal, 122(13), 2675-2685."
  },
  {
    "objectID": "docs/publications/entries/2023/Ren2023_CD44.html#abstract",
    "href": "docs/publications/entries/2023/Ren2023_CD44.html#abstract",
    "title": "Molecular basis of PIP2-dependent conformational switching of phosphorylated CD44 in binding FERM",
    "section": "Abstract",
    "text": "Abstract\nAssociation of the cellular adhesive protein CD44 and the N-terminal (FERM) domain of cytoskeleton adaptors is critical for cell proliferation, migration, and signaling. Phosphorylation of the cytoplasmic domain (CTD) of CD44 acts as an important regulator of the protein association, but the structural transformation and dynamics mechanism remain enigmatic. In this study, extensive coarse-grained simulations were employed to explore the molecular details in the formation of CD44-FERM complex under S291 and S325 phosphorylation, a modification path known to exert reciprocal effects on the protein association. We find that phosphorylation of S291 inhibits complexation by causing the CTD of CD44 to adopt a more closed structure. In contrast, S325 phosphorylation liberates the CD44-CTD from the membrane surface and promotes the linkage with FERM. The phosphorylation-driven transformation is found to occur in a PIP2-dependent manner, with PIP2 effecting the relative stability of the closed and open conformation, and a replacement of PIP2 by POPS greatly abrogates this effect. The revealed interdependent regulation mechanism by phosphorylation and PIP2 in the association of CD44 and FERM further strengthens our understanding of the molecular basis of cellular signaling and migration."
  },
  {
    "objectID": "docs/publications/entries/2023/Sami2023_ReactiveMartini.html",
    "href": "docs/publications/entries/2023/Sami2023_ReactiveMartini.html",
    "title": "Reactive Martini: Chemical Reactions in Coarse-Grained Molecular Dynamics Simulations",
    "section": "",
    "text": "Sami, S., & Marrink, S. J. (2023). Reactive Martini: Chemical Reactions in Coarse-Grained Molecular Dynamics Simulations. Journal of Chemical Theory and Computation, 19(13), 4040-4046."
  },
  {
    "objectID": "docs/publications/entries/2023/Sami2023_ReactiveMartini.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Sami2023_ReactiveMartini.html#citation-apa-7",
    "title": "Reactive Martini: Chemical Reactions in Coarse-Grained Molecular Dynamics Simulations",
    "section": "",
    "text": "Sami, S., & Marrink, S. J. (2023). Reactive Martini: Chemical Reactions in Coarse-Grained Molecular Dynamics Simulations. Journal of Chemical Theory and Computation, 19(13), 4040-4046."
  },
  {
    "objectID": "docs/publications/entries/2023/Sami2023_ReactiveMartini.html#abstract",
    "href": "docs/publications/entries/2023/Sami2023_ReactiveMartini.html#abstract",
    "title": "Reactive Martini: Chemical Reactions in Coarse-Grained Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nChemical reactions are ubiquitous in both materials and the biophysical sciences. While coarse-grained (CG) molecular dynamics simulations are often needed to study the spatiotemporal scales present in these fields, chemical reactivity has not been explored thoroughly in CG models. In this work, a new approach to model chemical reactivity is presented for the widely used Martini CG Martini model. Employing tabulated potentials with a single extra particle for the angle dependence, the model provides a generic framework for capturing bonded topology changes using nonbonded interactions. As a first example application, the reactive model is used to study the macrocycle formation of benzene-1,3-dithiol molecules through the formation of disulfide bonds. We show that starting from monomers, macrocycles with sizes in agreement with experimental results are obtained using reactive Martini. Overall, our reactive Martini framework is general and can be easily extended to other systems. All of the required scripts and tutorials to explain its use are provided online."
  },
  {
    "objectID": "docs/publications/entries/2023/Sami2023_MultiScale.html",
    "href": "docs/publications/entries/2023/Sami2023_MultiScale.html",
    "title": "A Guide to Titratable Martini Simulations",
    "section": "",
    "text": "Sami, S., Grünewald, F., Souza, P. C., & Marrink, S. J. (2023). A Guide to Titratable Martini Simulations. A Practical Guide to Recent Advances in Multiscale Modeling and Simulation of Biomolecules, 4-1."
  },
  {
    "objectID": "docs/publications/entries/2023/Sami2023_MultiScale.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Sami2023_MultiScale.html#citation-apa-7",
    "title": "A Guide to Titratable Martini Simulations",
    "section": "",
    "text": "Sami, S., Grünewald, F., Souza, P. C., & Marrink, S. J. (2023). A Guide to Titratable Martini Simulations. A Practical Guide to Recent Advances in Multiscale Modeling and Simulation of Biomolecules, 4-1."
  },
  {
    "objectID": "docs/publications/entries/2023/Empereur-mot2023_SwarmCG.html",
    "href": "docs/publications/entries/2023/Empereur-mot2023_SwarmCG.html",
    "title": "Automatic Optimization of Lipid Models in the Martini Force Field Using SwarmCG",
    "section": "",
    "text": "Empereur-Mot, C., Pedersen, K. B., Capelli, R., Crippa, M., Caruso, C., Perrone, M., … & Pavan, G. M. (2023). Automatic Optimization of Lipid Models in the Martini Force Field Using SwarmCG. Journal of chemical information and modeling, 63(12), 3827-3838."
  },
  {
    "objectID": "docs/publications/entries/2023/Empereur-mot2023_SwarmCG.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Empereur-mot2023_SwarmCG.html#citation-apa-7",
    "title": "Automatic Optimization of Lipid Models in the Martini Force Field Using SwarmCG",
    "section": "",
    "text": "Empereur-Mot, C., Pedersen, K. B., Capelli, R., Crippa, M., Caruso, C., Perrone, M., … & Pavan, G. M. (2023). Automatic Optimization of Lipid Models in the Martini Force Field Using SwarmCG. Journal of chemical information and modeling, 63(12), 3827-3838."
  },
  {
    "objectID": "docs/publications/entries/2023/Empereur-mot2023_SwarmCG.html#abstract",
    "href": "docs/publications/entries/2023/Empereur-mot2023_SwarmCG.html#abstract",
    "title": "Automatic Optimization of Lipid Models in the Martini Force Field Using SwarmCG",
    "section": "Abstract",
    "text": "Abstract\nAfter two decades of continued development of the Martini coarse-grained force field (CG FF), further refinment of the already rather accurate Martini lipid models has become a demanding task that could benefit from integrative data-driven methods. Automatic approaches are increasingly used in the development of accurate molecular models, but they typically make use of specifically designed interaction potentials that transfer poorly to molecular systems or conditions different than those used for model calibration. As a proof of concept, here, we employ SwarmCG, an automatic multiobjective optimization approach facilitating the development of lipid force fields, to refine specifically the bonded interaction parameters in building blocks of lipid models within the framework of the general Martini CG FF. As targets of the optimization procedure, we employ both experimental observables (top-down references: area per lipid and bilayer thickness) and all-atom molecular dynamics simulations (bottom-up reference), which respectively inform on the supra-molecular structure of the lipid bilayer systems and on their submolecular dynamics. In our training sets, we simulate at different temperatures in the liquid and gel phases up to 11 homogeneous lamellar bilayers composed of phosphatidylcholine lipids spanning various tail lengths and degrees of (un)saturation. We explore different CG representations of the molecules and evaluate improvements a posteriori using additional simulation temperatures and a portion of the phase diagram of a DOPC/DPPC mixture. Successfully optimizing up to ∼80 model parameters within still limited computational budgets, we show that this protocol allows the obtainment of improved transferable Martini lipid models. In particular, the results of this study demonstrate how a fine-tuning of the representation and parameters of the models may improve their accuracy and how automatic approaches, such as SwarmCG, may be very useful to this end."
  },
  {
    "objectID": "docs/publications/entries/2023/Gilbert2023_Chromosome.html",
    "href": "docs/publications/entries/2023/Gilbert2023_Chromosome.html",
    "title": "Dynamics of chromosome organization in a minimal bacterial cell",
    "section": "",
    "text": "Gilbert, B. R., Thornburg, Z. R., Brier, T. A., Stevens, J. A., Grünewald, F., Stone, J. E., … & Luthey-Schulten, Z. (2023). Dynamics of chromosome organization in a minimal bacterial cell. Frontiers in Cell and Developmental Biology, 11."
  },
  {
    "objectID": "docs/publications/entries/2023/Gilbert2023_Chromosome.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Gilbert2023_Chromosome.html#citation-apa-7",
    "title": "Dynamics of chromosome organization in a minimal bacterial cell",
    "section": "",
    "text": "Gilbert, B. R., Thornburg, Z. R., Brier, T. A., Stevens, J. A., Grünewald, F., Stone, J. E., … & Luthey-Schulten, Z. (2023). Dynamics of chromosome organization in a minimal bacterial cell. Frontiers in Cell and Developmental Biology, 11."
  },
  {
    "objectID": "docs/publications/entries/2023/Gilbert2023_Chromosome.html#abstract",
    "href": "docs/publications/entries/2023/Gilbert2023_Chromosome.html#abstract",
    "title": "Dynamics of chromosome organization in a minimal bacterial cell",
    "section": "Abstract",
    "text": "Abstract\nComputational models of cells cannot be considered complete unless they include the most fundamental process of life, the replication and inheritance of genetic material. By creating a computational framework to model systems of replicating bacterial chromosomes as polymers at 10 bp resolution with Brownian dynamics, we investigate changes in chromosome organization during replication and extend the applicability of an existing whole-cell model (WCM) for a genetically minimal bacterium, JCVI-syn3A, to the entire cell-cycle. To achieve cell-scale chromosome structures that are realistic, we model the chromosome as a self-avoiding homopolymer with bending and torsional stiffnesses that capture the essential mechanical properties of dsDNA in Syn3A. In addition, the conformations of the circular DNA must avoid overlapping with ribosomes identitied in cryo-electron tomograms. While Syn3A lacks the complex regulatory systems known to orchestrate chromosome segregation in other bacteria, its minimized genome retains essential loop-extruding structural maintenance of chromosomes (SMC) protein complexes (SMC-scpAB) and topoisomerases. Through implementing the effects of these proteins in our simulations of replicating chromosomes, we find that they alone are sufficient for simultaneous chromosome segregation across all generations within nested theta structures. This supports previous studies suggesting loop-extrusion serves as a near-universal mechanism for chromosome organization within bacterial and eukaryotic cells. Furthermore, we analyze ribosome diffusion under the influence of the chromosome and calculate in silico chromosome contact maps that capture inter-daughter interactions. Finally, we present a methodology to map the polymer model of the chromosome to a Martini coarse-grained representation to prepare molecular dynamics models of entire Syn3A cells, which serves as an ultimate means of validation for cell states predicted by the WCM."
  },
  {
    "objectID": "docs/publications/entries/2023/Tharmasothirajan2023_poylphenol.html",
    "href": "docs/publications/entries/2023/Tharmasothirajan2023_poylphenol.html",
    "title": "Membrane manipulation by free fatty acids improves microbial plant polyphenol synthesis",
    "section": "",
    "text": "Tharmasothirajan, A., Melcr, J., Linney, J., Gensch, T., Krumbach, K., Ernst, K. M., … & Marienhagen, J. (2023). Membrane manipulation by free fatty acids improves microbial plant polyphenol synthesis. Nature Communications, 14(1), 5619."
  },
  {
    "objectID": "docs/publications/entries/2023/Tharmasothirajan2023_poylphenol.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Tharmasothirajan2023_poylphenol.html#citation-apa-7",
    "title": "Membrane manipulation by free fatty acids improves microbial plant polyphenol synthesis",
    "section": "",
    "text": "Tharmasothirajan, A., Melcr, J., Linney, J., Gensch, T., Krumbach, K., Ernst, K. M., … & Marienhagen, J. (2023). Membrane manipulation by free fatty acids improves microbial plant polyphenol synthesis. Nature Communications, 14(1), 5619."
  },
  {
    "objectID": "docs/publications/entries/2023/Tharmasothirajan2023_poylphenol.html#abstract",
    "href": "docs/publications/entries/2023/Tharmasothirajan2023_poylphenol.html#abstract",
    "title": "Membrane manipulation by free fatty acids improves microbial plant polyphenol synthesis",
    "section": "Abstract",
    "text": "Abstract\nMicrobial synthesis of nutraceutically and pharmaceutically interesting plant polyphenols represents a more environmentally friendly alternative to chemical synthesis or plant extraction. However, most polyphenols are cytotoxic for microorganisms as they are believed to negatively affect cell integrity and transport processes. To increase the production performance of engineered cell factories, strategies have to be developed to mitigate these detrimental effects. Here, we examine the accumulation of the stilbenoid resveratrol in the cell membrane and cell wall during its production using Corynebacterium glutamicum and uncover the membrane rigidifying effect of this stilbenoid experimentally and with molecular dynamics simulations. A screen of free fatty acid supplements identifies palmitelaidic acid and linoleic acid as suitable additives to attenuate resveratrol’s cytotoxic effects resulting in a three-fold higher product titer. This cost-effective approach to counteract membrane-damaging effects of product accumulation is transferable to the microbial production of other polyphenols and may represent an engineering target for other membrane-active bioproducts."
  },
  {
    "objectID": "docs/publications/entries/2023/Kroon2023_Martinize2.html",
    "href": "docs/publications/entries/2023/Kroon2023_Martinize2.html",
    "title": "Martinize2 and Vermouth: Unified Framework for Topology Generation",
    "section": "",
    "text": "Kroon, P. C., Grunewald, F., Barnoud, J., van Tilburg, M., Souza, P. C. T., Wassenaar, T. A., & Marrink, S. J. (2023). Martinize2 and Vermouth: Unified Framework for Topology Generation. eLife, 12."
  },
  {
    "objectID": "docs/publications/entries/2023/Kroon2023_Martinize2.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Kroon2023_Martinize2.html#citation-apa-7",
    "title": "Martinize2 and Vermouth: Unified Framework for Topology Generation",
    "section": "",
    "text": "Kroon, P. C., Grunewald, F., Barnoud, J., van Tilburg, M., Souza, P. C. T., Wassenaar, T. A., & Marrink, S. J. (2023). Martinize2 and Vermouth: Unified Framework for Topology Generation. eLife, 12."
  },
  {
    "objectID": "docs/publications/entries/2023/Kroon2023_Martinize2.html#abstract",
    "href": "docs/publications/entries/2023/Kroon2023_Martinize2.html#abstract",
    "title": "Martinize2 and Vermouth: Unified Framework for Topology Generation",
    "section": "Abstract",
    "text": "Abstract\nOngoing advances in force field and computer hardware development enable the use of molecular dynamics (MD) to simulate increasingly complex systems with the ultimate goal of reaching cellular complexity. At the same time, rational design by high-throughput (HT) simulations is another forefront of MD. In these areas, the Martini coarse-grained force field, especially the latest version (i.e. v3), is being actively explored because it offers enhanced spatial-temporal resolution. However, the automation tools for preparing simulations with the Martini force field, accompanying the previous version, were not designed for HT simulations or studies of complex cellular systems. Therefore, they become a major limiting factor. To address these shortcomings, we present the open-source vermouth python library. Vermouth is designed to become the unified framework for developing programs, which prepare, run, and analyze Martini simulations of complex systems. To demonstrate the power of the vermouth library, the martinize2 program is showcased as a generalization of the martinize script, originally aimed to set up simulations of proteins. In contrast to the previous version, martinize2 automatically handles protonation states in proteins and post-translation modifications, offers more options to fine-tune structural biases such as the elastic network, and can convert nonprotein molecules such as ligands. Finally, martinize2 is used in two high-complexity benchmarks. The entire I-TASSER protein template database as well as a subset of 200,000 structures from the AlphaFold Protein Structure Database are converted to CG resolution and we illustrate how the checks on input structure quality can safeguard HT applications."
  },
  {
    "objectID": "docs/publications/entries/2023/Vainikka2023_MolecularMotors.html",
    "href": "docs/publications/entries/2023/Vainikka2023_MolecularMotors.html",
    "title": "Martini 3 Coarse-Grained Model for Second-Generation Unidirectional Molecular Motors and Switches",
    "section": "",
    "text": "Vainikka, P., & Marrink, S. J. (2023). Martini 3 Coarse-Grained Model for Second-Generation Unidirectional Molecular Motors and Switches. Journal of Chemical Theory and Computation, 19(2), 596-604."
  },
  {
    "objectID": "docs/publications/entries/2023/Vainikka2023_MolecularMotors.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Vainikka2023_MolecularMotors.html#citation-apa-7",
    "title": "Martini 3 Coarse-Grained Model for Second-Generation Unidirectional Molecular Motors and Switches",
    "section": "",
    "text": "Vainikka, P., & Marrink, S. J. (2023). Martini 3 Coarse-Grained Model for Second-Generation Unidirectional Molecular Motors and Switches. Journal of Chemical Theory and Computation, 19(2), 596-604."
  },
  {
    "objectID": "docs/publications/entries/2023/Vainikka2023_MolecularMotors.html#abstract",
    "href": "docs/publications/entries/2023/Vainikka2023_MolecularMotors.html#abstract",
    "title": "Martini 3 Coarse-Grained Model for Second-Generation Unidirectional Molecular Motors and Switches",
    "section": "Abstract",
    "text": "Abstract\nArtificial molecular motors (MMs) and switches (MSs), capable of undergoing unidirectional rotation or switching under the appropriate stimuli, are being utilized in multiple complex and chemically diverse environments. Although thorough theoretical work utilizing QM and QM/MM methods have mapped out many of the critical properties of MSs and MMs, as the experimental setups become more complex and ambitious, there is an ever increasing need to study the behavior and dynamics of these molecules as they interact with their environment. To this end, we have parametrized two coarse-grained (CG) models of commonly used MMs and a model for an oxindole-based MS, which can be used to study the ground state behavior of MMs and MSs in large simulations for significantly longer periods of time. We also propose methods to perturb these systems which can allow users to approximate how such systems would respond to MMs rotating or the MSs switching."
  },
  {
    "objectID": "docs/publications/entries/2023/Waclawiková2023_MetaboliteBinding.html",
    "href": "docs/publications/entries/2023/Waclawiková2023_MetaboliteBinding.html",
    "title": "Potential binding modes of the gut bacterial metabolite, 5-hydroxyindole, to the intestinal L-type calcium channels and its impact on the microbiota in rats",
    "section": "",
    "text": "Waclawiková, B., Cesar Telles de Souza, P., Schwalbe, M., Neochoritis, C. G., Hoornenborg, W., Nelemans, S. A., … & El Aidy, S. (2023). Potential binding modes of the gut bacterial metabolite, 5-hydroxyindole, to the intestinal L-type calcium channels and its impact on the microbiota in rats. Gut microbes, 15(1), 2154544."
  },
  {
    "objectID": "docs/publications/entries/2023/Waclawiková2023_MetaboliteBinding.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Waclawiková2023_MetaboliteBinding.html#citation-apa-7",
    "title": "Potential binding modes of the gut bacterial metabolite, 5-hydroxyindole, to the intestinal L-type calcium channels and its impact on the microbiota in rats",
    "section": "",
    "text": "Waclawiková, B., Cesar Telles de Souza, P., Schwalbe, M., Neochoritis, C. G., Hoornenborg, W., Nelemans, S. A., … & El Aidy, S. (2023). Potential binding modes of the gut bacterial metabolite, 5-hydroxyindole, to the intestinal L-type calcium channels and its impact on the microbiota in rats. Gut microbes, 15(1), 2154544."
  },
  {
    "objectID": "docs/publications/entries/2023/Waclawiková2023_MetaboliteBinding.html#abstract",
    "href": "docs/publications/entries/2023/Waclawiková2023_MetaboliteBinding.html#abstract",
    "title": "Potential binding modes of the gut bacterial metabolite, 5-hydroxyindole, to the intestinal L-type calcium channels and its impact on the microbiota in rats",
    "section": "Abstract",
    "text": "Abstract\nIntestinal microbiota and microbiota-derived metabolites play a key role in regulating the host physiology. Recently, we have identified a gut-bacterial metabolite, namely 5-hydroxyindole, as a potent stimulant of intestinal motility via its modulation of L-type voltage-gated calcium channels located on the intestinal smooth muscle cells. Dysregulation of L-type voltage-gated calcium channels is associated with various gastrointestinal motility disorders, including constipation, making L-type voltage-gated calcium channels an important target for drug development. Nonetheless, the majority of currently available drugs are associated with alteration of the gut microbiota. Using 16S rRNA sequencing this study shows that, when administered orally, 5-hydroxyindole has only marginal effects on the rat cecal microbiota. Molecular dynamics simulations propose potential-binding pockets of 5-hydroxyindole in the α1 subunit of the L-type voltage-gated calcium channels and when its stimulatory effect on the rat colonic contractility was compared to 16 different analogues, ex-vivo, 5-hydroxyindole stood as the most potent enhancer of the intestinal contractility. Overall, the present findings imply a potential role of microbiota-derived metabolites as candidate therapeutics for targeted treatment of slow intestinal motility-related disorders including constipation."
  },
  {
    "objectID": "docs/publications/entries/2023/Chiariello2023_PsbS.html",
    "href": "docs/publications/entries/2023/Chiariello2023_PsbS.html",
    "title": "pH-Dependent Conformational Switch Impacts Stability of the PsbS Dimer",
    "section": "",
    "text": "Chiariello, M. G., Grünewald, F., Zarmiento-Garcia, R., & Marrink, S. J. (2023). pH-Dependent Conformational Switch Impacts Stability of the PsbS Dimer. The Journal of Physical Chemistry Letters, 14(4), 905-911."
  },
  {
    "objectID": "docs/publications/entries/2023/Chiariello2023_PsbS.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Chiariello2023_PsbS.html#citation-apa-7",
    "title": "pH-Dependent Conformational Switch Impacts Stability of the PsbS Dimer",
    "section": "",
    "text": "Chiariello, M. G., Grünewald, F., Zarmiento-Garcia, R., & Marrink, S. J. (2023). pH-Dependent Conformational Switch Impacts Stability of the PsbS Dimer. The Journal of Physical Chemistry Letters, 14(4), 905-911."
  },
  {
    "objectID": "docs/publications/entries/2023/Chiariello2023_PsbS.html#abstract",
    "href": "docs/publications/entries/2023/Chiariello2023_PsbS.html#abstract",
    "title": "pH-Dependent Conformational Switch Impacts Stability of the PsbS Dimer",
    "section": "Abstract",
    "text": "Abstract\nThe photosystem II PsbS protein triggers the photoprotective mechanism of plants by sensing the acidification of the thylakoid lumen. Despite the mechanism of action of PsbS would require a pH-dependent monomerization of the dimeric form, a clear connection between the pH-induced structural changes and the dimer stability is missing. Here, by applying constant pH coarse-grained and all-atom molecular dynamics simulations, we investigate the pH-dependent structural response of the PsbS dimer. We find that the pH variation leads to structural changes in the lumen-exposed helices, located at the dimeric interface, providing an effective switch between PsbS inactive and active form. Moreover, the monomerization free energies reveal that in the neutral pH conformation, where the network of H-bond interactions at the dimeric interface is destroyed, the protein–protein interaction is weaker. Our results show how the pH-dependent conformations of PsbS affect their dimerization propensity, which is at the basis of the photoprotective mechanism."
  },
  {
    "objectID": "docs/publications/entries/2023/Diamanti2023_ECF.html",
    "href": "docs/publications/entries/2023/Diamanti2023_ECF.html",
    "title": "Identification of inhibitors targeting the energy-coupling factor (ECF) transporters",
    "section": "",
    "text": "Diamanti, E., Souza, P. C., Setyawati, I., Bousis, S., Monjas, L., Swier, L. J., … & Hirsch, A. K. (2023). Identification of inhibitors targeting the energy-coupling factor (ECF) transporters. Communications biology, 6(1), 1182."
  },
  {
    "objectID": "docs/publications/entries/2023/Diamanti2023_ECF.html#citation-apa-7",
    "href": "docs/publications/entries/2023/Diamanti2023_ECF.html#citation-apa-7",
    "title": "Identification of inhibitors targeting the energy-coupling factor (ECF) transporters",
    "section": "",
    "text": "Diamanti, E., Souza, P. C., Setyawati, I., Bousis, S., Monjas, L., Swier, L. J., … & Hirsch, A. K. (2023). Identification of inhibitors targeting the energy-coupling factor (ECF) transporters. Communications biology, 6(1), 1182."
  },
  {
    "objectID": "docs/publications/entries/2023/Diamanti2023_ECF.html#abstract",
    "href": "docs/publications/entries/2023/Diamanti2023_ECF.html#abstract",
    "title": "Identification of inhibitors targeting the energy-coupling factor (ECF) transporters",
    "section": "Abstract",
    "text": "Abstract\nThe energy-coupling factor (ECF) transporters are a family of transmembrane proteins involved in the uptake of vitamins in a wide range of bacteria. Inhibition of the activity of these proteins could reduce the viability of pathogens that depend on vitamin uptake. The central role of vitamin transport in the metabolism of bacteria and absence from humans make the ECF transporters an attractive target for inhibition with selective chemical probes. Here, we report on the identification of a promising class of inhibitors of the ECF transporters. We used coarse-grained molecular dynamics simulations on Lactobacillus delbrueckii ECF-FolT2 and ECF-PanT to profile the binding mode and mechanism of inhibition of this novel chemotype. The results corroborate the postulated mechanism of transport and pave the way for further drug-discovery efforts."
  },
  {
    "objectID": "docs/publications/entries/2018/Frederix2018_SelfAssembly.html",
    "href": "docs/publications/entries/2018/Frederix2018_SelfAssembly.html",
    "title": "Molecular simulations of self-assembling bio-inspired supramolecular systems and their connection to experiments",
    "section": "",
    "text": "Frederix, P. W., Patmanidis, I., & Marrink, S. J. (2018). Molecular simulations of self-assembling bio-inspired supramolecular systems and their connection to experiments. Chemical Society Reviews, 47(10), 3470-3489."
  },
  {
    "objectID": "docs/publications/entries/2018/Frederix2018_SelfAssembly.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Frederix2018_SelfAssembly.html#citation-apa-7",
    "title": "Molecular simulations of self-assembling bio-inspired supramolecular systems and their connection to experiments",
    "section": "",
    "text": "Frederix, P. W., Patmanidis, I., & Marrink, S. J. (2018). Molecular simulations of self-assembling bio-inspired supramolecular systems and their connection to experiments. Chemical Society Reviews, 47(10), 3470-3489."
  },
  {
    "objectID": "docs/publications/entries/2018/Frederix2018_SelfAssembly.html#abstract",
    "href": "docs/publications/entries/2018/Frederix2018_SelfAssembly.html#abstract",
    "title": "Molecular simulations of self-assembling bio-inspired supramolecular systems and their connection to experiments",
    "section": "Abstract",
    "text": "Abstract\nIn bionanotechnology, the field of creating functional materials consisting of bio-inspired molecules, the function and shape of a nanostructure only appear through the assembly of many small molecules together. The large number of building blocks required to define a nanostructure combined with the many degrees of freedom in packing small molecules has long precluded molecular simulations, but recent advances in computational hardware as well as software have made classical simulations available to this strongly expanding field. Here, we review the state of the art in simulations of self-assembling bio-inspired supramolecular systems. We will first discuss progress in force fields, simulation protocols and enhanced sampling techniques using recent examples. Secondly, we will focus on efforts to enable the comparison of experimentally accessible observables and computational results. Experimental quantities that can be measured by microscopy, spectroscopy and scattering can be linked to simulation output either directly or indirectly, via quantum mechanical or semi-empirical techniques. Overall, we aim to provide an overview of the various computational approaches to understand not only the molecular architecture of nanostructures, but also the mechanism of their formation."
  },
  {
    "objectID": "docs/publications/entries/2018/Liu2018_Copolymers.html",
    "href": "docs/publications/entries/2018/Liu2018_Copolymers.html",
    "title": "Enhancing Molecular n-Type Doping of Donor–Acceptor Copolymers by Tailoring Side Chains",
    "section": "",
    "text": "Liu, J., Qiu, L., Alessandri, R., Qiu, X., Portale, G., Dong, J., … & Koster, L. J. A. (2018). Enhancing molecular n‐type doping of donor–acceptor copolymers by tailoring side chains. Advanced Materials, 30(7), 1704630."
  },
  {
    "objectID": "docs/publications/entries/2018/Liu2018_Copolymers.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Liu2018_Copolymers.html#citation-apa-7",
    "title": "Enhancing Molecular n-Type Doping of Donor–Acceptor Copolymers by Tailoring Side Chains",
    "section": "",
    "text": "Liu, J., Qiu, L., Alessandri, R., Qiu, X., Portale, G., Dong, J., … & Koster, L. J. A. (2018). Enhancing molecular n‐type doping of donor–acceptor copolymers by tailoring side chains. Advanced Materials, 30(7), 1704630."
  },
  {
    "objectID": "docs/publications/entries/2018/Liu2018_Copolymers.html#abstract",
    "href": "docs/publications/entries/2018/Liu2018_Copolymers.html#abstract",
    "title": "Enhancing Molecular n-Type Doping of Donor–Acceptor Copolymers by Tailoring Side Chains",
    "section": "Abstract",
    "text": "Abstract\nIn this contribution, for the first time, the molecular n-doping of a donor–acceptor (D–A) copolymer achieving 200-fold enhancement of electrical conductivity by rationally tailoring the side chains without changing its D–A backbone is successfully improved. Instead of the traditional alkyl side chains for poly{N,N′-bis(2-octyldodecyl)-naphthalene-1,4,5,8-bis(dicarboximide)-2,6-diyl-alt-5,5′-(2,2′-bithiophene)} (N2200), polar triethylene glycol type side chains is utilized and a high electrical conductivity of 0.17 S cm−1 after doping with (4-(1,3-dimethyl-2,3-dihydro-1H-benzoimidazol-2-yl)phenyl)dimethylamine is achieved, which is the highest reported value for n-type D–A copolymers. Coarse-grained molecular dynamics simulations indicate that the polar side chains can significantly reduce the clustering of dopant molecules and favor the dispersion of the dopant in the host matrix as compared to the traditional alkyl side chains. Accordingly, intimate contact between the host and dopant molecules in the NDI-based copolymer with polar side chains facilitates molecular doping with increased doping efficiency and electrical conductivity. For the first time, a heterogeneous thermoelectric transport model for such a material is proposed, that is the percolation of charge carriers from conducting ordered regions through poorly conductive disordered regions, which provides pointers for further increase in the themoelectric properties of n-type D–A copolymers."
  },
  {
    "objectID": "docs/publications/entries/2018/Su2018_Pex11p.html",
    "href": "docs/publications/entries/2018/Su2018_Pex11p.html",
    "title": "The N-terminal amphipathic helix of Pex11p self-interacts to induce membrane remodelling during peroxisome fission",
    "section": "",
    "text": "Su, J., Thomas, A. S., Grabietz, T., Landgraf, C., Volkmer, R., Marrink, S. J., … & Melo, M. N. (2018). The N-terminal amphipathic helix of Pex11p self-interacts to induce membrane remodelling during peroxisome fission. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1860(6), 1292-1300."
  },
  {
    "objectID": "docs/publications/entries/2018/Su2018_Pex11p.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Su2018_Pex11p.html#citation-apa-7",
    "title": "The N-terminal amphipathic helix of Pex11p self-interacts to induce membrane remodelling during peroxisome fission",
    "section": "",
    "text": "Su, J., Thomas, A. S., Grabietz, T., Landgraf, C., Volkmer, R., Marrink, S. J., … & Melo, M. N. (2018). The N-terminal amphipathic helix of Pex11p self-interacts to induce membrane remodelling during peroxisome fission. Biochimica et Biophysica Acta (BBA)-Biomembranes, 1860(6), 1292-1300."
  },
  {
    "objectID": "docs/publications/entries/2018/Su2018_Pex11p.html#abstract",
    "href": "docs/publications/entries/2018/Su2018_Pex11p.html#abstract",
    "title": "The N-terminal amphipathic helix of Pex11p self-interacts to induce membrane remodelling during peroxisome fission",
    "section": "Abstract",
    "text": "Abstract\nPex11p plays a crucial role in peroxisome fission. Previously, it was shown that a conserved N-terminal amphipathic helix in Pex11p, termed Pex11-Amph, was necessary for peroxisomal fission in vivo while in vitro studies revealed that this region alone was sufficient to bring about tubulation of liposomes with a lipid consistency resembling the peroxisomal membrane. However, molecular details of how Pex11-Amph remodels the peroxisomal membrane remain unknown. Here we have combined in silico, in vitro and in vivo approaches to gain insights into the molecular mechanisms underlying Pex11-Amph activity. Using molecular dynamics simulations, we observe that Pex11-Amph peptides form linear aggregates on a model membrane. Furthermore, we identify mutations that disrupted this aggregation in silico, which also abolished the peptide’s ability to remodel liposomes in vitro, establishing that Pex11p oligomerisation plays a direct role in membrane remodelling. In vivo studies revealed that these mutations resulted in a strong reduction in Pex11 protein levels, indicating that these residues are important for Pex11p function. Taken together, our data demonstrate the power of combining in silico techniques with experimental approaches to investigate the molecular mechanisms underlying Pex11p-dependent membrane remodelling."
  },
  {
    "objectID": "docs/publications/entries/2018/Corradi2018_LipidFingerprints.html",
    "href": "docs/publications/entries/2018/Corradi2018_LipidFingerprints.html",
    "title": "Lipid–Protein Interactions Are Unique Fingerprints for Membrane Proteins",
    "section": "",
    "text": "Corradi, V., Mendez-Villuendas, E., Ingólfsson, H. I., Gu, R. X., Siuda, I., Melo, M. N., … & Tieleman, D. P. (2018). Lipid–protein interactions are unique fingerprints for membrane proteins. ACS central science, 4(6), 709-717."
  },
  {
    "objectID": "docs/publications/entries/2018/Corradi2018_LipidFingerprints.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Corradi2018_LipidFingerprints.html#citation-apa-7",
    "title": "Lipid–Protein Interactions Are Unique Fingerprints for Membrane Proteins",
    "section": "",
    "text": "Corradi, V., Mendez-Villuendas, E., Ingólfsson, H. I., Gu, R. X., Siuda, I., Melo, M. N., … & Tieleman, D. P. (2018). Lipid–protein interactions are unique fingerprints for membrane proteins. ACS central science, 4(6), 709-717."
  },
  {
    "objectID": "docs/publications/entries/2018/Corradi2018_LipidFingerprints.html#abstract",
    "href": "docs/publications/entries/2018/Corradi2018_LipidFingerprints.html#abstract",
    "title": "Lipid–Protein Interactions Are Unique Fingerprints for Membrane Proteins",
    "section": "Abstract",
    "text": "Abstract\nCell membranes contain hundreds of different proteins and lipids in an asymmetric arrangement. Our current understanding of the detailed organization of cell membranes remains rather elusive, because of the challenge to study fluctuating nanoscale assemblies of lipids and proteins with the required spatiotemporal resolution. Here, we use molecular dynamics simulations to characterize the lipid environment of 10 different membrane proteins. To provide a realistic lipid environment, the proteins are embedded in a model plasma membrane, where more than 60 lipid species are represented, asymmetrically distributed between the leaflets. The simulations detail how each protein modulates its local lipid environment in a unique way, through enrichment or depletion of specific lipid components, resulting in thickness and curvature gradients. Our results provide a molecular glimpse of the complexity of lipid–protein interactions, with potentially far-reaching implications for our understanding of the overall organization of real cell membranes."
  },
  {
    "objectID": "docs/publications/entries/2018/Xue2018_Nanodisk.html",
    "href": "docs/publications/entries/2018/Xue2018_Nanodisk.html",
    "title": "Molecular Mechanism of Lipid Nanodisk Formation by Styrene-Maleic Acid Copolymers",
    "section": "",
    "text": "Xue, M., Cheng, L., Faustino, I., Guo, W., & Marrink, S. J. (2018). Molecular mechanism of lipid nanodisk formation by styrene-maleic acid copolymers. Biophysical journal, 115(3), 494-502."
  },
  {
    "objectID": "docs/publications/entries/2018/Xue2018_Nanodisk.html#citation-apa-7",
    "href": "docs/publications/entries/2018/Xue2018_Nanodisk.html#citation-apa-7",
    "title": "Molecular Mechanism of Lipid Nanodisk Formation by Styrene-Maleic Acid Copolymers",
    "section": "",
    "text": "Xue, M., Cheng, L., Faustino, I., Guo, W., & Marrink, S. J. (2018). Molecular mechanism of lipid nanodisk formation by styrene-maleic acid copolymers. Biophysical journal, 115(3), 494-502."
  },
  {
    "objectID": "docs/publications/entries/2018/Xue2018_Nanodisk.html#abstract",
    "href": "docs/publications/entries/2018/Xue2018_Nanodisk.html#abstract",
    "title": "Molecular Mechanism of Lipid Nanodisk Formation by Styrene-Maleic Acid Copolymers",
    "section": "Abstract",
    "text": "Abstract\nExperimental characterization of membrane proteins often requires solubilization. A recent approach is to use styrene-maleic acid (SMA) copolymers to isolate membrane proteins in nanometer-sized membrane disks, or so-called SMA lipid particles (SMALPs). The approach has the advantage of allowing direct extraction of proteins, keeping their native lipid environment. Despite the growing popularity of using SMALPs, the molecular mechanism behind the process remains poorly understood. Here, we unravel the molecular details of the nanodisk formation by using coarse-grained molecular dynamics simulations. We show how SMA copolymers bind to the lipid bilayer interface, driven by the hydrophobic effect. Due to the concerted action of multiple adsorbed copolymers, large membrane defects appear, including small, water-filled pores. The copolymers can stabilize the rim of these pores, leading to pore growth and membrane disruption. Although complete solubilization is not seen on the timescale of our simulations, self-assembly experiments show that small nanodisks are the thermodynamically preferred end state. Our findings shed light on the mechanism of SMALP formation and on their molecular structure. This can be an important step toward the design of optimized extraction tools for membrane protein research."
  },
  {
    "objectID": "docs/publications/entries/2025/Kjølbye2025_Nanoparticles.html",
    "href": "docs/publications/entries/2025/Kjølbye2025_Nanoparticles.html",
    "title": "Martini 3 building blocks for Lipid Nanoparticle design",
    "section": "",
    "text": "Kjølbye, L. R., Valério, M., Paloncýová, M., Borges-Araújo, L., Pestana-Nobles, R., Grünewald, F., … C.T. Souza, P. (2025). Martini 3 building blocks for Lipid Nanoparticle design. ChemRxiv. doi:10.26434/chemrxiv-2024-bf4n8-v2"
  },
  {
    "objectID": "docs/publications/entries/2025/Kjølbye2025_Nanoparticles.html#citation-apa-7",
    "href": "docs/publications/entries/2025/Kjølbye2025_Nanoparticles.html#citation-apa-7",
    "title": "Martini 3 building blocks for Lipid Nanoparticle design",
    "section": "",
    "text": "Kjølbye, L. R., Valério, M., Paloncýová, M., Borges-Araújo, L., Pestana-Nobles, R., Grünewald, F., … C.T. Souza, P. (2025). Martini 3 building blocks for Lipid Nanoparticle design. ChemRxiv. doi:10.26434/chemrxiv-2024-bf4n8-v2"
  },
  {
    "objectID": "docs/publications/entries/2025/Kjølbye2025_Nanoparticles.html#abstract",
    "href": "docs/publications/entries/2025/Kjølbye2025_Nanoparticles.html#abstract",
    "title": "Martini 3 building blocks for Lipid Nanoparticle design",
    "section": "Abstract",
    "text": "Abstract\nLipid nanoparticles (LNPs) represent a promising platform for advanced drug and gene delivery, yet optimizing these particles for specific cargos and cell targets poses a complex, multifaceted challenge. Furthermore, there is a pressing need for a more comprehensive understanding of the underlying technology. Experimental studies are costly and often provide low-resolution information. Molecular dynamics (MD) simulations allow us to study these particles at a higher resolution, enhancing our understanding. However, studying these systems at atomic resolutions is both challenging and computationally expensive, as well as time-consuming. Coarse-grained (CG) models, such as Martini 3, are positioned as promising tools for studying LNPs. To enable CG-MD studies of LNPs, accurate and validated models of their components are needed. Here, we present a substantial extension of the Martini 3 library of lipids, covering the most important LNP components, including over a hundred of ionizable lipid (IL) models, along with natural occurring sterol models and PEGylated lipid models. We furthermore present initial protocols for screening fusion efficacy across different lipid formulations and for constructing whole LNPs at CG resolution, enabling future studies of these nanoparticles."
  },
  {
    "objectID": "docs/publications/entries/2025/Bieker2025_Hexokinase1VDAC.html",
    "href": "docs/publications/entries/2025/Bieker2025_Hexokinase1VDAC.html",
    "title": "Hexokinase-I directly binds to a charged membrane-buried glutamate of mitochondrial VDAC1 and VDAC2",
    "section": "",
    "text": "Bieker, S., Timme, M., Woge, N., Hassan, D. G., Brown, C. M., Marrink, S. J., … & Holthuis, J. C. (2025). Hexokinase-I directly binds to a charged membrane-buried glutamate of mitochondrial VDAC1 and VDAC2. Communications biology, 8(1), 212."
  },
  {
    "objectID": "docs/publications/entries/2025/Bieker2025_Hexokinase1VDAC.html#citation-apa-7",
    "href": "docs/publications/entries/2025/Bieker2025_Hexokinase1VDAC.html#citation-apa-7",
    "title": "Hexokinase-I directly binds to a charged membrane-buried glutamate of mitochondrial VDAC1 and VDAC2",
    "section": "",
    "text": "Bieker, S., Timme, M., Woge, N., Hassan, D. G., Brown, C. M., Marrink, S. J., … & Holthuis, J. C. (2025). Hexokinase-I directly binds to a charged membrane-buried glutamate of mitochondrial VDAC1 and VDAC2. Communications biology, 8(1), 212."
  },
  {
    "objectID": "docs/publications/entries/2025/Bieker2025_Hexokinase1VDAC.html#abstract",
    "href": "docs/publications/entries/2025/Bieker2025_Hexokinase1VDAC.html#abstract",
    "title": "Hexokinase-I directly binds to a charged membrane-buried glutamate of mitochondrial VDAC1 and VDAC2",
    "section": "Abstract",
    "text": "Abstract\nBinding of hexokinase HKI to mitochondrial voltage-dependent anion channels (VDACs) has far-reaching physiological implications. However, the structural basis of this interaction is unclear. Combining computer simulations with experiments in cells, we here show that complex assembly relies on intimate contacts between the N-terminal α-helix of HKI and a charged membrane-buried glutamate on the outer wall of VDAC1 and VDAC2. Protonation of this residue blocks complex formation in silico while acidification of the cytosol causes a reversable release of HKI from mitochondria. Membrane insertion of HKI occurs adjacent to the bilayer-facing glutamate where a pair of polar channel residues mediates a marked thinning of the cytosolic leaflet. Disrupting the membrane thinning capacity of VDAC1 dramatically impairs its ability to bind HKI in silico and in cells. Our data reveal key topological and mechanistic insights into HKI-VDAC complex assembly that may benefit the development of therapeutics to counter pathogenic imbalances in this process."
  },
  {
    "objectID": "docs/publications/entries/2021/Borges-Araújo2021_M3LipidHeadgroups.html",
    "href": "docs/publications/entries/2021/Borges-Araújo2021_M3LipidHeadgroups.html",
    "title": "Improved Parameterization of Phosphatidylinositide Lipid Headgroups for the Martini 3 Coarse-Grain Force Field",
    "section": "",
    "text": "Borges-Araújo, L., Souza, P. C., Fernandes, F., & Melo, M. N. (2021). Improved parameterization of phosphatidylinositide lipid headgroups for the Martini 3 coarse-grain force field. Journal of Chemical Theory and Computation, 18(1), 357-373."
  },
  {
    "objectID": "docs/publications/entries/2021/Borges-Araújo2021_M3LipidHeadgroups.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Borges-Araújo2021_M3LipidHeadgroups.html#citation-apa-7",
    "title": "Improved Parameterization of Phosphatidylinositide Lipid Headgroups for the Martini 3 Coarse-Grain Force Field",
    "section": "",
    "text": "Borges-Araújo, L., Souza, P. C., Fernandes, F., & Melo, M. N. (2021). Improved parameterization of phosphatidylinositide lipid headgroups for the Martini 3 coarse-grain force field. Journal of Chemical Theory and Computation, 18(1), 357-373."
  },
  {
    "objectID": "docs/publications/entries/2021/Borges-Araújo2021_M3LipidHeadgroups.html#abstract",
    "href": "docs/publications/entries/2021/Borges-Araújo2021_M3LipidHeadgroups.html#abstract",
    "title": "Improved Parameterization of Phosphatidylinositide Lipid Headgroups for the Martini 3 Coarse-Grain Force Field",
    "section": "Abstract",
    "text": "Abstract\nPhosphoinositides are a family of membrane phospholipids that play crucial roles in membrane regulatory events. As such, these lipids are often a key part of molecular dynamics simulation studies of biological membranes, in particular of those employing coarse-grain models because of the potential long times and sizes of the involved membrane processes. Version 3 of the widely used Martini coarse-grain force field has been recently published, greatly refining many aspects of biomolecular interactions. In order to properly use it for lipid membrane simulations with phosphoinositides, we put forth the Martini 3-specific parameterization of inositol, phosphatidylinositol, and seven physiologically relevant phosphorylated derivatives of phosphatidylinositol. Compared to parameterizations for earlier Martini versions, focus was put on a more accurate reproduction of the behavior seen in both atomistic simulations and experimental studies, including the signaling-relevant phosphoinositide interaction with divalent cations. The models that we develop improve upon the conformational dynamics of phosphoinositides in the Martini force field and provide stable topologies at typical Martini time steps. They are able to reproduce experimentally known protein-binding poses as well as phosphoinositide aggregation tendencies. The latter was tested both in the presence and absence of calcium and included correct behavior of PI(4,5)P2 calcium-induced clusters, which can be of relevance for regulation."
  },
  {
    "objectID": "docs/publications/entries/2021/Zhang2021_Nanopore.html",
    "href": "docs/publications/entries/2021/Zhang2021_Nanopore.html",
    "title": "Bottom-up fabrication of a proteasome–nanopore that unravels and processes single proteins",
    "section": "",
    "text": "Zhang, S., Huang, G., Versloot, R. C. A., Bruininks, B. M. H., de Souza, P. C. T., Marrink, S. J., & Maglia, G. (2021). Bottom-up fabrication of a proteasome–nanopore that unravels and processes single proteins. Nature chemistry, 13(12), 1192-1199."
  },
  {
    "objectID": "docs/publications/entries/2021/Zhang2021_Nanopore.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Zhang2021_Nanopore.html#citation-apa-7",
    "title": "Bottom-up fabrication of a proteasome–nanopore that unravels and processes single proteins",
    "section": "",
    "text": "Zhang, S., Huang, G., Versloot, R. C. A., Bruininks, B. M. H., de Souza, P. C. T., Marrink, S. J., & Maglia, G. (2021). Bottom-up fabrication of a proteasome–nanopore that unravels and processes single proteins. Nature chemistry, 13(12), 1192-1199."
  },
  {
    "objectID": "docs/publications/entries/2021/Zhang2021_Nanopore.html#abstract",
    "href": "docs/publications/entries/2021/Zhang2021_Nanopore.html#abstract",
    "title": "Bottom-up fabrication of a proteasome–nanopore that unravels and processes single proteins",
    "section": "Abstract",
    "text": "Abstract\nThe precise assembly and engineering of molecular machines capable of handling biomolecules play crucial roles in most single-molecule methods. In this work we use components from all three domains of life to fabricate an integrated multiprotein complex that controls the unfolding and threading of individual proteins across a nanopore. This 900 kDa multicomponent device was made in two steps. First, we designed a stable and low-noise β-barrel nanopore sensor by linking the transmembrane region of bacterial protective antigen to a mammalian proteasome activator. An archaeal 20S proteasome was then built into the artificial nanopore to control the unfolding and linearized transport of proteins across the nanopore. This multicomponent molecular machine opens the door to two approaches in single-molecule protein analysis, in which selected substrate proteins are unfolded, fed to into the proteasomal chamber and then addressed either as fragmented peptides or intact polypeptides."
  },
  {
    "objectID": "docs/publications/entries/2021/Bruininks2021_Voxel.html",
    "href": "docs/publications/entries/2021/Bruininks2021_Voxel.html",
    "title": "Sequential Voxel-Based Leaflet Segmentation of Complex Lipid Morphologies",
    "section": "",
    "text": "Bruininks, B. M., Thie, A. S., Souza, P. C., Wassenaar, T. A., Faraji, S., & Marrink, S. J. (2021). Sequential voxel-based leaflet segmentation of complex lipid morphologies. Journal of Chemical Theory and Computation, 17(12), 7873-7885."
  },
  {
    "objectID": "docs/publications/entries/2021/Bruininks2021_Voxel.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Bruininks2021_Voxel.html#citation-apa-7",
    "title": "Sequential Voxel-Based Leaflet Segmentation of Complex Lipid Morphologies",
    "section": "",
    "text": "Bruininks, B. M., Thie, A. S., Souza, P. C., Wassenaar, T. A., Faraji, S., & Marrink, S. J. (2021). Sequential voxel-based leaflet segmentation of complex lipid morphologies. Journal of Chemical Theory and Computation, 17(12), 7873-7885."
  },
  {
    "objectID": "docs/publications/entries/2021/Bruininks2021_Voxel.html#abstract",
    "href": "docs/publications/entries/2021/Bruininks2021_Voxel.html#abstract",
    "title": "Sequential Voxel-Based Leaflet Segmentation of Complex Lipid Morphologies",
    "section": "Abstract",
    "text": "Abstract\nAs molecular dynamics simulations increase in complexity, new analysis tools are necessary to facilitate interpreting the results. Lipids, for instance, are known to form many complicated morphologies, because of their amphipathic nature, becoming more intricate as the particle count increases. A few lipids might form a micelle, where aggregation of tens of thousands could lead to vesicle formation. Millions of lipids comprise a cell and its organelle membranes, and are involved in processes such as neurotransmission and transfection. To study such phenomena, it is useful to have analysis tools that understand what is meant by emerging entities such as micelles and vesicles. Studying such systems at the particle level only becomes extremely tedious, counterintuitive, and computationally expensive. To address this issue, we developed a method to track all the individual lipid leaflets, allowing for easy and quick detection of topological changes at the mesoscale. By using a voxel-based approach and focusing on locality, we forego costly geometrical operations without losing important details and chronologically identify the lipid segments using the Jaccard index. Thus, we achieve a consistent sequential segmentation on a wide variety of (lipid) systems, including monolayers, bilayers, vesicles, inverted hexagonal phases, up to the membranes of a full mitochondrion. It also discriminates between adhesion and fusion of leaflets. We show that our method produces consistent results without the need for prefitting parameters, and segmentation of millions of particles can be achieved on a desktop machine."
  },
  {
    "objectID": "docs/publications/entries/2021/Vainikka2021_EutecticSolvents.html",
    "href": "docs/publications/entries/2021/Vainikka2021_EutecticSolvents.html",
    "title": "Martini 3 Coarse-Grained Model for Type III Deep Eutectic Solvents: Thermodynamic, Structural, and Extraction Properties",
    "section": "",
    "text": "Vainikka, P., Thallmair, S., Souza, P. C. T., & Marrink, S. J. (2021). Martini 3 coarse-grained model for type III deep eutectic solvents: Thermodynamic, structural, and extraction properties. ACS Sustainable Chemistry & Engineering, 9(51), 17338-17350."
  },
  {
    "objectID": "docs/publications/entries/2021/Vainikka2021_EutecticSolvents.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Vainikka2021_EutecticSolvents.html#citation-apa-7",
    "title": "Martini 3 Coarse-Grained Model for Type III Deep Eutectic Solvents: Thermodynamic, Structural, and Extraction Properties",
    "section": "",
    "text": "Vainikka, P., Thallmair, S., Souza, P. C. T., & Marrink, S. J. (2021). Martini 3 coarse-grained model for type III deep eutectic solvents: Thermodynamic, structural, and extraction properties. ACS Sustainable Chemistry & Engineering, 9(51), 17338-17350."
  },
  {
    "objectID": "docs/publications/entries/2021/Vainikka2021_EutecticSolvents.html#abstract",
    "href": "docs/publications/entries/2021/Vainikka2021_EutecticSolvents.html#abstract",
    "title": "Martini 3 Coarse-Grained Model for Type III Deep Eutectic Solvents: Thermodynamic, Structural, and Extraction Properties",
    "section": "Abstract",
    "text": "Abstract\nDeep eutectic solvents (DESs) are a more environmentally friendly, cost-effective, and recyclable alternative for ionic liquids. Since the number of possible deep eutectic solvents is very large, there are needs for effective methods to predict the physicochemical nature of possible new deep eutectic solvents that are not met by the currently available models. Here, we have built coarse-grained models for a few well-known and actively studied deep eutectic solvents using the recently published Martini 3 force field. Molecular dynamics simulations demonstrate that our models predict the properties of these particular DESs with an acceptable accuracy, and they are capable of capturing known liquid–liquid extraction processes as well as morphological shape changes of surfactant aggregates. Our coarse-grained approach is novel in the study of DESs, opening new possibilities for rapid screening of new DESs and their properties."
  },
  {
    "objectID": "docs/publications/entries/2021/Tsanai2021_Coacervate.html",
    "href": "docs/publications/entries/2021/Tsanai2021_Coacervate.html",
    "title": "Coacervate formation studied by explicit solvent coarse-grain molecular dynamics with the Martini model",
    "section": "",
    "text": "Tsanai, M., Frederix, P. W., Schroer, C. F., Souza, P. C., & Marrink, S. J. (2021). Coacervate formation studied by explicit solvent coarse-grain molecular dynamics with the Martini model. Chemical Science, 12(24), 8521-8530."
  },
  {
    "objectID": "docs/publications/entries/2021/Tsanai2021_Coacervate.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Tsanai2021_Coacervate.html#citation-apa-7",
    "title": "Coacervate formation studied by explicit solvent coarse-grain molecular dynamics with the Martini model",
    "section": "",
    "text": "Tsanai, M., Frederix, P. W., Schroer, C. F., Souza, P. C., & Marrink, S. J. (2021). Coacervate formation studied by explicit solvent coarse-grain molecular dynamics with the Martini model. Chemical Science, 12(24), 8521-8530."
  },
  {
    "objectID": "docs/publications/entries/2021/Tsanai2021_Coacervate.html#abstract",
    "href": "docs/publications/entries/2021/Tsanai2021_Coacervate.html#abstract",
    "title": "Coacervate formation studied by explicit solvent coarse-grain molecular dynamics with the Martini model",
    "section": "Abstract",
    "text": "Abstract\nComplex coacervates are liquid–liquid phase separated systems, typically containing oppositely charged polyelectrolytes. They are widely studied for their functional properties as well as their potential involvement in cellular compartmentalization as biomolecular condensates. Diffusion and partitioning of solutes into a coacervate phase are important to address because their highly dynamic nature is one of their most important functional characteristics in real-world systems, but are difficult to study experimentally or even theoretically without an explicit representation of every molecule in the system. Here, we present an explicit-solvent, molecular dynamics coarse-grain model of complex coacervates, based on the Martini 3.0 force field. We demonstrate the accuracy of the model by reproducing the salt dependent coacervation of poly-lysine and poly-glutamate systems, and show the potential of the model by simulating the partitioning of ions and small nucleotides between the condensate and surrounding solvent phase. Our model paves the way for simulating coacervates and biomolecular condensates in a wide range of conditions, with near-atomic resolution."
  },
  {
    "objectID": "docs/publications/entries/2021/Nemchinova2021_CorA.html",
    "href": "docs/publications/entries/2021/Nemchinova2021_CorA.html",
    "title": "Asymmetric CorA gating mechanism as observed by molecular dynamics simulations",
    "section": "",
    "text": "Nemchinova, M., Melcr, J., Wassenaar, T. A., Marrink, S. J., & Guskov, A. (2021). Asymmetric CorA gating mechanism as observed by molecular dynamics simulations. Journal of chemical information and modeling, 61(5), 2407-2417."
  },
  {
    "objectID": "docs/publications/entries/2021/Nemchinova2021_CorA.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Nemchinova2021_CorA.html#citation-apa-7",
    "title": "Asymmetric CorA gating mechanism as observed by molecular dynamics simulations",
    "section": "",
    "text": "Nemchinova, M., Melcr, J., Wassenaar, T. A., Marrink, S. J., & Guskov, A. (2021). Asymmetric CorA gating mechanism as observed by molecular dynamics simulations. Journal of chemical information and modeling, 61(5), 2407-2417."
  },
  {
    "objectID": "docs/publications/entries/2021/Nemchinova2021_CorA.html#abstract",
    "href": "docs/publications/entries/2021/Nemchinova2021_CorA.html#abstract",
    "title": "Asymmetric CorA gating mechanism as observed by molecular dynamics simulations",
    "section": "Abstract",
    "text": "Abstract\nThe CorA family of proteins plays a housekeeping role in the homeostasis of divalent metal ions in many bacteria and archaea as well as in mitochondria of eukaryotes, rendering it an important target to study the mechanisms of divalent transport and regulation across different life domains. Despite numerous studies, the mechanistic details of the channel gating and the transport of the metal ions are still not entirely understood. Here, we use all-atom and coarse-grained molecular dynamics simulations combined with in vitro experiments to investigate the influence of divalent cations on the function of CorA. Simulations reveal pronounced asymmetric movements of monomers that enable the rotation of the α7 helix and the cytoplasmic subdomain with the subsequent formation of new interactions and the opening of the channel. These computational results are functionally validated using site-directed mutagenesis of the intracellular cytoplasmic domain residues and biochemical assays. The obtained results infer a complex network of interactions altering the structure of CorA to allow gating. Furthermore, we attempt to reconcile the existing gating hypotheses for CorA to conclude the mechanism of transport of divalent cations via these proteins."
  },
  {
    "objectID": "docs/publications/entries/2021/Souza2021_Martini3.html",
    "href": "docs/publications/entries/2021/Souza2021_Martini3.html",
    "title": "Martini 3: a general purpose force field for coarse-grained molecular dynamics",
    "section": "",
    "text": "Souza, P. C., Alessandri, R., Barnoud, J., Thallmair, S., Faustino, I., Grünewald, F., … & Marrink, S. J. (2021). Martini 3: a general purpose force field for coarse-grained molecular dynamics. Nature methods, 18(4), 382-388."
  },
  {
    "objectID": "docs/publications/entries/2021/Souza2021_Martini3.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Souza2021_Martini3.html#citation-apa-7",
    "title": "Martini 3: a general purpose force field for coarse-grained molecular dynamics",
    "section": "",
    "text": "Souza, P. C., Alessandri, R., Barnoud, J., Thallmair, S., Faustino, I., Grünewald, F., … & Marrink, S. J. (2021). Martini 3: a general purpose force field for coarse-grained molecular dynamics. Nature methods, 18(4), 382-388."
  },
  {
    "objectID": "docs/publications/entries/2021/Souza2021_Martini3.html#abstract",
    "href": "docs/publications/entries/2021/Souza2021_Martini3.html#abstract",
    "title": "Martini 3: a general purpose force field for coarse-grained molecular dynamics",
    "section": "Abstract",
    "text": "Abstract\nThe coarse-grained Martini force field is widely used in biomolecular simulations. Here we present the refined model, Martini 3 (http://cgmartini.nl), with an improved interaction balance, new bead types and expanded ability to include specific interactions representing, for example, hydrogen bonding and electronic polarizability. The updated model allows more accurate predictions of molecular packing and interactions in general, which is exemplified with a vast and diverse set of applications, ranging from oil/water partitioning and miscibility data to complex molecular systems, involving protein–protein and protein–lipid interactions and material science applications as ionic liquids and aedamers."
  },
  {
    "objectID": "docs/publications/entries/2021/Thallmair2021_TempreatureGradients.html",
    "href": "docs/publications/entries/2021/Thallmair2021_TempreatureGradients.html",
    "title": "Nonconverged Constraints Cause Artificial Temperature Gradients in Lipid Bilayer Simulations",
    "section": "",
    "text": "Thallmair, S., Javanainen, M., Fábián, B., Martinez-Seara, H., & Marrink, S. J. (2021). Nonconverged constraints cause artificial temperature gradients in lipid bilayer simulations. The Journal of Physical Chemistry B, 125(33), 9537-9546."
  },
  {
    "objectID": "docs/publications/entries/2021/Thallmair2021_TempreatureGradients.html#citation-apa-7",
    "href": "docs/publications/entries/2021/Thallmair2021_TempreatureGradients.html#citation-apa-7",
    "title": "Nonconverged Constraints Cause Artificial Temperature Gradients in Lipid Bilayer Simulations",
    "section": "",
    "text": "Thallmair, S., Javanainen, M., Fábián, B., Martinez-Seara, H., & Marrink, S. J. (2021). Nonconverged constraints cause artificial temperature gradients in lipid bilayer simulations. The Journal of Physical Chemistry B, 125(33), 9537-9546."
  },
  {
    "objectID": "docs/publications/entries/2021/Thallmair2021_TempreatureGradients.html#abstract",
    "href": "docs/publications/entries/2021/Thallmair2021_TempreatureGradients.html#abstract",
    "title": "Nonconverged Constraints Cause Artificial Temperature Gradients in Lipid Bilayer Simulations",
    "section": "Abstract",
    "text": "Abstract\nMolecular dynamics (MD) simulations have become an indispensable tool to investigate phase separation in model membrane systems. In particular, simulations based on coarse-grained (CG) models have found widespread use due to their increased computational efficiency, allowing for simulations of multicomponent lipid bilayers undergoing phase separation into liquid-ordered and liquid-disordered domains. Here, we show that a significant temperature difference between molecule types can artificially arise in CG MD membrane simulations with the standard Martini simulation parameters in GROMACS. In particular, the linear constraint solver (LINCS) algorithm does not converge with its default settings, resulting in serious temperature differences between molecules in a time step-dependent manner. We demonstrate that the underlying reason for this behavior is the presence of highly constrained moieties, such as cholesterol. Their presence can critically impact numerous structural and dynamic membrane properties obtained from such simulations. Furthermore, any preference of these molecules toward a certain membrane phase can lead to spatial temperature gradients, which can amplify the degree of phase separation or even induce it in compositions that would otherwise mix well. We systematically investigated the effect of the integration time step and LINCS settings on membrane properties. Our data show that for cholesterol-containing membranes, a time step of 20 fs should be combined with at least lincs_iter = 2 and lincs_order = 12, while using a time step of 30 fs requires at least lincs_iter = 3 and lincs_order = 12 to bring the temperature differences to a level where they do not perturb central membrane properties. Moreover, we show that in cases where stricter LINCS settings are computationally too demanding, coupling the lipids in multiple groups to the temperature bath offers a practical workaround to the problem, although the validity of this approach should be further verified. Finally, we show that similar temperature gradients can also emerge in atomistic simulations using the CHARMM force field in combination with settings that allow for a 5 fs integration step."
  },
  {
    "objectID": "docs/publications/entries/2017/Qiu2017_Thermoelectrics.html",
    "href": "docs/publications/entries/2017/Qiu2017_Thermoelectrics.html",
    "title": "Enhancing doping efficiency by improving host-dopant miscibility for fullerene-based n-type thermoelectrics",
    "section": "",
    "text": "Qiu, L., Liu, J., Alessandri, R., Qiu, X., Koopmans, M., Havenith, R. W., … & Hummelen, J. C. (2017). Enhancing doping efficiency by improving host-dopant miscibility for fullerene-based n-type thermoelectrics. Journal of materials chemistry A, 5(40), 21234-21241."
  },
  {
    "objectID": "docs/publications/entries/2017/Qiu2017_Thermoelectrics.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Qiu2017_Thermoelectrics.html#citation-apa-7",
    "title": "Enhancing doping efficiency by improving host-dopant miscibility for fullerene-based n-type thermoelectrics",
    "section": "",
    "text": "Qiu, L., Liu, J., Alessandri, R., Qiu, X., Koopmans, M., Havenith, R. W., … & Hummelen, J. C. (2017). Enhancing doping efficiency by improving host-dopant miscibility for fullerene-based n-type thermoelectrics. Journal of materials chemistry A, 5(40), 21234-21241."
  },
  {
    "objectID": "docs/publications/entries/2017/Qiu2017_Thermoelectrics.html#abstract",
    "href": "docs/publications/entries/2017/Qiu2017_Thermoelectrics.html#abstract",
    "title": "Enhancing doping efficiency by improving host-dopant miscibility for fullerene-based n-type thermoelectrics",
    "section": "Abstract",
    "text": "Abstract\nThis paper describes a promising n-type doping system with high performance for thermoelectric applications. By introducing the polar triethylene glycol (TEG) side chain onto both fullerene host (PTEG-1) and dopant (TEG-DMBI) materials, the TEG-DMBI doped PTEG-1 films obtained through solution processing provide a better miscibility compared with films doped with commercially available N-DMBI (bearing a dimethylamino group instead of TEG), as determined by phase imaging AFM (atomic force microscopy) measurements and coarse-grain molecular dynamics simulations, leading to high doping efficiency up to 18% at 20 mol% doping concentration and thus high carrier density and mobility, which are critical to the electrical conductivity. Therefore a record power factor of 19.1 μW m−1 K−2 is obtained with an electrical conductivity of 1.81 S cm−1, one of the highest values reported for solution processable fullerene derivatives as n-type organic materials for thermoelectric applications to date."
  },
  {
    "objectID": "docs/publications/entries/2017/Kondela2017_AlcoholLipids.html",
    "href": "docs/publications/entries/2017/Kondela2017_AlcoholLipids.html",
    "title": "Alcohol Interactions with Lipid Bilayers",
    "section": "",
    "text": "Kondela, T., Gallová, J., Hauß, T., Barnoud, J., Marrink, S. J., & Kučerka, N. (2017). Alcohol interactions with lipid bilayers. Molecules, 22(12), 2078."
  },
  {
    "objectID": "docs/publications/entries/2017/Kondela2017_AlcoholLipids.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Kondela2017_AlcoholLipids.html#citation-apa-7",
    "title": "Alcohol Interactions with Lipid Bilayers",
    "section": "",
    "text": "Kondela, T., Gallová, J., Hauß, T., Barnoud, J., Marrink, S. J., & Kučerka, N. (2017). Alcohol interactions with lipid bilayers. Molecules, 22(12), 2078."
  },
  {
    "objectID": "docs/publications/entries/2017/Kondela2017_AlcoholLipids.html#abstract",
    "href": "docs/publications/entries/2017/Kondela2017_AlcoholLipids.html#abstract",
    "title": "Alcohol Interactions with Lipid Bilayers",
    "section": "Abstract",
    "text": "Abstract\nWe investigate the structural changes to lipid membrane that ensue from the addition of aliphatic alcohols with various alkyl tail lengths. Small angle neutron diffraction from flat lipid bilayers that are hydrated through water vapor has been employed to eliminate possible artefacts of the membrane curvature and the alcohol’s membrane-water partitioning. We have observed clear changes to membrane structure in both transversal and lateral directions. Most importantly, our results suggest the alteration of the membrane-water interface. The water encroachment has shifted in the way that alcohol loaded bilayers absorbed more water molecules when compared to the neat lipid bilayers. The experimental results have been corroborated by molecular dynamics simulations to reveal further details. Namely, the order parameter profiles have been fruitful in correlating the mechanical model of structural changes to the effect of anesthesia."
  },
  {
    "objectID": "docs/publications/entries/2017/Gu2017_Ganglioside.html",
    "href": "docs/publications/entries/2017/Gu2017_Ganglioside.html",
    "title": "Ganglioside-Lipid and Ganglioside-Protein Interactions Revealed by Coarse-Grained and Atomistic Molecular Dynamics Simulations",
    "section": "",
    "text": "Gu, R. X., Ingólfsson, H. I., De Vries, A. H., Marrink, S. J., & Tieleman, D. P. (2017). Ganglioside-lipid and ganglioside-protein interactions revealed by coarse-grained and atomistic molecular dynamics simulations. The Journal of Physical Chemistry B, 121(15), 3262-3275."
  },
  {
    "objectID": "docs/publications/entries/2017/Gu2017_Ganglioside.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Gu2017_Ganglioside.html#citation-apa-7",
    "title": "Ganglioside-Lipid and Ganglioside-Protein Interactions Revealed by Coarse-Grained and Atomistic Molecular Dynamics Simulations",
    "section": "",
    "text": "Gu, R. X., Ingólfsson, H. I., De Vries, A. H., Marrink, S. J., & Tieleman, D. P. (2017). Ganglioside-lipid and ganglioside-protein interactions revealed by coarse-grained and atomistic molecular dynamics simulations. The Journal of Physical Chemistry B, 121(15), 3262-3275."
  },
  {
    "objectID": "docs/publications/entries/2017/Gu2017_Ganglioside.html#abstract",
    "href": "docs/publications/entries/2017/Gu2017_Ganglioside.html#abstract",
    "title": "Ganglioside-Lipid and Ganglioside-Protein Interactions Revealed by Coarse-Grained and Atomistic Molecular Dynamics Simulations",
    "section": "Abstract",
    "text": "Abstract\nGangliosides are glycolipids in which an oligosaccharide headgroup containing one or more sialic acids is connected to a ceramide. Gangliosides reside in the outer leaflet of the plasma membrane and play a crucial role in various physiological processes such as cell signal transduction and neuronal differentiation by modulating structures and functions of membrane proteins. Because the detailed behavior of gangliosides and protein-ganglioside interactions are poorly known, we investigated the interactions between the gangliosides GM1 and GM3 and the proteins aquaporin (AQP1) and WALP23 using equilibrium molecular dynamics simulations and potential of mean force calculations at both coarse-grained (CG) and atomistic levels. In atomistic simulations, on the basis of the GROMOS force field, ganglioside aggregation appears to be a result of the balance between hydrogen bond interactions and steric hindrance of the headgroups. GM3 clusters are slightly larger and more ordered than GM1 clusters due to the smaller headgroup of GM3. The different structures of GM1 and GM3 clusters from atomistic simulations are not observed at the CG level based on the Martini model, implying a difference in driving forces for ganglioside interactions in atomistic and CG simulations. For protein-ganglioside interactions, in the atomistic simulations, GM1 lipids bind to specific sites on the AQP1 surface, whereas they are depleted from WALP23. In the CG simulations, the ganglioside binding sites on the AQP1 surface are similar, but ganglioside aggregation and protein-ganglioside interactions are more prevalent than in the atomistic simulations. Using the polarizable Martini water model, results were closer to the atomistic simulations. Although experimental data for validation is lacking, we proposed modified Martini parameters for gangliosides to more closely mimic the sizes and structures of ganglioside clusters observed at the atomistic level."
  },
  {
    "objectID": "docs/publications/entries/2017/Ingólfsson2017_Neuronal.html",
    "href": "docs/publications/entries/2017/Ingólfsson2017_Neuronal.html",
    "title": "Computational Lipidomics of the Neuronal Plasma Membrane",
    "section": "",
    "text": "Ingólfsson, H. I., Carpenter, T. S., Bhatia, H., Bremer, P. T., Marrink, S. J., & Lightstone, F. C. (2017). Computational lipidomics of the neuronal plasma membrane. Biophysical journal, 113(10), 2271-2280."
  },
  {
    "objectID": "docs/publications/entries/2017/Ingólfsson2017_Neuronal.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Ingólfsson2017_Neuronal.html#citation-apa-7",
    "title": "Computational Lipidomics of the Neuronal Plasma Membrane",
    "section": "",
    "text": "Ingólfsson, H. I., Carpenter, T. S., Bhatia, H., Bremer, P. T., Marrink, S. J., & Lightstone, F. C. (2017). Computational lipidomics of the neuronal plasma membrane. Biophysical journal, 113(10), 2271-2280."
  },
  {
    "objectID": "docs/publications/entries/2017/Ingólfsson2017_Neuronal.html#abstract",
    "href": "docs/publications/entries/2017/Ingólfsson2017_Neuronal.html#abstract",
    "title": "Computational Lipidomics of the Neuronal Plasma Membrane",
    "section": "Abstract",
    "text": "Abstract\nMembrane lipid composition varies greatly within submembrane compartments, different organelle membranes, and also between cells of different cell stage, cell and tissue types, and organisms. Environmental factors (such as diet) also influence membrane composition. The membrane lipid composition is tightly regulated by the cell, maintaining a homeostasis that, if disrupted, can impair cell function and lead to disease. This is especially pronounced in the brain, where defects in lipid regulation are linked to various neurological diseases. The tightly regulated diversity raises questions on how complex changes in composition affect overall bilayer properties, dynamics, and lipid organization of cellular membranes. Here, we utilize recent advances in computational power and molecular dynamics force fields to develop and test a realistically complex human brain plasma membrane (PM) lipid model and extend previous work on an idealized, “average” mammalian PM. The PMs showed both striking similarities, despite significantly different lipid composition, and interesting differences. The main differences in composition (higher cholesterol concentration and increased tail unsaturation in brain PM) appear to have opposite, yet complementary, influences on many bilayer properties. Both mixtures exhibit a range of dynamic lipid lateral inhomogeneities (“domains”). The domains can be small and transient or larger and more persistent and can correlate between the leaflets depending on lipid mixture, Brain or Average, as well as on the extent of bilayer undulations."
  },
  {
    "objectID": "docs/publications/entries/2017/Faustino2017_cgHeliParm.html",
    "href": "docs/publications/entries/2017/Faustino2017_cgHeliParm.html",
    "title": "cgHeliParm: analysis of dsDNA helical parameters for coarse-grained MARTINI molecular dynamics simulations",
    "section": "",
    "text": "Faustino, I., & Marrink, S. J. (2017). cgHeliParm: analysis of dsDNA helical parameters for coarse-grained MARTINI molecular dynamics simulations. Bioinformatics, 33(23), 3813-3815."
  },
  {
    "objectID": "docs/publications/entries/2017/Faustino2017_cgHeliParm.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Faustino2017_cgHeliParm.html#citation-apa-7",
    "title": "cgHeliParm: analysis of dsDNA helical parameters for coarse-grained MARTINI molecular dynamics simulations",
    "section": "",
    "text": "Faustino, I., & Marrink, S. J. (2017). cgHeliParm: analysis of dsDNA helical parameters for coarse-grained MARTINI molecular dynamics simulations. Bioinformatics, 33(23), 3813-3815."
  },
  {
    "objectID": "docs/publications/entries/2017/Faustino2017_cgHeliParm.html#abstract",
    "href": "docs/publications/entries/2017/Faustino2017_cgHeliParm.html#abstract",
    "title": "cgHeliParm: analysis of dsDNA helical parameters for coarse-grained MARTINI molecular dynamics simulations",
    "section": "Abstract",
    "text": "Abstract\nWe introduce cgHeliParm, a python program that provides the conformational analysis of Martini-based coarse-grained double strand DNA molecules. The software calculates the helical parameters such as base, base pair and base pair step parameters. cgHeliParm can be used for the analysis of coarse grain Martini molecular dynamics trajectories without transformation into atomistic models."
  },
  {
    "objectID": "docs/publications/entries/2017/Liu2017_MacromolecularCrowding.html",
    "href": "docs/publications/entries/2017/Liu2017_MacromolecularCrowding.html",
    "title": "Design and Properties of Genetically Encoded Probes for Sensing Macromolecular Crowding",
    "section": "",
    "text": "Liu, B., Åberg, C., van Eerden, F. J., Marrink, S. J., Poolman, B., & Boersma, A. J. (2017). Design and properties of genetically encoded probes for sensing macromolecular crowding. Biophysical journal, 112(9), 1929-1939."
  },
  {
    "objectID": "docs/publications/entries/2017/Liu2017_MacromolecularCrowding.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Liu2017_MacromolecularCrowding.html#citation-apa-7",
    "title": "Design and Properties of Genetically Encoded Probes for Sensing Macromolecular Crowding",
    "section": "",
    "text": "Liu, B., Åberg, C., van Eerden, F. J., Marrink, S. J., Poolman, B., & Boersma, A. J. (2017). Design and properties of genetically encoded probes for sensing macromolecular crowding. Biophysical journal, 112(9), 1929-1939."
  },
  {
    "objectID": "docs/publications/entries/2017/Liu2017_MacromolecularCrowding.html#abstract",
    "href": "docs/publications/entries/2017/Liu2017_MacromolecularCrowding.html#abstract",
    "title": "Design and Properties of Genetically Encoded Probes for Sensing Macromolecular Crowding",
    "section": "Abstract",
    "text": "Abstract\nCells are highly crowded with proteins and polynucleotides. Any reaction that depends on the available volume can be affected by macromolecular crowding, but the effects of crowding in cells are complex and difficult to track. Here, we present a set of Förster resonance energy transfer (FRET)-based crowding-sensitive probes and investigate the role of the linker design. We investigate the sensors in vitro and in vivo and by molecular dynamics simulations. We find that in vitro all the probes can be compressed by crowding, with a magnitude that increases with the probe size, the crowder concentration, and the crowder size. We capture the role of the linker in a heuristic scaling model, and we find that compression is a function of size of the probe and volume fraction of the crowder. The FRET changes observed in Escherichia coli are more complicated, where FRET-increases and scaling behavior are observed solely with probes that contain the helices in the linker. The probe with the highest sensitivity to crowding in vivo yields the same macromolecular volume fractions as previously obtained from cell dry weight. The collection of new probes provides more detailed readouts on the macromolecular crowding than a single sensor."
  },
  {
    "objectID": "docs/publications/entries/2017/Maingi2017_Nanopore.html",
    "href": "docs/publications/entries/2017/Maingi2017_Nanopore.html",
    "title": "Stability and dynamics of membrane-spanning DNA nanopores",
    "section": "",
    "text": "Maingi, V., Burns, J. R., Uusitalo, J. J., Howorka, S., Marrink, S. J., & Sansom, M. S. (2017). Stability and dynamics of membrane-spanning DNA nanopores. Nature Communications, 8(1), 14784."
  },
  {
    "objectID": "docs/publications/entries/2017/Maingi2017_Nanopore.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Maingi2017_Nanopore.html#citation-apa-7",
    "title": "Stability and dynamics of membrane-spanning DNA nanopores",
    "section": "",
    "text": "Maingi, V., Burns, J. R., Uusitalo, J. J., Howorka, S., Marrink, S. J., & Sansom, M. S. (2017). Stability and dynamics of membrane-spanning DNA nanopores. Nature Communications, 8(1), 14784."
  },
  {
    "objectID": "docs/publications/entries/2017/Maingi2017_Nanopore.html#abstract",
    "href": "docs/publications/entries/2017/Maingi2017_Nanopore.html#abstract",
    "title": "Stability and dynamics of membrane-spanning DNA nanopores",
    "section": "Abstract",
    "text": "Abstract\nRecently developed DNA-based analogues of membrane proteins have advanced synthetic biology. A fundamental question is how hydrophilic nanostructures reside in the hydrophobic environment of the membrane. Here, we use multiscale molecular dynamics (MD) simulations to explore the structure, stability and dynamics of an archetypical DNA nanotube inserted via a ring of membrane anchors into a phospholipid bilayer. Coarse-grained MD reveals that the lipids reorganize locally to interact closely with the membrane-spanning section of the DNA tube. Steered simulations along the bilayer normal establish the metastable nature of the inserted pore, yielding a force profile with barriers for membrane exit due to the membrane anchors. Atomistic, equilibrium simulations at two salt concentrations confirm the close packing of lipid around of the stably inserted DNA pore and its cation selectivity, while revealing localized structural fluctuations. The wide-ranging and detailed insight informs the design of next-generation DNA pores for synthetic biology or biomedicine."
  },
  {
    "objectID": "docs/publications/entries/2017/Atsmon-Raz2017_LipidCysteine.html",
    "href": "docs/publications/entries/2017/Atsmon-Raz2017_LipidCysteine.html",
    "title": "Parameterization of palmitoylated cysteine, farnesylated cysteine, geranylgeranylated cysteine, and myristoylated glycine for the martini force field",
    "section": "",
    "text": "Atsmon-Raz, Y., & Tieleman, D. P. (2017). Parameterization of palmitoylated cysteine, farnesylated cysteine, geranylgeranylated cysteine, and myristoylated glycine for the martini force field. The Journal of Physical Chemistry B, 121(49), 11132-11143."
  },
  {
    "objectID": "docs/publications/entries/2017/Atsmon-Raz2017_LipidCysteine.html#citation-apa-7",
    "href": "docs/publications/entries/2017/Atsmon-Raz2017_LipidCysteine.html#citation-apa-7",
    "title": "Parameterization of palmitoylated cysteine, farnesylated cysteine, geranylgeranylated cysteine, and myristoylated glycine for the martini force field",
    "section": "",
    "text": "Atsmon-Raz, Y., & Tieleman, D. P. (2017). Parameterization of palmitoylated cysteine, farnesylated cysteine, geranylgeranylated cysteine, and myristoylated glycine for the martini force field. The Journal of Physical Chemistry B, 121(49), 11132-11143."
  },
  {
    "objectID": "docs/publications/entries/2017/Atsmon-Raz2017_LipidCysteine.html#abstract",
    "href": "docs/publications/entries/2017/Atsmon-Raz2017_LipidCysteine.html#abstract",
    "title": "Parameterization of palmitoylated cysteine, farnesylated cysteine, geranylgeranylated cysteine, and myristoylated glycine for the martini force field",
    "section": "Abstract",
    "text": "Abstract\nPeripheral membrane proteins go through various post-translational modifications that covalently bind fatty acid tails to specific amino acids. These post-translational modifications significantly alter the lipophilicity of the modified proteins and allow them to anchor to biological membranes. Over 1000 different proteins have been identified to date that require such membrane–protein interactions to carry out their biological functions, including members of the Src and Ras superfamilies that play key roles in cell signaling and carcinogenesis. We have used all-atom simulations with the CHARMM36 force field to parameterize four of the most common post-translational modifications for the Martini 2.2 force field: palmitoylated cysteine, farnesylated cysteine, geranylgeranylated cysteine, and myristoylated glycine. The parameters reproduce the key features of clusters of configurations of the different anchors in lipid membranes as well as the water–octanol partitioning free energies of the anchors, which are crucial for the correct reproduction of the expected biophysical behavior of peripheral membrane proteins at the membrane–water interface. Implementation in existing Martini setup tools facilitates the use of the new parameters."
  },
  {
    "objectID": "docs/publications/entries/2016/Ingólfsson2016_ComputationalMicroscopy.html",
    "href": "docs/publications/entries/2016/Ingólfsson2016_ComputationalMicroscopy.html",
    "title": "Computational ‘microscopy’ of cellular membranes",
    "section": "",
    "text": "Ingólfsson, H. I., Arnarez, C., Periole, X., & Marrink, S. J. (2016). Computational ’microscopy’of cellular membranes. Journal of cell science, 129(2), 257-268."
  },
  {
    "objectID": "docs/publications/entries/2016/Ingólfsson2016_ComputationalMicroscopy.html#citation-apa-7",
    "href": "docs/publications/entries/2016/Ingólfsson2016_ComputationalMicroscopy.html#citation-apa-7",
    "title": "Computational ‘microscopy’ of cellular membranes",
    "section": "",
    "text": "Ingólfsson, H. I., Arnarez, C., Periole, X., & Marrink, S. J. (2016). Computational ’microscopy’of cellular membranes. Journal of cell science, 129(2), 257-268."
  },
  {
    "objectID": "docs/publications/entries/2016/Ingólfsson2016_ComputationalMicroscopy.html#abstract",
    "href": "docs/publications/entries/2016/Ingólfsson2016_ComputationalMicroscopy.html#abstract",
    "title": "Computational ‘microscopy’ of cellular membranes",
    "section": "Abstract",
    "text": "Abstract\nComputational ‘microscopy’ refers to the use of computational resources to simulate the dynamics of a molecular system. Tuned to cell membranes, this computational ‘microscopy’ technique is able to capture the interplay between lipids and proteins at a spatio-temporal resolution that is unmatched by other methods. Recent advances allow us to zoom out from individual atoms and molecules to supramolecular complexes and subcellular compartments that contain tens of millions of particles, and to capture the complexity of the crowded environment of real cell membranes. This Commentary gives an overview of the main concepts of computational ‘microscopy’ and describes the state-of-the-art methods used to model cell membrane processes. We illustrate the power of computational modelling approaches by providing a few in-depth examples of large-scale simulations that move up from molecular descriptions into the subcellular arena. We end with an outlook towards modelling a complete cell in silico."
  },
  {
    "objectID": "docs/publications/entries/2016/Zavadlav2016_SupramolecularWater.html",
    "href": "docs/publications/entries/2016/Zavadlav2016_SupramolecularWater.html",
    "title": "Adaptive Resolution Simulation of Supramolecular Water: The Concurrent Making, Breaking, and Remaking of Water Bundles",
    "section": "",
    "text": "Zavadlav, J., Marrink, S. J., & Praprotnik, M. (2016). Adaptive resolution simulation of supramolecular water: the concurrent making, breaking, and remaking of water bundles. Journal of chemical theory and computation, 12(8), 4138-4145."
  },
  {
    "objectID": "docs/publications/entries/2016/Zavadlav2016_SupramolecularWater.html#citation-apa-7",
    "href": "docs/publications/entries/2016/Zavadlav2016_SupramolecularWater.html#citation-apa-7",
    "title": "Adaptive Resolution Simulation of Supramolecular Water: The Concurrent Making, Breaking, and Remaking of Water Bundles",
    "section": "",
    "text": "Zavadlav, J., Marrink, S. J., & Praprotnik, M. (2016). Adaptive resolution simulation of supramolecular water: the concurrent making, breaking, and remaking of water bundles. Journal of chemical theory and computation, 12(8), 4138-4145."
  },
  {
    "objectID": "docs/publications/entries/2016/Zavadlav2016_SupramolecularWater.html#abstract",
    "href": "docs/publications/entries/2016/Zavadlav2016_SupramolecularWater.html#abstract",
    "title": "Adaptive Resolution Simulation of Supramolecular Water: The Concurrent Making, Breaking, and Remaking of Water Bundles",
    "section": "Abstract",
    "text": "Abstract\nThe adaptive resolution scheme (AdResS) is a multiscale molecular dynamics simulation approach that can concurrently couple atomistic (AT) and coarse-grained (CG) resolution regions, i.e., the molecules can freely adapt their resolution according to their current position in the system. Coupling to supramolecular CG models, where several molecules are represented as a single CG bead, is challenging, but it provides higher computational gains and connection to the established MARTINI CG force field. Difficulties that arise from such coupling have been so far bypassed with bundled AT water models, where additional harmonic bonds between oxygen atoms within a given supramolecular water bundle are introduced. While these models simplify the supramolecular coupling, they also cause in certain situations spurious artifacts, such as partial unfolding of biomolecules. In this work, we present a new clustering algorithm SWINGER that can concurrently make, break, and remake water bundles and in conjunction with the AdResS permits the use of original AT water models. We apply our approach to simulate a hybrid SPC/MARTINI water system and show that the essential properties of water are correctly reproduced with respect to the standard monoscale simulations. The developed hybrid water model can be used in biomolecular simulations, where a significant speed up can be obtained without compromising the accuracy of the AT water model."
  },
  {
    "objectID": "docs/publications/entries/2007/Marrink2007_Martini.html",
    "href": "docs/publications/entries/2007/Marrink2007_Martini.html",
    "title": "The MARTINI Force Field: Coarse Grained Model for Biomolecular Simulations",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2007/Marrink2007_Martini.html#citation-apa-7",
    "href": "docs/publications/entries/2007/Marrink2007_Martini.html#citation-apa-7",
    "title": "The MARTINI Force Field: Coarse Grained Model for Biomolecular Simulations",
    "section": "",
    "text": "Marrink, S. J., & Mark, A. E. (2003). The Mechanism of Vesicle Fusion as Revealed by Molecular Dynamics Simulations. Journal of the American Chemical Society, 125(37), 11144–11145. https://doi.org/10.1021/ja036138+"
  },
  {
    "objectID": "docs/publications/entries/2007/Marrink2007_Martini.html#abstract",
    "href": "docs/publications/entries/2007/Marrink2007_Martini.html#abstract",
    "title": "The MARTINI Force Field: Coarse Grained Model for Biomolecular Simulations",
    "section": "Abstract",
    "text": "Abstract\nWe present an improved and extended version of our coarse grained lipid model. The new version, coined the MARTINI force field, is parametrized in a systematic way, based on the reproduction of partitioning free energies between polar and apolar phases of a large number of chemical compounds. To reproduce the free energies of these chemical building blocks, the number of possible interaction levels of the coarse-grained sites has increased compared to those of the previous model. Application of the new model to lipid bilayers shows an improved behavior in terms of the stress profile across the bilayer and the tendency to form pores. An extension of the force field now also allows the simulation of planar (ring) compounds, including sterols. Application to a bilayer/cholesterol system at various concentrations shows the typical cholesterol condensation effect similar to that observed in all atom representations."
  },
  {
    "objectID": "docs/publications/entries/2007/Baron2007_ThermodynamicComparison.html",
    "href": "docs/publications/entries/2007/Baron2007_ThermodynamicComparison.html",
    "title": "Comparison of Thermodynamic Properties of Coarse-Grained and Atomic-Level Simulation Models",
    "section": "",
    "text": "Baron, R., Trzesniak, D., de Vries, A. H., Elsener, A., Marrink, S. J., & van Gunsteren, W. F. (2007). Comparison of thermodynamic properties of coarse‐grained and atomic‐level simulation models. ChemPhysChem, 8(3), 452-461."
  },
  {
    "objectID": "docs/publications/entries/2007/Baron2007_ThermodynamicComparison.html#citation-apa-7",
    "href": "docs/publications/entries/2007/Baron2007_ThermodynamicComparison.html#citation-apa-7",
    "title": "Comparison of Thermodynamic Properties of Coarse-Grained and Atomic-Level Simulation Models",
    "section": "",
    "text": "Baron, R., Trzesniak, D., de Vries, A. H., Elsener, A., Marrink, S. J., & van Gunsteren, W. F. (2007). Comparison of thermodynamic properties of coarse‐grained and atomic‐level simulation models. ChemPhysChem, 8(3), 452-461."
  },
  {
    "objectID": "docs/publications/entries/2007/Baron2007_ThermodynamicComparison.html#abstract",
    "href": "docs/publications/entries/2007/Baron2007_ThermodynamicComparison.html#abstract",
    "title": "Comparison of Thermodynamic Properties of Coarse-Grained and Atomic-Level Simulation Models",
    "section": "Abstract",
    "text": "Abstract\nThermodynamic data are often used to calibrate or test atomic-level (AL) force fields for molecular dynamics (MD) simulations. In contrast, the majority of coarse-grained (CG) force fields do not rely extensively on thermodynamic quantities. Recently, a CG force field for lipids, hydrocarbons, ions, and water,1 in which approximately four non-hydrogen atoms are mapped onto one interaction site, has been proposed and applied to study various aspects of lipid systems. To date, no extensive investigation of its capability to describe solvation thermodynamics has been undertaken. In the present study, a detailed picture of vaporization, solvation, and phase-partitioning thermodynamics for liquid hydrocarbons and water was obtained at CG and AL resolutions, in order to compare the two types of models and evaluate their ability to describe thermodynamic properties in the temperature range between 263 and 343 K. Both CG and AL models capture the experimental dependence of the thermodynamic properties on the temperature, albeit a systematically weaker dependence is found for the CG model. Moreover, deviations are found for solvation thermodynamics and for the corresponding enthalpy–entropy compensation for the CG model. Particularly water/oil repulsion seems to be overestimated. However, the results suggest that the thermodynamic properties considered should be reproducible by a CG model provided it is reparametrized on the basis of these liquid-phase properties."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_PlamsaMembrane.html",
    "href": "docs/publications/entries/2014/Ingólfsson2014_PlamsaMembrane.html",
    "title": "Lipid Organization of the Plasma Membrane",
    "section": "",
    "text": "Ingólfsson, H. I., Melo, M. N., Van Eerden, F. J., Arnarez, C., Lopez, C. A., Wassenaar, T. A., … & Marrink, S. J. (2014). Lipid organization of the plasma membrane. Journal of the american chemical society, 136(41), 14554-14559."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_PlamsaMembrane.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Ingólfsson2014_PlamsaMembrane.html#citation-apa-7",
    "title": "Lipid Organization of the Plasma Membrane",
    "section": "",
    "text": "Ingólfsson, H. I., Melo, M. N., Van Eerden, F. J., Arnarez, C., Lopez, C. A., Wassenaar, T. A., … & Marrink, S. J. (2014). Lipid organization of the plasma membrane. Journal of the american chemical society, 136(41), 14554-14559."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_PlamsaMembrane.html#abstract",
    "href": "docs/publications/entries/2014/Ingólfsson2014_PlamsaMembrane.html#abstract",
    "title": "Lipid Organization of the Plasma Membrane",
    "section": "Abstract",
    "text": "Abstract\nThe detailed organization of cellular membranes remains rather elusive. Based on large-scale molecular dynamics simulations, we provide a high-resolution view of the lipid organization of a plasma membrane at an unprecedented level of complexity. Our plasma membrane model consists of 63 different lipid species, combining 14 types of headgroups and 11 types of tails asymmetrically distributed across the two leaflets, closely mimicking an idealized mammalian plasma membrane. We observe an enrichment of cholesterol in the outer leaflet and a general non-ideal lateral mixing of the different lipid species. Transient domains with liquid-ordered character form and disappear on the microsecond time scale. These domains are coupled across the two membrane leaflets. In the outer leaflet, distinct nanodomains consisting of gangliosides are observed. Phosphoinositides show preferential clustering in the inner leaflet. Our data provide a key view on the lateral organization of lipids in one of life’s fundamental structures, the cell membrane."
  },
  {
    "objectID": "docs/publications/entries/2014/Zavadlav2014_AdaptiveResolution.html",
    "href": "docs/publications/entries/2014/Zavadlav2014_AdaptiveResolution.html",
    "title": "Adaptive resolution simulation of an atomistic protein in MARTINI water",
    "section": "",
    "text": "Zavadlav, J., Melo, M. N., Marrink, S. J., & Praprotnik, M. (2014). Adaptive resolution simulation of an atomistic protein in MARTINI water. The Journal of chemical physics, 140(5)."
  },
  {
    "objectID": "docs/publications/entries/2014/Zavadlav2014_AdaptiveResolution.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Zavadlav2014_AdaptiveResolution.html#citation-apa-7",
    "title": "Adaptive resolution simulation of an atomistic protein in MARTINI water",
    "section": "",
    "text": "Zavadlav, J., Melo, M. N., Marrink, S. J., & Praprotnik, M. (2014). Adaptive resolution simulation of an atomistic protein in MARTINI water. The Journal of chemical physics, 140(5)."
  },
  {
    "objectID": "docs/publications/entries/2014/Zavadlav2014_AdaptiveResolution.html#abstract",
    "href": "docs/publications/entries/2014/Zavadlav2014_AdaptiveResolution.html#abstract",
    "title": "Adaptive resolution simulation of an atomistic protein in MARTINI water",
    "section": "Abstract",
    "text": "Abstract\nWe present an adaptive resolution simulation of protein G in multiscale water. We couple atomistic water around the protein with mesoscopic water, where four water molecules are represented with one coarse-grained bead, farther away. We circumvent the difficulties that arise from coupling to the coarse-grained model via a 4-to-1 molecule coarse-grain mapping by using bundled water models, i.e., we restrict the relative movement of water molecules that are mapped to the same coarse-grained bead employing harmonic springs. The water molecules change their resolution from four molecules to one coarse-grained particle and vice versa adaptively on-the-fly. Having performed 15 ns long molecular dynamics simulations, we observe within our error bars no differences between structural (e.g., root-mean-squared deviation and fluctuations of backbone atoms, radius of gyration, the stability of native contacts and secondary structure, and the solvent accessible surface area) and dynamical properties of the protein in the adaptive resolution approach compared to the fully atomistically solvated model. Our multiscale model is compatible with the widely used MARTINI force field and will therefore significantly enhance the scope of biomolecular simulations."
  },
  {
    "objectID": "docs/publications/entries/2014/Mukherjee2014_MscL.html",
    "href": "docs/publications/entries/2014/Mukherjee2014_MscL.html",
    "title": "The activation mode of the mechanosensitive ion channel, MscL, by lysophosphatidylcholine differs from tension-induced gating",
    "section": "",
    "text": "Mukherjee, N., Birkner, J. P., Walko, M., Ingólfsson, H. I., Dimitrova, A., Arnarez, C., … & Koçer, A. (2014). The activation mode of the mechanosensitive ion channel, MscL, by lysophosphatidylcholine differs from tension-induced gating. The FASEB Journal, 28(10), 4292."
  },
  {
    "objectID": "docs/publications/entries/2014/Mukherjee2014_MscL.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Mukherjee2014_MscL.html#citation-apa-7",
    "title": "The activation mode of the mechanosensitive ion channel, MscL, by lysophosphatidylcholine differs from tension-induced gating",
    "section": "",
    "text": "Mukherjee, N., Birkner, J. P., Walko, M., Ingólfsson, H. I., Dimitrova, A., Arnarez, C., … & Koçer, A. (2014). The activation mode of the mechanosensitive ion channel, MscL, by lysophosphatidylcholine differs from tension-induced gating. The FASEB Journal, 28(10), 4292."
  },
  {
    "objectID": "docs/publications/entries/2014/Mukherjee2014_MscL.html#abstract",
    "href": "docs/publications/entries/2014/Mukherjee2014_MscL.html#abstract",
    "title": "The activation mode of the mechanosensitive ion channel, MscL, by lysophosphatidylcholine differs from tension-induced gating",
    "section": "Abstract",
    "text": "Abstract\nOne of the best-studied mechanosensitive channels is the mechanosensitive channel of large conductance (MscL). MscL senses tension in the membrane evoked by an osmotic down shock and directly couples it to large conformational changes leading to the opening of the channel. Spectroscopic techniques offer unique possibilities to monitor these conformational changes if it were possible to generate tension in the lipid bilayer, the native environment of MscL, during the measurements. To this end, asymmetric insertion of L-α-lysophosphatidylcholine (LPC) into the lipid bilayer has been effective; however, how LPC activates MscL is not fully understood. Here, the effects of LPC on tension-sensitive mutants of a bacterial MscL and on MscL homologs with different tension sensitivities are reported, leading to the conclusion that the mode of action of LPC is different from that of applied tension. Our results imply that LPC shifts the free energy of gating by interfering with MscL-membrane coupling. Furthermore, we demonstrate that the fine-tuned addition of LPC can be used for controlled activation of MscL in spectroscopic studies."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_BiomolecularSimulation.html",
    "href": "docs/publications/entries/2014/Ingólfsson2014_BiomolecularSimulation.html",
    "title": "The power of coarse graining in biomolecular simulations",
    "section": "",
    "text": "Ingólfsson, H. I., Lopez, C. A., Uusitalo, J. J., de Jong, D. H., Gopal, S. M., Periole, X., & Marrink, S. J. (2014). The power of coarse graining in biomolecular simulations. Wiley Interdisciplinary Reviews: Computational Molecular Science, 4(3), 225-248."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_BiomolecularSimulation.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Ingólfsson2014_BiomolecularSimulation.html#citation-apa-7",
    "title": "The power of coarse graining in biomolecular simulations",
    "section": "",
    "text": "Ingólfsson, H. I., Lopez, C. A., Uusitalo, J. J., de Jong, D. H., Gopal, S. M., Periole, X., & Marrink, S. J. (2014). The power of coarse graining in biomolecular simulations. Wiley Interdisciplinary Reviews: Computational Molecular Science, 4(3), 225-248."
  },
  {
    "objectID": "docs/publications/entries/2014/Ingólfsson2014_BiomolecularSimulation.html#abstract",
    "href": "docs/publications/entries/2014/Ingólfsson2014_BiomolecularSimulation.html#abstract",
    "title": "The power of coarse graining in biomolecular simulations",
    "section": "Abstract",
    "text": "Abstract\nComputational modeling of biological systems is challenging because of the multitude of spatial and temporal scales involved. Replacing atomistic detail with lower resolution, coarse grained (CG), beads has opened the way to simulate large-scale biomolecular processes on time scales inaccessible to all-atom models. We provide an overview of some of the more popular CG models used in biomolecular applications to date, focusing on models that retain chemical specificity. A few state-of-the-art examples of protein folding, membrane protein gating and self-assembly, DNA hybridization, and modeling of carbohydrate fibers are used to illustrate the power and diversity of current CG modeling."
  },
  {
    "objectID": "docs/publications/entries/2014/Moiset2014_Disaccharides.html",
    "href": "docs/publications/entries/2014/Moiset2014_Disaccharides.html",
    "title": "Disaccharides Impact the Lateral Organization of Lipid Membranes",
    "section": "",
    "text": "Moiset, G., López, C. A., Bartelds, R., Syga, L., Rijpkema, E., Cukkemane, A., … & Marrink, S. J. (2014). Disaccharides impact the lateral organization of lipid membranes. Journal of the American Chemical Society, 136(46), 16167-16175."
  },
  {
    "objectID": "docs/publications/entries/2014/Moiset2014_Disaccharides.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Moiset2014_Disaccharides.html#citation-apa-7",
    "title": "Disaccharides Impact the Lateral Organization of Lipid Membranes",
    "section": "",
    "text": "Moiset, G., López, C. A., Bartelds, R., Syga, L., Rijpkema, E., Cukkemane, A., … & Marrink, S. J. (2014). Disaccharides impact the lateral organization of lipid membranes. Journal of the American Chemical Society, 136(46), 16167-16175."
  },
  {
    "objectID": "docs/publications/entries/2014/Moiset2014_Disaccharides.html#abstract",
    "href": "docs/publications/entries/2014/Moiset2014_Disaccharides.html#abstract",
    "title": "Disaccharides Impact the Lateral Organization of Lipid Membranes",
    "section": "Abstract",
    "text": "Abstract\nDisaccharides are well-known for their membrane protective ability. Interaction between sugars and multicomponent membranes, however, remains largely unexplored. Here, we combine molecular dynamics simulations and fluorescence microscopy to study the effect of mono- and disaccharides on membranes that phase separate into Lo and Ld domains. We find that nonreducing disaccharides, sucrose and trehalose, strongly destabilize the phase separation leading to uniformly mixed membranes as opposed to monosaccharides and reducing disaccharides. To unveil the driving force for this process, simulations were performed in which the sugar linkage was artificially modified. The availability of accessible interfacial binding sites that can accommodate the nonreducing disaccharides is key for their strong impact on lateral membrane organization. These exclusive interactions between the nonreducing sugars and the membranes may rationalize why organisms such as yeasts, tardigrades, nematodes, bacteria, and plants accumulate sucrose and trehalose, offering cell protection under anhydrobiotic conditions. The proposed mechanism might prove to be a more generic way by which surface bound agents could affect membranes."
  },
  {
    "objectID": "docs/publications/entries/2014/Konijnenberg2014_IonChannel.html",
    "href": "docs/publications/entries/2014/Konijnenberg2014_IonChannel.html",
    "title": "Global structural changes of an ion channel during its gating are followed by ion mobility mass spectrometry",
    "section": "",
    "text": "Konijnenberg, A., Yilmaz, D., Ingólfsson, H. I., Dimitrova, A., Marrink, S. J., Li, Z., … & Koçer, A. (2014). Global structural changes of an ion channel during its gating are followed by ion mobility mass spectrometry. Proceedings of the National Academy of Sciences, 111(48), 17170-17175."
  },
  {
    "objectID": "docs/publications/entries/2014/Konijnenberg2014_IonChannel.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Konijnenberg2014_IonChannel.html#citation-apa-7",
    "title": "Global structural changes of an ion channel during its gating are followed by ion mobility mass spectrometry",
    "section": "",
    "text": "Konijnenberg, A., Yilmaz, D., Ingólfsson, H. I., Dimitrova, A., Marrink, S. J., Li, Z., … & Koçer, A. (2014). Global structural changes of an ion channel during its gating are followed by ion mobility mass spectrometry. Proceedings of the National Academy of Sciences, 111(48), 17170-17175."
  },
  {
    "objectID": "docs/publications/entries/2014/Konijnenberg2014_IonChannel.html#abstract",
    "href": "docs/publications/entries/2014/Konijnenberg2014_IonChannel.html#abstract",
    "title": "Global structural changes of an ion channel during its gating are followed by ion mobility mass spectrometry",
    "section": "Abstract",
    "text": "Abstract\nMechanosensitive ion channels are sensors probing membrane tension in all species; despite their importance and vital role in many cell functions, their gating mechanism remains to be elucidated. Here, we determined the conditions for releasing intact mechanosensitive channel of large conductance (MscL) proteins from their detergents in the gas phase using native ion mobility–mass spectrometry (IM-MS). By using IM-MS, we could detect the native mass of MscL from Escherichia coli, determine various global structural changes during its gating by measuring the rotationally averaged collision cross-sections, and show that it can function in the absence of a lipid bilayer. We could detect global conformational changes during MscL gating as small as 3%. Our findings will allow studying native structure of many other membrane proteins."
  },
  {
    "objectID": "docs/publications/entries/2014/Barnoud2014_HydrophobicReshape.html",
    "href": "docs/publications/entries/2014/Barnoud2014_HydrophobicReshape.html",
    "title": "Hydrophobic Compounds Reshape Membrane Domains",
    "section": "",
    "text": "Barnoud, J., Rossi, G., Marrink, S. J., & Monticelli, L. (2014). Hydrophobic compounds reshape membrane domains. PLoS Computational Biology, 10(10), e1003873."
  },
  {
    "objectID": "docs/publications/entries/2014/Barnoud2014_HydrophobicReshape.html#citation-apa-7",
    "href": "docs/publications/entries/2014/Barnoud2014_HydrophobicReshape.html#citation-apa-7",
    "title": "Hydrophobic Compounds Reshape Membrane Domains",
    "section": "",
    "text": "Barnoud, J., Rossi, G., Marrink, S. J., & Monticelli, L. (2014). Hydrophobic compounds reshape membrane domains. PLoS Computational Biology, 10(10), e1003873."
  },
  {
    "objectID": "docs/publications/entries/2014/Barnoud2014_HydrophobicReshape.html#abstract",
    "href": "docs/publications/entries/2014/Barnoud2014_HydrophobicReshape.html#abstract",
    "title": "Hydrophobic Compounds Reshape Membrane Domains",
    "section": "Abstract",
    "text": "Abstract\nCell membranes have a complex lateral organization featuring domains with distinct composition, also known as rafts, which play an essential role in cellular processes such as signal transduction and protein trafficking. In vivo, perturbations of membrane domains (e.g., by drugs or lipophilic compounds) have major effects on the activity of raft-associated proteins and on signaling pathways, but they are difficult to characterize because of the small size of the domains, typically below optical resolution. Model membranes, instead, can show macroscopic phase separation between liquid-ordered and liquid-disordered domains, and they are often used to investigate the driving forces of membrane lateral organization. Studies in model membranes have shown that some lipophilic compounds perturb membrane domains, but it is not clear which chemical and physical properties determine domain perturbation. The mechanisms of domain stabilization and destabilization are also unknown. Here we describe the effect of six simple hydrophobic compounds on the lateral organization of phase-separated model membranes consisting of saturated and unsaturated phospholipids and cholesterol. Using molecular simulations, we identify two groups of molecules with distinct behavior: aliphatic compounds promote lipid mixing by distributing at the interface between liquid-ordered and liquid-disordered domains; aromatic compounds, instead, stabilize phase separation by partitioning into liquid-disordered domains and excluding cholesterol from the disordered domains. We predict that relatively small concentrations of hydrophobic species can have a broad impact on domain stability in model systems, which suggests possible mechanisms of action for hydrophobic compounds in vivo."
  },
  {
    "objectID": "docs/tutorials/Martini3/ddcMD/index.html",
    "href": "docs/tutorials/Martini3/ddcMD/index.html",
    "title": "Running Martini simulation with ddcMD",
    "section": "",
    "text": "In case of issues, please contact ingolfsson1@llnl.gov.\n\n\nSummary\n\nIntroduction\nInstallation\nSimulation setup and equilibration\nConvert GROMACS to ddcMD format\nRun with ddcMD\nSimulation analysis\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nNote: All input data for this tutorial can be downloaded here. If you just landed here, we recommend you follow the tutorials about lipid bilayers first.\nThe Martini force field has been implemented within Lawrence Livermore National Laboratory’s molecular dynamics program, ddcMD. This implementation has been fully ported to GPU. By executing all computations on the GPU ddcMD-Martini frees up CPU resources for other tasks and allows for full GPU utilization on systems with low CPU to GPU ratio. For a description of this implementation and benchmarking see Zhang et al. 2020[1].\nddcMD-Martini has been very usefully in previous [2,3,4] and current MuMMI campaigns, allowing for good utilization of all GPUs (6 per node on Summit and 4 per node on Sierra and Lassen) and allowed us to use the available CPUs for running of out macro model, setup and initial equilibration of simulations and online analysis of running simulations.\nWarning, currently virtual-sites are not supported in ddcMD-Martini; adding virtual-sites is currently being worked on and expected shortly. This means that Martini 3 proteins with virtual site amino acids will not work and for Martini 2 non-virtual-sites versions molecules will have to be used. Cholesterol is the most common one and a version of the original non-virtual-site Martini cholesterol (v01) but with updates to the cholesterol shape to reflect that of the never-virtual-sites model (v02) can be found here called (martini_v2.0_CHOL_01-fix.itp).\n\n\nInstallation\n\nFirst, we will download and install ddcMD, a GROMACS to ddcMD converter and MDAnalysis update to read ddcMD format.\n\nddcMD (https://github.com/LLNL/ddcMD)\nddcMD converter (https://github.com/LLNL/ddcMDconverter)\nupdated MDAnalysis (https://github.com/XiaohuaZhangLLNL/mdanalysis)\n\n\nInstall ddcMD - see https://github.com/LLNL/ddcMD/blob/master/INSTALL.md\n\ngit clone git@github.com:LLNL/ddcMD.git\ncd ddcMD\ngit submodule update --init --recursive\nmkdir build && cd build\nmodule load gcc/7.3.1  # Add gcc to path\nmodule load cuda/10.1.243  # Add CUDAA compiler to path\nmodule load spectrum-mpi/rolling-release  # Add MPI library to path\ncmake -DUSE_GPU=ON -DCMAKE_INSTALL_PREFIX:PATH=&lt;location of binary&gt; ../\nmake -j16\nmake install\n\nInstall ddcMD compatible version of MDAnalysis:\n\ngit clone git@github.com:XiaohuaZhangLLNL/mdanalysis.git\ncd mdanalysis/package\npip install -e .\n\nInstall ddcMDconverter, converts between GROMACS and ddcMD formats:\n\ngit clone https://github.com/LLNL/ddcMDconverter.git\ncd ddcMDconverter\npip install -e .\n\n\nSimulation setup and equilibration\n\nWe suggest you run energy minimization and initial system equilibration using GROMACS and after system is ready for production run convert the GROMACS files to ddcMD input.\nAn example pre-equilibrated simulation is given in the Introduction (ddcMD-Martini-tautorial.tar.gz). This is a 3200-lipid membrane of an 8-component plasma membrane mimic [5] with one RAS peripheral membrane protein attached to the inner leaflet, a typical patch from the first MuMMI campaign[3][input data].\n\n\nConvert GROMACS to ddcMD format\n\nUse martini2obj (part of ddcMDconverter) to convert GROMACS parameters/.itp files to ddcMD parameter files. Outputted files are martini.data, molecule.data, ConsAtom.data; which contain all the simulation parameters.\nAll the GROMACS .itp files and associated input files are in the para directory. Note the parser is fairly simple so the .itp files need to “cleaner” than what GROMACS allows: no special characters, no if/def statements etc.\ncp -r inputs/para .\ncd para\nmartini2obj -i itpList -t proItpList -p martini_v2.1-dna.itp -o martini.data -l molecule.data\ncd ../\nCopy the martini.data, molecule.data, and ConsAtom.data files to ddcmd simulation directory:\nmkdir sim\ncp para/martini.data para/molecule.data para/ConsAtom.data sim/\ncd sim\nUse pdbmartini2obj (part of ddcMDconverter) to convert .pdb file and GROMACS .top file to the ddcMD coordinates files: atoms#000000 and the restart files.\ncp ../inputs/gromacs/* .\npdbmartini2obj -p lipids-water-eq4.pdb -t system.top -m martini.data -f ConsAtom.data -o atoms#000000\nIf the simulation contains position restraints, they need to be specified separately. In this simulation the upper leaflet contains POPC lipids (here called POPX) with weak contains on the PO4 bead z-axes only to limit bilayer undulations. Use restraint (part of ddcMDconverter) to generate the restraint.data (for POPX) require in this simulation (resItpList specifies the GROMACS input files with constraints and the -i parameter the reference restraint values).\ncp ../inputs/para/resItpList .\ncp ../inputs/para/POPX_Martini_v2.0_lipid.itp .\nrestraint -i atoms#000000 -o restraint.data -p resItpList\nNow setup the simulation restart location and copy in the default simulation run option file (object.data is similar to a GROMACS .mdp file the main options are described in the file)\nmkdir -p snapshot.mem\nmv atoms#000000 restart snapshot.mem\nln -s snapshot.mem/restart # Set start at initial frame\ncp ../inputs/para/object.data .\n\n\nRun with ddcMD\n\n\nMake sure the following inputs are presented:\n\n\nmolecule.data\nmartini.data\nobject.data\nrestraint.data\nrestart (symbolic link file)\nsnapshot.mem\natoms#000000\nrestart\n\n\nRun the simulation:\n\n&lt;your ddcMD binary&gt; -o object.data molecule.data\n\n\nSimulation analysis\n\nUsing the modified version of MDAnalysis installed above ddcMD coordinate files (both full atom restart files and smaller binary files) can be opened, new files can be appended to open MDAnalysis universe objects and combined tar ddcMD trajectory files can be read in.\nOpen single ddcMD snapshot:\npython\n&gt;&gt; import MDAnalysis as mda\n&gt;&gt; u = mda.Universe(\"topol.tpr\", \"snapshot.mem/atoms#000000\", format='DDCMD')\nNew ddcMD snapshots can be:\n&gt;&gt; u.load_new(frameName, format='DDCMD')\nOpen ddcMD trajectory (.tar file containing multiple snapshots). Note remember to adjust the timestep (dt) and in MDAnalysis dt is in ps and current time step of ddcMD is set in the object.data. Using MDAnalysis a ddcMD trajectory can then be saved down to other MD formats, such as GROMACS .xtc:\nfor frame in `seq -w 1000 1000 000000010000 `\ndo\ncp snapshot.${frame}/\"subset#000000\" pos.${frame}\ndone\n\ntar -cvf positions.tar pos.000*\nimport MDAnalysis as mda\n\nu = mda.Universe(\"topol.tpr\", \"positions.tar\", format='DDCMDTAR', dt=20.0)\n\nwith mda.Writer(\"ddcMD_trj.xtc\", u.trajectory.n_atoms) as w:\n    for ts in u.trajectory:\n        w.write(u.atoms)\n\n\nTools and scripts used in this tutorial\n\n\nddcMD (https://github.com/LLNL/ddcMD)\nddcMD converter (https://github.com/LLNL/ddcMDconverter)\nmodified MDAnalysis (https://github.com/XiaohuaZhangLLNL/mdanalysis)\n\n\n\nReferences\n\n[1] X Zhang, S Sundram, T Oppelstrup, SIL Kokkila-Schumacher, TS Carpenter, HI Ingólfsson, FH Streitz, F C Lightstone, JN Glosli. 2020. ddcMD: A fully GPU-accelerated molecular dynamics program for the Martini force field. J. Chem. Phys. 153:045103. doi: 10.1063/5.0014500.\n[2] F Di Natale, H Bhatia, TS Carpenter, C Neale, SIL Kokkila-Schumacher, T Oppelstrup, L Stanton, X Zhang, S Sundram, TRW Scogland, G Dharuman, MP Surh, Y Yang, C Misale, L Schneidenbach, C Costa, C Kim, B D’Amora, S Gnanakaran, DV Nissley, F Streitz, FC Lightstone, PT Bremer, JN Glosli, HI Ingólfsson. 2019. A Massively Parallel Infrastructure for Adaptive Multiscale Simulations: Modeling RAS Initiation Pathway for Cancer. In Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis (SC ’19). ACM, New York, NY, USA, 57:16. doi: 10.1145/3295500.3356197.\n[3] HI Ingólfsson, C Neale, TS Carpenter, R Shrestha, CA López, TH Tran, T Oppelstrup, H Bhatia, LG Stanton, X Zhang, S Sundram, F Di Natale, A Agarwal, G Dharuman, SIL Kokkila-Schumacher, T Turbyville, G Gulten, QN Van, D Goswami, F Jean-Francios, C Agamasu, D Chen, JJ Hettige, T Travers, S Sarkar, MP Surh, Y Yang, A Moody, S Liu, BC Van Essen, AF Voter, A Ramanathan, NW Hengartner, DK Simanshu, AG Stephen, PT Bremer, S Gnanakaran, JN Glosli, FC Lightstone, F McCormick, DV Nissley, FH Streitz. 2020. Machine Learning-driven Multiscale Modeling Reveals Lipid-Dependent Dynamics of RAS Signaling Proteins. doi: 10.21203/rs.3.rs-50842/v1 (Preprint).\n[4] H Bhatia, F Di Natale, JY Moon, X Zhang, JR Chavez, F Aydin, C Stanley, T Oppelstrup, C Neale, S Kokkila-Schumacher, DH Ahn, S Herbein, TS Carpenter, S Gnanakaran, PT Bremer, JN Glosli, FC Lightstone, HI Ingólfsson. 2021. Generalizable Coordination of Large Multiscale Workflows: Challenges and Learnings at Scale. In The International Conference for High Performance Computing, Networking, Storage and Analysis (SC ’21), November 14–19, 2021, St. Louis, MO, USA. ACM, New York, NY, USA, 14. doi: 10.1145/3458817.3476210.\n[5] HI Ingólfsson, H Bhatia, T Zeppelin, WFD Bennett, KA Carpenter, PC Hsu, G Dharuman, PT Bremer, B Schiøtt, FC Lightstone, TS Carpenter. 2020. Capturing biologically complex tissue-specific membranes at different levels of compositional complexity, J. Phys. Chem. B, 124:7819–7829. doi: 10.1021/acs.jpcb.0c03368.\n\n[Note] Tutorial written by Helgi I. Ingólfsson, Xiaohua Zhang and Jim Glosli. LLNL-MI-825738."
  },
  {
    "objectID": "docs/tutorials/Martini3/Backward/index.html",
    "href": "docs/tutorials/Martini3/Backward/index.html",
    "title": "Reverse coarse-graining with Backward",
    "section": "",
    "text": "In case of issues, please contact t.a.wassenaar@rug.nl.\n\n\nSummary\n\nIntroduction\nThe backward method\nMapping files\nBackmapping Aquaporin 1\nBackmapping from Martini 3\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nBackmapping or reverse coarse-graining or fine-graining a coarse-grained (CG) structure requires a correspondence between the two models; i.e., for atomistic and CG: which atoms make up which bead. Actually, an atom can in principle contribute to several beads. A backmapping protocol needs to know at least which atoms contribute to which bead. Existing schemes then use rigid building blocks anchored on the CG bead, or place the atoms randomly near the bead in an initial guess and the structure is relaxed based on the atomistic force field, usually by switching it on gradually. The method used in this tutorial is backward[1], developed by Tsjerk Wassenaar. Backwards allows for an intelligent, yet flexible initial placement of the atoms based on the positions of several beads, thereby automatically generating a very reasonable orientation of the groups of atoms with respect to each other.\nFirst, we go over the scripts used in the backward[1] method. Second, we describe the structure and setup of the needed CG to fine-grained mapping files, taking the mapping file for Martini 2 valine as an example. Last, we demonstrate the method by backmapping a CG membrane embedded aquaporin 1, as described in[2].\nMore extensive discussion and examples, including tutorial material can be found in the paper by Wassenaar et al.[1], and Supporting Material to that paper.\n\n\nThe backward method\n\nThe backward program is available here, and consists of three scripts and a number of CG to fine-grained mapping definition files. The scripts are backward.py, initram.sh and the Mapping directory __init__.py and a number of .map files. The .map files describe the CG to fine-grained mapping and a file needs to be provided for each molecule (or it’s building blocks) in your system. The__init__.py script interprets the .map files. The backward.py script performs the actual backmapping and initram.sh is a bash wrapper that runs a series of minimizations and molecular dynamics steps, using the fine-grained force field to push the initial backmapped structure to one that satisfies the fine-grained force field.\n\n\nMapping files\n\nA requirement for the procedure to work is that the subdirectory Mapping contains definitions for how the atomic positions are generated from the CG positions. The subdirectory Mapping distribuited with backward contains a file for each residue and/or molecule that can be backmapped from Martini 2, which is named for the atomistic target force field, e.g. val.oplsaa.map for a valine residue targeted to OPLS-AA. The structure of a .map file is explained below for the valine residue. The file val.oplsaa.map reads:\n[ molecule ]\nVAL\n\n[ martini ]\nBB SC1\n\n[ mapping ]\noplsaa\n\n[ atoms ]\n    1   N     BB\n    2   H     BB\n    3   CA    BB\n    4   HA    BB\n    5   CB    SC1 BB\n    6   HB    SC1 BB\n    8   CG1   SC1\n    9   HG11  SC1\n   10   HG12  SC1\n   11   HG13  SC1\n   12   CG2   SC1\n   13   HG21  SC1\n   14   HG22  SC1\n   15   HG23  SC1\n   16   C     BB\n   17   O     BB\n\n[ chiral ]\n  CB     CA    N    C\n  HB     CA    N    C\n\n[ chiral ]\n  HA   CA  N CB  C  ;L-Val\n ;HA   CA  N C  CB  ;D-Val\n\n[ out ]\n  CG2  CB CG1 CA\n  HG21 CB CG1 CA\n  HG22 CB CG1 CA\n  HG23 CB CG1 CA\nDirectives analogous to gromacs topologies contain specifications that build the atomistic structure from the CG positions. The [ molecule ] directive contains the name of the residue or molecule. The [ martini ] directive contains the names of the CG beads in the Martini model: valine has two beads called BB and SC1. The [ mapping ] directive contains the name of the object model. Note that this directive may contain multiple object models. If you do not care for the naming convention of different force fields, you can use the same mapping file for the CHARMM36 and OPLS-AA/L force fields, because these are both all-atom models which in the GROMACS implementation also use the same order of the atoms (if not the same names). Thus, the mapping files for the methylated terminal ends explicitly state that they can be used for mapping to both OPLS-AA and CHARMM36 force fields.\nThe [ atoms ] directive contains the index numbers and names of the atoms in the object model and their relation to the CG beads. Note that a single atom may be in a relation with more than one CG bead. The back-mapping procedure starts by putting each atom that is related to a single bead on the position of that bead. If an atom is related to more than one bead, it will be placed on the weighted average position of the beads listed. It is allowed to list the same bead multiple times; thus the line:\n4  OE1  BB  BB  BB  SC1  SC1\nplaces the fourth atom (with name OE1) of the residue on the line connecting the BB and SC1 beads at 2/5 of the distance between the beads, starting at the BB bead. This mechanism is a simple aid to position atoms already at fairly reasonable starting positions. Using the -kick flag displaces all atoms randomly after their initial placement. Note that the script applies a random kick to atoms that are initially put at exactly the same place, e.g. because they are defined by the position of a single bead. Thus, no two atoms will be on top of each other. Switching on an atomistic force field usually results in an error if two interacting atoms are at exactly the same place.\nThe backward procedure implements a few other more sophisticated mechanisms to place atoms and some are used in the valine residue. Implementation can be found in the file Mapping/__init__.py. The [ chiral ] directive generates stereochemically specifically arranged groups of atoms. As is seen for valine, two types of input can be provided. In the first instance of the [ chiral ] directive, four atoms are listed on a line. The first atom is the atom to be placed (named A in Fig. 1e, chiral*) on the basis of the positions of the other three. The figure shows how vectors are defined from the positions of the other three particles to construct the position of the first atom. In the second instance of the [ chiral ] directive, five atoms are listed on a line. This corresponds to the construction shown in Fig. 1d, chiral. The [ out ] directive may be used to spread out several equivalent atoms (as on a CH3-group) away from the center of the bead in a reasonable manner, as shown in Fig. 1c, out. Again, be aware that atoms initially placed on the same spot, are randomly displaced; therefore, using the same reference atoms as in the example still leads to different positions for the generated atoms.\n\n\n\nFigure 1 | Figure from[1]. Prescriptions for placing atom A on the basis of the positions of other atoms (upper case letters B, C, D, E). The other atoms define vectors (lower case letters a, b, c, d, e, p, q) that are used to calculate the position of A. A bar is used over the vectors to denote their normalization. The x denotes taking the outer product of two vectors.\n\n\n\n\nBackmapping Aquaporin 1\n\nHere we backmapp a CG membrane embedded aquaporin 1 into CHARMM36 atomistic coordinates, as described in[2]. The files for this part of the tutorial are available in aquaporine_backmap.zip. Missing residues were added to aquaporin 1 and it was converted to Martini CG coordinates, solvated in a CG POPC bilayer with ions and polarizable water. Then simulated for 100 ns at the CG level with position restrains on the protein, see[2] for method details and CG_posre.gro for final coordinates. Note, without position restrains on the protein the CG protein might (depending on the protein in question and the CG force field used) evolve to far away from a possible fine-grained structure, rendering backmapping impossible.\nWe are going to use the initram.sh script, which calls backward.py and then runs a series of minimization and equilibrium simulations to get the final backmapped structure. To run the script we need the following:\n\nThe CG structure to backmapp, provided in CG_posre.gro.\nA complete fine-grained force field corresponding to all the CG molecules in CG_posre.gro. Here we use CHARMM36, see all .itp files provided and topol.top, which contains the molecules in the same order they are present in CG_posre.gro and with the same names. Note, water and ions can be skipped in the .top files as they are automatically detected by backward.py.\nA .map file in the Mapping directory for all residues and molecules to be backmapped (water and ions can also be skipped here as their definitions are included in backward.py).\nThe initram.sh script uses the gromacs package so a proper version needs to be sourced.\n\nRun the script using the following command:\n./initram.sh -f CG_posre.gro -o aa_charmm.gro -to charmm36 -p topol.top\nAfter successful backmapping the aa_charmm.gro file will contain POPC membrane embedded aquaporin 1 as well as the solvent at fully atomistic resolution according to the CHARMM36 force field. Fig. 2 illustrates the backmapping of a few POPC molecules. When running the backmapping script please keep in mind that initram.sh generates a significant number of temporary files so backmapping in a separate directory can be a good idea and that backward.py used random kicks to initially displace the atoms so rerunning the same command can give different results (and even though some runs might results in an error others may not).\n\n\n\nFigure 2 | Backmapped all-atom representation of a Martini POPC membrane. Figure from[2].\n\n\n\n\nBackmapping from Martini 3\n\nBackmapping from Martini 3 configurations follows the same procedure described above. You only need to chage your mapping files. You can find a beta version of the Mapping files to backmap to CHARMM36 here.\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nbackward (downloadable here)\n\n\n\nReferences\n\n[1] Wassenaar, T. A., Pluhackova, K., Böckmann, R. A., Marrink, S. J., & Tieleman, D. P. (2014). Going Backward: A Flexible Geometric Approach to Reverse Transformation from Coarse Grained to Atomistic Models. Journal of Chemical Theory and Computation, 10(2), 676–690. https://doi.org/10.1021/ct400617g\n[2] Wassenaar, T. A., Pluhackova, K., Moussatova, A., Sengupta, D., Marrink, S. J., Tieleman, D. P., & Böckmann, R. A. (2015). High-Throughput Simulations of Dimer and Trimer Assembly of Membrane Proteins. The DAFT Approach. Journal of Chemical Theory and Computation, 11(5), 2278–2291. https://doi.org/10.1021/ct5010092"
  },
  {
    "objectID": "docs/tutorials/Martini3/lectures.html",
    "href": "docs/tutorials/Martini3/lectures.html",
    "title": "Lectures",
    "section": "",
    "text": "Introduction to Martini 3 - by Paulo C. T. Souza - [Watch] [Slides]\nNovel applications of Martini 3 - by Siewert-Jan Marrink - [Watch] [Slides]\nMartini ecosystem of tools - by Tsjerk Wassenaar - [Watch] [Slides]\nThe MArtini Database (MAD) and web server - by Luca Monticelli - [Watch] [Slides]\nThe Martini Lipids - by Manuel N. Melo - [Watch] [Slides]\nMartini 3 Small Molecules - by Riccardo Alessandri - [Watch] [Slides]\nBartender - by Raul Mera A. - [Watch] [Slides]\nProtein models in Martini 3 - by Sebastian Thallmair - [Watch] [Slides]\nProtein-small molecule binding with Martini 3 - by Paulo C. T. Souza - [Watch] [Slides]\nPolymer modeling with Martini 3 - by Fabian Grünewald - [Watch] [Slides]\nTitratable Martini - by Fabian Grünewald - [Watch] [Slides]\nTS2CG - by Weria Pezeshkian - [Watch] [Slides]\nMachine Learning-driven Multiscale Modeling - by Helgi I. Ingólfsson - [Watch] [Slides]\nLipid-protein interactions - by Peter Tieleman - [Watch] [Slides]\nProLint - by Besian I. Sejdiu - [Watch] [Slides]\n\n\n\nNote: If you are experiencing difficulties playing the videos, please try updating your browser.",
    "crumbs": [
      "Home",
      "🎓 Martini Lectures"
    ]
  },
  {
    "objectID": "docs/tutorials/Martini3/tutorials.html",
    "href": "docs/tutorials/Martini3/tutorials.html",
    "title": "Tutorials",
    "section": "",
    "text": "Lipid bilayers - Part I: Self-assembly\nLipid bilayers - Part II: Complex mixtures using Insane\nProteins - Part I: Basics and Martinize 2\nProteins - Part II: TM proteins and Protein complexes\n4.1. Ceramide — VDAC1 binding in a membrane (Collab tutorial)\n4.2. Lipidomics study: Mag2 in a POPC and POPC-POPG 3:1 membrane (Collab tutorial)\nParametrization of a new small molecule\nProtein-small molecule binding\nReverse coarse-graining with Backward\nPolyply: generating input parameters and coordinates\nTS2CG: membranes with user-defined shapes and compositions\nRunning Martini simulation with ddcMD\nTitratable Martini for constant pH simulations\nprolintpy: Automatic analysis of lipid-protein interactions\nDual resolution membrane simulation",
    "crumbs": [
      "Home",
      "🛠️ Hands-on Tutorials"
    ]
  },
  {
    "objectID": "docs/tutorials/Martini3/LipidsII/index.html",
    "href": "docs/tutorials/Martini3/LipidsII/index.html",
    "title": "Lipid bilayers - Part II: Complex mixtures",
    "section": "",
    "text": "In case of issues, please contact lpborgesaraujo@tecnico.ulisboa.pt or m.n.melo@itqb.unl.pt.\n\n\nSummary\n\nIntroduction\nComplex mixtures with Insane\n\nAnalysis — hexagonality\n\nAdding a new lipid headgroup: lysyl-PG\n\nCreating the lysyl-PG topology\nAdding lysyl-PG to Insane\n\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nWhen setting up large and/or complex bilayers it can be more convenient, or necessary, to start with a bilayer close to equilibrium rather than trying to get the bilayer to self-assemble. This can be done by concatenating (e.g. using gmx genconf) and/or altering previously formed bilayers, but an easier approach is to use a bilayer formation program such as insane.py[1] (available in the directory scripts/ or downloadable in the Downloads -&gt; Tools -&gt; Proteins and bilayers section of the website, under the insane topic. You can also check its GitHub repo for the most up-to-date version, and instructions on installing with pip).\n\nNote: This tutorial assumes you are familiar with running Martini 3 simulations with GROMACS, and with the organization of the particle and molecule topologies bundled with the Martini 3 release. For a lipid-centered primer on these topics you can run the Lipid Bilayers I tutorial. Depending on the version of Insane you run, and on whether you run the supplied analysis, you will need to have installed the numpy and MDAnalysis Python packages. You can typically install them via the pip command:\n\npip3 install --user numpy mdanalysis\n\n\nComplex mixtures with Insane\n\nInsane (INSert membrANE) is a CG building tool that generates membranes by distributing lipids over a grid. Lipid structures are derived from simple template definitions. Many are already included with the program (see below on how to add new ones). The program uses two grids, one for the inner and one for the outer leaflet, and distributes the lipids randomly over the grid cells with numbers according to the relative quantities specified. This allows for building asymmetric bilayers with specific lipid compositions. The program also allows for adding solvent and ions, using a similar grid protocol to distribute them over a 3D grid. Finally, Insane script can also be used to set up a complex (or simple!) bilayer system including membrane protein, see the Martini protein tutorial. Additional information about the functionality of Insane can be found by running insane.py -h.\nBecause Insane deals mostly with structure generation, it can be used for both Martini 2 and 3 lipids, to the extent that they keep the same number of beads and mapping. However, beware that this may not be always true for future Martini 3 lipid models. Conversely, not all the lipid types you’ll find available in Insane have been implemented in Martini 3.\nAs with other tutorials, this one offers a worked version with all the intermediate steps LipidBilayers_Part2_Worked.tar, and a bare one, that expects you to do and simulate more LipidBilayers_Part2.tar. Unpack the tutorial’s archive and enter the directory complex-bilayers/. We will create with insane.py a fully hydrated 3:1 mole ratio bilayer of dibehenoyl-phosphatidylcholine (DBPC) : dilinoleyl-phosphatidylcholine (DIPC), with physiological ion concentrations. DBPC has long saturated chains (22:0), whereas DIPC’s are shorter and polyunsaturated (18:2). Because of its saturation, DBPC has a gel-to-liquid transition temperature of 348 K; DIPC’s transition occurs at 216 K [2]. By simulating a mixture of these lipids at an intermediate temperature, we can expect the formation of two coexisting phases: a gel one enriched in DBPC, and a liquid one enriched in DIPC. In this tutorial we will be running a simulation at 283K, using DBPC and DIPC as opposite extremes to ensure a successful separation. We do this because Martini can’t (yet) always model this sort of phase separation when lipid transition temperatures are closer together; hopefully parameterization advances coupled to Martini 3 will be able to solve this!\nStart by running insane.py:\npython insane.py -salt 0.15 -x 25 -y 25 -z 11 -sol W -o membrane.gro -l DIPC:1 -l DBPC:3 -p topol.top\nThis will generate an initial configuration for the system membrane.gro (Fig. 1A) and a starting point for a working topology topol.top, which you must complete and correct (depending on the version of insane.py, your topol.top may have some includes referring to Martini 2 .itps, and some incompatible ion name spellings).\nThen, energy minimize the structure and gently equilibrate the system using the provided .mdp files. Note, because this simulation contains multiple components you will have to make an index file (using gmx make_ndx) and group all the lipids together and all the solvent together to fit the specified groups in the .mdp files; the .mdp files provided expect the index group names Bilayer and Solvent.\nAs all the bilayer lipids and solvent were placed on a grid (Fig. 1A), even after minimization they can still be in an energetically unfavorable state. Due to the large forces involved it is sometimes (but not always) necessary to run a few equilibrium simulations using a short time step (1-10 fs) before running production simulations with longer Martini time steps (we will be using 20 fs). The initial grid order imposed by insane.py should relax in a few ns (Fig. 1B), we recommend simulating for 5-30 ns using the Berendsen pressure coupling algorithm, to relax the membrane area, before switching to Parrinello-Rahman for the production run. This mixture separates in about one microsecond at a temperature of 283 K (Fig. 1C,D,E). If you don’t want to wait that long for your simulation, a sample run is provided for you under phase_sep.xtc (if you’re not using the ‘worked’ tutorial files, you can get it from [here])\nIf you have VMD installed and name your .tpr file and output trajectory phase_sep.tpr, phase_sep.xtc, respectively, you can load a similar visualization to that in Fig. 1 by running the do_vmd.sh script.\n\n\n\nFigure 1 | Gel-liquid phase separation in a 3:1 DBPC:DIPC mixture. A) Structure immediately after construction by insane.py B) After a 20 ns long simulation the grid structure is gone. C,D,E) After about 1µs at 283 K this lipid mixture phase separates into ld and so domains; D and E show the top view of the simulation, and in E only the first bead of each acyl tail of the top leaflet is represented, highlighting the gel-phase hexagonal packing (VMD’s use of multi-frame position averaging further highlights the honeycomb pattern). In all panels DBPC is in blue and DIPC in red.\n\n\n\nAnalysis — hexagonality\n\nThis system can be subjected to several types of analysis (see the Lipid Bilayers I tutorial for general examples). Some specific analyses can be used to characterize this phase separation. Namely, those that look at lipid order and contacts (sadly, the do_order.py script you may have used in the Lipid Bilayers I tutorial is not compatible with lipid mixtures). Here we’ll quantify the ‘hexagonality’ of the lipid tail packing along the phase transition. In this measurement, that looks only at the tails’ first beads (see Fig 1B to understand why), a lipid tail is said to be hexagonally packed if:\n\nits first bead has at least 6 neighboring beads within 6 Å;\nall of its 6 closest neighbors have themselves at least 2 neighbors within 6 Å.\n\nThese criteria may yield some false positives and some false negatives, but are simple enough for this application (beware that different studies may employ different criteria for hexagonality). The script hexagonality.py computes this for you, for every frame, and outputs a hexagonality.xvg you can quickly plot with xmgrace. Make the script executable, if needed, run it, and appreciate the quantitative view of the degree of phase separation along time:\n./hexagonality.py -f phase_sep.xtc -s topol.tpr\nxmgrace hexagonality.xvg\nYou have now prepared, simulated and analyzed a phase-separating binary mixture of DIPC and DBPC lipids. Molecular simulations have a limited numerical accuracy, and this can sometimes create temperature imbalances — particularly in phase-separating systems[3]. As an extra step, it would be wise to also check the temperature of the separated parts and see if there are any imbalances limiting or exacerbating the phase seaparation.\n\n\n\nAdding a new lipid headgroup: lysyl-PG\n\nWhen working with complex lipid bilayer systems, you might find that your lipid of interest is not yet available in the Martini lipidome. If so, it might be necessary for you to parameterize a lipid headgroup yourself. In this part of the tutorial, we will outline how new lipid headgroups can be parameterized and leveraged to create complex bilayer systems, using Lysyl-PG as an example.\nLysyl-PG is a membrane lipid in several gram-positive bacteria, such as Staphylococcus aureus, which has been shown to confer a higher level of antimicrobial resistance to cationic host defense peptides [4]. Lysyl-PG consists of the ester of phosphatidylglycerol (PG) with the amino acid lysine (Fig 2). However, even though the lysine and PG topologies are available for Martini 3, there is no conjugated lysyl-PG topology yet.\n\n\n\nFigure 2 | Structure of the Lysyl-PG headgroup.\n\n\n\nCreating the lysyl-PG topology\n\nTo create the lysyl-PG topology, we will combine the pre-existing lysine and POPG topologies for Martini 3 by employing a simple conjugation, assuming a bond between the amino acid backbone (BB) and the PG glycerol (GL0) with the same characteristics as the phosphate – glycerol bond (PO4 – GL0) already in place.\nEnter the directory NewHeadgroup/ within the tutorial’s archive. Start by finding the topology for POPG within the Martini 3 phospholipid topologies (./martini_v3.0.0_phospholipids_v1.itp), as well as the topology for lysine within the Martini 3 amino acid topology file (./martini_v3.0.0_proteins/force_fields/martini3001/aminoacids.ff). Create a new file named lysylPG.itp and copy over the two topologies.\nTake a moment to look at the two topologies. These two must now be combined onto a single topology, taking care not to break any of the bonded parameters already in place. The simplest way of doing this is by using the POPG topology as a template and adding the lysine parameters on top. As such, start by renaming the molecule by changing the name in the [ moleculetype ] section to POLPG. We can then start merging the [ atoms ] section by adding the list of lysine atoms/beads to the top of the POPG atoms already in place. Care must now be taken to correctly renumber all of the atom entries as well as to change the residue names to POLPG.\nAt this point, your [ moleculetype ] and [ atoms ] sections should look something like this:\n[moleculetype]\n; molname nrexcl\nPOLPG 1\n[atoms]\n; id type resnr residu atom cgnr charge\n   1   P2    1  POLPG   BB   1    0   ;Lysine\n   2  SC3    1  POLPG  SC1   2    0\n   3 SQ4p    1  POLPG  SC2   3  1.0\n   4   P4    1  POLPG  GL0   4    0   ;POPG\n   5   Q5    1  POLPG  PO4   5 -1.0\n   6 SN4a    1  POLPG  GL1   6    0\n   7  N4a    1  POLPG  GL2   7    0\n   8   C1    1  POLPG  C1A   8    0\n(continues …)\nNow take a look at the bonded parameters in place in the [bonds] and [angles] sections. Notice that since we renumbered the atom list, the POPG bonded parameters no longer correspond to the correct atoms/beads. To fix this we simply need to update the numbering on the bonded potentials to the current bead numbers:\n\nThe previous harmonic bond definition:\n\n[bonds]\n; i j funct length force.c.\n1 2 1 0.36 7000 ;GL0 – PO4 bond\n(…)\n\nAfter renumbering will now be:\n\n[bonds]\n; i j funct length force.c.\n4 5 1 0.36 7000 ;GL0 – PO4 bond\n(…)\nRenumber the POPG bonded parameters in the [ bonds ] and [ angles ] sections. After you’ve done this we can now add the lysine bonded parameters. The lysine topology contains 2 bonds and 1 angle potential. Since we added the lysine atoms/beads first in the [ atoms ] section we can simply add those to the list without needing to renumber them.\nAt this point we will now have the two topologies fully merged, however, the lysine and POPG moieties are not yet connected together! To connect them together we must add an additional bonded potential, linking the POPG glycerol (GL0) to the lysine backbone (BB). To do this we will assume that the bond in place is similar to the PO4 – GL0 in place. As such, create a new bonded potential linking the GL0 and BB beads with the same potential type, bond length and force constant as that of the PO4 – GL0 bond. Note that now that the glycerol group of the PG moiety is forming an ester bond with the lysine backbone, the chemical properties of the GL0 bead will be different from those when it was free. As such, we must change the bead type to account for the decrease in polarity from the loss of the hydroxyl group. Taking other Martini 3 models as examples, and with inspiration from the “Martini 3.0 Bible” [5] we can tentatively lower the GL0 bead’s polarity from P4 polarity to P1. The lysyl-PG topology is now complete.\n\n\nNote that this was a “coarse” approach to the parameterization of a lipid headgroup, wher some assumptions were made for the sake of simplicity and brevity (e.g. assuming the GL0 – BB ester bond behaves as the PO4 – GL0 bond, assuming lysine conformation dynamics remain the same when bonded to POPG, assuming the modified glycerol moiety is correctly represented by a P1 bead, etc.). However, this model could serve as a starting point for the refinement of a finer, more accurate model, focusing on the linkage details: bonds, angles, and dihedrals, as well as a finer tuning of the glycerol bead particle type. Refinement of lipid models typically use atomistic MD models of the same lipid as reference for their conformational dynamics. Additionally, other theoretical or experimental parameters are also used as reference targets, such as area per lipid. Refer to the tutorials on small molecule parameterization where some of these aspects are tackled in more detail.\n\n\n\nAdding lysyl-PG to Insane\n\nHaving created a topology for lysyl-PG we now want to incorporate it in bilayers assembled by insane. However, since this is a new lipid topology, there are no available templates for our lysyl-PG lipid in inane, and we must define it ourselves.\nLipids in insane are defined schematically, based on templates. These templates roughly define the x,y,z pseudocoordinates for each of the CG beads. Adding a new template to insane is as simple as defining the position of each of the lipid beads in this pseudocoordinate system. Due to its smooth energy landscape, Martini is quite robust and much more tolerant to distortions of the starting structures than, for example, atomistic simulations. This allows us to construct complex membranes from very simple lipid templates. (See the insane publication for more details [1].) While different versions of insane have slightly different template formatting (compare with the GitHub version, for instance), the overall approach is very similar. Use your text editor of choice to open the insane.py file and look for the DPPC definition.\n# PROTOLIPID (diacylglycerol), 18 beads\n#\n# 1-3-4-6-7--9-10-11-12-13-14 &lt; -- This is the Lipid template\n# \\| |/ |\n# 2 5 8-15-16-17-18-19-20\n## Diacyl glycerols\nmoltype = \"lipid\"\nlipidsx[moltype]=( 0, .5, 0, 0, .5, 0, 0, .5, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1)\nlipidsy[moltype]=( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\nlipidsz[moltype]=(10, 9, 9, 8, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 5, 4, 3, 2, 1, 0)\nlipidsa.update({ # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n\"DPPC\":(moltype, \" - - - NC3 - PO4 GL1 GL2 C1A C2A C3A C4A - - C1B C2B C3B C4B - -\n\"),\n(…)\nA lipid template is defined by setting the relative x,y,z pseudocoordinates for each of the particles in the pseudotemplate in lipidsx, lipidsy and lipidsz, respectively. Each lipid entry will then populate the particles in the template as required. If you scroll around insane.py you will notice that some families of lipids will have their own templates, such as glycolipids or cardiolipins.\nNote that the order in which the atoms are defined in the topology matters when defining the lipid template. While lipid atoms in Martini are typically roughly ordered from top to bottom (outermost headgroup bead to innermost acyl chain bead) this may not always be the case (e.g. phosphoinositol phosphates are defined after the headgroup sugar ring when they are typically the outermost beads). This is the case with our topology, where the backbone bead (BB) is defined before the most superficial SC2 bead. While we could re-order and adapt our topology to fit one of the pre-existing templates, we will create our own template specific to lysyl-PG.\nStart by drawing out the template for lysyl-PG, using the DPPC or POPG template as a guide. If you are struggling with visualizing the structure, pen and paper are your friends! Having drawn the template, assign x,y,z pseudocoordinates for each of the beads, based on the preexisting templates. In our case, every bead from the phosphate bead (PO4) down should match the default diacylglycerol template. Do not pay too much attention to the distances between beads since, as it was previously mentioned, Martini is quite robust in handling rough starting conformations. Distances of 0.5 or 1 between beads are typical.\nWhile it is worth noting that there are many valid templates, in the end, your lysyl-PG template should look something like this (note the difference in z-positions relative to the existing diacylglycerol templates of moltype = \"lipid\"):\n# Lysyl-PG\n# This is the Lysyl-PG lipid template\n# 3 1-4-5-6--8--9-10-11-12-13 SC2 BB – GL0 – PO4 – GL1 – C1A – (…)\n# \\| | \\ | |\n# 2 7-14-15-16-17-18-19 SC1 GL2 – C1B – (…)\n## Diacyl glycerols\nmoltype = \"LYSYL-PG\"\nlipidsx[moltype]=( 0, .5, 0, 0, 0, 0, .5, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n1)\nlipidsy[moltype]=( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n0)\nlipidsz[moltype]=( 9, 9, 10, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 5, 4, 3, 2, 1,\n0)\nlipidsa.update({ # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n19\n\"POLPG\":moltype, \" BB SC1 SC2 GL0 PO4 GL1 GL2 C1A C2A C3A C4A - - C1B C2B C3B C4B -\n- \"),\n})\nIf you’ve correctly added this entry to insane.py, you should now be able to assemble membranes containing lysyl-PG. Assemble a membrane composed of 5:1 POPG:Lysyl-PG using insane:\npython2 insane.py -l POPG:5 -l POLPG:1 -x 25 -y 25 -z 11 -pbc cubic -sol W -o\nmembrane.gro -p topol.top\nAnd use it as a starting point to run a simulation with this complex membrane mixture, following the steps mentioned in the Lipid Bilayers I tutorial. If you are using the version of insane that we pack with the tutorial, you can further refine it by adding POLPG to the charges dictionary, which will allow you to use insane’s -salt and -neutral flags to get ionic strength and system neutralization in one go.\nYou now have a topology for a custom lipid, implemented in a way to be flexibly used by insane for quick membrane building. Good job! When doing this with real-life cases of new lipids, don’t forget to share your parameters with the community for added impact!\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\ninsane.py (downloadable here)\nMDAnalysis (https://www.mdanalysis.org)\n\n\n\nReferences\n\n[1] Wassenaar, T. A., Ingólfsson, H. I., et al. Computational Lipidomics with insane: A Versatile Tool for Generating Custom Membranes for Molecular Simulations (2015) J. Chem. Theory Comput. 11, 2144–2155. DOI:10.1021/acs.jctc.5b00209\n[2] Thermotropic Phase Transitions of Pure Lipids in Model Membranes and Their Modifications by Membrane Proteins, Dr. John R. Silvius, Lipid-Protein Interactions, John Wiley & Sons, Inc., New York, 1982\n[3] Thallmair, S., Javanainen, M., Fábián, F., Martinez-Seara, H., Marrink, S.J., Nonconverged Constraints Cause Artificial Temperature Gradients in Lipid Bilayer Simulations (2021) J. Phys. Chem. B 125(33), 9537–9546. DOI:10.1021/acs.jpcb.1c03665\n[4] Kilelee, E., Pokorny, Y., Yeaman, M. R., and Bayer, A. S. Lysyl-Phosphatidylglycerol Attenuates Membrane Perturbation Rather than Surface Association of the Cationic Antimicrobial Peptide 6W-RP-1 in a Model Membrane System: Implications for Daptomycin Resistance (2010) Antimicrob. Agents Chemother. 54, 4476–4479. DOI:10.1128/AAC.00191-10\n[5] Souza, P. C. T., Alessandri, R., et al. (2021) Martini 3: a general purpose force field for coarse-grained molecular dynamics. Nat. Methods 18, 382–388. DOI: 10.1038/s41592-021-01098-3"
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html",
    "title": "Coarse-grain MD tutorial",
    "section": "",
    "text": "Tutorials designed by Martin Calvelo (martin.calvelo@gmail.com) and Manuel N. Melo (m.n.melo@itqb.unl.pt). Check out their repository.\nThese tutorials were designed to run in Collab. Alternatively you can follow along in your own system."
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#lipidomics-study-mag2-in-a-popc-and-popc-popg-31-membrane",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#lipidomics-study-mag2-in-a-popc-and-popc-popg-31-membrane",
    "title": "Coarse-grain MD tutorial",
    "section": "Lipidomics study: Mag2 in a POPC and POPC-POPG 3:1 membrane",
    "text": "Lipidomics study: Mag2 in a POPC and POPC-POPG 3:1 membrane\n\n\nTutorial notes\n\nIn this tutorial you’ll find two directories. Directory worked has all the intermediate steps and results, whereas directory minimal has only the essential files to get you going, and you’ll have to do most of the work yourself. Feel free to follow the tutorial using either approach, or even a mix of the two.\nThis tutorial should be run in a T4 GPU Colab runtime (you can check and change this in the upper right ‘Connect’ menu). Click on “Change runtime type” and select Python 3 (default) and T4 GPU.\nAlternatively, you can download it and run it in your own system. You will need to have gromacs installed, as well as the Python libraries vermouth, mdanalysis, and nglview.\nMuch of the tutorial involves running shell commands. In Colab, this is achieved by prepending an exclamation mark to the command (!some shell_command). You can see this exemplified below in the installation. Note that if you need to change directories, the exclamation mark method won’t work; you need to use a percent sign, and run the command in its own cell (%cd target_dir).\nTo run any of the following cells of code, you can type Shift + Enter to excute the code in a cell."
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-0---downloading-and-installing-of-the-tutorial-software-and-materials.",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-0---downloading-and-installing-of-the-tutorial-software-and-materials.",
    "title": "Coarse-grain MD tutorial",
    "section": "Step 0 - Downloading and installing of the tutorial software and materials.",
    "text": "Step 0 - Downloading and installing of the tutorial software and materials.\nThe text output of these steps was minimized so as not to overcrowd the notebook. Feel free to take out the -q flags or add the -v flag to tar if you want full output or for debugging purposes.\n\n\n# We install `gromacs` and `dssp` binaries, pre-built for the colab runtime. Moreover, we install some Python packages, and import the ones we'll need:\n# 1. The `vermouth` (provides the `martinize2` script) and `insane` packages from the Martini team\n# 2. The `MDAnalysis` package\n# 3. The `nglview` molecular viewer (requires enabling custom notebook widgets, which we also do below)\n\nimport os\nif os.getenv(\"COLAB_RELEASE_TAG\"):\n  !wget https://www.itqb.unl.pt/labs/multiscale-modeling/downloads/gromacs-2023.3-gcolab_build.tar.gz -q -O - | tar --absolute-names -xzf -\n  !pip install -q vermouth mdanalysis\n  !pip install -q ipywidgets==7.7.2 nglview\n  # Needed for nglview to work in colab\n  from google.colab import output\n  output.enable_custom_widget_manager()\n\n\nimport nglview as nv\nimport MDAnalysis as mda\n\nFinally, we download and unpack the tutorial’s material.\n\n!wget https://zenodo.org/records/13890148/files/2-Tutorial_Lipidomics.zip\n!unzip 2-Tutorial_Lipidomics.zip\n\nWe will start in subdirectory minimal, but feel free to change to worked.\n\ninitial_path=!pwd\npath=initial_path[0]\nprint(path)\n\n\n%cd {path}/minimal"
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-1---introduction",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-1---introduction",
    "title": "Coarse-grain MD tutorial",
    "section": "Step 1 - Introduction",
    "text": "Step 1 - Introduction\nAntimicrobial peptides (AMPs) play a vital role in the innate immune system of all living organisms.\\(^{1,2}\\) These peptides can identify and disrupt lipid patterns in bacterial membranes without harming healthy cells.\\(^{3}\\) Notably, AMPs often possess shared properties: they typically consist of 10–40 residues, adopt an α-helix secondary structure when they interact with membranes, maintain a positive net charge, and contain a significant number of non-polar residues. These features, along with their pronounced transversal hydrophobic moment in their folded state, facilitate interactions with lipid bilayers. Thus, the use of these molecules as therapeutic agents is an obvious lesson from Nature that can be exploited to design new antibiotics, anticancer or antiaging drugs.\\(^{4}\\)\nIn this tutorial, we will investigate the potential antimicrobial properties of Magainin-II (Mag2), one of the most well-known natural AMPs.\\(^{5}\\) We will simulate it in the presence of two different membrane models: one representing a healthy membrane (POPC), and the other a bacterial bilayer (POPC-POPG 3:1). We’ll place several AMPs in the aqueous phase of our systems and run simulations, analysing potential spontaneous peptide-bilayer interactions.\n\nLancet Infect Dis. 9, e216; doi: 10.1016/S1473-3099(20)30327-3 (2020)\nFront. Microbiol. 11; doi: 10.3389/fmicb.2020.582779 (2020)\nColloids Surf. B Biointerfaces 196, 111349; doi: 10.1016/j.colsurfb.2020.111349 (2020)\nFront. Immunol. 15, doi: 10.3389/fimmu.2024.1320779 (2024)\nBBA. 1327, 119; doi: 10.1016/S0005-2736(97)00051-5 (1997)"
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-2---system-preparation",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-2---system-preparation",
    "title": "Coarse-grain MD tutorial",
    "section": "Step 2 - System preparation",
    "text": "Step 2 - System preparation\nIn your directories you’ll find Mag2.pdb file, containing a α-helix structure of the Magainin II peptide.\nBefore coarse graining anything we visualize our starting protein structure using nglview. Other viewers, such as pymol or VMD are also great, if you run this workflow outside Colab.\n\nview = nv.NGLWidget()\nat = view.add_component(nv.FileStructure('Mag2.pdb'))\nview\n\n\nCoarse-graining with martinize2\nFor CG MD simulation of a protein one needs the CG coordinates and the CG topology. Both can be obtained with the martinize2 tool (despite its name, it works with Martini 3).\n\nYou’ll need to: * specify Mag2.pdb as the input structure; * specify an output CG structure (let’s call it Mag2_cg.pdb); * specify an output .top topology master file (let’s call it topol.top); * specify the target forcefield. Martini 3 has code martini3001; * ask for an elastic network to be set, restraining secondary/tertiary structure; * ask for fixing some issues with the excess of flexible side-chain behaviour; * we don’t need DSSP in this case, since we will assume directly that the peptide will adopt an alpha-helix structure. You can provide directly the secondary structure with the flag -ss HHHHHHHHHHHHHHHHHHHHHHH;\n\n#Try yourself!\n#Uncomment to run\n\n#!martinize2 -f ...\n\n\n# @title Solution\n\n!martinize2 -f Mag2.pdb \\\n -x Mag2_cg.pdb \\\n -o topol.top \\\n -ff martini3001 \\\n -elastic \\\n -scfix \\\n -ss 'HHHHHHHHHHHHHHHHHHHHHHH'\n\nHave a look at the produced files with and editor or a molecular structure visualizer. Observe the atomic structure and the CG beads overlaid (in white and yellow spheres).\n\nview.remove_component(at)\n\n\naa = nv.FileStructure('Mag2.pdb')\ncg = nv.FileStructure('Mag2_cg.pdb')\n\nview.add_component(aa, default=False)\nview.add_component(cg, default=False)\n\nview.clear_representations(component=0)\nview.clear_representations(component=1)\n\nview.add_licorice(selection='Protein', component=0)\nview.add_ball_and_stick(aspectRatio=7.5, opacity=0.45, component=1)\n\nview.center()\nview\n\n\n\nPOPC membrane\nLet’s continue with the tutorial. The steps are the same for both membranes. Let’s start with the POPC one:\n\n%cd {path}/minimal/POPC\n\n\nInsert Mag2 peptides\nThe first step will be to insert some Mag2 peptides into our system (let’s add 10, but feel free to choose a different number if you prefer). For this, we’ll use the gmx insert-molecules command from GROMACS. Execute it with the flag -h for having more info.\n\n!gmx insert-molecules -h\n\nWe have a POPC membrane in water box already equilibrated in a file called POPC.gro. Let’s place the peptides in the aqueous phase. In this way, we’ll see if they spontaneously interact with the membrane. We can do this by instructing gmx insert-molecules to remove water molecules (W) to make room for our peptide (use the option -replace). Take into account that the CG coordinates of Mag2 are in the previous directory, so we need to write ../ before the file name (../Mag2_cg.pdb). Let’s call the output system.gro. Try yourself!\n\n#Try yourself!\n#Uncomment to run\n\n#!gmx insert-molecules -f ... -ci .../... -nmol ... -o system.gro -replace W -try 100\n\n\n# @title Solution\n\n!gmx insert-molecules -f POPC.gro \\\n                      -ci ../Mag2_cg.pdb \\\n                      -nmol 10 \\\n                      -o system.gro \\\n                      -replace W \\\n                      -try 100\n\nOpen the output system.gro with a molecular visualizator. Here, you can see the peptides in the solvent, with the POPC lipids in grey. Note that, for clarity, water and ions were not displayed.\n\nview_membrane_prot = nv.NGLWidget()\nview_membrane_prot.add_component(nv.FileStructure('system.gro'))\nview_membrane_prot.add_representation('tube', selection='protein', radius=1)\nview_membrane_prot.add_representation('surface', selection='POPC', color='grey')\nview_membrane_prot\n\n\n\nUpdate topology (1)\nThe file initial_top.top is a good start, but we need to complete it. Specifically, we need to add the number of W, CL, NA, and peptides in the system. The first step is to create a copy of the file initial_top.top (let’s call this new file top.top).\n\n!cp initial_top.top top.top\n\nWe can automatically update the number of W, CL, NA, and peptides molecules by using the python script update_topology.py. It will count the number of those molecules in a input file (system.gro) and add it directly to a topology file (top.top). Run the script like this:\n\n!python3 ../update_topology.py system.gro top.top\n\nAdd also a line with the number of peptides inserted:\n\n%%bash\necho \"molecule_0  10\" &gt;&gt; top.top\n\n\n\nNeutralize the system\nMD simulations must be executed with a total net charge of 0. Since Mag2 has a charge of +2, adding the peptides has resulted in an imbalance in the system’s charge. We need to fix this. We can do this using the GROMACS tool gmx genion. To start, we need to create a .tpr file. Generate it by running the following command:\n\n!gmx grompp -f ../em.mdp -c system.gro -p top.top -o ions.tpr -maxwarn 1\n\nNow let’s run the gmx genion command. We’ll achieve a neutral charge with the -neutral flag and will need to specify which molecules it will replace to add extra ions to balance the charge (water, in this case).\n\n%%bash\necho \"W\" | gmx genion -s ions.tpr -neutral -o system_neutralized.gro\n\nThis command will generate a file with the coordinates of the neutralized system called system_neutralized.gro.\n\n\nUpdate topology (2)\nSince we’ve changed the number of water molecules and ions when neutralizing the system, we need to update the topology again. Let’s start again from the initial_top.top file:\n\n!cp initial_top.top top.top\n\nAnd let’s run the update_topology.py script again, but this time using system_neutralized.gro as the input file.\n\n!python3 ../update_topology.py system_neutralized.gro top.top\n\nRemember to add also a line with the number of peptides:\n\n%%bash\necho \"molecule_0  10\" &gt;&gt; top.top\n\nTake a look to the top.top file:\n\n!cat top.top\n\n\n\nCreate and index file\nLet’s create an index file defining the beads that are part of the protein and membrane and those that are part of the solvent. Run first the gmx make_ndx command of GROMACS using as input the system_neutralized.gro file:\n\n%%bash\necho 'q' | gmx make_ndx -f system_neutralized.gro\n\nUsing the create_index.py script, we’ll create 3 groups: * Bilayer: beads of the membrane. * Bilayer_Protein: beads of the membrane and the AMPs. We’ll use this for analysis. * Solvent: Water and ions.\nRun the script:\n\n!python3 ../create_index.py system_neutralized.gro\n\n\n\n\nPOPC-POPG 3:1 membrane\nAs we said, in this tutorial we are going to simulate two membranes. Now that you have seen how to prepare the system for one of them, try preparing the other one yourself!\n\n%cd {path}/minimal/POPC-POPG_31/\n\n\nInsert Mag2 peptides\nTake into account that now our membrane file is called POPC-POPG_31.gro.\n\n# Complete it\n\n!gmx insert-molecules\n\n\n# @title Solution\n\n!gmx insert-molecules -f POPC-POPG_31.gro \\\n                      -ci ../Mag2_cg.pdb \\\n                      -nmol 10 \\\n                      -o system.gro \\\n                      -replace W \\\n                      -try 100\n\n\n\nUpdate topology (1)\n\n!cp initial_top.top top.top\n\n\n!python3 ../update_topology.py system.gro top.top\n\n\n%%bash\necho \"molecule_0  10\" &gt;&gt; top.top\n\n\n\nNeutralize the system\n\n# Complete it\n\n!gmx grompp -f ../em.mdp\n\n\n# @title Solution\n\n!gmx grompp -f ../em.mdp -c system.gro -p top.top -o ions.tpr -maxwarn 1\n\n\n%%bash\n# echo ... | !gmx genion\n\n\n# @title Solution\n\n!echo \"W\" | gmx genion -s ions.tpr -neutral -o system_neutralized.gro\n\n\n\nUpdate topology (2)\n\n!cp initial_top.top top.top\n\n\n!python3 ../update_topology.py system_neutralized.gro top.top\n\n\n%%bash\necho \"molecule_0  10\" &gt;&gt; top.top\n\n\n\nCreate index file\n\n%%bash\necho 'q' | gmx make_ndx -f system_neutralized.gro\n\n\n!python3 ../create_index.py system_neutralized.gro"
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-3---simulation",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-3---simulation",
    "title": "Coarse-grain MD tutorial",
    "section": "Step 3 - Simulation",
    "text": "Step 3 - Simulation\nYou can now run the simulations. In CG it is enough to perform a short energy minimization and a single pressure/temperature equilibration step before production. In GROMACS, we need to use the command gmx grompp to create a processed binary file (with the extension .tpr) for running minimization/MD calculations. The instructions for the calculation are in .mdp files. Again, let’s start with the POPC membrane:\n\nPOPC membrane\n\n%cd {path}/minimal/POPC/\n\n\nEnergy minimization\nLet’s create the tpr file (em.tpr) to perform the energy minimization. You will need a mdp file, available in the previous directory (../em.mdp). Open it with a text editor to check it.\n\nUse the grompp tool of GROMACS. You can run gmx grompp with the flag -h for listing all the possible options.\n\n#Try yourself!\n#Uncomment to run\n\n#!gmx grompp ...\n\n\n# @title Solution\n\n!gmx grompp -f ../em.mdp -c system_neutralized.gro -p top.top -n index.ndx -o em.tpr -maxwarn 2\n\nRun now the minimization with:\n\n!gmx mdrun -deffnm em\n\n\n\nEquilibration\nWe will now equilibrate the system using the file ../eq.mdp. You can donwload it and check it with a text editor. Note that we wiil use a semiisotropic pressure coupling (isotropic in the x and y direction, but different in the z direction), something typical when we work with membranes.\n\nLet’s create the tpr file (eq.tpr), and remember to include the index.ndx file:\n\n#Try yourself!\n#Uncomment to run\n\n#!gmx grompp -f ../eq.mdp ...\n\n\n# @title Solution\n\n!gmx grompp -f ../eq.mdp -c em.gro -p top.top -n index.ndx -o eq.tpr -maxwarn 2\n\nRun now the equilibration:\n\n!gmx mdrun -v -deffnm eq\n\n\n\nProduction\nFinally, we can create the .tpr and run the production using the md.mdp file.\n\n#Try yourself!\n#Uncomment to run\n\n#!gmx grompp ...\n\n\n# @title Solution\n\n!gmx grompp -f ../md.mdp -p top.top -c eq.gro -n index.ndx -o md.tpr\n\nSince this step is quite computationally expensive, we’ll take the trajectory file (md.xtc) from the worked directory (also, some additional files to avoid incompatibilities).\n\n!cp {path}/worked/POPC/md.xtc .\n!cp {path}/worked/POPC/index.ndx .\n!cp {path}/worked/POPC/md.gro .\n!cp {path}/worked/POPC/md.tpr .\n\n\n\n\nPOPC-POPG 3:1 membrane\nNow, try to do it yourself with the other membrane!\n\n%cd {path}/minimal/POPC-POPG_31/\n\n\nEnergy minimization\n\n# Create the em.tpr file\n\n!gmx\n\n\n# @title Solution\n\n!gmx grompp -f ../em.mdp -c system_neutralized.gro -p top.top -n index.ndx -o em.tpr -maxwarn 2\n\n\n# Run the minimization\n\n!gmx\n\n\n# @title Solution\n\n!gmx mdrun -deffnm em\n\n\n\nEquilibration\n\n#Create the eq.tpr file\n\n!gmx\n\n\n# @title Solution\n\n!gmx grompp -f ../eq.mdp -c em.gro -p top.top -n index.ndx -o eq.tpr -maxwarn 2\n\n\n#Run the equilibration\n\n!gmx\n\n\n# @title Solution\n\n!gmx mdrun -v -deffnm eq\n\n\n\nProduction\n\n#Create the md.tpr file\n\n!gmx\n\n\n# @title Solution\n\n!gmx grompp -f ../md.mdp -p top.top -c eq.gro -n index.ndx -o md.tpr\n\nDon’t run the production, let’s copy the files from the worked directory:\n\n!cp {path}/worked/POPC-POPG_31/md.xtc .\n!cp {path}/worked/POPC-POPG_31/index.ndx .\n!cp {path}/worked/POPC-POPG_31/md.gro .\n!cp {path}/worked/POPC-POPG_31/md.tpr ."
  },
  {
    "objectID": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-4---analysis",
    "href": "docs/tutorials/Martini3/collabtuts/Tutorial2_Lipidomics_Mag2.html#step-4---analysis",
    "title": "Coarse-grain MD tutorial",
    "section": "Step 4 - Analysis",
    "text": "Step 4 - Analysis\nWe’re going to make some adjustments to the trajectory and perform some analyses. After that, we will visualize the results.\n\nPOPC membrane\nLet’s start this section analysing the POPC membrane trajectory:\n\n%cd {path}/minimal/POPC/\n\n\nTrajectory processing\nLet’s remove the water and ions and make all molecules whole:\n\n%%bash\necho 'Bilayer_Protein' | gmx trjconv -f md.xtc -s md.tpr -pbc whole -o md_pbc.xtc -n index.ndx\n\nLet’s do the same, but using only the last frame of the simulation:\n\n%%bash\necho 'Bilayer_Protein' | gmx trjconv -f md.gro -s md.tpr -pbc whole -o md_pbc.gro -n index.ndx\n\nLet’s convert the production tpr file into another with fewer atoms compatibl with our centered trajectory (since we now ignore the solvent).\n\n%%bash\necho 'Bilayer_Protein' | gmx convert-tpr -s md.tpr -n index.ndx -o md_pbc.tpr\n\n\n\nLipid contacts counting\nTo count contacts we first get a list of closest distances between any lipid and any AMP over time, using gmx mindist. Display first the help options with the -h flag.\n\n!gmx mindist -h\n\nTry now to calculate the contacts using gmx mindist. You will need to choose the options Protein and non-Protein (since there are not water or ions). Moreover, use the flag -group (check in the info what it does). Name the output contacts_amp-bilayer.xvg using the flag -o.\n\n#Try yourself!\n#Uncomment to run\n\n#%%bash\n#echo 'Protein' 'non-Protein' | gmx mindist ...\n\n\n# @title Solution\n\n!echo 'Protein' 'non-Protein' | gmx mindist -s md_pbc.tpr -f md_pbc.xtc -on contacts_amp-bilayer.xvg -group\n\n\n\n\nPOPC-POPG 3:1 membrane\nNow, let’s do it with the other membrane.\n\n%cd {path}/minimal/POPC-POPG_31/\n\n\nTrajectory processing\nLet’s remove the waters and ions and make molecules whole. We will also do the same for just one frame and create a new .tpr file compatible with the treated trajectory.\n\n%%bash\necho 'Bilayer_Protein' | gmx trjconv -f md.xtc -s md.tpr -pbc whole -o md_pbc.xtc -n index.ndx\necho 'Bilayer_Protein' | gmx trjconv -f md.gro -s md.tpr -pbc whole -o md_pbc.gro -n index.ndx\necho 'Bilayer_Protein' | gmx convert-tpr -s md.tpr -n index.ndx -o md_pbc.tpr\n\n\n\nLipid conctacts counting\nAnd now let’s calculate the number of contacts. Do you think you’d be able to do it yourself? Give it a try!\n\n#Try yourself!\n#Uncomment to run\n\n#%%bash\n#echo 'Protein' 'non-Protein' | gmx mindist ...  -o contacts_amp-bilayer.xvg\n\n\n# @title Solution\n\n!echo 'Protein' 'non-Protein' | gmx mindist -s md_pbc.tpr -f md_pbc.xtc -on contacts_amp-bilayer.xvg -group\n\n\n\n\nVisualize the last frame\nLet’s start by visualizing the last structure of the simulations. Go to the main directory.\n\n%cd {path}/minimal/\n\nFirst, the one with POPC:\n\nview_membrane_PC = nv.NGLWidget()\nview_membrane_PC.add_component(nv.FileStructure('POPC/md_pbc.gro'))\nview_membrane_PC.add_representation('tube', selection='protein', radius=1)\nview_membrane_PC.add_representation('surface', selection='POPC', color='grey')\nview_membrane_PC\n\nCompare it with the POPC-POPG 3:1 membrane.\n\nview_membrane_PCPG = nv.NGLWidget()\nview_membrane_PCPG.add_component(nv.FileStructure('POPC-POPG_31/md_pbc.gro'))\nview_membrane_PCPG.add_representation('tube', selection='protein', radius=1)\nview_membrane_PCPG.add_representation('surface', selection='POPC', color='grey')\nview_membrane_PCPG.add_representation('surface', selection='POPG', color='green')\nview_membrane_PCPG\n\nApparently, Mag2 interacts more with the bacterial membrane. However, we are only observing one frame of the trajectory, which might not be representative. Let’s visualize the results of the contacts during the entire trajectory to gain more information.\n\n\nPrint the contacts\nAfter calculating the contacts between the AMPs and the lipids in former sections, we will plot them for visualization. In the main directory we have a Python script called contacts_vs_time.py, which will plot the contacts betwen AMPs and lipids per membrane. Run it.\n\n%matplotlib inline\n\n\n!python3 contacts_vs_time.py\n\nThis script will generate an output in PDF format (contacts_amp-bilayer.pdf) that you can download. To visualize it in this Colab, run the following cell:\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nPOPC = np.loadtxt('POPC/contacts_amp-bilayer.xvg', comments=('@', '#'))\nPOPCPG = np.loadtxt('POPC-POPG_31/contacts_amp-bilayer.xvg', comments=('@', '#'))\ncontacts_POPC = POPC[:,1:]\ncontacts_POPCPG = POPCPG[:,1:]\ntime = len(contacts_POPC)\nplt.plot(np.arange(1, len(contacts_POPC) + 1), contacts_POPC, label='POPC', color='red')\nplt.plot(np.arange(1, len(contacts_POPCPG) + 1), contacts_POPCPG, label='POPC-POPG 3:1', color='blue')\nplt.title('Contacs AMP - Bilayer')\nplt.legend()\nplt.xlabel('Time (ns)')\nplt.ylabel('# contacts')\nplt.show()\n\nAs you can see, the number of contacts is higher in the bacterial membrane model. Do you think Mag2 has antimicrobial potential?\n\n\nConclusion\nCongratulations! You’ve reached the end of this tutorial! Visit https://cgmartini.nl and continue exploring Martini and Coarse-Grained MD!"
  },
  {
    "objectID": "docs/tutorials/Martini3/LipidsI/index.html",
    "href": "docs/tutorials/Martini3/LipidsI/index.html",
    "title": "Lipid bilayers - Part I: Self-assembly",
    "section": "",
    "text": "In case of issues, please contact lpborgesaraujo@tecnico.ulisboa.pt or m.n.melo@itqb.unl.pt.\n\n\nSummary\n\nIntroduction\nBilayer self-assembly\nBilayer equilibrium run and analysis\n\nArea per lipid\nBilayer thickness\nLateral difussion\nOrder parameters\nAdvanced: additional analysis\n\nChanging lipid type\n\nUnsaturated tails\nChanging the headgoups\n\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nThe Martini coarse-grained (CG) model was originally developed for lipids[1,2]. The underlying philosophy of Martini is to build an extendable CG model based on simple modular building blocks and to use only few parameters and standard interaction potentials to maximize applicability and transferability. Martini 3 greatly expanded the number of possible interactions, but retains this building-block approach[3]. Due to the modularity of Martini, a large set of different lipid types has been parameterized. Their parameters are available with the Martini 3 release archive. In this tutorial, you will learn how to set up lipid-water system simulations with lipids from this collection, with a focus on bilayers. You will also study a number of standard bilayer properties.\nThese tutorials assume a basic understanding of the Linux operating system and the gromacs molecular dynamics (MD) simulation package. An excellent gromacs tutorial is available at: http://www.mdtutorials.com/gmx/.\nThe aim of the tutorial is to create and study properties of CG Martini models of lipid bilayer membranes. First, we will attempt to spontaneously self-assemble a DPPC bilayer and check various properties that characterize lipid bilayers, such as the area per lipid, bilayer thickness, order parameters, and diffusion. Next, we will change the nature of the lipid head groups and tails, and study how that influences the properties. Finally, we will move on to creating more complex multicomponent bilayers.\nYou can download all the files, including worked examples of this tutorial (GROMACS version 2021): bilayer-lipidome-tutorial-GMX5_20170408.tar, this is a rather large archive. A smaller set that expects you to do more yourself is recommended and is named: bilayer-lipidome-tutorial-GMX5_2017Aug04.tar Unpack one of the lipidome-tutorial.tar archives (NOTE: both expand to a directory called bilayer-lipidome-tutorial), and enter the bilayer-lipidome-tutorial directory:\ntar -xzvf bilayer-lipidome-tutorial-GMX5_2017Aug04.tar\ncd bilayer-lipidome-tutorial\n\n\nBilayer self-assembly\n\nWe will begin with self-assembling a dipalmitoyl-phosphatidylcholine (DPPC) bilayer from a random configuration of lipids and water in the simulation box. Enter the spontaneous-assembly/initial_assembly subdirectory. The first step is to create a simulation box containing a random configuration of 128 DPPC lipids. This can be done by starting from a file containing a single DPPC molecule, which you can get from the Martini lipidome, under the entry for DPPC. Download the DPPC-em.gro file (but not any .itp file from there, as those are specific for Martini 2):\nwget https://cgmartini-library.s3.ca-central-1.amazonaws.com/1_Downloads/ff_parameters/martini2/lipidome/pc/dppc/DPPC-em.gro\n\n\nNote The DPPC model corresponds to atomistic C16:0 dipalmitoyl (DPPC) - C18:0 distearoyl (DSPC) tails. This reflects that, in Martini, the 4-to-1 mapping in acyl tails limits the resolution and the same model represents in this case a C-16 tail (palmitoyl) and a C-18 tail (stearoyl, hence DSPC). Also note that you can download coordinate files for many Martini lipids from the website. For the time being these structures are mostly for Martini 2 lipids, but structurally the difference doesn’t matter in the cases, like DPPC, where the Martini 3 lipid has the same mapping and number of beads. Finally, for cases when you have a lipid topology but not its structure, see the Lipid Bilayers II tutorial on using the insane script, or look into the molmaker.py script for generating structures directly from topologies.\n\n\nThe gromacs tool insert-molecules can take the DPPC-em.gro this single-molecule conformation and attempt to place it in a simulation box multiple times at a random position and random orientation, each time checking that there are no overlaps between the consecutively placed molecules. For help on any gromacs tool, you can add the -h flag.\ncd spontaneous-assembly/initial_assembly\ngmx insert-molecules -ci DPPC-em.gro -box 7.5 7.5 7.5 -nmol 128 -radius 0.21 -try 500 -o 128_noW.gro\nThe value of the flag -radius (default van der Waals radii) has to be increased from its default atomistic length (0.105 nm) to a value reflecting the size of Martini CG beads. The output filename is arbitrary but we choose one ending in _noW to indicate ‘no Water’.\nUsing the gromacs tool solvate, add 6 CG waters per lipid (note that this corresponds to 24 all-atom waters per lipid, 768 in total). gmx solvate needs to have the structure of an equilibrated water box to use as a template to fill the empty space in 128_noW.gro. The website has one (water.gro) available for you to download [here]:\nwget https://cgmartini-library.s3.ca-central-1.amazonaws.com/1_Downloads/example_applications/solvent_systems/water.gro\nYou can now run solvate:\ngmx solvate -cp 128_noW.gro -cs water.gro -o waterbox.gro -maxsol 768 -radius 0.21\nAlso here, the value of the flag -radius is used to reflect the size of Martini CG beads. A new file, waterbox.gro is produced containing the 128 lipids and added water beads.\nNow you will perform an energy minimization of the solvated system, to get rid of high forces between beads that may have been placed quite close to each other. The settings file minimization.mdp is provided for you, but you will need the topology for water and for the DPPC lipid, and to organize them as a .top file. From the website’s Downloads -&gt; Force field parameters -&gt; Martini3 -&gt; Particle definitions section you can get the zip file for the Martini 3 release, which contains the relevant topologies:\nwget https://cgmartini-library.s3.ca-central-1.amazonaws.com/1_Downloads/ff_parameters/martini3/martini_v300.zip\nunzip martini_v300.zip\nNote that the Martini 3 release is organized into several .itp files, each with the definitions for a class of molecules. For this tutorial you won’t need all of the Martini 3 .itps, only the one where water is defined (hint: it’s a ‘solvent’) and the one where DPPC is defined (hint: it’s a ‘phospholipid’). There is a third .itp you will need, and that is the one with all the Martini 3 particle definitions (hint: it’s martini_v3.0.0.itp). The needed .itps should be placed in the tutorial directory.\nTo create the .top file (we’ll call it dppc.top) that describes the system topology to GROMACS, you can follow the template below. Semi-colons indicate comments, which are ignored, but hashtags aren’t: they’re preprocessing directives. Namely, it is the #include directive that allows us to bring into the .top the particle/molecule information in the .itps. Use your editor of choice (gedit/vi/other) to create a file dppc.top, copy the template into it and complete the ‘…’ fields (hint: to figure out how many waters to set, look at the output of gmx solvate to see how many W beads were added; the maximum number is 768, as specified with the -maxsol option).\n#include \"martini_v3.0.0.itp\" ; the particle definitions should be included first\n#include \"...\" ; include here the relevant .itps defining the molecules to use\n#include \"...\"\n\n[ system ]\n; This title is arbitrary (but something descriptive helps)\nDPPC BILAYER SELF-ASSEMBLY\n\n[ molecules ]\n; Molecule types and their numbers are written in the order\n; they appear in the structure file\nDPPC ...\nW    ...\nYou are now ready to perform an energy minimization.\ngmx grompp -f minimization.mdp -c waterbox.gro -p dppc.top -o dppc-min-solvent.tpr\ngmx mdrun -s dppc-min-solvent.tpr -v -c minimized.gro\nNow, you are ready to run the self-assembly MD simulation, by using the martini_md.mdp run settings file and the just-minimized minimized.gro. 30 ns, or 1.5 million simulation steps at 20 fs per step, should suffice.\ngmx grompp -f martini_md.mdp -c minimized.gro -p dppc.top -o dppc-md.tpr\ngmx mdrun -s dppc-md.tpr -v -x dppc-md.xtc -c dppc-md.gro\nThis might take approximately 10 minutes on a single CPU but by default gmx mdrun will use all available CPUs on your machine. The -v option shows an estimate of the time to completion, and it is interesting to observe how the generations of desktop computers have sped up this 30 ns simulation over the years. See gmx mdrun’s help (-h) for instructions on how to tune the numbers of parallel threads gmx mdrun uses. You may want to check the progress of the simulation to see whether the bilayer has already formed before the end of the simulation. You may do this most easily by starting the inbuilt gromacs viewer (you will need to open a new terminal and make sure you are in the directory where this simulation is running):\ngmx view -f dppc-md.xtc -s dppc-md.tpr\nor, alternatively, use VMD or pymol. Both VMD and pymol suffer from the fact that Martini bonds are usually not drawn because they are much longer than standard bonds and the default visualization is not very informative. For visualization with pymol this is solved most easily by converting the trajectory to .pdb format, explicitly writing out all bonds (select System or DPPC, depending on whether you want to visualize the entire system or only the lipids). The disadvantage is that very large files are produced in this conversion!\ngmx trjconv -s dppc-md.tpr -f dppc-md.xtc -o dppc-md.pdb -pbc whole -conect\npymol dppc-md.pdb \nFor VMD, a plugin script cg_bonds-v5.tcl was written that takes the GROMACS topology file and adds the Martini bonds defined in the topology (this file is included in the directory for your convenience, but you would normally want to download it from the Tools -&gt; Visualization section of the website, store it in a generally useful location and refer to it when needed). A useful preprocessing step for VMD visualization is to avoid molecules being split over the periodic boundary, because if they are, very long bonds will be drawn between them. A script do_vmd.sh has been prepared for you for visualization using VMD. You will probably need to make the script executable.\nchmod +x do_vmd.sh\n./do_vmd.sh\nThe initial and final snapshots should look similar to Fig. 1, at least if the self-assembly resulted in a bilayer in the allotted time, which is not guaranteed. You may have noticed, however, that there is relatively little water, and some part of the initial solvated box is actually devoid of water. This helps to more or less guarantee a bilayer, but does make the simulation a little less realistic. You can test by solvating the lipids with more solvent. You can do this by changing the -maxsol flag on the gmx solvate command.\nIn the meantime, have a close look at the DPPC section of the phospholipid .itp file. The available bead types and their interactions are defined in martini_v3.0.0.itp and described in the 2021 Martini 3 paper[3]. Understanding how these files work, will help you work with the Martini 3 model and define new molecules or refine existing models.\n\n\n\nFigure 1 | DPPC bilayer formation. A) 64 randomly localized DPPC lipid molecules with water. B) After a 30 ns long simulation the DPPC lipids have aggregated together and formed a bilayer.\n\n\nWhen the simulation has finished, check whether you got a bilayer. If yes, check if the formed membrane is normal to the z-axis (i.e., that the membrane is situated in the xy-plane). Have a look at the self-assembly process: can you recognize intermediate states, such as micelles, and do you see metastable structures such as a water pore (water spanning the membrane interior) and/or a lipid bridge (lipid tail(s) spanning the water layer)?\n\n\nBilayer equilibrium run and analysis\n\nIf your bilayer was formed in a plane other than the xy-plane, rotate the system so that it will (with gmx editconf). In case you did not get a bilayer at all, you can continue the tutorial with the pre-formed one from dspc-bilayer.gro. (Example files of the tutorial assume that this file is used.) From this point on, we will refer to the bilayer as a DSPC bilayer. As remarked earlier, in Martini, the 4-to-1 mapping of acyl tails limits the resolution and the same model represents in this case a C-16 tail (palmitoyl) and a C-18 tail (stearoyl, hence DSPC). The reason for referring to the lipid as DSPC is that later on, we will compare the simulated properties to experiment and we will compare different lipids all with the same number of beads, changing either the head group from PC to PE or changing the tail from stearoyl (C-18, fully saturated) to oleoyl (C-18, single cis double bond at C-9).\nThe spontaneous assembly simulation was done using isotropic pressure coupling. The bilayer may have formed but is probably under tension because of the isotropic pressure coupling. Therefore, we first need to run a simulation in which the area of the bilayer can reach a proper equilibrium value. This requires that we use independent pressure coupling in the plane and perpendicular to the plane. Set up a simulation for another 30 ns at zero surface tension (switch to semi-isotropic pressure coupling; if the pressure is the same in the plane and perpendicular to the plane, the bilayer will be at zero surface tension) at a higher temperature of 341 K. This is above the experimental gel to liquid-crystalline transition temperature of DSPC (you will find how to change pressure coupling and temperature in the gromacs manual).\n\n\nGood practices in membrane simulations. To properly sample in an isothermal-isobaric ensemble, you should at this point switch to the Parrinello-Rahman barostat (12 ps is a typical tau-p value to use with it). The Parrinello-Rahman barostat is less robust than the Berendsen one, and may diverge (crash) if the system is far from equilibrium. As such, is usually used only on production runs, whereas Berendsen is used in preparation ones.\n\nBecause of potentially poor heat transfer across the membrane-water interface, it is recommended that the solvent and the membrane groups of particles each be coupled to their own thermostat, to prevent unequal heat accumulation. You can set that in your .mdp using the tc-grps option.\nBuildup in numerical precision error may cause the system to gain overall momentum. This is undesirable because such translation will be interpreted as temperature by the thermostat, and result in an excessively cooled system. Such center-of-mass motion (COMM) is corrected using comm-mode = linear. When membranes are involved, it is also possible (even in the absence of precision errors, or when controlling for COMM) that the membrane phase gains momentum relative to the water phase. In this case, the COMM should be corrected for each phase separately, using the comm-grps option. In some applications, it may be needed to further correct for the COMM of each leaflet separately.\n\nIt is highly recommended that you make perform this simulation in a new directory, name it, for example equilibration. Copy the required files there, edit the .mdp file, and set the run going (the commands for this final step — involving gmx grompp and gmx mdrun — are not given explicitly).\nmkdir ../equilibration\ncp dppc-md.gro (or dspc-bilayer.gro) ../equilibration/.\ncp martini_md.mdp ../equilibration/.\ncp martini*.itp ../equilibration/.\ncp dppc.top ../equilibration/.\ncd ../equilibration\n$ [gedit/vi] martini_md.mdp\nThen prepare a .tpr file (gmx grompp etc) and run the simulation (gmx mdrun etc; i.e. similar instructions as for the spontaneous assembly run explained above). If you do not want to wait for this simulation to finish, skip ahead and use a trajectory provided in the fully worked tutorial archive. NOTE!! The commands below assume your production run is producing files with the prefix md. This need not be the case, so replace these entries with the appropriate name(s) for your simulations.\nIf you have difficulty in running the simulation you may want to use the 30 ns trajectory already present in the subdirectory spontaneous-assembly/equilibration/ of the worked example.\nFrom the latter simulation, we can calculate properties such as:\n\narea per lipid\nbilayer thickness\nP2 order parameters of the bonds\nlateral diffusion of the lipids\n\nIn general, for the analysis, you might want to discard the first few ns of your simulation as equilibration time. The area per lipid as a function of time should give you an indication of which part of the simulation you should definitely not include in the analysis.\n\nArea per lipid\n\nTo get the (projected) area per lipid, you can simply divide the area of your simulation box by half the number of lipids in your system. The box-sizes can be obtained by running the gromacs tool gmx energy(ask for Box-X and Box-Y, remember that gmx 'tool' -h brings up the help of any gromacs tool). To calculate the area per lipid as a function of time we’ll use a couple of python lines (though many alternative methods are possible). The gromacs tool analyze provides a convenient way to then calculate the average and error estimate in any series of measurements (use the option -ee for the error estimate, and make sure you feed gmx analyze a file with a .xvg extension). (Note that this calculation might not be strictly OK, because the self-assembled bilayer might be slightly asymmetric in terms of number of lipids per monolayer, i.e., the areas per lipid are different for the two monolayers. However, to a first approximation, we will ignore this here.)\ngmx energy -f md.edr -o box-xy.xvg\n  &gt; 11 12 0 [press Enter]\nHere, the second line is meant to show that you need to type the number(s) of the property/ies you want. In our version this is 11 for Box-X and 12 for Box-Y. After typing \"Enter\" the output file is produced. You can visualize it in xmgrace:\nxmgrace -nxy box-xy.xvg\nTo obtain the area per lipid, you need to multiply the values of x and y at each timepoint, and divide by 64 (number of lipids per monolayer or leaflet). To do this start a python3 session in your command line and run the following lines:\nimport numpy as np\nxy = np.loadtxt('box-xy.xvg', comments=('#','@'))\nareas = xy[:,1] * xy[:,2] / 64\nnp.savetxt('area.xvg', np.column_stack((xy[:,0], areas)))\nThis will create file area.xvg, which you can visualize with xmgrace:\nxmgrace area.xvg\nNext, get the averages and error estimates using the gromacs tool analyze. You can discard what you deem to be the relaxation time by using the flag -b [initial time to ignore].\ngmx analyze -f area.xvg -ee\ngmx analyze -f area.xvg -ee -b 15000\nAs an alternative and use awk to calculate the area per lipid. Then look at the statistics.\nawk '{if (substr($1,1,1) != \"#\" && substr($1,1,1) != \"@\") print $1, $2*$3/64}' &lt; box-xy.xvg &gt; area.xvg\ngmx analyze -f area.xvg -ee -b 15000\n\n\nBilayer thickness\n\nTo get the bilayer thickness, use gmx density. You can get the density for a number of different functional groups in the lipid (e.g., phosphate and ammonium headgroup beads, carbon tail beads, etc) by feeding an appropriate index-file to gmx density (make one with gmx make_ndx; you can select, e.g., the phosphate beads by typing a P*; type q to exit , this leaves you with an index file named index.ndx). You can obtain an estimate of the bilayer thickness from the distance between the headgroup peaks in the density profile.\ngmx make_ndx -f md.gro\n  &gt; a P*\n  &gt; q\ngmx density -f md.xtc -s md.tpr -b 15000 -n index.ndx -o p-density.xvg -xvg no\n  &gt; 4\nxmgrace p-density.xvg\nA more appropriate way to compare to experiment is to calculate the electron density profile. The gmx density tool also provides this option. However, you need to supply the program with a data-file containing the number of electrons associated with each bead (option -ei electrons.dat). The format is described in the gromacs manual and not part of this tutorial. Compare your results to those from small-angle neutron scattering experiments[4]:\n\nthickness = 4.98 ± 0.15 nm\narea per lipid = 0.65 ± 0.05 nm2\n\n\n\nLateral diffusion\n\nBefore calculating the lateral diffusion, remove jumps over the box boundaries (gmx trjconv -pbc nojump). Then, calculate the lateral diffusion using gmx msd. Take care to remove the overall center of mass motion (-rmcomm), and to fit the line only to the linear regime of the mean-square-displacement curve (-beginfit and -endfit options of gmx msd). To get the lateral diffusion, choose the -lateral z option.\ngmx trjconv -f md.xtc -s md.tpr -pbc nojump -o nojump.xtc\ngmx msd -f nojump.xtc -s md.tpr -rmcomm -lateral z -b 15000\nxmgrace msd.xvg\nIn comparing the diffusion coefficient obtained from a Martini simulation to a measured one, one can expect a faster diffusion at the CG level due to the smoothened free energy landscape (note, however, that the use of a defined conversion factor is no longer recommended, as it can vary significantly depending on the molecule in question). Also note that the tool averages over all lipids to produce the MSD curve. It is probably much better to analyze the motion of each lipid individually and remove center-of-mass motion per leaflet. This requires some scripting on your part and is not included in this tutorial.\n\n\nOrder parameters\n\nNow, we will calculate the (second-rank) order parameter, which is defined as:\nP2 = 1/2 (3 cos2&lt;θ&gt; − 1),\nwhere θ is the angle between the bond and the bilayer normal. P2 = 1 means perfect alignment with the bilayer normal, P2 = −0.5 anti-alignment, and P2 = 0 random orientation.\nA script to calculate these order parameters can be downloaded in the Downloads -&gt; Tools -&gt; Other tools section of the website (scroll down to the section on do_order, and download the script do-order-gmx5.py. There is also a version located in the directory scripts/). Copy the .xtc and .tpr files to an analysis subdirectory (the script expects them to be named traj.xtc and topol.tpr, respectively). The script do-order-gmx5.py will calculate P2 for you. As it explains when you invoke it, it needs a number of arguments. You may need to or want to change some of the arguments. The command:\npython do-order-gmx5.py md.xtc md.tpr 15000 30000 20 0 0 1 128 DPPC\nWill, for example, read 15 to 30 ns from the trajectory md.xtc. The simulation has 128 DPPC lipids and the output is the P2, calculated relative to the Z-axis, and average over results from every 20th equally-spaced snapshot in the trajectory. Results are available as output and in the files order.dat and S-profile.dat; the latter is a profile that can be compared to published profiles, e.g. in Ref.[1] (remember, DSPC and DPPC share the same Martini representation!).\n\n\nAdvanced: additional analyses\n\nDifferent scientific questions require different methods of analysis and no set of tools can span them all. There are various tools available in the gromacs package, see the gromacs manual. Most simulation groups, therefore, develop sets of customized scripts and programs many of which they make freely available, such as the Morphological Image Analysis and the 3D pressure field tools available here. Additionally a number of packages are available to for assistance with analysis and the development of customized tools, such as the python MDAnalysis package.\n\n\n\nChanging lipid type\n\nLipids can be thought of as modular molecules. In this section, we investigate the effect of changes in the lipid tails and in the headgroups on the properties of lipid bilayers using the Martini model. We will i) introduce a double bond in the lipid tails, and ii) change the lipid headgroups from phosphatidylcholine (PC) to phosphatidylethanolamine (PE).\n\nUnsaturated tails\n\nTo introduce a double bond in the tail, we will replace the DSPC lipids by DOPC. Set up a directory for the DOPC system. Enter that directory. Compare the Martini 3 topologies of these two lipids in the phospholipids .itp. You will see that the number of beads for these lipids is the same, and in the same headgroup-glycerol-tails order. You can therefore set up a DOPC bilayer quite simply from your DSPC result. Copy over the .top and .mdp file from the equilibration DSPC run. Copy the final frame of the DSPC run to serve as the starting frame of the DOPC run. Replace DPPC by DOPC in your .top and .mdp files, and gmx grompp will do the rest for you (you can ignore the ”atom name does not match” warnings of grompp); you do this by adding the -maxwarn option to the gmx grompp command, e.g. gmx grompp -maxwarn 3 allows a maximum of 3 warnings and will still produce a .tpr file. Execute the simulation, or, if you are impatient, use the trajectory provided for you as spontaneous-assembly/equilibration/dopc/dopc-ext.xtc. NOTE: if you take this shortcut, and because the lipids DSPC and DOPC have exactly the same number of beads, you can use the .tpr file from DSPC to analyze the dopc-ext.xtc file.\n\n\nChanging the headgroups\n\nSimilarly, starting again from the final snapshot of the DSPC simulation, you can easily change the head groups from PC to PE, yielding DPPE. Also for this system, run a 30 ns MD simulation, or, if you are impatient, use the trajectory provided for you as spontaneous-assembly/equilibration/dspe/dspe-ext.xtc. NOTE: as above, when taking this shortcut, and because the lipids DSPC and DPPE have exactly the same number of beads, you can use the .tpr file from DSPC to analyze the dspe-ext.xtc file. Compare the above properties (area per lipid, thickness, order parameter, diffusion) between the three bilayers (DSPC, DOPC, DSPE). Do the observed changes match your expectations? Why/why not? Discuss.\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nVMD (https://www.ks.uiuc.edu/Research/vmd/)\n\n\n\nReferences\n\n[1] Marrink, S. J., De Vries, A. H., and Mark, A. E. (2004) Coarse grained model for semiquantitative lipid simulations. J. Phys. Chem. B 108, 750–760. DOI:10.1021/jp036508g\n[2] Marrink, S. J., Risselada, H. J., Yefimov, S., Tieleman, D. P., and De Vries, A. H. (2007) The MARTINI force field: coarse grained model for biomolecular simulations. J. Phys. Chem. B 111, 7812–7824. DOI:10.1021/jp071097f\n[3] Souza, P. C. T., Alessandri, R., et al. (2021) Martini 3: a general purpose force field for coarse-grained molecular dynamics. Nat. Methods 18, 382–388. DOI: 10.1038/s41592-021-01098-3\n[4] Balgavy, P., Dubnicková, M., Kucerka, N., Kiselev, M. A., Yaradaikin, S. P., and Uhrikova, D. (2001) Bilayer thickness and lipid interface area in unilamellar extruded 1,2-diacylphosphatidylcholine liposomes: a small-angle neutron scattering study. Biochim. Biophys. Acta 1512, 40–52. DOI:10.1016/S0005-2736(01)00298-X"
  },
  {
    "objectID": "docs/tutorials/Martini3/ProLint/index.html",
    "href": "docs/tutorials/Martini3/ProLint/index.html",
    "title": "prolintpy: Automatic analysis of lipid-protein interactions",
    "section": "",
    "text": "In case of issues, please contact besian.sejdiu@stjude.org or tieleman@ucalgary.ca.\n\n\nSummary\n\nIntroduction\nInstallation\nLoading data and topology description\nContact-based metrics\nVisualization\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nprolintpy is a lightweight python library that aimes to automate the analysis and visualization of lipid-protein interactions.\nIt is districbuted as part of the ProLint framework with the aim of bridging the widening gap between data generation and gaining insight on biologically-relevant interactions between lipids and proteins. prolintpy is the library that the ProLint webserver uses on the backend to automate topology generation and analysis of lipid-protein interactions. Nevertheless, prolintpy includes a dedicated interface for the visualization of lipid-protein interactions similar to the webserver which can be accessed through JupyterLab/Jupyter Notebook.\nYou can use prolintpy for the following:\n\nAutomatically generate a topology description of your system (no tpr file needed)\nCalculate contact-based metrics for lipid-protein interactions\nCalculate 2D and 3D densities (3D densities are work in progress)\nCalculate physics-based properties (in progress)\nInteractively visualize lipid-protein interactions\n\n\n\nInstallation\n\n\nNote: Python v3.6 or v3.7 are supported.\n\n\nMethod 1:\n\npip install prolintpy\n\nMethod 2:\n\ngit clone https://github.com/ProLint/prolintpy.git\ncd prolintpy\nconda env create -f environment.yml\nconda activate prolint\n\nMethod 3:\n\ngit clone https://github.com/ProLint/prolintpy.git\ncd prolintpy\npython setup.py install\n\nMethod 4 (if MDTraj causes problem):\n\nconda create --name prolint python=3.7\nconda activate prolint\nconda install -c conda-forge mdtraj\npython -m pip install prolintpy\nprolintpy relies on MDTraj to read input data files, as such, it is the only module that has to be imported alongside prolintpy:\nimport numpy as np\nimport mdtraj as md\nimport prolintpy as pl\n\n\nLoading data and topology description\n\nHead over to https://github.com/ProLint/tutorials/tree/main/data and download the following two files: test_data_1.gro and test_data_1.xtc.\nThe system we are loading contains only lipids and protein beads (water and ions have been removed). This is important otherwise prolintpy may treat water as if it were a lipid.\nFig. 1 shows the system we are going to load and work with.\n\n\n\nFigure 1 | Test data for the tutorial. The protein is shown with magenta, lipids are colored with blue (POPS), orange (POPE), and green (CHOL).\n\n\n# MDTraj v1.9.6 seems to have a bug when reading Martini coordinate files.\n# That is why prolintpy currently forces the installation of v1.9.5\n\nt = md.load('test_data_1.xtc', top='test_data_1.gro')\nt\nOutput:\n\n&lt;mdtraj.Trajectory with 17 frames, 23820 atoms, 3240 residues, and unitcells at 0x7fe268532a10&gt;\n\nLoad the data to prolintpy and define the protein and lipid topology\n\nWe first specify the resolution of the input data and indicate if we want to combine the proteins (only applicable if there are more than one protein in the system). Combining proteins will result in the calculated metrics being averages of all copies. In our system we only have one protein so we do not need it.\nresolution = \"martini\"\ncombine_proteins = False\nlipids = pl.Lipids(t.topology, resolution=resolution)\nproteins = pl.Proteins(t.topology, resolution=resolution).system_proteins(merge=combine_proteins)\n\n\nExtracting information from the input system\n\nGet all the lipid residues in the system:\nlipids.lipid_names()\nOutput:\n\narray(['POPE', 'POPS', 'CHOL'], dtype=object)\nGet the names of the different lipids as well as their count:\nlipids.lipid_count()\nOutput:\n\n{'POPE': 652, 'POPS': 652, 'CHOL': 652}\nGet a pandas DataFrame for the defined systems:\nlipids.ldf.head()\nOutput:\n\nserial name element resSeq resName chainID segmentID\n\n2956 2957 NH3 N 1285 POPE 0\n\n2957 2958 PO4 P 1285 POPE 0\n\n2958 2959 GL1 VS 1285 POPE 0\n\n2959 2960 GL2 VS 1285 POPE 0\n\n2960 2961 C1A C 1285 POPE 0\nRetrieve the residue IDs of all cholesterol lipids:\nlipids.ldf[lipids.ldf.resName == \"CHOL\"].resSeq.unique()\nOutput:\n\narray([1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,\n1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,\n1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,\n1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,\n1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,\n1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,\n2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,\n2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,\n2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,\n2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,\n2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,\n2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,\n2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,\n2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,\n2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,\n2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,\n2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,\n2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,\n2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,\n2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,\n2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,\n2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,\n2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,\n2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,\n2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,\n2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,\n2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,\n2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,\n2256, 2257, 2258, 2259, 2260, 2261, 2262, 2915, 2916, 2917, 2918,\n2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929,\n2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940,\n2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951,\n2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962,\n2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973,\n2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984,\n2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995,\n2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006,\n3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017,\n3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028,\n3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039,\n3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050,\n3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061,\n3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072,\n3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083,\n3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094,\n3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105,\n3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116,\n3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127,\n3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138,\n3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149,\n3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160,\n3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171,\n3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182,\n3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193,\n3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204,\n3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215,\n3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226,\n3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237,\n3238, 3239, 3240])\nList the proteins found in the system and store the first one (the only one here) in a variable. prolintpy derives topology information for proteins from the input coordinate file. Two proteins will be considered the same if they are entirely identical (same number of residues, completely identical order and type of atoms/beads).\nproteins\nOutput:\n\n[&lt;prolintpy.Protein containing 1 replicate(s) of Protein0 and 1284 beads each&gt;]\nGet information about the protein:\nprotein.name = \"MyProtein\" # Give the protein a new name\n\nprotein.n_residues\nOutput:\n\n1284\nprint (protein.first_residue, protein.last_residue)\nOutput:\n\n1 1284\nprotein.counter\nOutput:\n\n1\nGet the indices for residues 50, 60, and 70:\nprotein.get_indices([50, 60, 70])\nOutput:\n\nUsing the available dataframe\n[array([124, 125]), array([155, 156, 157, 158, 159]), array([179, 180])]\n\n\nWhy prolintpy is easy to scale-up\n\nIf the input system contains only one copy of only one protein type (as in this example) then proteins will be a list of only one element. This entails a little bit extra work to get the protein out of the list, but provides much more flexibility in handling more complex system setups. You can use the counter option alongside the length of the proteins list to extract information about proteins in the system dynamically.\nFor instance, to get a DataFrame representation for each protein in the system dynamically (that is without knowing anything about the composition of the input system), we can do that very easily One way of doing that is the following syntax:\ndef get_dataframes(proteins):\n    \"\"\"\n    Takes as input a prolintpy.Protein object and returns a list of DataFrame elements\n    for each copy of each protein in the system.\n    \"\"\"\n    dataframe_list = [protein.dataframe[protein_copy] for protein in proteins for protein_copy in range(protein.counter)]\n    return dataframe_list\n\n# returns a list of DataFrame elements\nget_dataframes(proteins)\nOutput:\n\n[ serial name element resSeq resName chainID segmentID\n0 1 BB B 1 ARG 0\n1 2 SC1 S 1 ARG 0\n2 3 SC2 S 1 ARG 0\n3 4 BB B 2 GLN 0\n4 5 SC1 S 2 GLN 0\n5 6 BB B 3 ARG 0\n6 7 SC1 S 3 ARG 0\n7 8 SC2 S 3 ARG 0\n8 9 BB B 4 TYR 0\n9 10 SC1 S 4 TYR 0\n10 11 SC2 S 4 TYR 0\n11 12 SC3 S 4 TYR 0\n12 13 BB B 5 MET 0\n13 14 SC1 S 5 MET 0\n14 15 BB B 6 GLU 0\n15 16 SC1 S 6 GLU 0\n16 17 BB B 7 LYS 0\n17 18 SC1 S 7 LYS 0\n18 19 SC2 S 7 LYS 0\n19 20 BB B 8 THR 0\n20 21 SC1 S 8 THR 0\n21 22 BB B 9 GLY 0\n22 23 BB B 10 LYS 0\n23 24 SC1 S 10 LYS 0\n24 25 SC2 S 10 LYS 0\n25 26 BB B 11 CYS 0\n26 27 SC1 S 11 CYS 0\n27 28 BB B 12 ASN 0\n28 29 SC1 S 12 ASN 0\n29 30 BB B 13 VAL 0\n... ... ... ... ... ... ... ...\n2926 2927 SC3 S 1269 TYR 0\n2927 2928 BB B 1270 GLU 0\n2928 2929 SC1 S 1270 GLU 0\n2929 2930 BB B 1271 THR 0\n2930 2931 SC1 S 1271 THR 0\n2931 2932 BB B 1272 ASN 0\n2932 2933 SC1 S 1272 ASN 0\n2933 2934 BB B 1273 THR 0\n2934 2935 SC1 S 1273 THR 0\n2935 2936 BB B 1274 PRO 0\n2936 2937 SC1 S 1274 PRO 0\n2937 2938 BB B 1275 SER 0\n2938 2939 SC1 S 1275 SER 0\n2939 2940 BB B 1276 CYS 0\n2940 2941 SC1 S 1276 CYS 0\n2941 2942 BB B 1277 CYS 0\n2942 2943 SC1 S 1277 CYS 0\n2943 2944 BB B 1278 ALA 0\n2944 2945 BB B 1279 LYS 0\n2945 2946 SC1 S 1279 LYS 0\n2946 2947 SC2 S 1279 LYS 0\n2947 2948 BB B 1280 GLU 0\n2948 2949 SC1 S 1280 GLU 0\n2949 2950 BB B 1281 LEU 0\n2950 2951 SC1 S 1281 LEU 0\n2951 2952 BB B 1282 ALA 0\n2952 2953 BB B 1283 GLU 0\n2953 2954 SC1 S 1283 GLU 0\n2954 2955 BB B 1284 MET 0\n2955 2956 SC1 S 1284 MET 0\n\n[2956 rows x 7 columns]]\n\n\n\nContact-based metrics\n\nRedefine topologies, but now we’ll only select CHOL and POPS lipids:\nresolution = \"martini\"\ncombine_proteins = False\nlipids = pl.Lipids(t.topology, resolution=resolution, lipid_names=[\"CHOL\", \"POPS\"])\nproteins = pl.Proteins(t.topology, resolution=resolution).system_proteins(merge=combine_proteins)\n\nBuild a prolintpy.ComputeContacts object\n\nWe use this object for all contact calculations:\ncontacts = pl.ComputeContacts(t, proteins, lipids)\ncontacts\nOutput:\n\n&lt;prolintpy.core.computecontacts.ComputeContacts at 0x7fe2683e6a90&gt;\nGiven a list of residues and a cutoff distance, calculate all neighboring lipids:\nresidues = [*range(85, 130)]\ncutoff = 0.5 # nm\n\n# We will calculate contacts with the list of residues defined above and store them in the result variable.\n# This variable will have all of the contact information we require.\nresults = contacts.compute_neighbors(t, residues=residues, cutoff=cutoff, grouped=False)\n\n# The command below will calcualte contacts with all residues, but it may take a while longer to finish.\nresults = contacts.compute_neighbors(t, cutoff=cutoff, grouped=False)\nresults is a nested dictionary, encoding the following information hierarchy: protein name &gt; protein copy &gt; residue ID &gt; prolintpy.LPContacts object:\nresults\nOutput:\n\n{'Protein0': {0: {85: &lt;prolintpy.LPContacts for residue 85&gt;,\n86: &lt;prolintpy.LPContacts for residue 86&gt;,\n87: &lt;prolintpy.LPContacts for residue 87&gt;,\n88: &lt;prolintpy.LPContacts for residue 88&gt;,\n89: &lt;prolintpy.LPContacts for residue 89&gt;,\n90: &lt;prolintpy.LPContacts for residue 90&gt;,\n91: &lt;prolintpy.LPContacts for residue 91&gt;,\n92: &lt;prolintpy.LPContacts for residue 92&gt;,\n93: &lt;prolintpy.LPContacts for residue 93&gt;,\n94: &lt;prolintpy.LPContacts for residue 94&gt;,\n95: &lt;prolintpy.LPContacts for residue 95&gt;,\n96: &lt;prolintpy.LPContacts for residue 96&gt;,\n97: &lt;prolintpy.LPContacts for residue 97&gt;,\n98: &lt;prolintpy.LPContacts for residue 98&gt;,\n99: &lt;prolintpy.LPContacts for residue 99&gt;,\n100: &lt;prolintpy.LPContacts for residue 100&gt;,\n101: &lt;prolintpy.LPContacts for residue 101&gt;,\n102: &lt;prolintpy.LPContacts for residue 102&gt;,\n103: &lt;prolintpy.LPContacts for residue 103&gt;,\n104: &lt;prolintpy.LPContacts for residue 104&gt;,\n105: &lt;prolintpy.LPContacts for residue 105&gt;,\n106: &lt;prolintpy.LPContacts for residue 106&gt;,\n107: &lt;prolintpy.LPContacts for residue 107&gt;,\n108: &lt;prolintpy.LPContacts for residue 108&gt;,\n109: &lt;prolintpy.LPContacts for residue 109&gt;,\n110: &lt;prolintpy.LPContacts for residue 110&gt;,\n111: &lt;prolintpy.LPContacts for residue 111&gt;,\n112: &lt;prolintpy.LPContacts for residue 112&gt;,\n113: &lt;prolintpy.LPContacts for residue 113&gt;,\n114: &lt;prolintpy.LPContacts for residue 114&gt;,\n115: &lt;prolintpy.LPContacts for residue 115&gt;,\n116: &lt;prolintpy.LPContacts for residue 116&gt;,\n117: &lt;prolintpy.LPContacts for residue 117&gt;,\n118: &lt;prolintpy.LPContacts for residue 118&gt;,\n119: &lt;prolintpy.LPContacts for residue 119&gt;,\n120: &lt;prolintpy.LPContacts for residue 120&gt;,\n121: &lt;prolintpy.LPContacts for residue 121&gt;,\n122: &lt;prolintpy.LPContacts for residue 122&gt;,\n123: &lt;prolintpy.LPContacts for residue 123&gt;,\n124: &lt;prolintpy.LPContacts for residue 124&gt;,\n125: &lt;prolintpy.LPContacts for residue 125&gt;,\n126: &lt;prolintpy.LPContacts for residue 126&gt;,\n127: &lt;prolintpy.LPContacts for residue 127&gt;,\n128: &lt;prolintpy.LPContacts for residue 128&gt;,\n129: &lt;prolintpy.LPContacts for residue 129&gt;}}}\nExtract contact data for a particular residue:\n# Proteins are named ProteinN, where N is 0, 1, 2, ..., number of copies in the system.\n# In our system we only have one copy of one protein, so the default name given is: Protein0\nresults['Protein0'][0][85]\nOutput:\n\n&lt;prolintpy.LPContacts for residue 85&gt;\ncontact_r88 = results['Protein0'][0][88]\ncontact_r88\nOutput:\n\n&lt;prolintpy.LPContacts for residue 88&gt;\nNot all interactions are equal! Residue 88 interacts with only one cholesterol lipid during the length of the input trajectory. However, it forms several interactions with POPS lipids, even though the input test trajectory is quite short. The output is a dictionary with lipids as keys and the contact duration as dictionary values. The time units here are the same as MDTraj.\ncontact_r88.contacts\nOutput:\n\n{'POPS': [300000.0, 900000.0, 300000.0, 600000.0, 1200000.0, 300000.0],\n'CHOL': [3900000.0]}\nWe can also retrieve the residue id of the lipids that form the interactions above. This is very useful if we want to build custom metrics or just in general customize the workflow:\ncontact_r88.lipids\nOutput:\n\n{'POPS': array([1677, 1773, 1817, 1888, 1889, 1934]), 'CHOL': array([2951])}\nOccupancy is a binary measure so we need to retrieve it separately:\ncontact_r88.occupancy\nOutput:\n\n{'POPS': array([1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.]),\n'CHOL': array([1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.])}\n\n\nCustomizability\n\nAltogether, the prolintpy capabilities highlighted above make it clear how easy it is to customize the workflow to your use-case. This is because analysis is not a closed system, and prolintpy provides access to its internal data at every step of the way. You can use the result dictionary above and loop through the different options without worrying about any of the other features of prolintpy.\nNevertheless, prolintpy provides several helper functions and features which make working with the contact informations above really easy.\n\n\nHelper functions\n\nHelper functions allow you to efficiently get data from the results dictionary defined above.\nFor instance, retrieve contact information for a residue with all lipids in the system:\npl.retrieve_contacts(results, 88)\nOutput:\n\ndefaultdict(list,\n{'POPS': [array([ 300000., 900000., 300000., 600000., 1200000., 300000.])],\n'CHOL': [array([3900000.])]})\n# If we want to retrieve occupancy values we can indicate that:\npl.retrieve_contacts(results, 88, contacts='occupancy')\nOutput:\n\ndefaultdict(list,\n{'POPS': [array([1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.])],\n'CHOL': [array([1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.])]})\nRetrieve contact information for a specific residue-lipid pair:\npl.retrieve_contacts_flat(results, 88, lipid=\"CHOL\")\nOutput:\n\narray([3900000.])\npl.retrieve_contacts_flat(results, 88, lipid='POPS')\nOutput:\n\narray([ 300000., 900000., 300000., 600000., 1200000., 300000.])\n\n\nBuild a pandas DataFrame\n\npandas DataFrames are the most convenient way to manipulate contact information. Building a DataFrame using prolintpy is a straightforward process.\ndf = pl.contacts_dataframe(results, proteins, t, radius=cutoff)\n\ndf.head()\nOutput:\n\nSort by the most interacting residues in terms of the Longest_Duration metric:\ndf.sort_values('Longest_Duration', ascending=False).head()\nOutput:\n\nGet the residue ids and indices of the top 5 residues interacting with cholesterol as measured by the Longest_Duration metric:\ntop_residues = df[df.Lipids == \"CHOL\"].sort_values('Longest_Duration', ascending=False).ResID.to_list()[:10]\nprint (\"Most interacting residues are: \", top_residues, end=\"\\n\" + '~' * 80)\nOutput:\n\nMost interacting residues are: [91, 88, 128, 121, 125, 124, 117, 118, 122, 114]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[f'Residue {res} with indices: {proteins[0].get_indices([res], suppress=True)[0]}' for res in top_residues]\nOutput:\n\n['Residue 91 with indices: [225 226 227 228]',\n'Residue 88 with indices: [220 221]',\n'Residue 128 with indices: [304 305]',\n'Residue 121 with indices: [292 293]',\n'Residue 125 with indices: [299 300]',\n'Residue 124 with indices: [297 298]',\n'Residue 117 with indices: [284 285]',\n'Residue 118 with indices: [286 287]',\n'Residue 122 with indices: [294 295]',\n'Residue 114 with indices: [279 280]']\n\n\n\nVisualization\n\nfrom bokeh.io import output_notebook\noutput_notebook()\n\nBokehJS 1.4.0 successfully loaded.\n\nMake sure you run these commands within the JupyerLab environment!\n\n\nScatter Plot\n\nOnce you have build a pandas DataFrame from the calculated contacts (by, for instance, running the contacts_dataframe() function), you can provide it as input to the appropriate prolintpy visualization apps:\npl.show_points(df, size=10)\n\n\n\nDistance Calculations & Visualization\n\nA very important (perhaps the most important?) calculation that is commonly done in lipid-protein interaction studies is measuring the distance between a residue and a lipid as a function of simulation time. This gives you a clear idea if the lipid is interacting preferentially with a residue or not. prolintpy provides two different ways to get distance information on lipid-protein interactions. The first method, presented in this section, is automated and relies on the prior calculation of contact-based metrics.\nThe way it works is that it goes through the calculated metrics, sorts them, and gets the top-ranking residues and lipids. It then goes over each residue and lipid combination and gets the best/strongest contact (that is, the contact that is maintained most strongly between the specific residue and lipid).\ndist = contacts.compute_distances(t, proteins[0], [*range(85, 91)], 'POPS', 'PO4', percentile_co=0.05, distance_co=0.7)\n\npl.show_distances(dist)\n\nThe second way prolintpy calculates and visualizes distances is by not relying on any prior calcualted metrics. Instead, you simply supply the protein and list of residues along with threshold arguments, and prolintpy will then calculate distance measurements.\nGiven a list of input residues, this function will loop through all the lipids in the system and display distances with best ranking lipids. Ranking is decided based on the following parameters:\n\n\n\n\n\n\n\n\n\nArgument\nDefault\nDescription\n\n\n\n\ndistance_co\n0.7\nA cutoff distance (nm) that a lipid must satisfy for percentile_co frames of the trajectory.\n\n\npercentile_co\n0.05\nThe percentage of the trajectory (measured in frames) that a lipid must be within the distance_co for it to be stored.\n\n\n\nHere is an example application:\nfrom prolintpy.core.computecontacts import retrieve_distances\nWe first build a dictionary of lipids and residues that are interacting preferably and then we compute the distances between them. You can use the top_nr argument to indicate how many top ranking results you want to consider.\nThis application is more computationally expensive since it requires the prior calculation of contact-based metrics, but it is much better in extracting good contacts. It also does not require any threshold definitions or manual input of lipid and residue ids.\ndistances_dict, SYSTEM_LIPIDS, lipids_found = retrieve_distances(df, group_lipids=False, resolution=resolution, lipids=lipids, top_nr=30)\ndistances = contacts.compute_lipid_distances(t, proteins[0], distances_dict, SYSTEM_LIPIDS, lipids_found)\n\npl.show_metric_distances(distances)\n\n\n\nContact Projection\n\nMay need to execute: jupyter-nbextension enable nglview --py --sys-prefix if visualization does not show:\n# if you have multiple cutoffs then you also need to filter the dataframe using one of the cutoffs.\ncontact_values = df[df.Lipids == \"CHOL\"].Longest_Duration.to_list()\n\n# residue_list is only required when working with a subset of protein residues.\nresidues = df[df.Lipids == \"CHOL\"].ResID.to_list()\n\npl.show_contact_projection(t, bf=contact_values, protein=proteins[0], residue_list=residues, ngl_repr='spacefill', cmap=\"Reds\")\n\n\n\n\nTools and scripts used in this tutorial\n\nThe source code is available here: https://github.com/ProLint/prolintpy. The documentation is available here: https://prolint.github.io/prolintpy. The webserver and its documentation: https://prolint.ca The source code of the webserver: https://github.com/ProLint/ProLint.\nprolintpy supports other application which are not shown here. They are part of the prolintpy.vis module. prolintpy is part of ProLint, a framework to automate analysis and visualization of lipid-protein interactions.\n\n\nReferences\n\n\nSejdiu, B. I., & Tieleman, D. P. (2021). ProLint: A web-based framework for the automated data analysis and visualization of lipid–protein interactions. Nucleic Acids Research, 49(W1), W544–W550. https://doi.org/10.1093/nar/gkab409"
  },
  {
    "objectID": "docs/tutorials/Legacy/martini3/small_molecule_binding.html",
    "href": "docs/tutorials/Legacy/martini3/small_molecule_binding.html",
    "title": "Small molecule binding",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\nIn this tutorial, we will set up a coarse-grained (CG) simulation in the new Martini 3.0 force field of a protein – ligand system. The ligand will be initially placed in the solvent phase of the system, and throughout the simulation find the protein binding pocket. As an example, we will simulate the binding of benzene to the L99A mutant of T4 lysozyme. Setting up a CG simulation consists of two main steps, followed by the analysis:\n\nConverting an atomistic structure (protein and substrate) to CG resolution and generating a Martini topology.\nPlacing the protein in a simulation cell, adding the ligand, water, and ions, and running the simulation.\nAnalyzing the trajectory.\n\nNote1: This tutorial, now based on the Martini 3 open-beta version (v.3.0.b.3.2), will be updated as soon as the final parameters of Martini 3 are available (the paper is under review right now).\nNote2: Martinize2 can also be used to martinize your protein. However this new version is still under development. You can take martinize2 from https://github.com/marrink-lab/vermouth-martinize. Any issue should be reported in the github page.\nNote3: For protein complexes (e.g., dimers, tetramers, etc.) you should consider using the “–merge” flag in martinize. In this situation, an elastic network can be added between the proteins. These two approaches are important to better mimic hydrogen bonds and to perfect packing, which is essential for a stable protein complex (for the same reasons for which it is needed for a folded protein).\n\nConverting atomistic structure to CG resolution\n\n1A. Download the crystal structure of the T4 lysozyme from the Protein Data Bank (PDB)\n\nwget http://www.rcsb.org/pdb/files/181L.pdb\nAlternatively, you can visit the PDB website (https://www.rcsb.org/), search for the structure, and click on Download Files.\n\n\n1B. Generate Martini topology and coordinates\n\nThe atomistic structure of T4 lysozyme (PDB: 181L) can be used directly as input for martinize.py to produce both the coordinates (CG.pdb) and topology (CG.top) of the CG model. Have a look at the help function to list the available options by running martinize -h. Please be carefull and use the version or martinize distributed with the Martini 3 open-beta version. The martini303v.partition file should be in the same folder where you are executing the command.\n./martinize -f 181L.pdb -ff martini303v.partition -x CG.pdb -o topol.top -dssp dssp -elastic\nHere we are using the version 3.0 of the Martini force field (-ff). The secondary structure of Martini proteins should be explicitly defined. This can be achieved by adding a set of long harmonic bonds (-elastic). The magnitude of the elastic force constant can be specified with -ef. A force constant of 500–750 kJ/(mol nm2) is suitable in most of the cases. An easy way of determining the secondary structure of each residue in the protein is by using the DSSP program. When using the -dssp option, a path to the binary file must be provided. You can download the binary file from the CMBI website (https://swift.cmbi.umcn.nl/gv/dssp/). Note that the downloaded PDB file contains not only protein residues but also three additional molecules: water (HOH), benzene (BNZ), and 2-hydroxyethyl disulfide (HED). You can delete them prior to generating the CG structure, or leave them in the file. HETATM atom types are ignored by martinize.\n\n\n1C. Add dihedral corrections to Martini topology\n\nIf all went well, the previous step should have generated three files: CG.pdb, protein_A.itp, and chain_A.ssd. Take a look into the *.ssd file, the secondary structure each residue belongs to is specified under STRUCTURE. The *.itp file contains almost all bonded parameters required to define the behavior of the protein. We just need to add some dihedral corrections to describe SC-BB-BB-SC interactions. You should make a backup copy of Protein_A.itp.\n./bbsc.sh Protein_A.itp 181L.pdb\nThis step will have appended additional angle (SC-BB-BB-SC) and dihedral (SC-BB-BB and BB-BB-SC) parameters to the .itp file. Note that bbsc.sh is only there to call the actual VMD script (addDihedral.tcl) handing it over the Protein_A.itp and CG.pdb as arguments.\n\n\n\nSetting up the simulation box\n\n2A. Solvate the protein\n\nSince we now have both the coordinates and topology of the Martini 3 protein, we can put the protein in a simulation cell, and add water and ions.\n/usr/bin/python2.7 insane.py -f CG.pdb -o CG.gro -pbc cubic -box 10,10,10 -salt 0.15 -charge auto -sol W\nYou can look for more details about the insane.py script here. The output file (CG.gro) contains NA+, CL-, and W residues. Check how many and add specify it in the CG.top file.\n[ molecules ] \n; name         number\nProtein_A         1\nWN             8846\nTNA              93\nTCL             101\nDon’t forget to also include the Martini 3 force field files at the beginning of the CG.top.\n#include \"martini_v3.0.3.itp\" \n#include \"martini_v3.0_ions.itp\" \n#include \"martini_v3.0_solvents.itp” \nThe first *.itp file contains information about non-bonded interactions between all types of Martini 3 beads. The second and third files are more specific and define standard Martini 3 ions and solvents.\n\n\n2B. Add the ligand to the simulation box\n\nThe crystal structure downloaded from the PDB website contains a benzene molecule crystalized in the binding site. We want to see if a CG model of benzene is capable of correctly finding the binding site of T4 lysozyme and bind to it in a pose that resembles the crystallographic binding mode. The Martini 3 topology of benzene is already provided in martini_v3.0_solvents.itp. Martini 3 benzene consists of three equidistant beads type TC4, bonded together by constraints of length 0.291 nm. Make a copy of CG.gro, rename it CG_benzene.gro and open it in a text editor. At the end of the file (just before the cell length), add the coordinates of the ligand from the file benzene.gro. Don’t forget to update the total number of atoms in the first line of the CG_benzene.gro file. You should try to place the benzene molecule in the solvent part of the simulation box. Don’t worry too much about the exact ligand coordinates; they will be adjusted in the minimization phase. Just try to place the ligand in a reasonable spot. The final CG.top file should look like this:\n#include \"martini_v3.0.3.itp\" \n#include \"martini_v3.0_ions.itp\"\n#include \"martini_v3.0_solvents.itp” \n[ molecules ]\n; name       number\nProtein_A       1\nWN           8846\nTNA            93\nTCL           101\nBENZ            1\n\n\n2C. Start the simulation\n\ngmx grompp -p CG.top -f min.mdp -c CG_benzene.gro -maxwarn 10\ngmx mdrun -v -c CG-em.gro\ngmx grompp -p CG.top -f eq.mdp -c CG-em.gro -maxwarn 5 -n index.ndx \ngmx mdrun -v -c CG-eq.gro -x traj_comp-eq.xtc\ngmx grompp -p CG.top -f md.mdp -c CG-eq.gro -maxwarn 5 -n index.ndx\ngmx mdrun -v -c CG-md.gro -x traj_comp.xtc\n\n\n\n3. Analysis\n\nOnce the simulation has finished, a trajectory (traj_comp.xtc) should have been generated. An RMS alignment of the protein will take care of the rotational and translational motion.\ngmx trjconv -pbc mol -center -ur compact -s topol.tpr -f traj_comp.xtc -o temp.xtc\ngmx trjconv -fit rot+trans -s topol.tpr -f temp.xtc -o trajfitted.xtc -n index.ndx\nTo do the alignment, an index file containing the list of backbone atoms (BB) must be provided. It can be generated with:\ngmx make_ndx -f CG-eq.gro -n index.ndx &lt;&lt; EOF\na BB\nq\nEOF\nYou can visualize the trajectory in VMD. More information on visualizing CG Martini simulations is provided here.\nvmd CG-eq.gro trajfitted.xtc\nDo you see any binding events taking place? Additionally, the occupancy of the benzene molecule across the trajectory can be calculated by issuing the following commands in VMD:\n&gt;&gt; set sel0 [atomselect 0 \"resname BNZ\"]\n&gt;&gt; volmap occupancy atomselect0 -res 1.0 -allframes -combine avg -o volmap_out.dx\nLoad the generated file (volmap_out.dx) in VMD, and select the isosurface representation. The “isovalue” control allows you to adjust the occupancy threshold. What regions of the protein have the highest occupancy? Is the binding site / binding tunnel among them?\nFor this particular system we obtained around 2-9 binding events per 30 μs of simulation time. If you run the simulation long enough that several binding events are observed, the kon of benzene – T4 lysozyme can be calculated as follows:"
  },
  {
    "objectID": "docs/tutorials/Legacy/martini3/ProteinsI/index.html",
    "href": "docs/tutorials/Legacy/martini3/ProteinsI/index.html",
    "title": "Proteins - Part I: Basics and Martinize 2",
    "section": "",
    "text": "WARNING: THIS TUTORIAL IS DEPRECATED. SEE THE UPDATED TUTORIAL ELSEWHERE. THIS TUTORIAL USES THE OLD IMPLEMENTATION OF GOMARTINI.\nIn case of issues, please contact thallmair@fias.uni-frankfurt.de or paulo.telles-de-souza@ibcp.fr.\n\n\nSummary\n\nIntroduction\nSoluble proteins\n\nMartini + elastic network\nMartini + Gō-like model\nComparison between models\n\nTools and scripts used in this tutorial\nReferences\n\n\n\nIntroduction\n\nAccordingly with Martini 3 rules [1], the Martini Protein model groups 2-4 non-hydrogen atoms together in one coarse-grained bead. Each residue has one backbone bead and 0-5 side-chain beads depending on the side chain of the residue. In contrast to the previous version [2-4], the secondary structure of the protein influences only the bond/angle/dihedral parameters of each residue. The backbone bead size and type depends solely of the mapping and geometry (linear or branched) of the fragment, with P2 used as default bead chemical type. Residues such as glycine, alanine, valine and proline used different bead types (with only slight differences in polarity and size) given the differences in the mapping, which were chosen to avoid overmapping problems [5]. It is noteworthy that the local secondary structure is predefined by the bonded parameters and thus imposed throughout a simulation. While simple peptides can be easily modeled with this approach, proteins usually need an extra bias to keep a stable tertiary structure, which can be provided by elastic network [6] or Gō-like models [7]. Additional improvements of the protein stability and reliability are achieved by applying the side chain corrections option to add dihedral angles which improve the side chain orientation [8].\nSetting up a coarse-grained protein simulation consists basically of three steps:\n\nconverting an atomistic protein structure into a coarse-grained structure;\ngenerating a suitable Martini topology;\nsolvating the protein in the desired environment.\n\nThe first two steps are done using the publicly available program martinize2. The last step can be done with the tools available in the GROMACS package and/or with ad hoc scripts. In this part of the tutorial, basic knowledge of GROMACS commands is assumed and not all commands will be given explicitly. Please refer to the previous tutorials and/or the GROMACS manual.\nThe aim of the first module of this tutorial is to define the regular workflow and protocols to set up a coarse-grained simulation of the soluble globular protein T4-lysozyme. Three strategies are presented and compared: i- no bias; ii- elastic networks; and iii- GōMartini. In a second module of this Proteins tutorial we will cover how to insert a transmembrane peptide (KALP) in a lipid bilayer using a standard Martini 3 description.\nThe files required for this tutorial (including worked files) can be downloaded from here.\n\n\nSoluble proteins\n\nThe downloaded file is called M3_proteins_tutorial_part1.zip and contains a worked version (using GROMACS 2020) of this module. You do not need all folders of this file to get going on this tutorial. Only the folder template is important. In addition, you can use the worked versions to check your own work. For this part of the tutorial, the worked files are in the martini3_worked folder. Create your own directory to work the tutorial yourself. Instructions are given for files you need to download or get from the template folder, etc. You do not need any files to start with. Now go to your own directory.\nAfter getting the atomistic structure of L99A T4 lysozyme (pdb code 181L) [9], you’ll need to convert it into a coarse-grained structure and to prepare a Martini 3 topology for it. Once this is done the coarse-grained structure can be minimized, solvated and simulated. The steps you need to take are the following:\n\nDownload 181L.pdb from the Protein Data Bank. It is also available in the template folder:\n\nwget http://www.rcsb.org/pdb/files/181L.pdb\n\nThe first step before start working with martinize2 is to clean/fix your atomistic pdb file. You should remove water and other molecules usually used for crystallization. In case there are missing residues or loops you should complete the protein structure using your favorite modeling code (alphafold2, modeller, etc). Note that cofactors that can be present and might be important for the protein structure and function are not covered by this tutorial. In the case of T4 lysozyme, you only need to remove the waters and a ligand. This can simply be done using the command:\n\ngrep \"^ATOM\" 181L.pdb &gt; 181L_clean.pdb\nThe clean pdb structure can be used as input for martinize2 (installation instructions available here), to generate both a coarse-grained structure and a Martini 3 topology file. Note that martinize2 might not work with older versions of python! We know it does work with versions 3.X. Have a look at the help function (i.e. run martinize2 -h) for the available options. Hint, valid for any system simulated with Martini: during equilibration it might be useful to have (backbone) position restraints to relax the side chains and their interaction with the solvent; we are anticipating doing this by asking martinize2 to generate the list of atoms involved. The final command might look a bit like this:\nmartinize2 -f 181L_clean.pdb -o t4l_only.top -x t4l_cg.pdb -ss\nWe are asking for version 3 of the Martini force field via the flag -ff. When using the -dssp option you’ll need the dssp binary, which determines the secondary structure classification of the protein backbone from the structure. It can be downloaded from the https://github.com/cmbi/dssp/releases. Note that martinize2 only works with the dssp versions 3.1.4 or older, because the output changed in the latest dssp version 4. If installed centrally, the path is usually /usr/bin/dssp. As an alternative, you may provide the required secondary structure yourself and feed it to the script:\nmartinize2 -f 181L_clean.pdb -o t4l_only.top -x t4l_cg.pdb -ss\nOutput:\n\nCCHHHHHHHHHCCEEEEEECTTSCEEEETTEEEESSSCHHHHHHHHHHHHTSCCTTBCCHHHHHHHHHHHHHHHHHHHHHCTTTHHHHHHSCHHHHHHHHHHHHHHHHHHHHTCHHHHHHHHTTCHHHHHHHHHSSHHHHHSHHHHHHHHHHHHHSSSGGGC -p backbone -ff martini3001\nThe meaning of the abbreviations is: H: α-helix, B: residue in isolated β-bridge, E: extended strand, participates in β ladder, G: 3-helix (3-10 helix), I: 5 helix (π-helix), T: hydrogen bonded turn, S: bend, C: loop or irregular.\n\nIf everything went well, the script generated three files: a coarse-grained structure (.pdb; Fig. 1), a master topology file (.top), and a protein topology file (.itp). In order to run a simulation you need two more files: the Martini topology file (martini_v3.0.0.itp) and a run parameter file (.mdp). You can get examples from the Martini website or from the template folder. Don’t forget to adapt the settings where needed!\n\n\n\n\nFigure 1 | Different representations of T4 lysozyme. A) Licorice atomistic representation with residues (without hydrogen atoms) classified according to 4 chemical classes: yellow=hydrophobic, green=polar, blue=basic residues, red=acidic residues; B) Licorice coarse-grained representation with the same classes used in Fig. 1A.; C) Cartoon representation of the atomistic structure. D) Coarse-grained beads in VdW representation. E) Licorice representation of the backbone of the martinized protein.\n\n\n\nDo a short minimization in vacuum (ca. 10-100 steps is enough!). Before you can generate the input files with grompp, you will need to check that the topology file (.top) includes the correct Martini parameter file (.itp). If this is not the case, change the include statement. Also, you may have to generate a box, specifying the dimensions of the system, for example using gmx editconf. You want to make sure, the box dimensions are large enough to avoid close contacts between periodic images of the protein, but also to be considerably larger than twice the cut-off distance used in simulations. Try allowing for a minimum distance of 1 nm from the protein to any box edge. Then, copy the example parameter file, and change the relevant settings to do a minimization run. Now you are ready to do the preprocessing and minimization run:\n\ngmx editconf -f t4l_cg.pdb -d 1.0 -bt dodecahedron -o t4l_cg.gro\ngmx grompp -p t4l_only.top -f minimization.mdp -c t4l_cg.gro -o minimization-vac.tpr  -r t41_cg.gro\ngmx mdrun -deffnm minimization-vac -v\n\nSolvate the system with gmx solvate (an equilibrated water box can be downloaded here; it is called water.gro. You can also find the file in the template folder. Make sure the box size is large enough (i.e. there is enough water around the molecule to avoid periodic boundary artifacts) and remember to use a larger van der Waals distance when solvating to avoid clashes, e.g.:\n\ngmx solvate -cp minimization-vac.gro -cs water.gro -radius 0.21 -o solvated.gro\nAs the protein is charged +8, it is recommended to add at least neutralizing counter ions; on top of that, you can add ions to reflect some ionic strength of the solution. Using a concentration of 0.15 M of NaCl is a popular choice given that is a good representation of the physiologic conditions. NOTE that you’ll need to get hold of a Martini topology file that specifies the ion topologies. Be careful in case you use strategies based on gmx genion. As each Martini water bead represents 4 water molecules, the concentration specified needs to be adapted to properly represent the target salt concentration.\n\nYou need to update the topology to reflect the added water. Here, this is done by copying the topology for the single T4 lysozyme to system.top (cp t4l_only.top system.top) and editing that to add a line with the number of water beads. The total number of W beads added by gmx solvate can be seen in the terminal output of the command; alternatively try grep -c W system-solvated.gro (where W is the name of a water bead). You will then do a short energy minimization and position-restrained (NPT) equilibration of the solvated system. Since the martinize.py script already generated position restraints (thanks to the -p flag), all you have to do is specify “define = -DPOSRES” in your parameter file (.mdp).\n\ngmx grompp -p system.top -c solvated.gro -f minimization.mdp -o minimization.tpr -r solvated.gro\ngmx mdrun -deffnm minimization -v\ngmx grompp -p system.top -c minimization.gro -f equilibration.mdp -o equilibration.tpr -r solvated.gro\ngmx mdrun -deffnm equilibration -v\n\nStart production run (without position restraints!); if your simulation crashes, some more equilibration steps might be needed. NOTE that you will get a warning about simultaneous use of Parrinello-Rahman barostat and newly generated velocities. This can be ignored by setting the -maxwarn 1 option.\n\ngmx grompp -p system.top -c equilibration.gro -f dynamic.mdp -o dynamic.tpr -maxwarn 1\ngmx mdrun -deffnm dynamic -v\n\nPROFIT! What sort of analysis can be done on this molecule? Start by having a look at the protein with VMD (use the script cg_bonds-v5.tcl to show the bonds defined in the T4 lysozyme topology) or pymol. It is often convenient to convert the trajectory so that translation and rotation of the protein is removed. (NOTE, however, that the water is also rotated and this may create some unwanted effects when viewing. It is up to you, really. One thing that does make sense is to make sure that beads that belong to the same molecule, e.g. the protein, are not split across periodic boundary conditions, see the section on elastic network below for explicit instructions how to do this with gromacs tools.) Be aware that the .gro file given to VMD must contain the same (number of) atoms as the .xtc file. Therefore, if you choose to write only the protein to the .xtc file, also prepare a .gro file with only the protein (minimization-vac.gro will do).\n\ngmx trjconv -f dynamic.xtc -s dynamic.tpr -fit rot+trans -o viz.xtc\nSelect Protein first and then System. Then, you can open the new viz.xtc with VMD.\nvmd equilibration.gro viz.xtc\nAn option to display the bonds without the script cg_bonds-v5.tcl is to transform a .gro file to a .pdb file, and removed the line where is written ENDMDL in this .pdb file. This option should allow you to visualize the bonds defined by your itps in the tpr file.\ngmx trjconv -f  equilibration.gro -s dynamic.tpr  -pbc whole -o equilibration.pdb -conect\nSelect System in this step. Then:\nsed \"/ENDMDL/d\" -i equilibration.pdb\nvmd equilibration.pdb viz.xtc\nTo take a look at your simulation with pymol, the trajectory must also be converted to the .pdb format. This gives the opportunity to add bond information, which helps in viewing the molecules. Be aware that this file may be very large: you may want to reduce the number of frames. You can also reduce the size by only writing the protein coordinates (but you may want to visualize the solvent or ions as well, so it is up to you).\ngmx trjconv -f dynamic.xtc -s dynamic.tpr -fit rot+trans -o viz.pdb -conect\npymol viz.pdb\nStandard analyses for proteins include RMSD, RMSF, and radius of gyration. Refer to tutorials for atomistic models, for example by Tsjerk Wassenaar or Justin Lemkul. For the impatient ones, or if you just need a quick reminder: RMSD and RMSF can be calculated using the gromacs tools gmx rms and gmx rmsf, respectively.\n\nMartini + elastic network\n\nThe aim of this second module is to see how the application of elastic networks can be combined with the Martini model to conserve the tertiary and quaternary structures more faithfully without sacrificing the structure of a protein. Please be advised that this is an active field of research and that there is as of yet no “gold standard”.\nThe idea is to generate a simple elastic network on the basis of a standard Martini 3 topology. The approach can be set up using martinize2 and will be shortly described below.\nWe recommend simulating a pure Martini coarse-grained protein (without elastic network) from the previous step, and then seeing which changes are observed when using an elastic network for the same protein. Note that you’ll need to simulate the protein for tens to hundreds of nanoseconds to see major changes in the structure; sample simulations are provided in the archive.\nThe first option to help preserving higher-order structure of proteins is to add to the standard Martini topology extra harmonic bonds between non-bonded beads based on a distance cut-off. Note that in standard Martini, long harmonic bonds can be already used to impose the secondary structure of extended elements (sheets) of the protein. Dihedrals could be used as well, but they tend to bring instabilities in this case – see the paper by Bulacu et al 2013 [10] for more information. Martinize2 will generate harmonic bonds between backbone beads if the option -elastic is set. It is possible to tune the elastic bonds (e.g.: make the force constant distance dependent, change upper and lower distance cut-off, etc.) in order to make the protein behave properly. The only way to find the proper parameters is to try different options and compare the behavior of your protein to an atomistic simulation or experimental data (NMR, etc.). A second option which can complement improvements in structure and dynamics of side chains is the use of side chain corrections (option -scfix), which are extra dihedrals added between side chains and backbone beads. Be aware that both elastic networks and side chain corrections are based on your reference atomistic structure. A last aspect that can be considered is the addition of disulfide bridges that can also be automatically detected by martinize2.\nHere we will use basic parameters in order to show the principle.\n\nUse martinize2 to generate the coarse-grained structure and topology as above. For the elastic network, use the following extra flags:\n\nmartinize2 -f 181L_clean.pdb -o t4l_only.top -x t4l_cg.pdb -dssp /path/to/dssp -p backbone -ff martini3001 -elastic -ef 700.0 -el 0.5 -eu 0.9 -ea 0 -ep 0 -scfix -cys auto\nThis turns on the elastic network (-elastic), sets the elastic bond force constant to 700 \\(kJ*mol^{-1}*nm^{-2}\\) (-ef 700), the lower and upper elastic bond cut-off to 0.5 and 0.9 nm, respectively (-el 0.5 and -eu 0.9), and makes the bond strengths independent of the bond length (elastic bond decay factor and decay power, -ea 0 and -ep 0, respectively; these are default). Differently from the Martini 2 version, in Martini 3 the elastic network does not need to be defined as a #ifdef statement in the .top file. Note that martinize2 does not generate elastic bonds between \\(i \\rightarrow i+1\\) and \\(i \\rightarrow i+2\\) backbone beads, as those are already connected by bonds and angles (Fig. 2B). Also, elastic bonds are only added between beads that belong to the same chain.\n\nProceed as before (steps 4 to 7) and start a production run. Keep in mind, we are adding a supplementary level of constraints on the protein; a supplementary relaxation step might be required (equilibration with position restraints and smaller time step for instance). If you have a set-up for the protein without elastic bonds (including solvent and possibly ions), you may use a snapshot from that simulation as the starting point here.\n\n\n\nMartini + Gō-like model\n\nIn the third submodule of the protein tutorial, you will learn to apply Gō-like models in combination with the Martini model to conserve the tertiary and quaternary structures more faithfully. Recently, a combination of Gō-like models with Martini was presented by Poma et al. 2017 [7] . Backbone beads are connected based on a contact map and a Lennard-Jones potential describes the interaction between the connected backbone beads. Here, we give an introduction how to set up a protein with Martini 3 and a modified version of the Gō-like models. In particular, it requires the usage of martinize2 as well as the script create_goVirt.py which is capable of providing the Gō-like model. You can find more details about the new implementation in the preprint by Souza et al..\nIn brief, the modified version encompasses the following changes compared to the original GōMartini model: First, the Gō-like bonds are applied to virtual sites which are located at the same position as the backbone bead in the Martini protein model. They are implemented as regular non-bonded interactions which allows to treat them with the non-bonded cutoff scheme. Second, the regular non-bonded interaction between two backbone beads which are connected by a Gō-like bond is excluded. Third, a lower and upper limit for the distance between two backbone beads connected with a Gō-like bond is set.\nThe general work flow is the following: the Gō-like bonds are included as non-bonded interactions in special beads – called Gō beads from hereon – which will be defined in the martini_v3.0.0.itp. For this, the martini_v3.0.0.itp has to contain two #include statements which are only considered if you define the variable GO_VIRT in your topology file. This procedure is similar to the POSRES variable in a typical Martini protein .itp file. Two generic file names are used in the #include statements (BB-part-def_VirtGoSites.itp and go-table_VirtGoSites.itp) which themselves include the specific itps for the actual protein. The coarse-grained (CG) protein structure generated by martinize2 contains the additional Gō beads; the same holds for the t4l.itp (which will be the protein .itp file generated by martinize2 in this case). The t4l.itp contains also the virtual site definition of the Gō beads and an #include statement for the exclusions between the (real) backbone beads which are connected by Gō-like bonds.\nTo generate the GōMartini model of T4 lysozyme, you will have to first generate a Martini 3 protein model using martinize2 and secondly generate the Gō-like model with the additional script create_goVirt.py. The procedure is briefly described in the following:\n\nTo set up a GōMartini model, the atomistic protein structure has to be martinized first using martinize2. The option -govs-include prepares a t4l.itp ready to include the Gō-like model. A second flag (-govs-moltype) specifies the molecule name; this name is used as prefix for the files containing the Gō-like model which will be generated by the separate script create_goVirt.py. If you specify the same molecule name for create_goVirt.py, and if the files containing the Gō-like model are in the same directory, you do not have to change anything in the generated t4l.itp! A command for T4 lysozyme could look like this:\n\nmartinize2 -f 181L_clean.pdb -o t4l_only.top -x t4l_cg.pdb -dssp  /path/to/dssp -p backbone -ff martini3001 -govs-include -govs-moltype t4l -scfix -cys auto\n\nThe CG pdb structure obtained from martinize2 is required for the next step together with a contact map of the atomistic protein structure. The contact map has to be obtained from the web-server http://info.ifpan.edu.pl/~rcsu/rcsu/index.html using the default settings for the radii and the Fibonacci number. Please note that the requirements for the .pdb file uploaded to the web-server are quite strict. Thus please check carefully if your contact map is meaningful before using the contact map in the next step. In particular, the table listing the “Residue residue contacts” will be used.\nThe script create_goVirt.py generates all additional files required for your GōMartini model. The script requires the CG structure of the protein in .pdb format (-s), the number of CG beads in the protein excluding the virtual Gō beads (--Natoms), the number of missing residues in the atomistic structure (--missres), as well as the contact map file (-f). The prefix of the generated files can be specified (--moltype) to e.g. distinguish different protein chains which are not connected by Gō-like bonds. Note that if the Gō-like model will be combined with a coarse-grained protein generated by martinize2, the same name must be specified as for the --govs-moltype flag of martinize2. In addition, the dissociation energy of the Lennard-Jones potentials (--go_eps) as well as the lower (--cutoff_short) and upper cutoff (--cutoff_long) for the distance between two connected backbone beads can be specified.\n\n./create_goVirt.py -s t4l_cg.pdb -f 181L_clean.map --moltype t4l --go_eps 12.0 --Natoms 381\nThe script generates four files with parameter details required for the GōMartini model. The file names do have a prefix to specify the respective protein or chain. The name ending as well as the information contained in the files is listed below:\n\n&lt;moltype&gt;_BB-part-def_VirtGoSites.itp \\(\\rightarrow\\) bead definitions for the virtual particles\n&lt;moltype&gt;_go-table_VirtGoSites.itp \\(\\rightarrow\\) interaction table of the Gō-like bonds\n&lt;moltype&gt;_exclusions_VirtGoSites.itp \\(\\rightarrow\\) exclusions\n&lt;moltype&gt;_go4view_harm.itp \\(\\rightarrow\\) representing the Gō-like bonds for visualization\n\nPlease do not change the names of the files as they are included in various other .itp files in a way that requires the correct file names.\n\nFinally, we have to add the #include statements to the martini_v3.0.0.itp file. NOTE that you should do this ONLY ONCE.\n\nsed -i \"s/\\[ nonbond_params \\]/\\#ifdef GO_VIRT\\n\\#include \\\"BB-part-def_VirtGoSites.itp\\\"\\n\\#endif\\n\\n\\[ nonbond_params \\]/\" martini_v3.0.0.itp\necho -e \"\\n#ifdef GO_VIRT \\n#include \\\"go-table_VirtGoSites.itp\\\"\\n#endif\" &gt;&gt; martini_v3.0.0.itp\nIf you want to use the Martini 3 force field without any GōMartini model in the future, you just do not define the variable GO_VIRT in your topology file and the #include statements will be skipped. But for this part of the tutorial it is important to have the line:\n#define GO_VIRT\nin the first line of your topology file! Please check if martinize2 did take care of this in your master topology file (-top). Otherwise, the Gō beads and the Gō-like bonds will not be defined and you will receive an error message from gmx grompp.\n\nProceed as in the first part of the tutorial (steps 4 to 7) and start a production run. Keep in mind, we are adding a supplementary level of constraints on the protein; a supplementary relaxation step might be required (equilibration with position restraints and smaller time step for instance).\n\n\n\n\nFigure 2 | Licorice representation of T4 lysozyme backbone in 3 different Martini 3 models: (A) no bias; (B) elastic network (harmonic bonds in red); (C) GōMartini model (pair interactions represented in cyan). It is worth noticing that elastic network not only is different because of the potential function used, but also because the contact map is very different.\n\n\n\n\nComparison between models\n\nNow you’ve got three simulations of the same protein with different Martini protein models. If you do not want to wait, some pre-run trajectories can be found in the archive. One of them might fit your needs in terms of structural and dynamic behavior. If not, there are an almost infinite number of ways to further tweak the elastic network and Gō-like models.\nAn easy way to compare the slightly different behaviors of the proteins in the previous three cases is to follow deviation/fluctuation of the backbone during simulation (and compare it to an all-atom simulation if possible). RMSD (Fig. 3) and RMSF can be calculated using gromacs tools (gmx rms and gmx rmsf). VMD also provides a set of friendly tools to compute these quantities, but needs some tricks to be adapted to coarse-grained systems (standard keywords are not understood by VMD on coarse-grained structures).\n\n\n\nFigure 3 | RMSD of T4 lysozyme backbone with the three different approaches described previously: no bias, elastic network and GōMartini model (RMSD is usually considered “reasonable” if below 3 Å, but this depends of the system).\n\n\n\n\n\nTools and scripts used in this tutorial\n\n\nGROMACS (http://www.gromacs.org/)\nVMD (https://www.ks.uiuc.edu/Research/vmd/)\nmartinize2 (https://github.com/marrink-lab/vermouth-martinize)\ncreate_goVirt.py (downloadable here)\n\n\n\nReferences\n\n[1] P. C. T. Souza, et al., Martini 3: a general purpose force field for coarse-grained molecular dynamics. Nat. Methods 18, 382–388 (2021).\n[2] L. Monticelli, et al., The MARTINI Coarse-Grained Force Field: Extension to Proteins. J. Chem. Theory Comput. 4, 819–834 (2008).\n[3] D. H. de Jong, et al., Improved Parameters for the Martini Coarse-Grained Protein Force Field. J. Chem. Theory Comput. 9, 687–97 (2013).\n[4] S. J. Marrink, H. J. Risselada, S. Yefimov, D. P. Tieleman, A. H. de Vries, The MARTINI force field: coarse grained model for biomolecular simulations. J. Phys. Chem. B 111, 7812–7824 (2007).\n[5] R. Alessandri, et al., Pitfalls of the Martini Model. J. Chem. Theory Comput. 15, 5448–5460 (2019).\n[6] X. Periole, M. Cavalli, S.-J. Marrink, M. A. Ceruso, Combining an Elastic Network With a Coarse-Grained Molecular Force Field: Structure, Dynamics, and Intermolecular Recognition. J. Chem. Theory Comput. 5, 2531–2543 (2009).\n[7] A. B. Poma, M. Cieplak, P. E. Theodorakis, Combining the MARTINI and Structure-Based Coarse-Grained Approaches for the Molecular Dynamics Studies of Conformational Transitions in Proteins. J. Chem. Theory Comput. 13, 1366–1374 (2017).\n[8] F. A. Herzog, L. Braun, I. Schoen, V. Vogel, Improved Side Chain Dynamics in MARTINI Simulations of Protein–Lipid Interfaces. J. Chem. Theory Comput. 12, 2446–2458 (2016).\n[9] A. Morton, B. W. Matthews, Specificity of ligand binding in a buried nonpolar cavity of T4 lysozyme: Linkage of dynamics and structural plasticity. Biochemistry 34, 8576–8588 (1995).\n[10] M. Bulacu, et al., Improved Angle Potentials for Coarse-Grained Molecular Dynamics Simulations. J. Chem. Theory Comput. 9, 3282–92 (2013).\n[11] S. J. Marrink, et al., Computational Modeling of Realistic Cell Membranes. Chem. Rev. 119, 6184–6226 (2019)."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/rna.html",
    "href": "docs/tutorials/Legacy/martini2/rna.html",
    "title": "RNA",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\nNOTE: You can download all the files required for this tutorial and the DNA tutorial from here. Please note that you have to adjust some of the paths (mostly location of the force field files) below if you use this package.\n\nSetup of a double stranded RNA\nThis is a brief tutorial on how to set up a simulation of a double stranded RNA molecule with the recent Martini force field parameters. Since RNA is very similar to DNA from the chemical point of view, the Martini RNA parameters are highly based on the DNA model. This also allows to have full compatibility with the DNA model and the other existing models in the Martini universe.\nTo make this tutorial more general, you should download the latest Martini DNA and RNA release from here. It includes the itp files for both molecules as well as a modified martinize script to coarse grain nucleic acids. As Martini DNA, Martini RNA can be used to model both single-stranded as well as double-stranded RNA. It also provides two separate elastic networks: a soft model has a cutoff of \\(1.2 \\;nm\\) and a force constant of \\(13 \\;kJ\\; mol^{-1} \\;nm^{-2}\\) and the stiff model has a cutoff of \\(1.0\\; nm\\) and a \\(500\\; kJ \\;mol^{-1} \\;nm^{-2}\\) force constant.\nThis tutorial will show only an example of creating a dsRNA topology using the stiff elastic network but a dsRNA topology with soft network or a ssRNA topology without elastic network can be created using the same procedure. For dsRNA structures the stiff elastic network is a good starting point for seeing how your system behaves in a CG simulation. There are also options for creating elastic networks for more complicated DNA structure; martinize-dna options all-stiff and all-soft are meant to be starting points for creating topologies for such structures but they are beyond the scope of this tutorial. The package includes a README file that should have sufficient instructions for creating the other types of RNA (and DNA) topologies after you have finished this tutorial.\n\nUnpack the tutorial files you downloaded (it expands to na-tutorials).\n\n$ tar -xvzf na-tutorials_20170815.tar\n\nGo to the folder na-tutorials/rna-tutorial/dsRNA-setup. Martinize works now also for RNA molecules. As for DNA, martinize-nucleotide.py for RNA works best with cleaned up .gro files so you should first remove other atoms from the .pdb file and convert it to a .gro file. You will find the .pdb file for the 1RNA pdb code. NOTE that a download from the PDB website can give you a file called 1rna.pdb. The file 1RNA.pdb (NOTE CAPIIALS) is provided in the archive, so you do not need to download.\n\n$ grep -v HETATM 1RNA.pdb &gt; aa-1rna.pdb\n$ gmx editconf -f aa-1rna.pdb -o aa-1rna.gro\n\nNext we can use the script martinize-nucleotide.py (supplied for you in the current directory) to create a Martini RNA topology for 1RNA.\n\n$ python martinize-nucleotide.py -type ds-stiff -f aa-1rna.gro -o cg-1rna.top -x cg-1rna.pdb\nThis will create the coarse-grained model of the 1RNA molecule (coordinates in cg-1rna.pdb) and the topology file (cg-1rna.top, which refers to Nucleic_A+Nucleic_B.itp). Next, you need to change the .top file to include the correct .itp files. This can be done with your favorite text editor but scriptable options are given below. Note: there are two sets of commands here, the first for Mac OSX, the second for Linux. In both cases, the backslashes (\\) need to be typed as indicated.\nOSX\n$ sed -i .bak 's/#include \"martini.itp\"/#include \"martini_v2.1-dna.itp\"\\\n#include \"martini_v2.0_ions.itp\"/' cg-1rna.top \nand Linux\n$ cp cg-1rna.top cg-1rna.top.bak \n$ sed -i 's/#include \"martini.itp\"/#include \"martini_v2.1-dna.itp\"\\n#include \"martini_v2.0_ions.itp\"/' cg-1rna.top \n\nYou can now visualize the mapping of the 1RNA molecule by opening both the atomistic and coarse-grained structures in VMD. (The visualization is clearer if you show the CG structure as small VDW spheres.)\n\n$ vmd -m aa-1rna.pdb cg-1rna.pdb\n\nNext you need to create a simulation box for the RNA molecule and solvate it as well as add counterions. You will find a pre-equilibrated coarse-grained water box in the downloaded folder. You can also download it from here.\n\n$ gmx editconf -f cg-1rna.pdb -d 1.2 -bt dodecahedron -o box.gro\n$ gmx solvate -cp box.gro -cs water.gro -o bw.gro -radius 0.22 -maxsol 1250\nYou can replace water with ions in .top file without using genion at the same time as we add waters there. Note: the next line assumes that exactly 1226 water beads were added to the DNA by the genbox tool; the first 1100 added beads are designated as normal water beads, the next 100 beads are designated as anti-freeze water beads, and the final 26 beads are designated as sodium ions.\n$ printf \"\\nW         1100\\nWF         100\\nNA          26\\n\" &gt;&gt; cg-1rna.top\n\nUse the em.mdp provided in the directory to run an energy minimization (integrator = steep, nsteps = 100).\n\n$ gmx grompp -f em.mdp -c bw.gro -p cg-1rna.top -o 01-em -maxwarn 1\n$ gmx mdrun -v -deffnm 01-em \n\nNext, you can run a short equilibration of 1 ns. Note, a smaller time step might be needed for initial equilibration (10 fs).\n\n$ gmx grompp -f equil.mdp -c 01-em.gro -p cg-1rna.top -o 02-eq\n$ gmx mdrun -v -deffnm 02-eq -rdd 2.0\n\nNow you are ready to start your first RNA simulation. Use the mdrun.mdp file to produce a longer simulation. This time we will be running a 10 ns production run. Note that with the elastic network the domain cell size needs to be kept fairly large (option -rdd 2.0).\n\n$ gmx grompp -f mdrun.mdp -c 02-eq.gro -p cg-1rna.top -o 03-run\n$ gmx mdrun -v -deffnm 03-run -rdd 2.0\n\nYou can visualize the movements of the RNA, ions and waters using VMD while your simulation is still running (you will need to open a new terminal). Note that bonds in Martini are longer than bonds normally shown in VMD. Please consult the VMD tutorial to get better visualization. It may be advisable to convert your trajectory so that molecules are not split over the periodic boundaries (using gmx trjconv -pbc whole) before viewing. It needs a bit more trickery to ensure that both RNA strands are shown close to each other, see the description in the protein tutorial.\n\n$ vmd 02-eq.gro 03-run.xtc\n\n\nRNA and Backward\nRNA structures can be backmapped into atomistic resolution using Backward. Before starting this part of the tutorial you should first go and do the Backward tutorial. The RNA backmapping files are as of now not yet part of the downloadable backward package but files for CHARMM are in the tutorial package in the backmapping folder together with the backward scripts. Next, we will first coarse-grain a dsRNA structure and then backmap it back to atomistic resolution.\n\nGot to the na-tutorials/rna-tutorial/backmapping directory and cleanup and convert the given RNA structure 1RNA.pdb to a gro file in a reasonable simulation box.\n\n$ gmx editconf -f ../dsRNA-setup/1RNA.pdb -d 1.4 -o aa-1rna.gro\n\nCreate a CG structure using martinize-dna.py.\n\n$ python ../dsRNA-setup/martinize-nucleotide.py -f aa-1rna.gro -type ds-stiff -p cg-1rna.top -x cg-1rna.pdb\n\nSolvate the CG structure.\n\n$ gmx solvate -cp cg-1rna.pdb -cs ../dsRNA-setup/water.gro -radius 0.22 -o cg-1rna-water.gro\n\nCreate an atomistic topology file for the system. Choose charmm27 and tip3p when prompted.\n\n$ gmx pdb2gmx -f ../dsRNA-setup/aa-1rna.pdb\n\nEdit the file topol.top to point explicitly to the tip3p.itp file provided for you (it will not recognize it in the standard path unfortunately). Thus, replace the line #include \"charmm27/tip3p.itp\" near the end of the file by #include \"./tip3p.itp\". Run the initram.sh script to perform the backmapping. Initram goes through a number of energy minimization and short MD runs (with positions restraints), have a look inside the script!\n\n$ ./initram.sh -f cg-1rna-water.gro -o aa-charmm.gro -to charmm36 -p topol.top\n\nCompare the initial structure to the backmapped structure.\n\n$ vmd -m cg-1rna.gro aa-charmm.gro"
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/high_throughput.html",
    "href": "docs/tutorials/Legacy/martini2/high_throughput.html",
    "title": "High throughput peptide self-assembly",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nIntroduction\n\nThis tutorial will introduce you to combinatorial screening for peptide self-assembly using the Martini force field for proteins. The process is automated using a number of bash scripts, Gromacs tools and scripting capabilities within the visual molecular dynamics (VMD) program. After the simulations, visual inspection is done using VMD and analysis of the assembled structures is done using Gromacs tools. NOTE that the tutorial is written for versions 5.1 or 2016 of Gromacs and will show errors when used with earlier versions.\nThe tutorial discusses the self-assembly of short peptides as an example system. The material of the tutorial can be downloaded as a .tgz-file following this link. Unpack the directory tree (it expands to a directory called Peptide_assembly_GMX5-2016). The material is organized in a directory tree that is numbered by the subsections of this tutorial:\n1_Background\n\n2_Creating_coordinates\n\n3_Coarse-graining\n\n4_Running_simulations\n\n5_Analysis\nEach directory tree contains the files required for the tutorial. The results of a successful execution of the tutorial are also provided; this enables you to check your work and also to start anywhere and/or skip a number of steps in the procedure. For example, if you want to jump in at step 4, you can enter the directory 3_Done and continue there in the directory 4_Running_simulations. Be advised that you do so at your own peril…\nThe idea of this tutorial is to give you the commands to get through the different steps for a single peptide. However, in the files provided, you will also find several scripts that can help you perform the operations automatically, and set up a high throughput assay.\nCommands to be entered on the command line of a terminal are preceded by the prompt &gt;, e.g.:\n./make_tripeptides.sh\nIf a command requires multiple options, they should be typed on one line, even if they do not appear as such on the screen.\n\n\n1. Background\n\nMolecular self-assembly of oligopeptides into nanostructures holds much promise for a range of potential applications in biomedicine, food science, cosmetics and nanotechnology. This class of materials is highly versatile because of the combinatorial complexity achieved by combining 20 amino acids into peptide building blocks with a wide range of chemical functionality. The use of very short peptides, pioneered by Gazit[1] is especially attractive, enhancing opportunities for rational design combined with robustness, scalability and cost reduction.\nTwo main challenges are currently limiting the expansion of this field. Most examples of short peptides ([1] contain only hydrophobic amino acids. This is no surprise as hydrophobic interactions dominate self-assembly in water, but it also limits their aqueous solubility and restricts potential applications. Secondly, in spite of two decades of intensive research since the first examples of short self-assembling peptides,[1,2] most examples have been either discovered by serendipity or by mapping onto known sequence design rules from biological systems.[3,4] Recently, these issues were addressed using the Martini force field by generating design rules that indicate a peptide’s suitability for creating nanostructures under aqueous, pH neutral conditions.[4] Using Martini, the self-assembly of thousands of peptides can be tested in silico, before spending time and resources in the lab. Experimental validation has shown that Martini not only accurately represents the level of aggregation between peptides, but also informs on the supramolecular structure of the nano-sized assemblies.\nIn the field of peptide nanomaterials, it is common practice to ‘protect’ the N- and/or C-terminus of a peptide to introduce specific interactions and remove charge-charge repulsions. Examples include acetyl, Fmoc, naphthalene, pyrene and t-Boc functional groups at the N-terminus, or amide and ester groups at the C-terminus.\nIn this tutorial we will apply the combinatorial screening protocol from ref.[4] to protected tripeptides, specifically those discovered by Ray et al.[5] They found that placing tyrosine residues at both the N- and the C-terminus of a tripeptide drives the system to crystallize into hollow nanotubes with a 5 Å inner diameter. They showed this works for Boc-Tyr-X-Tyr-OMe peptides, where X = Val, Ile, and that mutating either of the tyrosine residues prevents nanotube formation.[6] This begs the question if peptides with other middle residues will maintain the nanotube conformation or will change their morphology. Additionally, the nanotubes were created by crystallization from a water/methanol mixture, while for realistic applications, the stability of the nanotubes in an aqueous environment should be tested.\n\n\n\n\n\nFigure 1 | Protected tripeptide from Ref. 5, \\(R_1 = R_3 = TYR\\)\n\n\n\n\n\n\n2. Creating Peptide Coordinates\n\nTo simplify the tripeptide for this tutorial, we will treat Boc-Tyr-X-Tyr-OMe as a simple Tyr-X-Tyr peptide with uncharged termini, so that all parameters for coarse-graining are available within the Martini force field for proteins.[7] We want to test all 20 mutations of the middle amino acid (X). An easy way to create the 20 different peptide coordinates is using a molecular builder such as Avogadro in combination with the NAMD engine in VMD.\nThe files discussed here can be found in the directory 2_Creating_coordinates.\nGo into the directory 2_Creating_coordinates to create 20 all-atom structures. Before you can proceed, you must edit the file make_peptides.sh to point to the executable of VMD on your system. Within the shell script, if necessary edit the line:\nvmd='vmd'\nSave the file, make sure make_peptides.sh is executable and execute the shell script to generate the 20 required pdb files.\n./make_peptides.sh\nIf all is well, you have now generated 20 all-atom structures of tripeptides. You may check by opening one or more of the pdb-files in VMD.\nIf you are interested in the details of this procedure, read the text below. However, you may press on and get the simulation running first and then return to study the details. It’s up to you!\nThe idea of generating coordinates for each peptides is to use a template structure for a tripeptide and use this template to graft TYR-X-TYR unto the side chains. To this end, generic tripeptide coordinates are provided in the file XYZ.pdb. If you inspect this file, you will see coordinates for an atomistic model containing only the backbone atoms. There are several ways to generate such a file. Avogadro was mentioned. Also pymol contains an amino-acid builder. Using pymol, the required template file can be generated as follows:\n\nStart up pymol.\nFind the menu Build, and from this menu select Residue-&gt;Glycine three times in a row. You should see the glycine tripeptide.\nFind the menu File-&gt;Save Molecule, and save the coordinates just generated under the name XYZ.pdb.\nExit pymol.\nOpen the file XYZ.pdb in an editor. Delete all the lines defining a H-atom. Change the residue identifiers GLY to XXX, YYY, and ZZZ for the first, second, and third residues, respectively. No other changes are necessary. Save the file.\n\nThe script make_peptides.sh loops over all 20 amino acids and edits the template file XYZ.pdb and the script create_tripeptides.tcl to reflect the residues to be grafted unto the coordinate template to generate an instruction set for VMD. For each tripeptide, the script make_peptides.sh then calls VMD with this instruction set to generate the coordinates of the required tripeptide. The coordinates are based on the CHARMM all-atom force field, and the building blocks containing information to construct positions from back-bone coordinates only are contained in the file top_all36_prot.rtf. Note that the script make_peptides.sh can easily be modified to generate coordinates for all possible tripeptides.\n\n\n3. Create a coarse-grained system using martinize.py and Gromacs tools\n\nIn this step, one or more of the atomistic structures generated in step 2, are used to generate a Martini coarse-grained topology file, a coarse-grained structure of a single tripeptide, and a simulation box containing 100 peptides and solvent randomly placed in the box. The files discussed here can be found in the directory 3_Coarse-graining.\nCoarse-grained Martini topologies of peptides and proteins can be built automatically using the martinize.py script. An elaborate tutorial is available as part of the Protein tutorial on the Martini website.\nExecute the martinize.py script on a tripeptide of your choice to create coarse-grained coordinates using the Martini 2.2 force field. Remember to use neutral termini! In the papers discussing the YXY peptide it is mentioned that the backbone dihedral angles in the crystal structure fall in the β-sheet Ramachandran region.[5,6] We therefore use the extended β secondary structure for all three amino acids (flag ‘-ss EEE’). In the commands below, replace XXX by the three-letter amino acid code of your choice:\n./martinize.py -f ../2_Creating_coordinates/TYR-XXX-TYR_aa.pdb -name TYR-XXX-TYR -o TYR-XXX-TYR.top -x TYR-XXX-TYR.pdb -ff martini22 -nt -ss EEE\nYou need to edit the output file TYR-XXX-TYR.top. The martinize.py script adds an #include statement to the generic Martini force field file. Since we are using version 2.2, make sure the statement reads:\n#include \"martini_v2.2.itp\"\nInspect the output file TYR-XXX-TYR.itp to see what bead types were chosen for different parts of the peptide. Does it make sense?\nWhen you have the coarse-grained coordinates of a single peptide and created its topology, create a small box of water containing enough peptides to create a self-assembled structure. For this tutorial, a small box of 8 x 8 x 8 nm containing 100 peptides can be used. The Gromacs tools insert-molecules and solvate enable you to first define the box and fill it with 100 peptides and next, fill the box containing the 100 peptides with Martini water. For more details, see the introductory lipid self-assembly tutorial.\ngmx insert-molecules -box 8 8 8 -nmol 100 -ci TYR-XXX-TYR.pdb -radius 0.4 -o TYR-XXX-TYR_box.gro\ngmx solvate -cp TYR-XXX-TYR_box.gro -cs water-80A_eq.gro -radius 0.21 -o TYR-XXX-TYR_water.gro\nN.B.1: the -radius flags keep the peptides somewhat apart initially (setting 0.4) and create a density that is roughly right for Martini water (setting 0.21). Note that the insert-molecules tool occasionally adds too many water beads if you solvate with water boxes of significantly different sizes than the peptide box. If you plan to use a different sized simulation box, it is recommended to first create an equilibrated water box of that size. Here, the file water-80A_eq.gro contains Martini water in a container of the correct size.\nN.B.2: You will have to edit the TYR-XXX-TYR.top file again to include the right number of peptides (100) and the right number of water beads (name W, check the output of the second insert-molecules command for the amount).\nN.B.3: Note that the concentration of peptides here is ~0.32 M. This is way higher than experimentally, but otherwise we might be waiting a long time for the peptides to assemble into a large enough aggregate! On the other hand, the nanostructures found were created by evaporation of solvent, and the local concentration of peptides close to the nanostructure may be a lot higher than the average concentration in the bulk anyway.\nWe have now generated a structure containing 100 peptides solvated in Martini water. Some peptides may be charged, however, and it is advisable to add at least counter ions. The Gromacs tool genion can replace water beads by ion beads based on the electrostatic potential at the water beads; it will replace the water bead by an ion bead where this is energetically most favorable. The new structure is written out and the topology file is adapted to reflect the change in number of water and ions. The tool genion requires a .tpr file. Generate this first and then replace water beads by ions:\ngmx grompp -f tripep_water_min.mdp -p TYR-XXX-TYR.top -c TYR-XXX-TYR_water.gro -o TYR-XXX-TYR_genion.tpr\ngmx genion -s TYR-XXX-TYR_genion.tpr -pname NA+ -nname CL- -neutral -o TYR-XXX-TYR_water.gro\nN.B. 1 The names of the ions are added explicitly on the command line of genion to make sure they are compatible with the names of the ion beads in Martini (defined in the file martini_v2.0_ions.itp).\nN.B. 2 The starting structure is given the same name as the one containing only water. This is done on purpose with automation in mind. If the system is neutral, no ions are added and no output is produced. If the name of the structure file would be different (e.g. TYR-XXX-TYR_wion.gro), scripts would have to check whether this file exists or whether the system was neutral.\nBefore leaving this section, if your peptide is not neutral and water beads were replaced by ion beads, edit the topology file for your peptide to reflect the fact that you have ion beads in the system by:\n\nadding an include statement (use a line below the main Martini include file) for the file defining Martini ion beads:\n\n#include \"martini_v2.0_ions.itp\"\n\nin the [molecules] section, change the number of water beads and add a line specifying the ion beads (the ions are all collected at the end of the structure file).\n\nYou may automatically perform this procedure for all 20 peptides by executing the script setup_tripeptides.sh.\n\n\n4. Running self-assembly simulations\n\nNow the starting structure(s) of 100 peptides in water in the Martini model are generated. The next step is to run the simulation(s) in which the peptides may or may not be seen to self assemble. The protocol is similar to that in lipid self assembly, see the introductory lipid self-assembly tutorial.\nThe files discussed here can be found in the directory 4_Running_simulations.\nStandard minimization and equilibration MD inputs are provided. Inspect the files tripep_water_min.mdp and tripep_water_eq.mdp and rationalise the mdp options used. If you have time, perform the simulations for all the peptides, otherwise choose one peptide to take through the steps of this tutorial and use the output provided for the other peptides. 500,000 steps of 25 fs take less than 5 minutes to complete on an 8-processor machine. In the commands below, replace XXX by the three-letter amino acid code of your choice:\ngmx grompp -f tripep_water_min.mdp -p ../3_Coarse-graining/TYR-XXX-TYR.top -c ../3_Coarse-graining/TYR-XXX-TYR_water.gro -o TYR-XXX-TYR_min.tpr -maxwarn 1\ngmx mdrun -deffnm TYR-XXX-TYR_min -v\ngmx grompp -f tripep_water_eq.mdp -p ../3_Coarse-graining/TYR-XXX-TYR.top -c TYR-XXX-TYR_min.gro -o TYR-XXX-TYR_eq.tpr -maxwarn 2\ngmx mdrun -deffnm TYR-XXX-TYR_eq -v\nN.B. We ignore some warnings in the above: in preparing for the minimization, there is a difference in atom names (CL- vs. CL). This is safe to ignore. In preparing the equilibration, we are warned about barostat and thermostat inaccuracies with the timestep we use. These are things to keep in mind if you have a good reason to care about correct thermodynamics. For our purpose, however, we can safely continue.\nAll tripeptides can sequentially be treated in this manner automatically by running the script run_sims.sh. This may take prohibitively long, and if you want to test the automated analysis in the next step, it is best done by continuing in the directory 4_Done that contains all simulations.\n\n\n5. Analysing the results\n\nThe files discussed here can be found in the directory 5_Analysis. In the commands below, replace XXX by the three-letter amino acid code of your choice.\nInspect the results of the simulation using VMD.\nvmd ../4_Running_simulations/TYR-XXX-TYR_min.gro ../4_Running_simulations/TYR-XXX-TYR_eq.xtc\nSince we are looking at a coarse-grained model, VMD does not show a bond structure on the peptides. You must change the representation of the particles to get a better view. The simplest action is to open the Graphics-&gt;Graphical Representations menu, in the Selected Atoms window type not name W, and in the Drawing Method window select VDW. This will show the peptides in a rough-and-ready form. It is not the best representation, however, and you may need a better view. Please consult the tutorial on visualization Martini using VMD.\nDo you find any nanotubes? Can you explain why (not)? (Hint: protecting groups, crystallization vs. single fibers etc.)\nYou may or may not be lucky and have a single aggregate that is not split across the periodic boundary. The clusters of peptides are often spread across the periodic boundaries of the system for most systems. You can centre the final snapshot on a large cluster using:\necho 1 1 1 | gmx trjconv -f ../4_Running_simulations/TYR-XXX-TYR_eq.gro -s ../4_Running_simulations/TYR-XXX-TYR_eq.tpr -pbc cluster -center -o TYR-XXX-TYR_clustered.gro\nNow, open the clustered final snapshot in VMD and adapt the representation (note, is no solvent in the file anymore).\nAs you will notice when you compare different tripeptides, the tyrosine residues strongly drive aggregation in water, irrespective of the middle amino acid. However, you should be able to distinguish slightly different levels of aggregation for different peptides. One way to quantify the level of aggregation is calculating the solvent-accessible surface area (SASA) after assembly and compare to the initial SASA after energy minimization of the box.[4,8] Take the ratio SASAinitial / SASAfinal as a measure for the aggregation propensity using the Gromacs command gmx sasa.\necho 1 1 | gmx sasa -f ../4_Running_simulations/TYR-XXX-TYR_min.gro -s ../4_Running_simulations/TYR-XXX-TYR_min.tpr -o TYR-XXX-TYR_sasa_init.xvg -surface 'group \"Protein\"' -probe 0.4\necho 1 1 | gmx sasa -f TYR-XXX-TYR_clustered.gro -s ../4_Running_simulations/TYR-XXX-TYR_eq.tpr -o TYR-XXX-TYR_sasa_end.xvg -surface 'group \"Protein\"' -probe 0.4\nN.B. If you have time or are interested: you can also calculate the SASA for an assembly using the VMD tool measure, where a rolling sphere (e.g. of radius 1.4 nm) is used to determine the SASA of a selection of atoms. Does it match the result from gmx sasa? Start up VMD (in the directory 4_Running_simulations) and in the Tk console of VMD, type:\nmol new TYR-XXX-TYR_min.gro\nset sasa_ini [measure sasa 1.4 [atomselect top “not resname W and not resname ION”]]\nmol new ../5_Analysis/TYR-XXX-TYR_clustered.gro\nset sasa_end [measure sasa 1.4 [atomselect top “not resname W and not resname ION”]]\nset aggregation_propensity [expr $sasa_ini / $sasa_end]\necho $aggregation_propensity\nThe change in solvent accessible surface is a measure of the level of aggregation. However, the level of aggregation is not a direct measure for the suitability of a peptide to create a well-ordered nanostructure under aqueous conditions, as it can also mean the peptide is not actually soluble, or simply forms disordered aggregates. To get more insight into the structure and organization within the assembly, you can for example try to calculate molecular order through radial distribution functions. Another example is looking for 1-dimensionality as is typically observed in self-assembled peptides that form fibres or tubes. A basic indication of the shape can be automated using Gromacs’s built-in tools as outlined below. For more advanced ways to calculate a nanostructure’s shape, see ref.[9].\nWe will calculate the moments of inertia (MOIs) along the principal axes of the system of the largest cluster of peptides only. Note that it requires the creating of some extra .tpr files to persuade Gromacs to work on the right molecules in the cluster. First, we make an index file containing the peptides only:\ngmx make_ndx -f ../4_Running_simulations/TYR-XXX-TYR_eq.gro -o TYR-XXX-TYR_noW.ndx &lt; options.txt\nNext, the Gromacs tool gmx clustsize is used to extract the largest cluster from the final snapshot, based on a distance criterion of 0.5 nm. The indices (bead numbers) of the beads involved in the largest cluster are written to the index file TYR-XXX-TYR_maxclust.ndx.\ngmx clustsize -f ../4_Running_simulations/TYR-XXX-TYR_eq.xtc -s ../4_Running_simulations/TYR-XXX-TYR_eq.tpr -mcn TYR-XXX-TYR_maxclust.ndx -n TYR-XXX-TYR_noW.ndx -cut 0.5\nThe next step is to create a new .tpr file for the selected atoms and to use this .tpr file to center the cluster and to align it according to its principal axes for visualization; the snapshot TYR-XXX-TYR_princ.gro generated using the Gromacs command gmx editconf contains the aligned cluster. Comparing these snapshots from different tripeptides should give some insight into the differences in self-assembled structures.\ngmx convert-tpr -s ../4_Running_simulations/TYR-XXX-TYR_eq.tpr -n TYR-XXX-TYR_noW.ndx -nsteps -1 -o TYR-XXX-TYR_noW.tpr\ngmx trjconv -f TYR-XXX-TYR_clustered.gro -s TYR-XXX-TYR_noW.tpr -n TYR-XXX-TYR_noW.ndx -o TYR-XXX-TYR_maxclust.gro\ngmx convert-tpr -s TYR-XXX-TYR_noW.tpr -n TYR-XXX-TYR_maxclust.ndx -nsteps -1 -o TYR-XXX-TYR_maxclust.tpr\necho 1 | gmx editconf -f TYR-XXX-TYR_maxclust.gro -princ -c -o TYR-XXX-TYR_princ.gro\nFinally, the Gromacs tool gmx gyrate is used to calculate the MOIs.\necho 1 | gmx gyrate -f TYR-XXX-TYR_princ.gro -s TYR-XXX-TYR_maxclust.tpr -moi -o TYR-XXX-TYR_gyrate.xvg\nThe moments of inertia of the cluster in the final snapshot is written to the .xvg file, which is human readable. Calculate the aspect ratios (Iz / Ix). Aggregates with Ix &lt;&lt; Iy ≈ Iz are mainly 1D.\nIf you have done all peptide self assembly simulations, or want to look at the provided final structures of all 20 peptides, start up VMD and type source load_tripeptides.tcl into the VMD Tk console to load all peptides at once into VMD. To view a particular one, click on the red “D” in the main menu; this will turn black and the structure is shown in the viewer window. To hide, click on the black “D” in the main menu.\nYou can perform the analysis for all peptides in automated fashion using the analysis.sh script. Summaries of the analysis are written to the files sasa_trip.txt and inertia_trip.txt. Which peptides are the most fibrous?\n\n\nTools and scripts used in this tutorial\n\n\ngromacs http://www.gromacs.org/\nmartinize.py [find here]\nvmd http://www.ks.uiuc.edu/Research/vmd/\n\n\n\nReferences\n\n[1] Reches, M., and Gazit, E. Casting metal nanowires within discrete self-assembled peptide nanotubes. Science 300, 625-627 (2003).\n[2] Ghadiri, M. R., Granja, J. R., Milligan, R. A., McRee, D. E., and Khazanovich, N. Self-assembling organic nanotubes based on a cyclic peptide architecture. Nature 366, 324-327 (1993).\n[3] Zhang, S., Holmes, T., Lockshin, C. & Rich, A. Spontaneous assembly of a self-complementary oligopeptide to form a stable macroscopic membrane. Proc. Natl. Acad. Sci. U. S. A. 90, 3334 -3338 (1993).\n[4] Frederix, P. W. J. M. et al. Exploring the sequence space for (tri-)peptide self-assembly to design and discover new hydrogels. Nat. Chem. 7, 30-37 (2015).\n[5] Ray, S., Haldar, D., Drew, M. G. B. & Banerjee, A. A New Motif in the Formation of Peptide Nanotubes:  The Crystallographic Signature. Org. Lett. 6, 4463-4465 (2004).\n[6] Ray, S., Drew, M. G. B., Das, A. K. & Banerjee, A. The role of terminal tyrosine residues in the formation of tripeptide nanotubes: a crystallographic insight. Tetrahedron 62, 7274-7283 (2006).\n[7] Monticelli, L. et al. The MARTINI Coarse-Grained Force Field: Extension to Proteins. J. Chem. Theory Comput. 4, 819-834 (2008).\n[8] Frederix, P. W. J. M., Ulijn, R. V., Hunt, N. T. & Tuttle, T. Virtual Screening for Dipeptide Aggregation: Toward Predictive Tools for Peptide Self-Assembly. J. Phys. Chem. Lett. 2, 2380-2384 (2011).\n[9] Fuhrmans, M. & Marrink, S.-J. A tool for the morphological analysis of mixtures of lipids and water in computer simulations. J. Mol. Model. 17, 1755-1766 (2011)."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/free_energy.html",
    "href": "docs/tutorials/Legacy/martini2/free_energy.html",
    "title": "Free energy techniques",
    "section": "",
    "text": "Introduction\n\nThe aim of this set of practicals is to familiarize with free energy techniques using the Gromacs program suite and the coarse-grained (CG) force field Martini. You will learn how the necessary input files are structured, how to set up and run the simulations, and finally how to extract the required information from the simulations.\nIn particular, we will calculate the partition coefficient of a CG bead in water and hexadecane using free sampling, umbrella sampling and thermodynamic integration. These methodologies have a number of practical applications, e.g. to study free energies of solvation/hydration, free energies of binding of a small molecule (e.g. a drug molecule) to a receptor (e.g. a protein), and the free energy cost of point mutations.\nAll files needed for this part of the tutorial can be found in the FreeEnergyTechniques folder in FreeEnergyTechniques.zip. Each part of this tutorial has its own directory which itself contains a folder called files_DoItYourself. There you can find the necessary files to follow the tutorial. For the second and the third part (umbrella sampling and thermodynamic integration) we also provide a worked version in the folder files_worked.\nOpen a terminal (ctrl-a) and download the .zip file to your desktop (or some other convenient place):\ncd ~/Desktop\nwget https://cgmartini-library.s3.ca-central-1.amazonaws.com/0_Tutorials/legacy_material/martini2/FreeEnergyTechniques.zip\nUnpack the downloaded file:\nunzip FreeEnergyTechniques.zip\n\n\nFree sampling\n\n\n\nThe material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\nThe first method for determining the logarithm of the partition coefficient P of a molecule between two different solvents (e.g. hexadecane and water) makes use of an unbiased CG-MD simulation. The \\(log(P_{water-hexadecane})\\) can be calculated by comparing the occupancy of your molecule of interest in the two phases. This yields the ratio of the time the molecule spends in each phase – the partition coefficient P – which can be used to calculate the free energy difference between the phases by making use of the statistical mechanics definition of Gibbs free energy \\(\\Delta G\\).\n\\[ \\Delta G = -RTln(P) \\]\n\\(\\Delta G\\): free energy\n\\(R\\): gas constant\n\\(T\\): absolute temperature\n\\(P\\): partition coefficient = occupancy hexadecane/occupancy water\nAll files needed for this part of the tutorial can be found in the 1_FreeSampling/files_DoItYourself/1.1-initial folder, in the .zip file you downloaded. Inside you will find the following files and folder:\n\nbead_template.itp: the topology file for the bead to be partitioned\nem.mdp: the input settings for energy minimization\neq.mdp: the input settings for equilibration\nhexadecane_w.gro: the simulations box\nmd.mdp: the input settings for the production run\nsetting_up.sh: a script which does everything for you\ntop/: a folder containing the forcefield descriptions\nmartini_v2.0_solvents.itp: forcefield description of solvents\nmartini_v2.2.itp: general forcefield description\ntopol.top: the system topology file\n\nIn this tutorial we will try to find the \\(log(P_{water-hexadecane})\\) for acetone. Martini makes use of a 4-to-1 mapping of non-hydrogen atoms, therefore a single bead represents acetone in the Martini world. Thus, the CG model is rather simple as it does not contain any bonded interactions. Therefore we only need to select the right bead type to represent the non-bonded interactions. In Martini the bead types are grouped in four flavors: Q, P, N and C. These represent charged, polar, non-polar and aliphatic chemical groups respectively. The overall behavior of acetone corresponds to the non-polar regime (N) due to its two methyl groups and its polar carbonyl group. N-beads can act as either a hydrogen-bond donor, acceptor, donor and acceptor, or no hydrogen bond forming capabilities at all. Acetone acts as an acceptor; therefore Na does represent our molecule best.\n\n\n\n\n\nFigure 1 | Acetone (2-propanone) represented by a Na bead in the Martini force field.\n\n\n\n\nCopy the 1_FreeSampling folder inside FreeEnergyTechniques on your desktop in which you will do the actual work. This prevents altering the original files by accident.\ncp -r FreeEnergyTechniques/1_FreeSampling .\nEnter the folder you just copied and take a look at its content with a simple text editor.\ncd 1_FreeSampling/files_DoItYourself/1.1-intial\ngedit bead_template.itp\nA general explanation of the format of .itp files can be found in the GROMACS manual. For now it is important to change the bead type of our single bead molecule (CG acetone) to the appropriate type. Do not forget to save after you have made your changes.\nThe em/eq/md.mdp files contain the settings for GROMACS. Things like the integrator type and time step, number of steps, pressure coupling scheme, electrostatic scheme, etc. For a full description of the .mdp settings you can take a look at the GROMACS manual.\nThe hexadecane_w.gro file contains the amount of beads, the coordinates of all the beads in your system and the dimensions (nm) of you periodicity. The dimensions can be found at the bottom of the file. The tail command can be used to only print the last few lines of a file.\ntail hexadecane_w.gro\nWe could try to count - by hand - all the water, hexadecane and acetone molecules but much easier would be to take a look at the topol.top file.\ngedit topol.top\nThe first lines of the .top file start with a # and here the locations of the forcefield parameters are specified. Then the system name is given an last the system composition is described. It is important to remember that the order of molecules in the .gro and .top should be exactly the same.\nBefore you close this file you should change the third line so it points towards your bead_template.itp. Do not forget to save your changes after you are done.\nInside the “top/” folder you will find the general .itp files of the Martini forcefield and the description for several solvents, including hexadecane.\nTo finalize our initial inspection of the system we will open it with vmd.\nvmd hexadecane_w.gro\nBy opening graphics/representations… from the main menu in vmd we can make some custom selections to improve our visualization. Some useful selections for now are:\nresname W\n\nresname HD\n\nresname B\nYou can have multiple selections at the same time by clicking the Create Rep button in the top left of the same menu. Each selection has its own Drawing Method which can be selected from the drop-down menu in the bottom left of the same menu. A simple but effective Drawing Method is VDW, which shows each point as a sphere. Take your time to play a bit around with the visualization if you would like to. You can save your visualization by clicking file/Save Visualization State… from the main menu in vmd. You can close vmd by typing quit in the terminal.\nquit\nBy now we should know exactly what our system is and how to run it. We only have to do it! First, we need to energy minimize our system. To keep everything tidy we will start with making a separate folder for the minimization, equilibration, production and analysis run. Then we enter the just created em folder.\nmkdir em eq md analysis\ncd em\nNow, we generate the em.tpr using gmx grompp and run it using gmx mdrun. The gmx points to the gmx toolbox containing many subroutines such as mdrun, which is the core md engine used by gromacs to perform the simulation. By only typing gmx, you can see all the other tools available. Many of them are for the analysis of md data. In most cases you can add the -h flag in any gmx command to get an overview of the available options for the requested subroutine (in the cases below this would be grompp and mdrun subsequently).\ngmx grompp -f ../em.mdp -c ../hexadecane_w.gro -p ../topol.top -o em.tpr\ngmx mdrun -deffnm em -v -rdd 2.0\nAfter the simulation has finished successfully, we can enter the eq folder and perform some equilibration steps.\ncd ../eq\ngmx grompp -f ../eq.mdp -c ../em/em.gro -p ../topol.top -o eq.tpr\ngmx mdrun -deffnm eq -v -rdd 2.0\nAnd finally we do the same for the production run:\ncd ../md\ngmx grompp -f ../md.mdp -c ../eq/eq.gro -p ../topol.top -o md.tpr\ngmx mdrun -deffnm md -v -rdd 2.0\nThe time it will take to finish the production run is stated in the last line during execution of gmx mdrun. This would be an excellent time to quickly grab a cup of coffee/thee/water and talk enthusiastically about molecular dynamics with your fellow students. A suitable topic could be ‘Why don’t we start with the production run right away?’. After this step you will start with the analysis to end up with a log(P) value which you can compare to the experimental value.\nNow that the simulation has finished, it is time to perform the analysis. Move into the analysis folder which you created before and perform a density analysis for the simulation in the z dimension. To do so we will use gmx density. Like before you can gain extra information about this gmx tool by typing gmx density -h.\ncd ../analysis\ngmx density -f ../md/md.xtc -s ../md/md.tpr -center -symm -ng 3 -o density.xvg\nYou will be prompted to select the group for centering, selecting either the group representing W or HD should do. Then we would like to obtain the density for the W, HD and B seperately. Therefore select each one once (by typing the according number) followed by pressing return. After you have specified three groups the analysis will be performed. This should be finished within a matter of seconds. After the analysis has finished you can open the density.xvg file with xmgrace – a graphing program.\nxmgrace -nxy density.xvg\nThough all the information is there, it is easier to look at after normalization. To do so you need to click at Data/Transformations/Evaluate Expression… in the main menu. In the popped up menu select all three sets on the left and all three sets on the right by dragging with your mouse. Now all sets on the left and right should have a black background. Next type y = y/max(y) in the Formula field and click Accept at the bottom center in the menu. All lines are now between 0 and 1, however our y-scale is still way too bloated. To quickly fix this you need to click the AS (auto scale) button in the general menu on the left (the second button on the right). Now find the y-value for B line in both the bulk W and HD (the x and y value of the center of you mouse are depicted underneath the main menu bar in the top left). You can calculate the \\(log(P_{hexadecane-water})\\) for acetone by dividing the HD-bulk population by the W-bulk population and then taking the logarithm of that fraction. Compare your value to the value published in the original paper [1,2]. By plugging in your acquired ratio for P in equation 1, you can obtain the free energy difference between the two states.\n\nAssignments\n\nThink of some downsides for this technique.\nFor what kind of systems would you expect this technique to function well?\nContinue with part 2, or help someone next to you and then continue with part 2.\n\n\n\n\nUmbrella sampling\n\nFrequently, unbiased MD simulations cannot be the appropriate technique to study systems involving rare events. Even in simple problems, as log(P) calculations, the sampling can be difficult. For example, solutes too hydrophobic could take a long time to visit the water phase. Increasing the solute concentration as a way to increase the frequency to happen these rare events has a limit: at some point you could induce solute aggregation or even changes in the solvent properties of the phases. If this is the case, special biased MD techniques can be used to improve the sampling. Here, we introduce the usage of one of the most traditional free energy methods, called Umbrella Sampling (US). In the US approach, the potential function – i.e. the interactions of your system – is modified in a way to equally sample favorable and unfavorable states along a reaction coordinate (RC). The RC is defined as the path between two well-defined states. We will apply the US approach to the same problem described in the previous part of the tutorial: hexadecane-water log(P) calculations of acetone (represented with a Na bead in the MARTINI coarse-grained force field). The main practical steps to obtain log(P) via US simulations are:\n\nGenerate a series of initial configurations along the RC. In a water-hexadecane biphasic system, the most obvious RC is the position of your solute in the simulation box, from the bulk of one solvent to the bulk of the other one.\nRun US simulations on each configuration, restraining the solute in the center of the window via bias potentials. Often, harmonic potentials are used due to their simplicity.\nUse the weighted histogram analysis method (WHAM) to extract the potential of mean force (PMF) and calculate \\(\\Delta G_{HD-W}\\) and \\(log(P_{HD-W})\\).\n\nMore details of the theory behind the US technique can be found in reference [3]. Hereafter, we describe step by step how to perform the US simulation. Now, let us start the hands-on section.\n\nGenerating the windows along the RC\nTo perform US simulations, we must generate a series of configurations along the RC. These configurations will serve as the starting points for the US windows, which can be performed as parallel independent simulations. Figure 2 illustrates the principles: The top image illustrates the RC of the Na bead in the water-hexadecane biphasic mixture. We can start from water to hexadecane or vice versa, using the z-axis of the box as RC (x-axis in the image). The middle image corresponds to the independent simulations conducted within each sampling window along the RC, with the Na bead being restrained in that window by an umbrella biasing potential. The bottom images shows the ideal result as a histogram of configurations, with neighboring windows overlapping such that a continuous free energy function can later be derived from these simulations.\n\n\n\n\n\nFigure 2 | Schematic view of protocol used in umbrella sampling.\n\n\n\n\nTo generate the initial configurations for each window, we need to perform a sequence of pulling, energy minimization and equilibration simulations. This protocol has been established based on trial-and-error to obtain a reasonable distribution of configurations. In other systems, it may be necessary to save configurations more often or even to apply a different minimization/equilibration procedure. The idea is to capture enough equilibrated configurations along the RC to obtain a regular spacing of the US windows (in terms of the Na distance position in z-axis from hexadecane to water).\nEnter in the initial configuration folder and look at the files inside.\ncd FreeEnergyTechniques/2_UmbrellaSampling/files_DoItYourself/2.1.initial_configurations/\nls\nYou will find a bash script (that will be commented on later), a .gro file and also some templates for the .mdp files. Theses files will be used to generate the initial conditions for each window of your RC. The start.gro file contains a CG model of hexadecane-water simulation box and 1 Na bead. Take a look in the system using vmd.\nvmd start.gro\nThe .mdp files are basically sequential steps of pulling, minimization and equilibration simulations. They were designed to smoothly put the Na bead in a specific position of your box (the windows along your RC). The position of Na is defined in the pulling parameters of the .mdp files. You can take a look at them (all parameters staring with pull) in one of the .mdp files using gedit.\ngedit em.mdp\nYou can find what these parameters control in the GROMACS manual. However, save this task for later, when you have started the production simulations. Now, create the folder for the first window and copy the .mdp files to this folder:\nmkdir 0.0/\ncp *.mdp 0.0/        \n(The * is a wildcard in bash, which is substituted for any amount of any character, therefore this copies all the .mdp files in one go. Pretty neat right?!)\nEnter the 0.0 folder and modify in each .mdp file the pull-coord1-init parameter:\ncd 0.0/\ngedit &lt;file&gt;.mdp\nReplace POS1 by 0.0 in each one of the .mdp files. Then generate the .tpr files and run the pulling, energy minimization and equilibration steps:\ngmx grompp -f pull.mdp -c ../start.gro -p ../../2.0.parameters/topol.top -o pull.tpr\ngmx mdrun -nt 1 -deffnm pull -v &&gt; pullrun.log\ngmx grompp -f em.mdp -c pull.gro -p ../../2.0.parameters/topol.top -o em.tpr\ngmx mdrun -nt 1 -deffnm em -v &&gt; emrun.log\ngmx grompp -f em2.mdp -c em.gro -p ../../2.0.parameters/topol.top -o em2.tpr\ngmx mdrun -nt 1 -deffnm em2 -v &&gt; em2run.log\ngmx grompp -f eq.mdp -c em2.gro -p ../../2.0.parameters/topol.top -o eq.tpr\ngmx mdrun -nt 1 -deffnm eq -v -px eq_x -pf eq_f &&gt; eqrun.log\nRepeat the procedure for each other window, from 0.1 to 3.9, with spacing of 0.1 nanometer. As you already know how the whole procedure works, you can use a bash script to automatically generate all other 39 windows. First come back to the parent folder and then run the script.\ncd ../\n./initial_configurations.sh\n\n\nRunning the production simulations for each window\nEnter in the production folder and look at the files inside:\ncd ../2.2.production/\nls\nNow, run the US simulations. As in the previous step, you should now generate folders for each window and perform longer production simulations. We separate this task with two scripts, to run two sets of simulations in parallel.\nnohup ./umbrella1.sh &        (The & sign is to cast the process to the background. nohup makes sure that even when you close the current terminal, the process remains active.)\nnohup ./umbrella2.sh &\nThis step should take a maximum of 30 minutes. In the mean time, take a look at the GROMACS manual to find the meaning of all pulling parameters used in the .mdp files. If you have questions, ask your neighbours, or talk with one of the supervisors (or both). You can also take a look at the recommended reference about US.\nIn case some problems occur and you do not manage to finish the US simulations within approx. 1 hour, please use the files in the directory files_worked to perform the analysis. However, if your simulation is taking longer than the stated amount of time, it is always good to notify a supervisor of your problem.\n\n\nData analysis\nThe most common analysis conducted for US simulations is the extraction of the PMF, which will yield the hexadecane-water partition ΔG for the Na partition. ΔG is simply the difference between the water and hexadecane values of the PMF curve (similar as performed in the previous tutorial). A common method for extracting PMF is the WHAM, included in Gromacs as the wham utility. Its input consists of two files, one lists the names of the production .tpr files of each window, and the other that lists the names of either the pullf.xvg or pullx.xvg files from each window. First, enter the data analysis folder and generate the files containing the list of production .tpr and pullx.xvg files:\ncd ../2.3.analysis/\nls -d ../2.2.production/*/md.tpr &gt; tpr-files.dat\nls -d ../2.2.production/*/md_x.xvg &gt; pullx-files.dat\nThen, run the gromacs tool wham:\ngmx wham -ix pullx-files.dat -it tpr-files.dat -bsres -bins 200 -temp 300 -unit kJ -b 100 -nBootstrap 100 -zprof0 3.5 -min 0 -max 3.9\nThe WHAM utility will open each of the umbrella.tpr and pullx.xvg files sequentially and run the WHAM analysis on them. Take a look in the meaning of the other input parameters used to run gmx wham using its help option (gmx wham -h). For example, the -unit kJ option indicates that the output will be in [kJ/mol], but you can also get results in [kcal/mol] or [\\(k_BT\\)]. After running gmx wham, you should end up with a profile.xvg file that looks similar to Figure 3A, except it does not show the error bars. You can open the result using xmgrace.\nxmgrace profile.xvg\nIf you want to see the error bars (and this is recommended!) inspect the file bsResult.xvg. All individual profiles from the bootstrapping are in the file bsProfs.xvg. One of the other outputs of the wham command will be a file called histo.xvg, which contains the histograms of the configurations within the US windows. These histograms will determine whether or not there is sufficient overlap between adjacent windows. For the types of simulations conducted as part of this tutorial, you may obtain something like Figure 3B. The histograms have to show reasonable overlap between the sampled windows.\nxmgrace -nxy histo.xvg\n\n\n\n\n\nFigure 3 | (A) PMF of the Na bead from bulk water (RC = 0 nm) to hexadecane (RC = 3.8 nm). (B) Histograms of the positions of a Na bead in each window.\n\n\n\n\n\n\nAssignments\n\nCalculate the partition coefficient of the Na bead and compare it with the values you calculated with the free sampling approach and with the experimental value in the literature.\nWhat are the advantages and disadvantages of umbrella sampling in relation to the free sampling method?\nHow can you make sure that your simulations reached convergence?\nContinue with part 3, or help someone next to you before continuing with part 3.\n\n\n\n\nThermodynamics integration\n\nThe calculation can be performed in several ways, but we will do it here by integrating the average derivative of the Hamiltonian (read: interaction potential) with respect to the coupling parameter in a piecewise fashion, i.e. calculate the average derivative with respect to the coupling parameter at a set of values of the coupling parameter and integrate it. Fortunately, Gromacs will take care of all these complicated calculations. An important issue to be addressed is the convergence of the final integrated number. The convergence depends on the error in the averages at the different λ points and on the smoothness of the curve, i.e. the number of individual λ points used in the integration. This will require a lot of simulations and therefore a number of results will be provided to you in case you ran out of time. However, first one needs to set up the systems at individual λ points. We will set up an individual λ point for solvation of a Na bead (NOTE: not a sodium ion, but an N-type bead with hydrogen-bond acceptor properties) in water, and then use a bash script to set up and run simulations pertaining to all λ points in parallel. You will also prepare a set-up for calculating solvation free energy of a Na bead in hexadecane following the same steps as the set up in water.\n\nSetting up the solvated system of a Na bead in water\nThe initial files for this exercise are provided in the subdirectory 3_ThermodynamicIntegration/files_DoItYourself/SETUPINWATER.\nIn order to perform a (classical mechanical molecular dynamics) simulation, the system and the simulation conditions need to be specified. Gromacs implements these specifications in three files: the topology file specifies the molecules in the system, the coordinate file specifies the starting coordinates (and velocities) of the atoms, and the run parameter file specifies the simulation control variables (number of steps, time step, output frequency, etc.). We will first quickly get the simulation running, then will focus on specific issues relating to free energy calculations.\n\n\nTopology\nThe topology file (standard extension .top, standard name topol.top) specifies the number and types of particles (used interchangeably with atoms in the remainder of this document) in the system. Note that the topology file may specify that there are multiple copies of the same molecule in the system; thus, the amount of information to be specified may be greatly reduced because details for each type of molecule need to be specified only once.\nFor this exercise, the perturbation topology of Na bead is already given in the file topol.top.\nOpen the file topol.top from the directory SETUPINWATER in an editor. You will notice that the topology file seems to contain very little information. The structure of the file is briefly described below.\nA. First the force field is specified. The force field used in this exercise is the martini force field. The master file is called martini.itp and it is read by the preprocessor because of the #include statement.\nB. and C. The second file included in the topology file is called martini_na.itp, which contains the definition of the Na molecule, including the description required for the alchemical transformation that enables calculation of the solvation free energy. The third file included in the topology file is called martini_solvents.itp, which contains the definition of the water and hexadecane molecules. The order of these two files is not important. If your system contains more types of molecules, for example ions, you can add include an .itp file for each of them.\nD. Each system needs a specification describing the system. This information is printed in some output files and may be useful for you to identify the system you are working on. In general, it is always wise to have a SEPARATE directory for EACH simulation system. You may easily get confused!\nE. All that remains to be done in the topology file topol.top is to specify the number of molecules in the system. You need one line for each type of molecule. The order in which you specify the molecules is important. The Na bead is elsewhere specified with a molecule name Na, and the name for the water and hexadecane molecule is W and HD, respectively. The program interprets the starting coordinates (see next section) as belonging to the molecules in the order you specify here. It does NOT check the names of the molecules! We do not know the number of water molecules yet, because we need to first solvate the Na molecule. We will make sure to have 1280.\n\n\nStarting coordinates and velocities\nGROMACS takes a number of formats for input coordinates (and velocities). For this exercise, the simple “in-house” format is used. The standard file extension is .gro. The file Na.gro contains starting coordinates for a single Na bead. Note that the first line is a descriptive text, the second line contains the number of atoms in the system, and the last line contains the dimensions of the simulation unit cell.\nThe Na molecule first needs to be solvated. The GROMACS tools insert-molecules and solvate can add coordinates of molecules to existing coordinates, taking care that individual atoms are not too close together. The tool insert-molecules takes a single molecule to be added, puts its center-of-mass randomly somewhere in the box defined in the existing molecule (dimensions of the box are specified on the last line of the .gro file) and randomly rotates the new molecule. It then checks for clashes with previously present molecules and only inserts the new molecule if no such clashes are present. One may repeatedly use this procedure to insert a number of solvent molecules. However, one may also add solvent molecules when a box of solvent is available, by using the tool solvate. For solvation in water, a box containing 2704 W beads is provided (solvent.gro). If this equilibrated box is provided with the option –cs, solvate does not rotate this box, but fills the space with periodic replicas and then checks the individual molecules for clashes so that it does not reject all molecules if only one of them clashes.\nMake sure you have the terminal running and are in the correct directory SETUPINWATER. Solvate the Na bead:\ngmx solvate –cp Na.gro –cs solvent.gro -o solvated.gro -box 5.5 5.5 5.5 -maxsol 1280\nThere should be no more than 1280 W beads added to the original box. If not, please try to solvate again in such a way that you end up with 1280 W beads (you can try a different seed for the random number). It is important that you use the same number of water molecules in these exercises (or the results obtained for TI calculations cannot be compared to previous sections)!\nThe final ingredient for a simulation are the run parameters, with standard extension .mdp.\nIn this exercise, we will need to perform two types of runs:\nA. energy minimization of the solvated system\nB. free energy calculation at single λ point\nThe engine to run the simulation is mdrun. The program mdrun requires one (binary) input file containing all information required to run the simulation. The standard name for the run input file is topol.tpr, and it is generated using the GROMACS program gmx grompp, which takes the .top, .gro, and .mdp files discussed in the previous section.\nRun the preprocessor\ngmx grompp –p topol.top –c solvated.gro –f min.mdp -o min -maxwarn 2\nCheck that you have generated a file called min.tpr. If not, the step may have failed because of ERRORS or because of WARNINGS. The warnings can usually be ignored (maybe check with your assistant if you’re not sure), ERRORS need to be fixed. Try to figure out what was wrong and fix it. The file min.tpr. is readable by the GROMACS engine and contains all necessary information. You can run the engine using this min.tpr file by typing the command\ngmx mdrun –v -deffnm min\nIf all is well, you should now have produced a good starting structure for calculation of derivative of the energy at the single λ point. By default it will be written in the file min.gro. Copy this file to a new directory (production directory, see next section) and rename it start.gro to set up the simulation generating the required data for the single λ point. To this directory, also copy all .itp files, the .top file, and the file run.mdp.\n\n\nSetting up a perturbation simulation at a particular value of the coupling parameter\nRun parameters for a single λ point\nCreate a directory for production run and go there:\nmkdir production\ncd production\nRemember to copy the files you need to this directory! The file run.mdp contains the settings for a single λ point. Open the file run.mdp in an editor. Note the following settings :\nControl parameters for free energy calculation. This is the core of the present exercise.\nFirst of all, we specify free-energy = yes to ensure calculation of dH/dλ. The value of λ is given by init-lambda and should be different for each lambda point. In the exercise, check that the value of λ is 0.\nWhen switching on/off non-bonded interactions, atoms can be quite close to each other, much closer than in fully interacting systems. To avoid large forces or dH/dλ values, soft core potentials are used instead of the LJ potential. Soft core potentials have the property that their value is finite at distance 0. For the MARTINI force field, values of sc-alpha = 0.5 usually perform well.\nThe parameter sc-power controls the rate at which the coupling varies with λ. With sc-power = 1 the change in interaction is linear in λ, sc-power = 2 specifies quadratic change.\n\n\nRunning a single λ point\nAll is now in place to run a simulation. Therefore, now execute the following commands\ngmx grompp –p topol.top –c start.gro –f run.mdp -o run\nCheck that you have generated a file called run.tpr. If not, the step may have failed because of ERRORS or because of WARNINGS. The warnings can usually be ignored (maybe check with your assistant if you’re not sure), ERRORS need to be fixed. Try to figure out what was wrong and fix it. The file run.tpr. is readable by the GROMACS engine and contains all necessary information. Run the engine using this run.tpr file by typing\ngmx mdrun -deffnm run &gt;& run.job &\nIf all is well, you should now be producing data to give you an estimate of the dH/dλ at the λ point. The next task is to compute the change in free energy by integrating the entire dH/dλ curve as a function of λ. Check that sensible data are produced by looking at the file run.xvg.\ntail run.xvg\nIf sensible data (i.e. numbers, not inf or nan) are being produced, proceed to have a close look at the details of this simulation. NOTE that it may take a while before the first data appear in run.xvg.\n\n\nRunning all λ points\nIn order to quickly produce all of the input files needed for running simulations for each value of λ points, we have made a bash script available. Make a new directory called production_all\nmkdir production_all\ncd production_all\nand copy min.mdp, topol.top,.itp , run2.mdp,solvent.gro, TI.sh and Na.gro to this directory. Have a look at the script TI.sh . You may need to change some commands, in particular the loading of GROMACS, depending on your computer. If you are satisfied that the commands are correct, proceed to executing the script. To issue the bash script:\n./TI.sh\nThe script will create directories with relevant values of init_lambda_state inserted to the run2.mdp file and will proceed to execute TI calculation for each state. This means that for each value of λ, minimization and production steps will be performed in separate directories. To analyze the data, GROMACS bar module will be used to conduct Bennett acceptance ratio (BAR) method and compute free energy of solvation. The bar module will collect all the .xvg files that were generated ( for each value of λ ) and produce three output files; bar.xvg, barint.xvg and histogram.xvg. The value of solvation free energy will be printed in a .dat file named final.dat.\n\n\nAssignments:\n\nHow would you make sure about the convergence of the simulations? Maybe have a look at .xvg files produced at the final stage of the simulations.\nCan you make a statement about what is a reasonable simulation time for each λ point?\nWhat might be good strategies to get a small error in the solvation free energy? Think about the balance between increasing the number of λ points and the length of simulation at a single λ point. If you were to increase simulation of a single λ point, which λ would you pick?\n\n\n\nSetting up the solvated system of a Na bead in hexadecane\nIn Exercise 2, the solvation free energy of solvation of a Na bead in hexadecane is calculated using TI. The directory S3_ThermodynamicIntegration/files_DoItYourself/ETUPINHD contains the required files. Enter that directory.\nFollow the steps described for the set up in water. For HD solvent, you should change the number of solvent molecules using the following command:\ngmx solvate -cp Na.gro -cs solvent.gro -o solvated.gro -box 5.5 5.5 5.5 -maxsol 320\nand then continue with the rest of the set up as stated above for solvation of Na bead in water.\nFor each state, run a minimization and production simulation using TI.sh .\n\n\nAssignments:\n\nWhat is the solvation free energy change of the Na bead in water and hexadecane?\nCalculate the partition coefficient of Na bead and compare it with the values you calculated with other methods and with the experimental value in the literature? What is the source of difference?\nWhich method is the most efficient one to calculate partition coefficient in the current system? What if you had a more complicated system?\nCan you find other application for TI method other than the ones specified in the tutorial?\n\n\n\n\nReferences\n\n[1] Marrink, S. J., De Vries, A. H., and Mark, A. E. (2004) Coarse grained model for semiquantitative lipid simulations. J. Phys. Chem. B 108, 750–760.\n[2] Marrink, S. J., Risselada, H. J., Yefimov, S., Tieleman, D. P., and De Vries, A. H. (2007) The MARTINI force field: coarse grained model for biomolecular simulations. J. Phys. Chem. B 111, 7812–7824.\n[3] Kästner, J. (2011) Umbrella sampling, WIREs: Comp. Mol. Sci. 1, 932–942."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/lipids_and_lipidome.html",
    "href": "docs/tutorials/Legacy/martini2/lipids_and_lipidome.html",
    "title": "Lipids with the lipidome",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nBilayer self-assembly\n\nThe Martini coarse-grained (CG) model was originally developed for lipids[1,2]. The underlying philosophy of Martini is to build an extendable CG model based on simple modular building blocks and to use only few parameters and standard interaction potentials to maximise applicability and transferability. Martini uses an approximate 4:1 atomistic (heavy atoms) to CG bead mapping and in version 2.0[2] 18 bead types were defined to represent chemical characteristics of the beads. The CG beads have a fixed size and interact using an interaction map with 10 different interaction strengths. Due to the modularity of Martini, a large set of different lipid types has been parameterized. Their parameters are available in the Martini Lipidome, see the Martini lipid topology section. In this tutorial, you will learn how to set up lipid-water system simulations with the lipidome, with a focus on bilayers. You will also study a number of standard bilayer properties.\nThe aim of the tutorial is to create and study properties of CG Martini models of lipid bilayer membranes. First, we will attempt to spontaneously self-assemble a DPPC bilayer and check various properties that characterize lipid bilayers, such as the area per lipid, bilayer thickness, order parameters, and diffusion. Next, we will change the nature of the lipid head groups and tails, and study how that influences the properties. Finally, we will move on to creating more complex multicomponent bilayers.\nYou can download all the files, including worked examples of this tutorial (gromacs version 2016.3): bilayer-lipidome-tutorial-GMX5_2017Aug04-WORKED.tgz This is a rather large archive. A smaller set that expects you to do more yourself is recommended and is named: bilayer-lipidome-tutorial-GMX5_2017Aug04.tgz Unpack one of the lipidome-tutorial.tgz archives (NOTE: both expand to a directory called bilayer-lipidome-tutorial), and enter the bilayer-lipidome-tutorial directory:\n$ tar -xzvf bilayer-lipidome-tutorial-GMX5_2017Aug04.tgz\n$ cd bilayer-lipidome-tutorial\n\n\nLipid bilayers\n\nWe will begin with self-assembling a dipalmitoyl-phosphatidylcholine (DPPC) bilayer from a random configuration of lipids and water in the simulation box. Enter the spontaneous-assembly/initial_assembly subdirectory. The first step is to create a simulation box containing a random configuration of 128 DPPC lipids. This can be done by starting from a file containing a single DPPC molecule. (Note that you can download coordinate files for all Martini lipids from the website, see the Martini lipid topology section.) A file with coordinates for a single DPPC molecule is available for you as DPPC-em.gro. The gromacs tool insert-molecules can take this single-molecule conformation and attempt to place it in a simulation box multiple times at a random position and random orientation, each time checking that there are no overlaps between the consecutively placed molecules. For help on any gromacs tool, you can add the -h flag.\n$ cd spontaneous-assembly/initial_assembly\n$ gmx insert-molecules -ci DPPC-em.gro -box 7.5 7.5 7.5 -nmol 128 -radius 0.21 -try 500 -o 128_noW.gro \nThe value of the flag -radius (default van der Waals radii) has to be increased from its default atomistic length (0.105 nm) to a value reflecting the size of Martini CG beads, and noW stands for no Water. Perform a short energy minimization of the system containing only the lipids; the only reason for doing this, is getting rid of high forces between beads that may have been placed quite close to each other. The settings file minimization.mdp is provided for you, but you will need the topology for the DPPC lipid. Download it from the Martini lipidome page, see the Martini lipid topology section, place it in your current working directory, and check that the file name corresponds to the #include statement in the topology file dppc.top. You will also need a file with the particle definitions, in this case for version 2.1, which can be downloaded from the the Martini particle definition subsection of the Martini forcefield parameter section.\n# [gedit/vi] dppc.top\n$ gmx grompp -f minimization.mdp -c 128_noW.gro -p dppc.top -o dppc-min-init.tpr\n$ gmx mdrun -deffnm dppc-min-init -v -c 128_minimized.gro\nUsing the gromacs tool solvate, add 6 CG waters per lipid (note that this corresponds to 24 all-atom waters per lipid).\n$ gmx solvate -cp 128_minimized.gro -cs water.gro -o waterbox.gro -maxsol 768 -radius 0.21\nAlso here, the value of the flag -radius is used to reflect the size of Martini CG beads. The water beads are taken from the file water.gro provided for you. A new file, waterbox.gro is produced containing the 128 lipids and added water beads.\nNow perform an energy minimization again. You will need to adapt dppc.top to reflect the water (W) beads added to the system. Look at the output of gmx solvate to see how many W beads were added; the maximum number is 768 (specified on the last command as the -maxsol option). Remember that in gromacs files a semicolon (;) preceeds a comment line and is not interpreted as input!\n#  [gedit/vi/other editor] dppc.top\n$ gmx grompp -f minimization.mdp -c waterbox.gro -p dppc.top -o dppc-min-solvent.tpr \n$ gmx mdrun -deffnm dppc-min-solvent -v -c minimized.gro\nNow, you are ready to run the self-assembly MD simulation. About 30 ns should suffice.\n$ gmx grompp -f martini_md.mdp -c minimized.gro -p dppc.top -o dppc-md.tpr\n$ gmx mdrun -deffnm dppc-md -v\nThis might take approximately 45 minutes on a single CPU but by default gmx mdrun will use all available CPUs on your machine. The -v option shows an estimate of the time to completion, and it is interesting to observe how the generations of desktop computers have speeded up this 30 ns simulation over the years. You can tune the numbers of parallel threads gmx mdrun uses with the -nt parameter. You may want to check the progress of the simulation to see whether the bilayer has already formed before the end of the simulation. You may do this most easily by starting the inbuilt gromacs viewer (you will need to open a new terminal and make sure you are in the directory where this simulation is running):\n$ gmx view -f dppc-md.xtc -s dppc-md.tpr\nor, alternatively, use VMD or pymol. Both VMD and pymol suffer from the fact that Martini bonds are usually not drawn because they are much longer than standard bonds and the default visualization is not very informative. For visualization with pymol this is solved most easily by converting the trajectory to .pdb format, explicitly writing out all bonds (select System or DPPC, depending on whether you want to visualize the entire system or only the lipids). The disadvantage is that very large files are produced in this conversion!\n$ gmx trjconv -s dppc-md.tpr -f dppc-md.xtc -o dppc-md.pdb -pbc whole -conect\n$ pymol dppc-md.pdb\nFor VMD, a plugin script cg_bonds.tcl was written that takes the Gromacs topology file and adds the Martini bonds defined in the topology. (This file is included in the directory for your convenience, but you would normally want to store this in a generally useful location and refer to it when needed.) In general, a useful preprocessing step for VMD visualization is to avoid molecules being split over the periodic boundary, because if they are, very long bonds will be drawn between them. A script do_vmd.sh has been prepared for you for visualization using VMD. To learn more about visualizing Martini systems using VMD, consult the VMD tutorial. You will probably need to make the script executable.\n$ chmod +x do_vmd.sh\n$ ./do_vmd.sh\nThe inital and final snapshots should look similar to Fig. 1, at least if the self assembly resulted in a bilayer in the alloted time, which is not guaranteed. You may have noticed, however, that there is relatively little water, and some part of the initial solvated box is actually devoid of water. This helps to more or less guarantee a bilayer, but does make the simulation a little less realistic. You can test by solvating the lipids with more solvent. You can do this by changing the -maxsol flag on the gmx solvate command.\nIn the meantime, have a close look at the Martini parameter files. The available bead types and their interactions are defined in the file martini_v2.1.itp. This file contains the definitions of version 2.1, and also includes the definition of the water bead, right at the bottom of the file. The lipid DPPC is defined in the file martini_v2.0_DPPC_01.itp, which you downloaded from the lipidome page. Get out the 2007 Martini paper[2] and check the definition of this molecule. Understanding how these files work, will help you work with the Martini model and define new molecules or refine existing models.\n\n\n\n\nFigure 1 | DPPC bilayer formation. A) 64 randomly localized DPPC lipid molecules with water. B) After a 30 ns long simulation the DPPC lipids have aggregated together and formed a bilayer.\n\n\n\nWhen the simulation has finished, check whether you got a bilayer. If yes, check if the formed membrane is normal to the z-axis (i.e., that the membrane is situated in the xy-plane). Have a look at the self-assembly process: can you recognize intermediate states, such as micelles, and do you see metastable structures such as a water pore (water spanning the membrane interior) and/or a lipid bridge (lipid tail(s) spanning the water layer)?\n\n\nBilayer equilibrium run and analysis\n\nIf your bilayer was formed in a plane other than the xy-plane, rotate the system so that it will (with gmx editconf). In case you did not get a bilayer at all, you can continue the tutorial with the pre-formed one from dspc-bilayer.gro. (Example files of the tutorial assume that this file is used.) From this point on, we will refer to the bilayer as a DSPC bilayer. In Martini, the 4-to-1 mapping limits the resolution and the same model represents in this case a C-16 tail (palmitoyl) and a C-18 tail (stearoyl, hence DSPC). The reason for referring to the lipid as DSPC is that later on, we will compare the simulated properties to experiment and we will compare different lipids all with the same number of beads, changing either the head group from PC to PE or changing the tail from stearoyl (C-18, fully saturated) to oleoyl (C-18, single cis double bond at C-9).\nThe spontaneous assembly simulation was done using isotropic pressure coupling. The bilayer may have formed but is probably under tension because of the isotropic pressure coupling. Therefore, we first need to run a simulation in which the area of the bilayer can reach a proper equilibrium value. This requires that we use independent pressure coupling in the plane and perpendicular to the plane. Set up a simulation for another 30 ns at zero surface tension (switch to semiisotropic pressure coupling; if the pressure is the same in the plane and perpendicular to the plane, the bilayer will be at zero surface tension) at a higher temperature of 341 K. This is above the experimental gel to liquid-crystalline transition temperature of DSPC. You will find how to change pressure coupling and temperature in the gromacs manual: manual.gromacs.org/current/online/mdp_opt.html, or online manual 2016. It is highly recommended that you make perform this simulation in a new directory, name it, for example dspc-eq. Copy the required files there, edit the .mdp file, and set the run going (the commands for this final step - involving gmx grompp and gmx mdrun - are not given explicitly).\n$ mkdir dspc-eq\n$ cp dppc-md.gro (or dspc-bilayer.gro) dspc-eq/.\n$ cp martini_md.mdp dspc-eq/.\n$ cp martini*.itp dspc-eq/.\n$ cp dppc.top dspc-eq/.\n$ cd dspc-eq\n# [gedit/vi] martini_md.mdp\nThen prepare a .tpr file (gmx grompp etc) and run the simulation (gmx mdrun etc; i.e. similar instructions as for the spontaneous assembly run explained above; you may need to ignore a warning about non-matching atom names, and possibly adapt the number of water beads). If you do not want to wait for this simulation to finish, skip ahead and use a trajectory provided in the subdirectory spontaneous-assembly/equilibration/. NOTE!! The commands below assume your poduction run is producing files with the prefix md. This need not be the case, so replace these entries with the appropriate name(s) for your simulations.\nFrom the latter simulation, we can calculate properties such as:\n\narea per lipid\nbilayer thickness\nP2 order parameters of the bonds\nlateral diffusion of the lipids\n\nIn general, for the analysis, you might want to discard the first few ns of your simulation as equilibration time. The area per lipid as a function of time should give you an indication of which part of the simulation you should definitely not include in the analysis.\n\nArea per lipid\nTo get the (projected) area per lipid, you can simply divide the area of your simulation box by half the number of lipids in your system. The box-sizes can be obtained by running the gromacs tool gmx energy (ask for Box-X and Box-Y, remember that gmx 'tool' -h brings up the help of any gromacs tool). Then either use awk or xmgrace to calculate the area per lipid as a function of time. The gromacs tool analyze provides a convenient way to calculate the average and error estimate in any series of measurements (use the option -ee for the error estimate, and make sure you feed gmx analyze a file with a .xvg extension). (Note that this calculation might not be strictly OK, because the self-assembled bilayer might be slightly asymmetric in terms of number of lipids per monolayer, i.e., the areas per lipid are different for the two monolayers. However, to a first approximation, we will ignore this here.)\n$ gmx energy -f md.edr -o box-xy.xvg\n\n     &gt; 10 11 0 #[press Enter]\nHere, the second line is meant to show that you need to type the number(s) of the propery/ies you want. In our version this is 10 for Box-X and 11 for Box-Y. After typing “Enter” the output file is produced. You can now open it in xmgrace. You need to multiply the values of x and y at each time, and divide by 64 (number of lipids per monolayer or leaflet). To do this within xmgrace, click on the Data tab, then the Transformations tab, and then the Evaluate expression… tab. Select one of the sets on the left-hand side, for example G0.S0. Now click in the big Formula window. In that window type:\ny=s0.y*s1.y/64\nand press the Apply button in the left-hand-side corner. You will see that a third set has appeared. It contains the area per lipid. You do not see it in the graph, because it falls outside the range of the plot. To view it, click on the AS button in the left menu. This changes the range of plotting so all graphs in the file are shown. You will see a line at much lower values. To get a proper view of that, first click on the AutoO button and then on the line. It should show the range for that line. This can give you an idea of the relaxation time of the system: where do you see drift and where do you see fluctuations around an average. Note the time that you think is relaxation. Save the file under the name area.xvg in the File menu, and Exit xmgrace. Next, get the averages and error estimates using the gromacs tool analyze. Note the flag -n 3; there are three sets of data in the file. You can discard the relaxation time by using the flag -b [number].\n$ xmgrace -nxy box-xy.xvg # [perform operations and save as area.xvg]\n$ gmx analyze -n 3 -f area.xvg -ee\n$ gmx analyze -n 3 -f area.xvg -ee -b 15000\nAs an alternative, calculate only the x dimension (x and y start the same and they are coupled together, and so remain the same), and use awk to calculate the area per lipid. Then look at the statistics.\n$ gmx energy -f md.edr -o box-x.xvg -xvg no \n$ awk '{if (substr($1,1,1) != \"#\" && substr($1,1,1) != \"@\") print $1, $2*$2/64}' &lt; box-x.xvg &gt; area-per-lipid.xvg\n$ gmx analyze -f area-per-lipid.xvg -ee -b 15000\n\n\nBilayer thickness\nTo get the bilayer thickness, use gmx density. You can get the density for a number of different functional groups in the lipid (e.g., phosphate and ammonium headgroup beads, carbon tail beads, etc) by feeding an appropriate index-file to gmx density (make one with gmx make_ndx; you can select, e.g., the phosphate beads by typing a P*; type q to exit , this leaves you with an index file named index.ndx). You can obtain an estimate of the bilayer thickness from the distance between the headgroup peaks in the density profile.\n$ gmx make_ndx -f md.gro\n\n    &gt; a P*\n\n    &gt; q\n$ gmx density -f md.xtc -s md.tpr -b 15000 -n index.ndx -o p-density.xvg -xvg no\n\n    &gt; 4\n$ xmgrace p-density.xvg \nA more appropriate way to compare to experiment is to calculate the electron density profile. The gmx density tool also provides this option. However, you need to supply the program with a data-file containing the number of electrons associated with each bead (option -ei electrons.dat). The format is described in the gromacs manual and not part of this tutorial.\nCompare your results to those from small-angle neutron scattering experiments[3]:\n\nthickness = 4.98 ± 0.15 nm\narea per lipid = 0.65 ± 0.05 nm2\n\n\n\nLateral diffusion\nBefore calculating the lateral diffusion, remove jumps over the box boundaries (gmx trjconv -pbc nojump). Then, calculate the lateral diffusion using gmx msd. Take care to remove the overall center of mass motion (-rmcomm), and to fit the line only to the linear regime of the mean-square-displacement curve (-beginfit and -endfit options of gmx msd). To get the lateral diffusion, choose the -lateral z option.\n$ gmx trjconv -f md.xtc -s md.tpr -pbc nojump -o nojump.xtc\n$ gmx msd -f nojump.xtc -s md.tpr -rmcomm -lateral z -b 15000\n$ xmgrace msd.xvg\nTo compare the diffusion coefficient obtained from a Martini simulation to a measured one, a conversion factor of about 4 has to be applied to account for the faster diffusion at the CG level due to the smoothened free energy landscape (note, the conversion factor can vary significantly depending on the molecule in question). Also note that the tool averages over all lipids to produce the msd curve. It is probably much better to analyze the motion of each lipid individually and remove center-of-mass motion per leaflet. This requires some scripting on your part and is not included in this tutorial.\n\n\nOrder parameters\nNow, we will calculate the (second-rank) order parameter, which is defined as:\n\\[ P_2 = 1/2 (3 cos^2 \\langle \\sigma \\rangle − 1) \\]\nwhere \\(\\sigma\\) is the angle between the bond and the bilayer normal. \\(P_2 = 1\\) means perfect alignment with the bilayer normal, \\(P_2 = −0.5\\) anti-alignment, and \\(P_2 = 0\\) random orientation.\nA script to calculated these order parameters can be downloaded here (scroll down to the section on do_order, and download the script do-order-gmx5.py. there is also a version located in the directory scripts/). Copy the .xtc and .tpr files to a analysis subdirectory (the script expects them to be named traj.xtc and topol.tpr, respectively; you may want to use the 30 ns simulations already present in the subdirectory spontaneous-assembly/equilibration/). The script do-order-gmx5.py will calculate \\(P_2\\) for you. As it explains when you invoke it, it needs a number of arguments. You may need to or want to change some of the arguments. The command:\n$ python do-order-gmx5.py md.xtc md.tpr 15000 30000 20 0 0 1 128 DPPC\nwill for example read 15 to 30 ns from the trajectory md.xtc. The simulation has 128 DPPC lipids and the output is the \\(P_2\\), calculated relative to the Z-axis, and average over results from every 20th equally-spaced snapshot in the trajectory. Results are available as output and in the files order.dat and S-profile.dat; the latter is a profile that can be compared to published profiles, e.g. in Ref.[1]. (Remember, DSPC and DPPC share the same Martini representation!)\n\n\nAdvanced: additional analysis\nDifferent scientific questions require different methods of analysis and no set of tools can span them all. There are various tools available in the gromacs package, see the gromacs manual: manual.gromacs.org/current/online.html. Most simulation groups, therefore, develop sets of customized scripts and programs many of which they make freely available, such as the Morphological Image Analysis and the 3D pressure field tools available here. Additionally a number of packages are available to for assistance with analysis and the development of customized tools, such as the python MDAnalysis package: installation instructions.\n\n\n\nChanging lipid type\n\nLipids can be thought of as modular molecules. In this section, we investigate the effect of changes in the lipid tails and in the headgroups on the properties of lipid bilayers using the Martini model. We will i) introduce a double bond in the lipid tails, and ii) change the lipid headgroups from phosphatidylcholine (PC) to phosphatidylethanolamine (PE).\n\nUnsaturated tails\nTo introduce a double bond in the tail, we will replace the DSPC lipids by DOPC. Set up a directory for the DOPC system. Enter that directory. Download the topology for DOPC from the Martini lipidome web page. Compare the Martini topologies of these two lipids. You will see that the number of beads for these lipids is the same. You can therefore set up a DOPC bilayer quite simply from your DSPC result. Copy over the .top and .mdp file from the equilibration DSPC run. Copy the final frame of the DSPC run to serve as the starting frame of the DOPC run. Replace DPPC by DOPC in your .top and .mdp files, and gmx grompp will do the rest for you (you can ignore the ”atom name does not match” warnings of grompp); you do this by adding the -maxwarn option to the gmx grompp command, e.g. 3 allows a maximum of 3 warnings and will still produce a .tpr file). Execute the simulation, or - if you are impatient - use the trajectory provided for you as spontaneous-assembly/equilibration/dopc/dopc-ext.xtc. NOTE: because the lipids DSPC and DOPC have exactly the same number of beads, you can use the .tpr file from DSPC to analyze the dopc-ext.xtc file.\n\n\nChanging the headgroups\nSimilarly, starting again from the final snapshot of the DSPC simulation, you can easily change the head groups from PC to PE. Download the topology for DPPE from the Martini lipidome web page. Also for this system, run a 30 ns MD simulation, or - if you are impatient - use the trajectory provided for you as spontaneous-assembly/equilibration/dspe/dspe-ext.xtc. NOTE: because the lipids DSPC and DOPC have exactly the same number of beads, you can use the .tpr file from DSPC to analyze the dopc-ext.xtc file.\nCompare the above properties (area per lipid, thickness, order parameter, diffusion) between the three bilayers (DSPC, DOPC, DSPE). Do the observed changes match your expectations? Why/why not? Discuss.\n\n\n\nComplex bilayer mixtures\n\nWhen setting up larger and more complex bilayers it can be more convenient, or necessary, to start with a bilayer close to equilibrium rather then trying to get the bilayer to self-assemble. This can be done by concatenating (e.g. using gmx editconf) and/or altering previously formed bilayers or by using a bilayer formation program such as insane.py, available in the directory scripts/ or downloadable here (scroll down to the section on Insane). INSANE (INSert membrANE) is a CG building tool that generates membranes by distributing lipids over a grid. Lipid structures are derived from simple template definitions that can either be added to the program or provided on-the-fly from combinations of headgroup, linker and lipid tails specified on the command-line. The program uses two grids, one for the inner and one for the outer leaflet, and distributes the lipids randomly over the grid cells with numbers according to the relative quantities specified. This allows for building asymmetric bilayers with specific lipid compositions. The program also allows for adding solvent and ions, using a similar grid protocol it distributes them over a 3D grid. Additional information about the functionality of INSANE can be found by running insane.py -h.\nIn the directory complex-bilayers/ we will create a fully hydrated 4:3:3 mole ratio bilayer of DPPC:DIPC:CHOL with physiological ion concentration using insane.py, this is a similar mixture as was used in Risselada and Marrink[4] to show raft formation. The lipid DIPC is representative for tails containing two cis-unsaturated bonds and of length 16-18 carbons. Start by running INSANE (downloaded or copied from the scripts/ directory):\n$ python insane.py -l DPPC:4 -l DIPC:3 -l CHOL:3 -salt 0.15 -x 15 -y 10 -z 9 -d 0 -pbc cubic -sol W -o dppc-dipc-chol-insane.gro\nThis will generate an initial configuration for the system dppc-dipc-chol-insane.gro (Fig. 2A). Download the relevant lipid topologies from the Martin lipdome and provide this information together with the system composition to the .top file. (Check that the file provided for you is correct.)\nThen, energy minimize the structure and gently equilibrate the system. Note, as this simulation contains multiple components you will have to make an index file (using gmx make_ndx) and group all the lipids together and all the solvent together to fit the specified groups in the .mdp files; the .mdp files provided expect the names Lipids and Solvent. As all the bilayer lipids and solvent were placed on a grid (Fig. 2A), even after minimization they can still be in an energetically unfavorable state. Due to the large forces involved it may be necessary to run a few equilibrium simulations using a short time step (1-10 fs) before running production simulations with Martini lipid time steps (30-40 fs). The initial grid order imposed by insane.py should relax in a few ns (Fig. 2B), we recommend simulating for 5-30 ns using the Berendsen pressure coupling algorithm, to relax the membrane area, before switching to Parrinello-Rahman for the production run. This mixture will phase separate at a temperature of 295 K but that can take multiple microseconds (Fig. 2C). A sample run is provided for you in the directory bilayer-lipidome-tutorial/complex-bilayers/raftmix.xtc. The INSANE script can also be used to set up a complex (or simple!) bilayer system including membrane protein, see the Martini protein tutorial.\n\n\n\n\nFigure 2 | DPPC-DIPC-CHOL bilayer formation. A) Using insane.py a 4:3:3 DPPC-DIPC-CHOL bilayer was setup. B) After a 20 ns long simulation the grid structure is gone and the bilayer area has equilibrated. C) This lipid mixture phase separates into \\(L_d\\) and \\(L_o\\) domains at 295 K, this phase separation can take multiple microseconds, showing a top view of the simulation after 6 microseconds. In all panels DPPC is in red, DIPC in blue and cholesterol in orange.\n\n\n\n\n\nAdvanced: refine lipid parameters\n\nThis section uses the backward.py tool for fine-grained-to-coarse-grained (FG-to-CG) transformation, which is treated in more detail elsewhere. A related, but different strategy not using the backward.py tool is used in the tutorial on polymers, advantageous there because the PEG molecule is simpler to map from FG to CG representation than lipids.\nIn this part, we will outline how atomistic simulations can be used to obtain improved Martini parameters for selected degrees of freedom. You may then take this strategy to whatever lengths you deem fit. Remember, Martini in general does not aim to be specific for one particular molecule, but recognizes that the four-to-one mapping results in Martini molecules being representative of several closely related molecules. However, you may want to develop a specific model or compare how well Martini covers closely related molecules.\nHere, we study diC18:2-PC, a PC lipid with a doubly unsaturated tail, in the Martini lipidome denoted as DIPC. Specifically, the atomistic (FG) model is for dilineoylphosphatidylcholine. The lineoyl tail is fully denoted as C18:2c9,12. This notation shows that the tail is 18 carbons long (counting starts at the ester C-atom, bound to the two O-atoms), contains two cis bonds, starting at carbon 9 and carbon 12, respectively (i.e. the cis-bonds are between carbons 9-10 and 12-13). We will show how to compare distributions of selected angles between beads for a mapped FG model to those from a Martini simulation. You can then use the distributions to guess and refine selected Martini parameters such that the distributions match those from the FG simulation as close as possible. The files needed in this section are located in the bilayer-lipidome-tutorial/refine/ directory. The FG trajectory is in fg.xtc. This contains only the lipids from a simulation of a lipid bilayer consisting of 128 lipids (64 per monolayer) in water.\nThe task can be divided into the following five steps:\n\nTransform the all-atom (fine-grained, FG) trajectory into its coarse-grained counterpart, based on a pre-defined mapping scheme.\nCalculate selected angle distributions. These will serve as the reference (“gold standard”) later.\nDo a coarse-grained simulation of the system.\nCalculate the selected angle distibutions, and compare to the reference.\nRevise coarse-grained parameters, repeat steps 3 and 4 until you are satisfied with the result.\n\nFor the transformation from FG to CG, we will use the tool backward.py, which is described in more detail elsewhere. You do not need to download this tool; it is provided in the refine/ directory. Note that this and other python scripts are under continued development and updated versions are published. If you want to compare your work to the files provided, use the version provided. You are nevertheless encouraged to use the latest version.\nThe refine/Mapping directory contains a file dipc.gromos.map that defines the mapping from the FG to the CG model. Have a look at it. You will see how each (united) atom of the FG lipid contributes to a CG bead. The order of the CG beads in the CG model is provided under the [ martini ] directive. Beads will appear in the output file in this order. It is important that this order corresponds to your proposed Martini model. Check the correspondence by inspecting the file refine/take0/martini_v2.0_DIPC.itp. This contains the proposed Martini model. If you wish to alter the mapping scheme, you can do so by assigning the atoms differently to the beads. In general, we aim to adapt the mapping such that we get predominantly unimodal distributions for bonds and angles; however, we also want to stay within the Martini scheme of 4-to-1 mapping and mapping to recognizable chemical groups. As long as you can rationalize your choices, Martini is quite flexible.\n\n1. Transformation of the FG trajectory to a mapped CG trajectory\nBackward.py can perform the mapping from the FG to the CG model for .pdb and .gro files, but not (yet) for entire trajectories. Thus, the FG trajectory is first written out in single frames, and each frame is mapped from FG to CG using backward.py. When all CG frames are done, they are concatenated into a single CG trajectory - the time stamp is lost in this process! The mapping procedure is done for you in the bash script do-mapping.sh. Please inspect it before you execute it. Before you do the mapping, you need to have a .tpr file for the FG system.\n$ gmx grompp -p system.top -c lipid.gro -f min.mdp -o fg.tpr -maxwarn 10\n$ ./do-mapping.sh \nThis will probably take a while, you can read on and also start on point 3. while the conversion is in progress. When it is done, you will see that two directories have been created: FRAMES contains all the FG frames dumped from the trajectory; CGFRAMES contains all the CG frames converted from the FG frames and the mapped trajectory (CGFRAMES/cg-mapped.xtc).\n\n\n2. Calculation of the selected angle distributions\nAngle distributions can be calculated using the gromacs tool gmx angle. This requires an index file containing multiples of three indices. The three indices are the atoms/beads that define an angle. In this case, you have 128 lipids that each contain one or more angles you are interested in. You want to pool the data from equivalent angles and collected over the entire trajectory. This is best done by calculating the angle of interest for each lipid as a function of time, collect all equivalent angle data in one file and generate a distribution from that data. The bash script angledistr.sh does that for you. However, before you start, you need to provide a list of angles you are interested in. The script expects a file called anglelist containing one or more lines consisting of three numbers. The numbers are the indices of the angle(s) of interest. The numbers refer to a single lipid. The script will convert these for each lipid individually, depending on the number of lipids and the number of beads of each lipid. You may need to change these variables (NMOL and NAT, respectively) in the script. You can also adapt the script to take data from only a subset of the lipids, for example to calculate error bars on your distributions. Now, start the script or take a look at the files first and then start the script. Again, this may take a while, but you can already work on step 3.\n# [ gedit/vi ] anglelist\n# [ gedit/vi ] angledistr.sh\n$ ./angledistr.sh \nYou will see that a new directory has been created: ANGLES contains all data of all the angles of all the lipids as a function of time (cga_n.m.xvg), numbering the angles (n) and lipids (m) from 0 onward. Angle 0 corresponds to the first angle in the file anglelist. The distribution of the pooled data for each angle in the file anglelist can be found in the file ANGLES/cga_n-distr.xvg, where n is a number. You may inspect these files using a plot program, e.g. xmgrace. If all is well, the four angle distributions should look like those given in the files cfMappedAngleDistributions.agr, and cfMappedAngleDistributions.png.\nThese are the target distributions that we want to obtain with the CG model.\n\n\n3. CG simulation and initial guess for angle bending parameters\nAs a starting point, go to the directory refine/take0. We will use the Martini parameters as defined in martini_v2.0_DIPC.itp, i.e., the angles for the angles around the double-bond beads are defined with the minimum energy at 120 degrees. Carry out a short CG simulation (starting from cg_mdstart.gro).\n$ gmx grompp -p cg.top -c cg_mdstart.gro -n run.ndx -f martini_md.mdp -o cg.tpr\n$ gmx mdrun -v -deffnm cg \nAlternatively, you may want an educated guess based on the distributions before you start out on take0. Of course, this requires that you have one or more target distributions (from step 2). There is a tool to help you. Go back to the directory refine. The python script do_fit.py fits harmonic or periodic potentials to target distributions and returns parameters for the reference length or angle and force constant. NOTE: you will need to have the python package symfit installed! As an example, try the first angle:\n$ python do_fit.py -f ANGLES/cga_0-distr.xvg -x0 100 -k 25 --harmonic --radians\nYou should see a window appear (be patient, it may take a while) with the target distribution in blue and the first guess gaussian distribution in red. On the bottom of the window are sliders; you can adjust them to give a better fit. The parameter values will serve as the starting values of a best fit. Closing this window triggers the fitting procedure to start, and will result in the program determining best fit parameters and a new window showing the fit. The best fir parameters are printed in the terminal window. If you remember to specify the --radians flag on the command line, the force constant should have the correct Gromacs units.\n\n\n4. Calculate CG distributions and 5. iterate\nBy now, this is now easy! All you need is the same input (anglelist) and script (angledistr.sh) as for the mapped trajectory, except to change the name of the CG trajectory (to cg.xtc). Copy them over, edit, and analyze. After comparing the angle distributions of interest, adjust the relevant parameters in the CG .itp file and run a new simulation. It is probably a good idea to do every simulation in a new directory. Comparing distributions can be done using xmgrace, for example in directory refine/take0 after analysis:\n$ xmgrace ANGLES/cga_0-distr.xvg ../ANGLES/cga_0-distr.xvg\nA python tool that gives you a graphical comparison and quantitative comparison is also available (the data in the first file are rendered as blue points, the data in the second file as a red line):\n$ python compare.py ANGLES/cga_0-distr.xvg ../ANGLES/cga_0-distr.xvg\n\n\n\nTools and scripts used in this tutorial\n\n\ngromacs (http://www.gromacs.org/)\ninsane.py (downloadable here)\nbackward.py (downloadable here)\nMDAnalysis package (MDAnalysis)\n\n\n\nReferences and notes\n\n[1] Marrink, S. J., De Vries, A. H., and Mark, A. E. (2004) Coarse grained model for semiquantitative lipid simulations. J. Phys. Chem. B 108, 750–760.\n[2] Marrink, S. J., Risselada, H. J., Yefimov, S., Tieleman, D. P., and De Vries, A. H. (2007) The MARTINI force field: coarse grained model for biomolecular simulations. J. Phys. Chem. B 111, 7812–7824.\n[3] Balgavy, P., Dubnicková, M., Kucerka, N., Kiselev, M. A., Yaradaikin, S. P., and Uhrikova, D. (2001) Bilayer thickness and lipid interface area in unilamellar extruded 1,2-diacylphosphatidylcholine liposomes: a small-angle neutron scattering study. Biochim. Biophys. Acta 1512, 40–52.\n[4] Risselada, H. J., and Marrink, S. J. (2008) The molecular face of lipid rafts in model membranes. Proc. Natl. Acad. Sci. U.S.A. 105, 17367"
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/physisorption.html",
    "href": "docs/tutorials/Legacy/martini2/physisorption.html",
    "title": "Physisorption of alkenes on graphite",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nSelf-assembly of functionalized alkanes on a graphite surface\n\nThis tutorial guides you on how to perform self-assembly simulations on a graphite flake using a special version of the coarse-grained force-field MARTINI [1], similar to work done in publication [2]. The Martini force-field was originally developed for lipids [1] and then extended to many other systems including self-assembly on a graphite flake [2,3]. For learning purposes, we will limit ourselves to a tiny graphite flake with a small number of adsorbent molecules. Such simulations can be done on a personal computer within 2h. The tutorial is prepared for GROMACS 2016 versions and may need (small) changes in other versions. All files for this tutorial can be found in this zip file.\nThe aim of the tutorial is two-fold:\n\nit contains specific information to set up the self-assembly simulations of long-chain functionalized molecules on graphite\nit contains a method to construct a regularly packed surface consisting of a number of layers of beads: this method can be used to construct any such surface or crystal regardless of the nature of the beads or application\n\nThis tutorial assumes a basic knowledge of the Linux operating system and some experience with gromacs. It is helpful to have a basic understanding of the gromacs molecular dynamics package and the Martini force-field. You can find tutorials on these topics at the Tutorials section and http://www.mdtutorials.com/gmx/lysozyme/index.html.\nIn this tutorial, we will perform a simple simulation of self-assembly (that is adsorption and rearrangement) on a graphite surface from a random configuration of adsorbent in a solvent. We will study here self-assembly of a linear functionalized alkane, AM25, which consist of 6 beads (two P1 polar and four C1 apolar beads, respectively, arranged as C1-P1-C1-C1-P1-C1), which can represent N,N′-decanomethylenebispentamide (C4H9-CO-NH-(CH2)10-NH-CO-C4H9). For more information, look into publication [2]. As a solvent, we use phenyloctane, which in its coarse-grained representation consist of 5 beads (three SC4 beads in a ring and two C1 beads in a tail)\n\n\n0. Setting up the system\nDownload the zip file, and unzip it. It expands to a directory or folder called Tutorial. Go into the folder of the tutorial. For purposes of this tutorial this will be our working directory:\n$ cd Tutorial\nMake an empty directory in which you will test the simulation protocol:\n$ mkdir testSA\n$ cd testSA\nFirst copy a sample topology file:\n$ cp ../topology/sample_topol.top topol.top\nThe topology file consist of references to parameters of force-fields and number of molecules in the system. Here is the sample_topol.top file:\n#include \"../FF/martini_v2.15.itp\"\n\n#include \"../FF/martini_v2.0_solvents.itp\"\n\n#include \"../FF/martini_v2.0_graphite.itp\"\n\n#include \"../FF/martini_v2.0_graphite.itp\"\"\n\n[ system ]\n\nAdsorption on graphite\n\n[ molecules ]\n\nGRAP 1600\n\nAM25   50\n\nPHEO  300\nThe first four lines describe where parameters of force-field can be found (in subdirectory “Tutorial/FF”), then there is [ system ] with a title of simulation, and then [ molecules ], after which there are types and numbers of molecules of each type used in the simulation. For this tutorial, we use 1600 beads of graphite, 50 molecules of AM25, and 300 molecules of solvent PHEO. The subfolder “Tutorial/topology” also contains other topologies used in publication [2].\nCopy the coordinate file of a small graphite flake from the “Tutorial/gro” folder (to learn how to make a graphite flake yourself look at the end of this tutorial page). This box contains 1600 graphite beads in four layers, arranged in a hexagonal pattern. The beads are located inside the box, making sure there is space between the periodic images in all directions. This is why it is called a “flake”, as opposed to a “surface”. In many modeling applications, surfaces (of solids) are modeled as periodic entities, with a number of unit cells explicitly described and connected across the periodic boundaries. Here, this is NOT the case.\n$ cp ../gro/small_graphite.gro 0_box.gro\nInsert adsorbent molecules into this box using the “gmx insert-molecules” command: the coordinate file for single molecules of adsorbents are in the “Tutorial/gro” subdirectory. Here, we insert 50 adsorbent molecules of the AM25 kind:\n$ gmx insert-molecules -f 0_box.gro -ci ../gro/AM25.gro -o 0_box_ad.gro -nmol 50\nAdd solvent molecules using the “gmx solvate” command: here we use the -maxsol option to limit the number of molecules to 300 (however, you don’t have to use it, but you have to then make an appropriate change of the number of molecules in topol.top file):\n$ gmx solvate -cp 0_box_ad.gro -cs ../gro/phenyloctane.gro -o 0_box_sol.gro -p topol.top -maxsol 300\nThe subfolder “pictures” includes snapshots of different stages of the processes filling the box.\nNow it is time to perform simulations with the system prepared.\n\n\n1.Energy minimization\nAfter our system is set up, perform energy minimization, to remove all bad contacts (which could result in numerical instability and an explosion of the system). All parameter files for the simulation engine are in the “Tutorial/mdp” folder. All *.mdp files are similar to one present on other tutorials of Martini except lines in which we specify that graphite beads are frozen (freezegrps = GRAP and freezedim= Y Y Y). The graphite beads do not move during the course of simulation (but they do interact with adsorbent and solvent molecules). This is a choice that is usually made to limit the computational effort. The graphite surface when run without the “freezegrps” option is stable at small time-steps, but defects might occur over time.\n$ gmx grompp -f ../mdp/1_em.mdp -c 0_box_sol.gro -p topol.top -o 1_em.tpr\nNote that you may have to ignore WARNINGS. This can be done by adding the -maxwarn option to the gmx grompp command, e.g. if you need to ignore 1 warning:\n$ gmx grompp -f ../mdp/1_em.mdp -c 0_box_sol.gro -p topol.top -o 1_em.tpr -maxwarn 1\n$ gmx mdrun -v -deffnm 1_em\nNote that here you may have to limit the number of threads because the system is quite small, and may be too small for the domain decomposition over the available number of nodes. To use 4 threads, for example:\n$ gmx mdrun -v -deffnm 1_em -nt 4\nEnergy minimization will produce an local energy minimized structure in the 1_em.gro file, which we use for further simulations.\n\n\n2.Equilibration\nWe perform the equilibration in two stages: first we equilibrate at constant volume and temperature (NVT ensemble) and then at constant pressure and temperature (NPT ensemble).\nEquilibrate the system in the NVT ensemble:\n$ gmx grompp -f ../mdp/2_nvt.mdp -c 1_em.gro -p topol.top -o 2_nvt.tpr -maxwarn 1\n$ gmx mdrun -v -deffnm 2_nvt\nWe use the option “-maxwarn 1” to ignore one warning:\nWARNING 1 [file ../mdp/2_nvt.mdp]:\n\n  For proper integration of the Berendsen thermostat, tau-t (0.3) should be at least 5 times larger than nsttcouple*dt (0.3)\nwhich we ignore because we are performing this step to get a reasonable starting structure for production simulations and are not too concerned that the statistical ensemble or integration is not exact.\nEquilibrate system in the NPT ensemble:\n$ gmx grompp -f mdp/2_npt.mdp -c 2_nvt.gro -p topol.top -o 2_npt.tpr -maxwarn 2\n$ gmx mdrun -v -deffnm 2_npt\nIn this case, we use “-maxwarn 2” to ignore two warnings:\nWARNING 1 [file ../mdp/2_npt.mdp, line 65]:\n\n  All off-diagonal reference pressures are non-zero. Are you sure you want to apply threefold shear stress?\nWe ignore it because we want to allow deformations of the box only in the z-direction (the direction perpendicular to the plane of the graphite flake. The flake should not come near its periodic image, and therefore the lateral (x, y) directions are kept fixed.\nWARNING 2 [file ../mdp/2_npt.mdp]:\n\n  For proper integration of the Berendsen thermostat, tau-t (0.3) should be at least 5 times larger than nsttcouple*dt (0.3)\n\n\n3.Run simulationn\nAfter the temperature and pressure of the system are equilibrated, it is a time to perform a production simulation:\n$ gmx grompp -f ../mdp/3_run.mdp -c 2_npt.gro -p topol.top -o 3_run.tpr -maxwarn 2\n$ gmx mdrun -v -deffnm 3_run\nThis command will produce several files, from which final structure is in 3_run.gro and trajectory in 3_run.xtc file. Such a simulation on a PC (CPU Intel(R) Core(TM) i7-5600U CPU @ 2.60GHz) takes about 2h.\nYou can visualize this trajectory and structure using visualization program such as VMD (http://www.ks.uiuc.edu/Research/vmd/). A quick impression of the system can be gotten with “gmx view” if you have installed it (not standard!):\n$ gmx view -s 3_run.tpr -f 3_run.xtc\nSelect which molecules you want to see, and find the “Display/Animate” tab to click through the trajectory. If you are happy, you can spend more time on better visualization, for example using VMD. It is recommended that you first convert your trajectory, (1) to avoid long bonds appearing between beads that are on the other side of the periodic box (“-pbc whole”), and (2) to make VMD draw bonds between beads that have much longer bond-lengths than the standard cut-off of VMD (“-o 3_run.tng”; the .tng format knows which bonds to draw and makes the plug-in “cg_bonds.tcl” largely obsolete).\n$ gmx trjconv -f 3_run.xtc -pbc whole -o 3_run.tng\n$ vmd 3_run.tng \nThis concludes the tutorial on the set-up of a small system for 2D self-assembly on graphite from solution. In this tutorial, you were given a small graphite flake in a simulation box. Here is how you can make your own!\n\n\n4.Custom size of graphite flake\nNOTE that the following procedure can be used to create any regular arrangement of beads given a unit cell!\nIn the main directory Tutorial, make a new folder for testing:\n$ mkdir testFlakeSetup\n$ cd testFlakeSetup\nYou can make a custom size of the graphite flake from the unit cell given in the “Tutorial/gro” subfolder file “cell.gro”; this cell contains just two beads from which a graphite flake can be produced using the command:\n$ gmx genconf -f ../gro/cell.gro -nbox 20 20 2 -o 0_out.gro\nThis creates rhombic graphite flake of 20x20 unit cells in the x- and y-directions and two unit cells (four layers) in the z direction (the cell contains two beads in the z-direction). Subfolder “Tutorial/gro” also contains a coordinate file (graphite_paper.gro) of the graphite flake used in publication [2].\nNext, create a simulation box with a given size:\n$ gmx editconf -f 0_out.gro -o 0_box.gro -box 7 7 7  -angles 90 90 60\nThe “-angles” option causes the simulation box to be hexagonally shaped in the x-y dimension (as is the flake), and with right angles to the z-direction. It is essential that the simulation box is larger than the graphite flake (the periodically connected graphite surface causes packing artefacts).\nHaving created your own box, you can use it to fill with adsorbents and solvent, or do other cool things you might think of…\n\n\n4.Custom size of graphite flake\nSince some of the parameters for simulation engine reference to a specific group of molecules, to simulate different molecules, you need to make appropriate changes in mdp files. For example, if you would like to simulate AL1 molecules, you can do it using one simple command. You may want to keep the existing mdp files, so…\nIn the main directory Tutorial, make a new folder for testing:\n$ cp -R mdp mdp-AL1\n$ sed -i 's/AM25/AL1/g'  mdp-AL1/*mdp\nwhich changes all the names of molecules AM25 to AL1 in mdp files.\nThe coordinate files for the different adsorbents are in “Tutorial/gro” subfolder.\n\n\nReferences\n\n[1] Marrink, S. J., Risselada, H. J., Yefimov, S., Tieleman, D. P., and De Vries, A. H. (2007) The MARTINI force field: coarse grained model for biomolecular simulations. J. Phys. Chem. B 111, 7812–7824.\n[2] Piskorz, T. K., Gobbo, C., Marrink, S.-J., Feyter, S. de, Vries, A. H. de, Esch, J. H. van (2019). Nucleation mechanisms of self-assembled physisorbed monolayers on graphite. J. Phys. Chem. C, 123, 17510-17520.\n[3] Gobbo, C., Beurroies, I., De Ridder, D., Eelkema, R., Marrink, S. J., De Feyter, S., De Vries, A. H. (2013). MARTINI model for physisorption of organic molecules on graphite. Journal of Physical Chemistry C, 117(30), 15623-15631.\nTutorial contributed by Tomasz K. Piskorz."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/polymers.html",
    "href": "docs/tutorials/Legacy/martini2/polymers.html",
    "title": "Polymers",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\n\nGeneral aspects\n\nParametrization of polymers follows pretty much the standard procedure for the parametrization of any other molecule. There are, however, some factors to consider:\n\nSometimes you’ll want a polymer to reproduce certain particular features known from experimental observations or atomistic simulations. These features can be, for example, a target radius-of-gyration or helical propensity. These often depend on more bonded and nonbonded interactions than those dealt with when parametrizing simpler molecules. Try including longer-range distances and angles as target distributions, and understand what may be preventing your CG polymer from following those.\nWhen dealing with an oligomer, the behavior of residues close to the termini is often not representative of that of the rest of the molecule. It is a good idea to obtain reference distributions from a polymer chain long enough that a consistent behavior is obtained for the central residues. If the termini behave very differently, it might be worth assigning a different set of potentials to those.\nYou may find that Martini cannot faithfully reproduce the long-range structural organization you aim for, no matter how many potentials you use or how finer you make the mapping. Before you throw in the towel it can be an acceptable approach to use an elastic network to restrain the beads to the conformation you want (see the example of proteins). The flexibility afforded by the network is tunable, and might be enough to satisfy your needs.\nSome polymers can establish different intramolecular dipole interactions or salt bridges depending on conformation (think carbonyl–amide h-bonding in proteins). A single set of bead types may then be insufficient to describe the effective polarity of all the conformations of the polymer. This requires a different bead type assignment for each conformation, just like the polarity of backbone beads in Martini proteins depends on their secondary structure. Beware that such an assignment is static, and won’t change during a simulation if the conformations change. This approach is therefore most useful when you are sure that the polymer conformation will be kept (for instance, when restraining it with an elastic network).\nIn the case of polymer melts — or even when using small molecules as a solvent — achieving the right density becomes important. The iterative parametrization steps should take this into account.\nWhen parametrizing polymers of varying length and residue composition, matching of partition behavior is probably best done on a per-residue/fragment basis, rather than whole molecules. This should give the most transferable behavior.\n\n\n\nParametrization of a polymer melt: 200 PEG 9mers at 300K\n\nDownload the base files for this tutorial here. Download and unpack the archive (tar -xzvf PEG_parametrization.tgz unpacks to the directory tree PEG_parametrization).\nIn this tutorial we carry out the Martini parametrization of a PEG9 molecule from target atomistic data. The focus will be to match the mapped distribution of bonded conformations, as well as average density and molecular radius-of-gyration. For the time being, bead assignment will be only done to match the Martini building blocks — without adjustment for the matching of partition properties.\nThis exercise will involve the use of several GROMACS tools as well as some scripting (example scripts are provided, but beware that they were made specifically for this tutorial and will most likely not work for parametrizing other molecules without modifications). We will deal with some of the issues faced when parametrizing new molecules in general, and some particular to polymers. It is very useful to quickly read through the tutorial on molecule parametrization (particularly the flowchart in that page), as it sets out most of the general Martini parametrization workflow. Finally, in this tutorial we suggest some filenames, but these are by no means binding. Each user should feel free to adapt them to their organization scheme.\nMartini models of PEG have already been published (see Lee et al. or the newer (http://pubs.acs.org/doi/full/10.1021/acs.jpcb.5b03611)) The aim of this tutorial is not to supplant them but rather to provide an example workflow of parametrization. For the same reason an automatically generated topology was deemed sufficient for generating the target atomistic data.\n\nThe atomistic target data\nWe start off with the target atomistic trajectory of the system to parameterize. In the downloaded file bundle you’ll find the AA directory containing a 100ns trajectory of a melt of 200 PEG 9mers. These data were obtained from a PEG9 topology generated by the Automated Topology Builder for the GROMOS 54a7 united-atom forcefield; you’ll find it under PEG9.itp (the naming and atom order were slightly modified compared to the .itp in the ATB repository, but the potentials are unmodified). Be sure to take a look at the .itp file to have an idea about the atom ordering and naming in the molecule.\n\n\n\n\nFigure 1 | Different visualizations of the AA polymer melt. Left: single snapshot after almost 100ns of simulation. Right: Time averaged (200 ps) ensemble around the same time point as for the left panel.\n\n\n\n\n\n\nMapping\n\nWith the atomistic data at hand it is time to decide on an AA-to-CG mapping. Each ethylene glycol residue consists of two methylenes and an ether oxygen (in our target data, which comes from an united-atom topology, the methylenes are represented by a single particle each). A reasonable mapping strategy is then to assign each residue to a CG bead. This results in a 3-to-1 mapping, slightly finer than the typical 4-to-1 of Martini. Alternatively, two residues can be assigned to a single bead, for a 6-to-1 mapping. Figure 2 depicts different possible mapping strategies for PEG. Note that in the first mapping, where each bead corresponds to an O-C-C sequence, the terminal assignments become asymmetric. This is undesirable given the symmetric nature of the polymer.\n\n\n\n\n\nFigure 2 | Different mapping strategies for PEG9.\n\n\n\n\nThe remainder of this tutorial uses the second mapping strategy from Figure 2, where each bead corresponds to a C-O-C sequence, with two smaller but symmetric C-O-H assignments at the termini. Feel free to follow your chemical intuition and choose a different mapping; this will make it more challenging and potentially interesting, as you’ll have to adapt more of the tools and files that are provided.\n\n\nCoarse-graining the atomistic trajectory\n\nUsing the chosen mapping we can proceed to transform sets of atomistic coordinates into CG ones simply by finding the center of mass of each group of atoms in a CG bead. There are different ways to proceed with this so-called “forward mapping”.\nThe first method uses the GROMACS tool gmx traj to output centers of mass of arbitrary selections as a function of time in trajectory format. This requires that an index file be created containing one group per bead, each group listing the respective atomistic atoms. As you can imagine for a system such as ours this index file requires a bit of scripting to prepare as there’ll be 2000 groups (or as many CG beads as your mapping yields). The script indexer.py will do this for you, but edit it to understand its workings and to ensure its parameters are correct for the mapping you chose.\npython indexer.py\nYou should now have produced the index file mapping.ndx. To use the index file with gmx traj, ask for 2000 groups, set the -com flag, and point it to the PBC-treated AA trajectory, the compiled topology, and the index we just prepared:\nseq 0 1999 | gmx traj -f AA/trajpbc.xtc -s AA/topol.tpr -oxt traj_cg.xtc -n mapping.ndx -com -ng 2000 -b 20000\ngmx traj will prompt you for which index groups correspond to the 2000 that were asked for with the -ng flag. By piping the output of seq 0 1999 into it we automate the process and ensure they are output in the correct sequence. Here we also used the -b flag to discard the first 20ns as equilibration time. gmx traj yields an .xtc trajectory file, traj_cg.xtc. The trajectory traj_cg.xtc contains the mapped atomistic data and reflects the coarse-grained behavior of the atomistic model. To serve as a starting point for CG simulations later, and also for visualization and analysis purposes, it is useful to also have a .gro file; the same gmx traj command can be adapted to that end, by setting -b 100000 to only pick the last frame and choosing an output filename with the appropriate extension:\nseq 0 1999 | gmx traj -f AA/trajpbc.xtc -s AA/topol.tpr -oxt cg.gro -n mapping.ndx -com -ng 2000 -b 100000\nThe second forward mapping method, which we won’t cover in detail here, makes use of the backward tool. This script was developed to automate the backmapping of CG structures to atomistic, but can also perform forward mapping. It uses mapping files to decide which atoms to calculate centers of mass from, and is therefore more flexible than the approach above. It is of particular interest when dealing with polymers with arbitrary sequences of different residues, for which the scripting of the indexation is not as straightforward.\n\n\n\n\nFigure 3 | Different visualizations of the center-of-mass-mapped AA polymer melt. Red spheres are the centers of mass; bonds are dark grey. Same panel setup as in Figure 1.\n\n\n\n\n\nExtraction of properties and bonded distributions (atomistic)\n\nArmed with mapped .xtc and .gro files you can now use gmx distance and gmx angle to extract the relevant bonded distributions of the beads. To this end index files will have to be generated specifying which bonds/angles/dihedrals to measure (see the -h flag of each command). Again, the generation of thousands of atom pairs (for bonds), triplets (for angles), or quadruplets (for dihedrals) requires some scripting, and the gen_indices.py script is there for you. If you inspect the code you’ll notice that the indices will be split between _core and _term groups. These groups separate bonded interactions involving the termini from those that only contain core beads. This might be desirable because a) the termini were mapped differently than the rest of the molecule, and b) even if they were mapped just as the core beads, termini often explore different or more extreme bonded configurations. (Also note that the core groups are split in two. This has the practical reason that the gromacs tool gmx distance apparently has a bug when too many pairs are specified. You can use this to your advantage by now having two samples of the bond distriburtions for the core bonds…)\npython gen_indices.py\nNow invoke each analysis tools on each index group; remember to change the output filename when selecting the termini and the core groups, in order not to clobber results:\ngmx distance -f traj_cg.xtc -len 0.35 -tol 0.8 -n bonds.ndx -oh bonds-1.xvg\ngmx angle -n angles.ndx -f traj_cg.xtc -od angdist.xvg\ngmx angle -type dihedral -n dihedrals.ndx -f traj_cg.xtc -od dihdist.xvg\nYou’ll be repeatedly running these same commands later when attempting to reproduce these distributions. The bash script calc_dists.sh does that for you; just be sure to adapt file names and locations.\nNow view the distributions you obtained. Compare the termini with the core ones and decide which will warrant different potentials and which can be treated as the same. You can also at this point predict the distributions that can be problematic to reproduce:\n\nthose that are obviously multimodal, with spread apart modes;\nthose that are concentrated around a very narrow parameter space and will therefore require very strong potentials;\nand the dihedrals that span bond angles that can extend to 180 degrees.\n\nAt this point it is also a good idea to calculate the density of the atomistic system, as we’ll be wanting to match it as well (you can instead try to match the known experimental density, if you have it). If an .edr file is available one can use the gmx energy tool to this end. However, in the absence of an .edr file one can simply use\ngmx traj -f traj_cg.xtc -ob box.xvg -s cg.gro\nwhich will extract the box vectors as a function of time. These can then be averaged using gmx analyze:\ngmx analyze -f box.xvg\nThe average volume can be calculated from the first three averages (which correspond to the average X, Y, and Z box sizes, respectively, in nm). From the average volume you can readily calculate the average system density.\nAs an additional parametrization target we’ll be aiming to reproduce the radius of gyration of the atomistic PEG molecule. You can use the gmx polystat tool to calculate it, but it requires a .tpr file to know the number of atoms per molecule. The best is to leave this for now and calculate it later when you get a .tpr for the CG runs, which will have appropriate molecule information.\n\n\nCreation of an .itp file\n\nFor this step it might be useful to use the .itp of a preexisting molecule as a template for your own (take your pick from the several available at here). Since there will be an iterative optimization procedure involving several attempts at this file, it is wise to start off by placing it in a subdirectory (take0 seems an appropriate name). This will keep chaos from ensuing when generating new trajectory and distribution files, which would get mixed with the atomistic ones or with those from other iterations. This tutorial assumes you’ll be working in a subdirectory for each take.\n[ moleculetype ]\nUnder the [ moleculetype ] directive you should input the name for your molecule. This is the name you’ll be referencing in the .top file. Next to the name is the default number of bonded neighbors that are excluded from nonbonded interactions. Standard Martini procedure is to exclude only first bonded neighbors, by setting this value to 1. Should more exclusions be required it is usually best to add them individually later in the topology.\n[ atoms ]\nThis directive defines the atom properties of the molecule. Remember that in our CG system molecules have 10 atoms (beads). At this point atom and residue naming are of little importance (but remember, 5 character limit). The atom types, however, control the nonbonded interactions and are a central part of the coarse-graining process. Again, you’ll use your chemical intuition, and a copy of the 2007 Martini paper, to judge which bead type better represents each mapped moiety: find Table 3 in the paper, and in there find the building block that most closely matches the one underlying each bead. For the C-O-C mapping it is probably one of the N* bead types, whereas for the termini one of the P* ones. A correct choice means that the interaction of a bead with different solvents follows the correct partitioning energies (see the solvents used for parameterization in the paper’s Table). The idea behind Martini is that, by matching this partition behavior, we will get a consistent strength of nonbonded interaction between the bead types in the Table.\nMartini also provides the so-called S-beads (SP, SN, etc.). These are smaller versions of regular beads that can pack closer together but with a shallower nonbonded energy well that keeps them from solidifying. They are typically used for mappings finer than 1-to-4, and might be useful in our case if the density of the system turns out to be too low. Be aware that these beads only pack closer to other S-beads. Interaction with regular beads follows the same potential as between regular beads.\nFor the rest of the [ atoms ] directive be sure to set all beads to 0.0 charge and to assign each to their own charge group. Leave masses blank for the default value. When coarse graining, our bonded parameters aim to reproduce statistical averages and not the frequency of real quadratic or cosine oscillations; the meaning and importance of bead mass is therefore less strict as for atomistic forcefields.\n[ bonds ], [ angles ], [ dihedrals ]\nNow begins the trial-and-error part of the procedure. Write down for each relevant section the atoms involved in the potential, the function number, and your first guess for the equilibrium value and potential force.\nMartini typically uses type 1 bonds, and forces usually fall in the \\(10^3 kJ/mol‧nm^2\\) range. Angles are typically type 2, as these don’t get unstable at \\(180^{\\circ}\\). Forces usually fall in the \\(10^2 kJ/mol\\) range. Finally, dihedrals are typically assigned either type 1 (with forces in the \\(10^0 kJ/mol\\) range, and with an appropriate multiplicity) or type 2, when keeping structures like rings planar (forces in the \\(10^2 kJ/mol‧rad^2\\) range).\nThis said, you, as supreme parametrizer of your system, have full choice over which potentials to use (even non-analytical tabulated ones are possible, although they are a bit off the scope of this tutorial). However…\n\n*** DIFFICULTY WARNING ***\n\nThis mapping involves bond angles that can reach \\(180^{\\circ}\\). Applying dihedral potentials over these bonds will lead to severe instabilities. We recommend, for the sake of finishing the tutorial in a timely and successful fashion, to skip the reproduction of the dihedral distributions. If you dare go down that path take the following advice:\n\nUse stronger angle potentials that prevent beads from becoming collinear (the type 1 angle might be an option here);\nUse a smaller simulation timestep than the typical 20fs, to give those angle potentials a chance to act on the molecules;\nTry out the new restricted bending angle potentials (angle type number 10) that we just implemented in version 5.0 of GROMACS! They avoid collinear bonds without requiring any lowering of the timestep or changes to the dihedral potentials.\n\nWith that out of the way, we’re ready to test-drive our brand-new CG molecule (no more directives should be needed in the .itp file).\nCreate a .top file that #includes the martini_v2.2.itp file (this is where bead interactions are defined) as well as the PEG .itp you just created (you can use the atomistic topol.top as a template). Specify how many molecules you have in the system, and you’re done.\n\n\nEnergy minimization and simulation of the system\n\nThe first step is to generate a CG configuration stable enough to start a simulation from. Use the supplied min.mdp together with the just-created .top file and the cg.gro you forward-mapped earlier:\ngmx grompp -f ../min.mdp -p topol.top -c cg.gro -o min\nYou will likely receive a warning that your atom names do not match. This is ok to ignore as long as you understand why that difference arises (and you do, right?). Just rerun the grompp command with the -maxwarn 1 flag, and minimize the structure with:\ngmx mdrun -v -deffnm min -rdd 1.4\nAfter finishing mdrun will dump the minimized coordinates as the min.gro file. Note the use of -rdd 1.4. This tells GROMACS, when parallelizing, to search a bit further into neighboring cells for bonded partners. This might not be required in your case, and there is a performance penalty associated with it. If however it is needed and you leave it out, you’ll get spurious error messages complaining about “missing interactions”.\nAt this point it is instructive to read min.mdp and see the options required for Martini. In this particular case the electrostatic treatment is not necessary as we don’t have charges in our system. Also note that the typical smoothness of Martini potentials lets us use the straightforward steepest descents minimization (integrator = steep in the .mdp) without fear of letting the system get trapped too far away from the energy minimum.\nFrom this point, prepare an MD run for equilibration with:\ngmx grompp -f ../eq.mdp -p topol.top -c min.gro -o eq\nYou should get no further warnings about atom names, since they are sorted out in min.gro. You might, though, be warned that your timestep is too large for the predicted frequencies generated by some of your bonded potentials. If this is your first try, do lower the force constants in question. If you got to these warnings after having to use a high force constant to match bond distributions, it might be a good idea to replace them by constraints. You might also get warnings about the not-so-weak coupling nature of the thermo- and barostats if you decrease their time constants. These are usually safe to ignore with Martini, although it will be up to you to demonstrate that pressure and temperature behavior is adequate.\nRun the equilibration and (finally!) follow it up by a production MD simulation of your parametrized PEG!\ngmx mdrun -v -rdd 1.4 -deffnm eq\ngmx grompp -f ../md.mdp -p topol.top -c eq.gro -o md\ngmx mdrun -v -rdd 1.4 -deffnm md\nTake the time of your simulation to read the .mdp file and understand its thermostatting and barostatting options. Martini has traditionally been coupled to the berendsen thermo- and barostats, although other scheme combinations can be used, in this case v-rescale temperature coupling and parrinello-rahman pressure coupling. The robustness of Martini and of the berendsen schemes allows one to skip, for most simple cases, any NVT pre-equilibration.\nIf you get errors at this point there can be multiple causes, and GROMACS is not always able to exit cleanly and in an informative way. The most frequent cases are:\n\nDihedrals, or type 1 angles, over bonds that become collinear;\nTight networks of constraints that cannot be respected properly for the given timestep or for the requested accuracy in the .mdp (see the lincs_order and lincs_iter options);\nMisconstructed or not properly minimized starting configurations.\n\nThere can be, of course, many other causes for instability. Reducing the timestep often helps, but this is undesirable (aim for the typical Martini step of 20fs). Sometimes running a short NVT simulation with a small timestep allows the system to become stable enough to continue in NPT with larger timesteps. In addition, a good diagnosis process is to create an .mdp that outputs every simulation step. This will let you identify precisely the events that lead to a crash.\nWhen you get a stable run it is time for…\n\n\nExtraction of properties and bonded distributions (CG)\n\nAt this step you will simply rerun the analysis tools on the CG trajectory. Very importantly, prior to analysis you must make your molecules whole across the PBC:\ngmx trjconv -f md.xtc -pbc mol -o trajpbc.xtc -b 1000\nThe -b flag discards the first 1 ns as equilibration time. You can now use the calc_dists.sh script but be sure to adapt it for file locations.\nAlso calculate the system density. Unless you used tailored bead masses, gmx energy won’t be able to report it correctly. Get the average volume by simply running gmx energy on the output md.edr file, and compute the density using the known system mass.\nFinally, use gmx polystat to calculate the average radius of gyration of the polymer chains. With the .tpr from this run you can now also calculate the radius of gyration of the mapped atomistic trajectory, if you haven’t already done so.\n\n\nBack to the drawing table\n\nNow use your favorite plotting tool to compare distributions to the target atomistic ones. Also compare the average densities and radius of gyration.\nIt is unlikely you nailed all the distributions and target properties spot on on the first try. It is then time to create a take1 directory and populate it with the files required for a new run. Copy over the PEG .itp and adjust it based on the distribution/property discrepancies. A good idea, to prevent long equilibration times, is to use the endfile of the previous take as the starting configuration for the new parameterization test run. Just beware of runs that end up in obviously unstable configurations, or that undergo unwanted phase transitions.\nAn important note when parametrizing solvents or, in this case, melts, is to check the density for too large deviations from the target value. Differences of more than 5-10% are difficult to correct alone by adjusting the bonded potentials, and you’ll probably have to rethink the bead types you’re using.\nRepeat until you are satisfied with the results you’ve got. When that happens, congratulations, you’ve parametrized your first Martini polymer! Go drink a Martini to celebrate.\n\n\nWhat next?\n\n\n\nFree-energy verification\n\nIn our approach we focused on reproducing the bonded behavior of the polymer. The nonbonded part was addressed by choosing Martini building blocks that represent the chemical nature of PEG and that yield its correct density. The Martini philosophy, however, calls for a more careful approach where the partition properties of the resulting molecule are checked against experimental or simulated data.\nTypically, free-energy is matched to partition data taken between aqueous and apolar solvents. This stems from Martini’s origins as a forcefield for biomolecular simulations. It should be stressed, however, that this sort of parametrization must be adapted to the problem under study. If, for instance, the model’s application concerns mostly interaction with hydrophobic molecules, then it’s the partition into and among those that should be aimed for.\n\nMelt-Water partition\nThe solvation free energies of our PEG9 molecule have been determined by thermodynamic integration (TI) at the fine-grain level. You can access that data here. The archive unpacks (tar -xzvf TI_tutorial.tgz) to a directory tree TI_tutorial. This archive contains the atomistic data and a CG directory with H2O and Melt subdirectories ready for you to populate with your systems.\nIn each directory you will perform simulations to calculate the respective solvation free energy. You will do this by decoupling the nonbonded interactions between solute (a single PEG9 molecule) and each of the solvents. This decoupling will be done gradually, over 10 steps, so that it is possible to calculate a free energy difference between each. You will need the .itp file of the topology you optimized for PEG9, and two .top files: one for the melt system and another one for a 1 PEG + several waters.\n\n\nSystem initialization\nYou can use a .gro file from the end of your parameterization as a starting point to calculate the solvation energy of PEG9 into its own melt. However, we need to tell GROMACS we want to decouple one molecule from all the others.\nGROMACS has several ways of specifying a switching between coupled and decoupled states. Here we do it by passing the name of the molecule to decouple to the couple_moltype option in the .mdp. However, in the case of a melt this would mean all molecules would become decoupled simultaneously. The workaround for this is to copy your PEG .itp file to another name, and in there change the molecule name (let’s say PEG9X). This will allow you to specify in your .top file the two “different” molecules separately:\n[ molecules ]\nPEG9X     1\nPEG9    199\nFor the water system you need to create a .gro file with a solvated PEG9 chain. An easy shortcut is to use the same .gro file as for the step above but changing the .top to become:\n[ molecules ]\nPEG9      1\nW      1990\nThis will tell GROMACS to interpret any atoms after the first PEG as water beads. You will then need to equilibrate this system for a short period before using it for TI (use the provided eq.mdp file).\n\n\nSimulation setup\nTo switch between the coupled and decoupled states we define in the .mdp 11 states, each with a different scaling of the Van der Waals interactions (more steps would be required to switch off Coulombic interactions, but there are none in our system). The scaling is defined by variable lambda, varying between 0 and 1. The meaning at lambda=0 and lambda=1 is set with the couple-lambda0 and couple-lambda1 in the .mdp. In our .mdps lambda=0 means a full Van der Waals coupling (couple-lambda0=vdw) while lambda=1 means a fully decoupled molecule (couple-lambda0=none).\nThe lambda values at each of the 11 different states are given with the vdw-lambdas .mdp directive; the init-lambda-state directive tells GROMACS which of the 10 to actually use in a particular run. The simulations will periodically output the potential energy of the system (the frequency being controlled by the nstdhdl directive). The analysis method we’ll be using requires that for a given state the energies of the same configuration under all other states’ Hamiltonians also be output. This is set with calc-lambda-neighbors=-1 (and is also why every run needs to know which other states there are).\nYou’ll find a TI.sh script in each of the H2O and Melt subdirectories. This file automates the generation of the 10 systems to be run. Read it carefully to understand how it changes the .mdp file for each decoupling step (hint, look for the sedstate label, that’ll be used by the sed command to create the different step files). Also notice how it links the output dhdl.xvg files to the root directory for further analysis.\n\n\nIntegration with MBAR\nWe’ll be using the MBAR integration and error-estimation method (see a detailed description of the method, and the used analysis scripts at the AlchemistryWiki). You will need to install the pymbar package. If it’s not yet installed can do so with\nsudo pip install pymbar\n(if you don’t have sudo privilege in your workstation you can install pymbar locally to your home directory by also passing the --user flag). You will also need to install alchemical-analysis (from https://github.com/MobleyLab/alchemical-analysis). If that is all-set, run the alchemical-analysis program, telling it the output filename prefix (-p flag) the temperature (-t flag) and how many ps to leave out as equilibration time (-s flag; 1000 ps was deemed enough):\nalchemical-analysis -p dhdl -t 300 -s 1000\nThe results will provide calculations using different methods. You should use the ones from MBAR. The script output files will also let you see the individual free-energy changes between steps, and identify areas where more lambda points should be run to lower the estimate error (but beware that because of the need to evaluate energies at all the steps’ Hamiltonians if you add more lambda points all steps will have to be rerun). An alternative tutorial with a set-up for free energy of solvation calculation by TI using only gromacs tools (gmx bar) is provided by Justin Lemkul.\n\n\n\nFree-energy verification\n\nAfter the successful parameterization and simulation of your new molecule you may want to convert it back to fine detail (for instance, to proceed with a fine-grain simulation after equilibrating the system with CG). This process is called backmapping.\nDue to the reduction of degrees of freedom involved in coarse-graining, the reverse process is not uniquely defined: there will be multiple atomistic configurations that can correspond to a CG grain structure. However, knowledge of the atomistic topology allows us to input more data into the process: an initial atomistic configuration is prepared where atoms are randomly placed in the vicinity of the respective CG bead. The system is then allowed to energy-minimize and equilibrate subject to some restraints. The bonded information contained in the topology leads this process into providing a consistent fine-grain configuration compatible with the starting CG one. Before continuing you can read more about the procedure here and here.\nTo reverse-map your coarse-grain PEG system you’ll need the backward tool, available here. Unpack it into a new folder. Now copy over to the same folder a CG .gro file (for example from your take0 directory or the one you made by mapping the atomistic structure) together with the fine-grain .top and thePEG9.itp referenced in the .top file; you can find the latter in the subdirectory AA in the PEG_parametrization material. This is enough information to recreate a GROMOS 54a7–compatible structure.\nWe must now teach our PEG mapping to the backmapping procedure. This is done by creating a .map file. The format is described here, but you may start by copying a preexisting file from the Mapping directory (you can also find a ready example in the root of the tutorial directory you downloaded).\nIn the .map file you’ll want to name your [ molecule ] as the name you used for each CG PEG residue. If you named your residues differently (say, to distinguish terminal ones) it is best to edit your CG .gro file and set them all to the same name.\nUnder the [ martini ] directive you’ll enter the name of the bead(s) that compose each residue. In our case each residue is composed by a single bead. Again, these beads should all have the same name in the .gro file; edit it if needed.\nThe [ mapping ] directive lists which force-fields this mapping is set for. It serves as a tag for when multiple mappings are available, and to let the script know what is the level of detail of the target forcefield (coarse-grained, united-atom, or all-atom). Since we’ll be backmapping to the gromos54a7 forcefield you can set this to that name (as of this writing the script knows about martini, gromos, gromos43a2, gromos45a3, gromos53a6, gromos54a7, charmm, charmm27, and charmm36).\nFinally, under the [ atoms ] directive you’ll list the atom numbers and names that compose each residue, and to which CG bead they belong. The format is atom_number atom_name bead1 bead2 …) Check the atomistic .itp for the correct atom names. At this point you should ensure that the residue numbering in the .itp is consistent with the mapping. In this example, all ten beads must be given different residue numbers, but the same residue name PEG and atom name PEG. If this is not the case in your coarse-grained structure, you’ll need to edit it, which can be a painful thing to do. An alternative is to prepare a .tpr file for the CG system that incorporates the desired naming and numbering of the CG molecules and convert your coarse-grained structure with that .tpr. You should also check that in the atomistic topology there are no repeated atom names per residue. This is so because the assignment of atoms to bead coordinates is done as follows:\n\nThe bead(s) corresponding to residue n is/are read from the CG .gro file;\nThe name of residue n is searched in the Mapping database;\nThe atoms from residue n in the topology are read;\nThe read atom names are matched to those in the .map file and split across the corresponding bead(s) that were read from the .gro file;\nLeftover atoms that are absent from the mapping list are assigned to the first read bead.\n\nThe last rule means you can leave out of the .map file atoms specific to the termini, as this will simplify the list.\nAfter the [ atoms ] directive you have the option to add further information as to the relative placement of atoms within beads. This is unnecessary in our case. It would be required if dealing with atomistic topologies that might minimize to the wrong conformers, such as when chiral center might get inverted.\nOnce this is done the .map file must be placed in the Mapping directory (and actually have a .map extension). It is then only a matter of running the following command (adapting for the correct .gro and .top filenames, and you may need to edit the initram.sh script - downloading initram-v5.sh may save you some of that - for the settings of energy groups and energy group exclusions, which by default are Protein, Membrane and Solvent, which are not relevant here and actually lead to gromacs aborting):\n./initram.sh -f cg.gro -p topol.top -to gromos54a7\nThis shell script automates the invocation of backward.py to generate the starting atomistic structure, and the running of an appropriate set of minimization and restrained equilibration steps; both initram.sh and backward.py accept the -h flag to list available options to the process.\nOnce initram.sh finishes you have your atomistic system ready! Judge the quality of the conversion by visualizing both CG and atomistic .gro files superimposed. Or take the generated structure for a test run using an approriate .mdp file, which you can find in the AA directory.\nIf the process exits with errors during the minimization/equilibration you can just try rerunning it: the atom assignment to the bead space is done randomly and bad luck can cause a botched backmapping."
  },
  {
    "objectID": "docs/tutorials/Legacy/martini2/visualizing_martini.html",
    "href": "docs/tutorials/Legacy/martini2/visualizing_martini.html",
    "title": "Visualizing Martini (using VMD)",
    "section": "",
    "text": "The material offered in this page is LEGACY material. This means that it either pertains to older iterations of the Martini force field and/or that it is no longer actively supported. However, this does not mean that there aren’t cool things to be learned here! Have a look! If you are looking for the current iterations of the Martini force field lectures or hands-on tutorials, click here to go back!\n\n\nVMD is a molecular visualization program for displaying, animating, and analyzing large biomolecular systems using 3-D graphics and built-in scripting. http://www.ks.uiuc.edu/Research/vmd/.\nIn this module, we explain some of the vmd commands that can be used to visualize the CG systems. Additionally, Tcl scripts are presented that assist with the visualization of CG systems; these scripts, as well as extended help, are available on the Martini website.\nAn additional, very usefull tool for displaying CG (Martini) structures in VMD is Bendix. A good tutorial for Bendix can be found here:\n\nhttp://sbcb.bioch.ox.ac.uk/Bendix/\n\n\nSome basics\n\nVMD adopted a representation-philosophy: for any set of atoms/molecules/protein chains we want to display or analyze, we need to select this set through a “representation” defined by keywords related to this set (somewhat similar to make_ndx). VMD comes with implemented keywords for all-atom systems (“protein”, “chain”, “hydrogen”, “solvent”, etc.). More general keywords are implemented to be able to display non-classical-systems (CG systems are part of this second category); you can find them in VMD manual:\n\nhttp://www.ks.uiuc.edu/Research/vmd/current/ug/\n\nBelow are listed a few examples:\n\nTo select only lipids: resname POPC, or only part of each lipids: resname POPC and name “C..A” ”C...B” ”D..A” “D..B” for lipid tails (C1A,C1B, etc.) and resname POPC and name NC3 PO4 ”GL.” for heads.\nTo select only backbone beads of a protein: name BB (use “BB.*” or BAS for old versions of FG-to-CG scripts).\nTo get rid of solvent (water/ion beads): not resname W WF ION or WP in case of polarizable water.\nTo show only charged positively charged residues (in Martini): resname LYS ARG.\nTo display the water shell around specic residues: within 7.0 of (index 531 to 538).\n\nTo display all lipids (excluding DPPC) whose heads are interacting with the same specific residues: same resid as ((within 7.0 of (index 531 to 538)) and name NC3 PO4 “GL.*“) and not resname DPPC. As you can see in the examples, all these keywords can be mixed with the logical links: and, or, not, etc. to produce any representation. Try it yourself! VMD is really demanding in term of memory; an easy trick to decrease the amount needed by VMD is to load structure/trajectories containing only beads needed by your analysis; this can easily be done by preprocessing the trajectory using trjconv. And as we are simulating bigger and bigger systems in which more and more beads are involved, the previous trick can be adapted to increase the displaying/seeking speed of trajectories by writing representations showing only beads needed for the visualization (head groups of a bilayer for instance). Keep in mind that you can save the visualizing state of your system whenever you want by saving a state.vmd file. This file contains the Tcl commands needed to obtain the current display; lists of bonds and drawings (cylinders) are not saved, but you can open this .vmd file and manually add the lines you wrote to generate them at the bottom.\n\n\nCG bonds/constraints and elastic networks\n\nWhen a CG structure/trajectory is opened with VMD, the program builds a network of bonds using a distance criteria and an atomistic library of possible bond lengths (defined by the namd forcefield, developed by the same group); CG beads, linked with bonds with an average length of 0.35 nm, are not defined through this automatic algorithm. VMD inevitably ends up displaying a cloud of dots, which are hard (impossible?) to properly visualize with non-bionic human eyes. A Tcl script which reads the bonds and constraints from the CG .itp/.tpr files, and rewrites the CG bond network is available on the Martini website.\nFirst, make sure your system knows where to find the script:\nsource /wherever/cg_bonds.tcl\nThis script can now be used from the command line window of VMD as follows:\ncg_bonds -top system.top -topoltype \"elastic\"\nin case you have a .top available, but no gromacs. Alternatively, if gromacs is installed on the machine you are using, you may use a .tpr instead:\ncg_bonds -gmx /wherever/gmxdump -tpr dyn.tpr -net \"elastic\" -cutoff 12.0 -color \"orange\"\n-mat \"AOChalky\" -res 12 -rad 0.1\nThe last line will draw the ElNeDyn network with the options (cutoff, color, material, resolution and radius) specied by extracting the bonds from the dyn.tpr file (that’s where the gmxdump comes in). Note that you must specify a my gromacs version compatible with the dyn.tpr file.\n\n\nVisualization of secondary structure\n\nAfter being able to draw bonds and constraints defined by the CG forcefield, the next step is to see protein secondary structure. We are currently developing a graphical script drawing vmd cartoon-like representation. This set of routines is still under development, and needs to be improved. . . by your feedback?\nTwo main routines are provided by the cg_secondary_structure.tcl script: cg_helix and cg_sheet.\nUse these two commands in the same fashion:\ncg_whatever {list of terminig} [-graphical options]\nOr, in an example:\ncg_helix {{5 48} {120 146}} -hlxmethod \"cylinder\" -hlxcolor \"red\" -hlxrad 2.5\nwhich will draw two helices, from residue labeled as 5 to residue labeled as 48 and from residue labeled as 120 to residue labeled as 146, as red cylinder of radius 0.25 nm. Check the help shown when the script is sourced or the website for an exhaustive list of options and default values. To define the list of termini, two options are implemented: i) providing the list by yourself (like in the example shown above), ii) reading/parsing a file generated by do_dssp. In the second case, you don’t need to provide any termini, but the list of termini still needs to be written in the command line as an empty list: {}.\nPlease keep in mind that, due to the restricted amount of structural information carried on by a CG structure, the beauty and exactitude of these graphical representations are limited. . ."
  },
  {
    "objectID": "docs/announcements/entry_template.html",
    "href": "docs/announcements/entry_template.html",
    "title": "Martini Force Field Initiative",
    "section": "",
    "text": "The group of Tieleman has completed an implementation of Martini 2 and Martini 3 in the OpenMM molecular dynamics software package. OpenMM is a flexible molecular dynamics package widely used for methods development and is competitive in speed on GPUs with other commonly used packages. OpenMM has facilities to easily implement new force field terms, external forces and fields, and other non-standard features, which were used to implement all force field terms of Martini 2 and Martini 3. This allows OpenMM simulations, starting with GROMACS topology files that are processed by custom scripts, with all the added flexibility of OpenMM. For details, see the paper of MacCallum et al., Biophys J., 2023."
  }
]